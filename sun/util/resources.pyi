from typing import Any, overload, TypeVar
from java.lang.annotation import Annotation
from java.lang import Class
from java.util import Locale, ResourceBundle, List, Enumeration, Set, AbstractSet, Iterator
from sun.util.locale.provider import LocaleProviderAdapter

class LocaleData:

  def getBreakIteratorInfo(self, arg0: Locale) -> ResourceBundle: ...

  def getBreakIteratorResources(self, arg0: Locale) -> ResourceBundle: ...

  def getCalendarData(self, arg0: Locale) -> ResourceBundle: ...

  def getCollationData(self, arg0: Locale) -> ResourceBundle: ...

  def getCurrencyNames(self, arg0: Locale) -> OpenListResourceBundle: ...

  def getDateFormatData(self, arg0: Locale) -> ResourceBundle: ...

  def getLocaleNames(self, arg0: Locale) -> OpenListResourceBundle: ...

  def getNumberFormatData(self, arg0: Locale) -> ResourceBundle: ...

  def getTimeZoneNames(self, arg0: Locale) -> TimeZoneNamesBundle: ...

  def setSupplementary(self, arg0: ParallelListResourceBundle) -> None: ...

  @staticmethod
  def getBundle(arg0: str, arg1: Locale) -> ResourceBundle: ...

  def __init__(self, arg0: LocaleProviderAdapter.Type): ...

  class SupplementaryStrategy(LocaleData.LocaleDataStrategy):

    def getCandidateLocales(self, arg0: str, arg1: Locale) -> List[Locale]: ...

    def getResourceBundleProviderType(self, arg0: str, arg1: Locale) -> Class[ResourceBundleProvider]: ...

  class LocaleDataStrategy:

    @overload
    def getCandidateLocales(self, arg0: str, arg1: Locale) -> List[Locale]: ...

    @overload
    def getCandidateLocales(self, arg0: str, arg1: Locale) -> List[Locale]: ...

    @overload
    def getResourceBundleProviderType(self, arg0: str, arg1: Locale) -> Class[ResourceBundleProvider]: ...

    @overload
    def getResourceBundleProviderType(self, arg0: str, arg1: Locale) -> Class[ResourceBundleProvider]: ...

    @overload
    def toBundleName(self, arg0: str, arg1: Locale) -> str: ...

    @overload
    def toBundleName(self, arg0: str, arg1: Locale) -> str: ...

  class SupplementaryResourceBundleProvider(LocaleData.LocaleDataResourceBundleProvider):

    def __init__(self): ...

  class CommonResourceBundleProvider(LocaleData.LocaleDataResourceBundleProvider):

    def __init__(self): ...

  class LocaleDataResourceBundleProvider:

    def getBundle(self, arg0: str, arg1: Locale) -> ResourceBundle: ...


class OpenListResourceBundle(ResourceBundle):

  def getKeys(self) -> Enumeration[str]: ...

  def keySet(self) -> Set[str]: ...


class ParallelListResourceBundle(ResourceBundle):

  def containsKey(self, arg0: str) -> bool: ...

  def getKeys(self) -> Enumeration[str]: ...

  def keySet(self) -> Set[str]: ...

  def setParallelContents(self, arg0: OpenListResourceBundle) -> None: ...

  class KeySet(AbstractSet):

    def contains(self, arg0: object) -> bool: ...

    def iterator(self) -> Iterator[str]: ...

    def size(self) -> int: ...


class TimeZoneNamesBundle(OpenListResourceBundle):

  def handleGetObject(self, arg0: str) -> object: ...

  def __init__(self): ...

