from typing import Any, overload, TypeVar
from java.lang.annotation import Annotation
from fmod.fmod import FMOD_STUDIO_EVENT_CALLBACK, FMOD_STUDIO_PARAMETER_ID
from java.lang import Enum, Long
from java.math import BigInteger

class FMODSoundBuffer:

  def buf(self) -> list[int]: ...

  def get_interror(self) -> bool: ...

  def get_loudness(self) -> int: ...

  def get_size(self) -> int: ...

  def get_vad(self) -> int: ...

  def pull(self, arg0: int) -> bool: ...

  def __init__(self, arg0: int): ...


class FMOD_DriverInfo:

  @overload
  def __init__(self):
    self.guid: int

    self.id: int

    self.name: str

    self.speakerchannels: int

    self.speakermode: int

    self.systemrate: int

  @overload
  def __init__(self, arg0: int, arg1: str): ...


class FMOD_RESULT(Enum):

  FMOD_ERR_ALREADY_LOCKED: FMOD_RESULT

  FMOD_ERR_BADCOMMAND: FMOD_RESULT

  FMOD_ERR_CHANNEL_ALLOC: FMOD_RESULT

  FMOD_ERR_CHANNEL_STOLEN: FMOD_RESULT

  FMOD_ERR_DMA: FMOD_RESULT

  FMOD_ERR_DSP_CONNECTION: FMOD_RESULT

  FMOD_ERR_DSP_DONTPROCESS: FMOD_RESULT

  FMOD_ERR_DSP_FORMAT: FMOD_RESULT

  FMOD_ERR_DSP_INUSE: FMOD_RESULT

  FMOD_ERR_DSP_NOTFOUND: FMOD_RESULT

  FMOD_ERR_DSP_RESERVED: FMOD_RESULT

  FMOD_ERR_DSP_SILENCE: FMOD_RESULT

  FMOD_ERR_DSP_TYPE: FMOD_RESULT

  FMOD_ERR_EVENT_ALREADY_LOADED: FMOD_RESULT

  FMOD_ERR_EVENT_LIVEUPDATE_BUSY: FMOD_RESULT

  FMOD_ERR_EVENT_LIVEUPDATE_MISMATCH: FMOD_RESULT

  FMOD_ERR_EVENT_LIVEUPDATE_TIMEOUT: FMOD_RESULT

  FMOD_ERR_EVENT_NOTFOUND: FMOD_RESULT

  FMOD_ERR_FILE_BAD: FMOD_RESULT

  FMOD_ERR_FILE_COULDNOTSEEK: FMOD_RESULT

  FMOD_ERR_FILE_DISKEJECTED: FMOD_RESULT

  FMOD_ERR_FILE_ENDOFDATA: FMOD_RESULT

  FMOD_ERR_FILE_EOF: FMOD_RESULT

  FMOD_ERR_FILE_NOTFOUND: FMOD_RESULT

  FMOD_ERR_FORMAT: FMOD_RESULT

  FMOD_ERR_HEADER_MISMATCH: FMOD_RESULT

  FMOD_ERR_HTTP: FMOD_RESULT

  FMOD_ERR_HTTP_ACCESS: FMOD_RESULT

  FMOD_ERR_HTTP_PROXY_AUTH: FMOD_RESULT

  FMOD_ERR_HTTP_SERVER_ERROR: FMOD_RESULT

  FMOD_ERR_HTTP_TIMEOUT: FMOD_RESULT

  FMOD_ERR_INITIALIZATION: FMOD_RESULT

  FMOD_ERR_INITIALIZED: FMOD_RESULT

  FMOD_ERR_INTERNAL: FMOD_RESULT

  FMOD_ERR_INVALID_FLOAT: FMOD_RESULT

  FMOD_ERR_INVALID_HANDLE: FMOD_RESULT

  FMOD_ERR_INVALID_PARAM: FMOD_RESULT

  FMOD_ERR_INVALID_POSITION: FMOD_RESULT

  FMOD_ERR_INVALID_SPEAKER: FMOD_RESULT

  FMOD_ERR_INVALID_STRING: FMOD_RESULT

  FMOD_ERR_INVALID_SYNCPOINT: FMOD_RESULT

  FMOD_ERR_INVALID_THREAD: FMOD_RESULT

  FMOD_ERR_INVALID_VECTOR: FMOD_RESULT

  FMOD_ERR_MAXAUDIBLE: FMOD_RESULT

  FMOD_ERR_MEMORY: FMOD_RESULT

  FMOD_ERR_MEMORY_CANTPOINT: FMOD_RESULT

  FMOD_ERR_NEEDS3D: FMOD_RESULT

  FMOD_ERR_NEEDSHARDWARE: FMOD_RESULT

  FMOD_ERR_NET_CONNECT: FMOD_RESULT

  FMOD_ERR_NET_SOCKET_ERROR: FMOD_RESULT

  FMOD_ERR_NET_URL: FMOD_RESULT

  FMOD_ERR_NET_WOULD_BLOCK: FMOD_RESULT

  FMOD_ERR_NOT_LOCKED: FMOD_RESULT

  FMOD_ERR_NOTREADY: FMOD_RESULT

  FMOD_ERR_OUTPUT_ALLOCATED: FMOD_RESULT

  FMOD_ERR_OUTPUT_CREATEBUFFER: FMOD_RESULT

  FMOD_ERR_OUTPUT_DRIVERCALL: FMOD_RESULT

  FMOD_ERR_OUTPUT_FORMAT: FMOD_RESULT

  FMOD_ERR_OUTPUT_INIT: FMOD_RESULT

  FMOD_ERR_OUTPUT_NODRIVERS: FMOD_RESULT

  FMOD_ERR_PLUGIN: FMOD_RESULT

  FMOD_ERR_PLUGIN_MISSING: FMOD_RESULT

  FMOD_ERR_PLUGIN_RESOURCE: FMOD_RESULT

  FMOD_ERR_PLUGIN_VERSION: FMOD_RESULT

  FMOD_ERR_RECORD: FMOD_RESULT

  FMOD_ERR_RECORD_DISCONNECTED: FMOD_RESULT

  FMOD_ERR_REVERB_CHANNELGROUP: FMOD_RESULT

  FMOD_ERR_REVERB_INSTANCE: FMOD_RESULT

  FMOD_ERR_STUDIO_NOT_LOADED: FMOD_RESULT

  FMOD_ERR_STUDIO_UNINITIALIZED: FMOD_RESULT

  FMOD_ERR_SUBSOUND_ALLOCATED: FMOD_RESULT

  FMOD_ERR_SUBSOUND_CANTMOVE: FMOD_RESULT

  FMOD_ERR_SUBSOUNDS: FMOD_RESULT

  FMOD_ERR_TAGNOTFOUND: FMOD_RESULT

  FMOD_ERR_TOOMANYCHANNELS: FMOD_RESULT

  FMOD_ERR_TOOMANYSAMPLES: FMOD_RESULT

  FMOD_ERR_TRUNCATED: FMOD_RESULT

  FMOD_ERR_UNIMPLEMENTED: FMOD_RESULT

  FMOD_ERR_UNINITIALIZED: FMOD_RESULT

  FMOD_ERR_UNSUPPORTED: FMOD_RESULT

  FMOD_ERR_VERSION: FMOD_RESULT

  FMOD_OK: FMOD_RESULT

  @staticmethod
  def valueOf(arg0: str) -> FMOD_RESULT: ...

  @staticmethod
  def values() -> list[FMOD_RESULT]: ...


class FMOD_STUDIO_EVENT_PROPERTY(Enum):

  FMOD_STUDIO_EVENT_PROPERTY_CHANNELPRIORITY: FMOD_STUDIO_EVENT_PROPERTY

  FMOD_STUDIO_EVENT_PROPERTY_MAXIMUM_DISTANCE: FMOD_STUDIO_EVENT_PROPERTY

  FMOD_STUDIO_EVENT_PROPERTY_MINIMUM_DISTANCE: FMOD_STUDIO_EVENT_PROPERTY

  FMOD_STUDIO_EVENT_PROPERTY_SCHEDULE_DELAY: FMOD_STUDIO_EVENT_PROPERTY

  FMOD_STUDIO_EVENT_PROPERTY_SCHEDULE_LOOKAHEAD: FMOD_STUDIO_EVENT_PROPERTY

  @staticmethod
  def valueOf(arg0: str) -> FMOD_STUDIO_EVENT_PROPERTY: ...

  @staticmethod
  def values() -> list[FMOD_STUDIO_EVENT_PROPERTY]: ...


class SWIGTYPE_p_FMOD_3D_ROLLOFF_CALLBACK: ...


class SWIGTYPE_p_FMOD_ADVANCEDSETTINGS: ...


class SWIGTYPE_p_FMOD_BOOL: ...


class SWIGTYPE_p_FMOD_CHANNEL: ...


class SWIGTYPE_p_FMOD_CHANNELCONTROL_CALLBACK: ...


class SWIGTYPE_p_FMOD_CHANNELGROUP: ...


class SWIGTYPE_p_FMOD_CHANNELMASK: ...


class SWIGTYPE_p_FMOD_CODEC_DESCRIPTION: ...


class SWIGTYPE_p_FMOD_CREATESOUNDEXINFO: ...


class SWIGTYPE_p_FMOD_DEBUG_CALLBACK: ...


class SWIGTYPE_p_FMOD_DEBUG_FLAGS: ...


class SWIGTYPE_p_FMOD_DEBUG_MODE: ...


class SWIGTYPE_p_FMOD_DSP: ...


class SWIGTYPE_p_FMOD_DSPCONNECTION: ...


class SWIGTYPE_p_FMOD_DSPCONNECTION_TYPE: ...


class SWIGTYPE_p_FMOD_DSP_DESCRIPTION: ...


class SWIGTYPE_p_FMOD_DSP_METERING_INFO: ...


class SWIGTYPE_p_FMOD_DSP_TYPE: ...


class SWIGTYPE_p_FMOD_FILE_ASYNCCANCEL_CALLBACK: ...


class SWIGTYPE_p_FMOD_FILE_ASYNCREAD_CALLBACK: ...


class SWIGTYPE_p_FMOD_FILE_CLOSE_CALLBACK: ...


class SWIGTYPE_p_FMOD_FILE_OPEN_CALLBACK: ...


class SWIGTYPE_p_FMOD_FILE_READ_CALLBACK: ...


class SWIGTYPE_p_FMOD_FILE_SEEK_CALLBACK: ...


class SWIGTYPE_p_FMOD_GEOMETRY: ...


class SWIGTYPE_p_FMOD_GUID: ...


class SWIGTYPE_p_FMOD_INITFLAGS: ...


class SWIGTYPE_p_FMOD_MEMORY_ALLOC_CALLBACK: ...


class SWIGTYPE_p_FMOD_MEMORY_FREE_CALLBACK: ...


class SWIGTYPE_p_FMOD_MEMORY_REALLOC_CALLBACK: ...


class SWIGTYPE_p_FMOD_MEMORY_TYPE: ...


class SWIGTYPE_p_FMOD_MODE: ...


class SWIGTYPE_p_FMOD_OPENSTATE: ...


class SWIGTYPE_p_FMOD_OUTPUTTYPE: ...


class SWIGTYPE_p_FMOD_PLUGINTYPE: ...


class SWIGTYPE_p_FMOD_PORT_INDEX: ...


class SWIGTYPE_p_FMOD_PORT_TYPE: ...


class SWIGTYPE_p_FMOD_RESULT: ...


class SWIGTYPE_p_FMOD_REVERB3D: ...


class SWIGTYPE_p_FMOD_REVERB_PROPERTIES: ...


class SWIGTYPE_p_FMOD_SOUND: ...


class SWIGTYPE_p_FMOD_SOUNDGROUP: ...


class SWIGTYPE_p_FMOD_SOUNDGROUP_BEHAVIOR: ...


class SWIGTYPE_p_FMOD_SOUND_FORMAT: ...


class SWIGTYPE_p_FMOD_SOUND_TYPE: ...


class SWIGTYPE_p_FMOD_SPEAKER: ...


class SWIGTYPE_p_FMOD_SPEAKERMODE: ...


class SWIGTYPE_p_FMOD_SYNCPOINT: ...


class SWIGTYPE_p_FMOD_SYSTEM: ...


class SWIGTYPE_p_FMOD_SYSTEM_CALLBACK: ...


class SWIGTYPE_p_FMOD_SYSTEM_CALLBACK_TYPE: ...


class SWIGTYPE_p_FMOD_TAG: ...


class SWIGTYPE_p_FMOD_TIMEUNIT: ...


class SWIGTYPE_p_FMOD_VECTOR: ...


class SWIGTYPE_p_float: ...


class SWIGTYPE_p_int: ...


class SWIGTYPE_p_p_FMOD_CHANNEL: ...


class SWIGTYPE_p_p_FMOD_CHANNELGROUP: ...


class SWIGTYPE_p_p_FMOD_DSP: ...


class SWIGTYPE_p_p_FMOD_DSPCONNECTION: ...


class SWIGTYPE_p_p_FMOD_DSP_DESCRIPTION: ...


class SWIGTYPE_p_p_FMOD_DSP_PARAMETER_DESC: ...


class SWIGTYPE_p_p_FMOD_GEOMETRY: ...


class SWIGTYPE_p_p_FMOD_REVERB3D: ...


class SWIGTYPE_p_p_FMOD_SOUND: ...


class SWIGTYPE_p_p_FMOD_SOUNDGROUP: ...


class SWIGTYPE_p_p_FMOD_SYNCPOINT: ...


class SWIGTYPE_p_p_FMOD_SYSTEM:

  @staticmethod
  def getCPtr(arg0: SWIGTYPE_p_p_FMOD_SYSTEM) -> int: ...

  @overload
  def __init__(self): ...
  @overload
  def __init__(self, arg0: int, arg1: bool): ...


class SWIGTYPE_p_p_FMOD_VECTOR: ...


class SWIGTYPE_p_p_void: ...


class SWIGTYPE_p_unsigned_int: ...


class SWIGTYPE_p_unsigned_long_long: ...


class SWIGTYPE_p_void: ...


class SoundBuffer:

  def buf(self) -> list[int]: ...

  def get(self, arg0: int, arg1: list[int]) -> None: ...

  @overload
  def push(self, arg0: int, arg1: list[int]) -> None: ...

  @overload
  def push(self, arg0: int, arg1: list[int]) -> None: ...

  def __init__(self, arg0: int):
    self.buf_read: int
    self.buf_size: int
    self.buf_write: int


class javafmod:

  @staticmethod
  def FMOD_ChannelGroup_AddDSP(arg0: SWIGTYPE_p_FMOD_CHANNELGROUP, arg1: int, arg2: SWIGTYPE_p_FMOD_DSP) -> int: ...

  @staticmethod
  def FMOD_ChannelGroup_AddFadePoint(arg0: SWIGTYPE_p_FMOD_CHANNELGROUP, arg1: BigInteger, arg2: float) -> int: ...

  @staticmethod
  def FMOD_ChannelGroup_AddGroup(arg0: SWIGTYPE_p_FMOD_CHANNELGROUP, arg1: SWIGTYPE_p_FMOD_CHANNELGROUP, arg2: SWIGTYPE_p_FMOD_BOOL, arg3: SWIGTYPE_p_p_FMOD_DSPCONNECTION) -> int: ...

  @staticmethod
  def FMOD_ChannelGroup_Get3DAttributes(arg0: SWIGTYPE_p_FMOD_CHANNELGROUP, arg1: SWIGTYPE_p_FMOD_VECTOR, arg2: SWIGTYPE_p_FMOD_VECTOR) -> int: ...

  @staticmethod
  def FMOD_ChannelGroup_Get3DConeOrientation(arg0: SWIGTYPE_p_FMOD_CHANNELGROUP, arg1: SWIGTYPE_p_FMOD_VECTOR) -> int: ...

  @staticmethod
  def FMOD_ChannelGroup_Get3DConeSettings(arg0: SWIGTYPE_p_FMOD_CHANNELGROUP, arg1: SWIGTYPE_p_float, arg2: SWIGTYPE_p_float, arg3: SWIGTYPE_p_float) -> int: ...

  @staticmethod
  def FMOD_ChannelGroup_Get3DCustomRolloff(arg0: SWIGTYPE_p_FMOD_CHANNELGROUP, arg1: SWIGTYPE_p_p_FMOD_VECTOR, arg2: SWIGTYPE_p_int) -> int: ...

  @staticmethod
  def FMOD_ChannelGroup_Get3DDistanceFilter(arg0: SWIGTYPE_p_FMOD_CHANNELGROUP, arg1: SWIGTYPE_p_FMOD_BOOL, arg2: SWIGTYPE_p_float, arg3: SWIGTYPE_p_float) -> int: ...

  @staticmethod
  def FMOD_ChannelGroup_Get3DDopplerLevel(arg0: SWIGTYPE_p_FMOD_CHANNELGROUP, arg1: SWIGTYPE_p_float) -> int: ...

  @staticmethod
  def FMOD_ChannelGroup_Get3DLevel(arg0: SWIGTYPE_p_FMOD_CHANNELGROUP, arg1: SWIGTYPE_p_float) -> int: ...

  @staticmethod
  def FMOD_ChannelGroup_Get3DMinMaxDistance(arg0: SWIGTYPE_p_FMOD_CHANNELGROUP, arg1: SWIGTYPE_p_float, arg2: SWIGTYPE_p_float) -> int: ...

  @staticmethod
  def FMOD_ChannelGroup_Get3DOcclusion(arg0: SWIGTYPE_p_FMOD_CHANNELGROUP, arg1: SWIGTYPE_p_float, arg2: SWIGTYPE_p_float) -> int: ...

  @staticmethod
  def FMOD_ChannelGroup_Get3DSpread(arg0: SWIGTYPE_p_FMOD_CHANNELGROUP, arg1: SWIGTYPE_p_float) -> int: ...

  @staticmethod
  def FMOD_ChannelGroup_GetAudibility(arg0: SWIGTYPE_p_FMOD_CHANNELGROUP, arg1: SWIGTYPE_p_float) -> int: ...

  @staticmethod
  def FMOD_ChannelGroup_GetChannel(arg0: SWIGTYPE_p_FMOD_CHANNELGROUP, arg1: int, arg2: SWIGTYPE_p_p_FMOD_CHANNEL) -> int: ...

  @staticmethod
  def FMOD_ChannelGroup_GetDSP(arg0: SWIGTYPE_p_FMOD_CHANNELGROUP, arg1: int, arg2: SWIGTYPE_p_p_FMOD_DSP) -> int: ...

  @staticmethod
  def FMOD_ChannelGroup_GetDSPClock(arg0: SWIGTYPE_p_FMOD_CHANNELGROUP, arg1: SWIGTYPE_p_unsigned_long_long, arg2: SWIGTYPE_p_unsigned_long_long) -> int: ...

  @staticmethod
  def FMOD_ChannelGroup_GetDSPIndex(arg0: SWIGTYPE_p_FMOD_CHANNELGROUP, arg1: SWIGTYPE_p_FMOD_DSP, arg2: SWIGTYPE_p_int) -> int: ...

  @staticmethod
  def FMOD_ChannelGroup_GetDelay(arg0: SWIGTYPE_p_FMOD_CHANNELGROUP, arg1: SWIGTYPE_p_unsigned_long_long, arg2: SWIGTYPE_p_unsigned_long_long, arg3: SWIGTYPE_p_FMOD_BOOL) -> int: ...

  @staticmethod
  def FMOD_ChannelGroup_GetFadePoints(arg0: SWIGTYPE_p_FMOD_CHANNELGROUP, arg1: SWIGTYPE_p_unsigned_int, arg2: SWIGTYPE_p_unsigned_long_long, arg3: SWIGTYPE_p_float) -> int: ...

  @staticmethod
  def FMOD_ChannelGroup_GetGroup(arg0: SWIGTYPE_p_FMOD_CHANNELGROUP, arg1: int, arg2: SWIGTYPE_p_p_FMOD_CHANNELGROUP) -> int: ...

  @staticmethod
  def FMOD_ChannelGroup_GetLowPassGain(arg0: SWIGTYPE_p_FMOD_CHANNELGROUP, arg1: SWIGTYPE_p_float) -> int: ...

  @staticmethod
  def FMOD_ChannelGroup_GetMixMatrix(arg0: SWIGTYPE_p_FMOD_CHANNELGROUP, arg1: SWIGTYPE_p_float, arg2: SWIGTYPE_p_int, arg3: SWIGTYPE_p_int, arg4: int) -> int: ...

  @staticmethod
  def FMOD_ChannelGroup_GetMode(arg0: SWIGTYPE_p_FMOD_CHANNELGROUP, arg1: SWIGTYPE_p_FMOD_MODE) -> int: ...

  @staticmethod
  def FMOD_ChannelGroup_GetMute(arg0: SWIGTYPE_p_FMOD_CHANNELGROUP, arg1: SWIGTYPE_p_FMOD_BOOL) -> int: ...

  @staticmethod
  def FMOD_ChannelGroup_GetName(arg0: SWIGTYPE_p_FMOD_CHANNELGROUP, arg1: str, arg2: int) -> int: ...

  @staticmethod
  def FMOD_ChannelGroup_GetNumChannels(arg0: SWIGTYPE_p_FMOD_CHANNELGROUP, arg1: SWIGTYPE_p_int) -> int: ...

  @staticmethod
  def FMOD_ChannelGroup_GetNumDSPs(arg0: SWIGTYPE_p_FMOD_CHANNELGROUP, arg1: SWIGTYPE_p_int) -> int: ...

  @staticmethod
  def FMOD_ChannelGroup_GetNumGroups(arg0: SWIGTYPE_p_FMOD_CHANNELGROUP, arg1: SWIGTYPE_p_int) -> int: ...

  @staticmethod
  def FMOD_ChannelGroup_GetParentGroup(arg0: SWIGTYPE_p_FMOD_CHANNELGROUP, arg1: SWIGTYPE_p_p_FMOD_CHANNELGROUP) -> int: ...

  @staticmethod
  def FMOD_ChannelGroup_GetPaused(arg0: SWIGTYPE_p_FMOD_CHANNELGROUP, arg1: SWIGTYPE_p_FMOD_BOOL) -> int: ...

  @staticmethod
  def FMOD_ChannelGroup_GetPitch(arg0: SWIGTYPE_p_FMOD_CHANNELGROUP, arg1: SWIGTYPE_p_float) -> int: ...

  @staticmethod
  def FMOD_ChannelGroup_GetReverbProperties(arg0: SWIGTYPE_p_FMOD_CHANNELGROUP, arg1: int, arg2: SWIGTYPE_p_float) -> int: ...

  @staticmethod
  def FMOD_ChannelGroup_GetSystemObject(arg0: SWIGTYPE_p_FMOD_CHANNELGROUP, arg1: SWIGTYPE_p_p_FMOD_SYSTEM) -> int: ...

  @staticmethod
  def FMOD_ChannelGroup_GetUserData(arg0: SWIGTYPE_p_FMOD_CHANNELGROUP, arg1: SWIGTYPE_p_p_void) -> int: ...

  @staticmethod
  def FMOD_ChannelGroup_GetVolume(arg0: SWIGTYPE_p_FMOD_CHANNELGROUP, arg1: SWIGTYPE_p_float) -> int: ...

  @staticmethod
  def FMOD_ChannelGroup_GetVolumeRamp(arg0: SWIGTYPE_p_FMOD_CHANNELGROUP, arg1: SWIGTYPE_p_FMOD_BOOL) -> int: ...

  @staticmethod
  def FMOD_ChannelGroup_IsPlaying(arg0: SWIGTYPE_p_FMOD_CHANNELGROUP, arg1: SWIGTYPE_p_FMOD_BOOL) -> int: ...

  @staticmethod
  def FMOD_ChannelGroup_OverridePanDSP(arg0: SWIGTYPE_p_FMOD_CHANNELGROUP, arg1: SWIGTYPE_p_FMOD_DSP) -> int: ...

  @staticmethod
  def FMOD_ChannelGroup_Release(arg0: SWIGTYPE_p_FMOD_CHANNELGROUP) -> int: ...

  @staticmethod
  def FMOD_ChannelGroup_RemoveDSP(arg0: SWIGTYPE_p_FMOD_CHANNELGROUP, arg1: SWIGTYPE_p_FMOD_DSP) -> int: ...

  @staticmethod
  def FMOD_ChannelGroup_RemoveFadePoints(arg0: SWIGTYPE_p_FMOD_CHANNELGROUP, arg1: BigInteger, arg2: BigInteger) -> int: ...

  @staticmethod
  def FMOD_ChannelGroup_Set3DAttributes(arg0: SWIGTYPE_p_FMOD_CHANNELGROUP, arg1: SWIGTYPE_p_FMOD_VECTOR, arg2: SWIGTYPE_p_FMOD_VECTOR) -> int: ...

  @staticmethod
  def FMOD_ChannelGroup_Set3DConeOrientation(arg0: SWIGTYPE_p_FMOD_CHANNELGROUP, arg1: SWIGTYPE_p_FMOD_VECTOR) -> int: ...

  @staticmethod
  def FMOD_ChannelGroup_Set3DConeSettings(arg0: SWIGTYPE_p_FMOD_CHANNELGROUP, arg1: float, arg2: float, arg3: float) -> int: ...

  @staticmethod
  def FMOD_ChannelGroup_Set3DCustomRolloff(arg0: SWIGTYPE_p_FMOD_CHANNELGROUP, arg1: SWIGTYPE_p_FMOD_VECTOR, arg2: int) -> int: ...

  @staticmethod
  def FMOD_ChannelGroup_Set3DDistanceFilter(arg0: SWIGTYPE_p_FMOD_CHANNELGROUP, arg1: SWIGTYPE_p_FMOD_BOOL, arg2: float, arg3: float) -> int: ...

  @staticmethod
  def FMOD_ChannelGroup_Set3DDopplerLevel(arg0: SWIGTYPE_p_FMOD_CHANNELGROUP, arg1: float) -> int: ...

  @staticmethod
  def FMOD_ChannelGroup_Set3DLevel(arg0: SWIGTYPE_p_FMOD_CHANNELGROUP, arg1: float) -> int: ...

  @staticmethod
  def FMOD_ChannelGroup_Set3DMinMaxDistance(arg0: SWIGTYPE_p_FMOD_CHANNELGROUP, arg1: float, arg2: float) -> int: ...

  @staticmethod
  def FMOD_ChannelGroup_Set3DOcclusion(arg0: SWIGTYPE_p_FMOD_CHANNELGROUP, arg1: float, arg2: float) -> int: ...

  @staticmethod
  def FMOD_ChannelGroup_Set3DSpread(arg0: SWIGTYPE_p_FMOD_CHANNELGROUP, arg1: float) -> int: ...

  @staticmethod
  def FMOD_ChannelGroup_SetCallback(arg0: SWIGTYPE_p_FMOD_CHANNELGROUP, arg1: SWIGTYPE_p_FMOD_CHANNELCONTROL_CALLBACK) -> int: ...

  @staticmethod
  def FMOD_ChannelGroup_SetDSPIndex(arg0: SWIGTYPE_p_FMOD_CHANNELGROUP, arg1: SWIGTYPE_p_FMOD_DSP, arg2: int) -> int: ...

  @staticmethod
  def FMOD_ChannelGroup_SetDelay(arg0: SWIGTYPE_p_FMOD_CHANNELGROUP, arg1: BigInteger, arg2: BigInteger, arg3: SWIGTYPE_p_FMOD_BOOL) -> int: ...

  @staticmethod
  def FMOD_ChannelGroup_SetLowPassGain(arg0: SWIGTYPE_p_FMOD_CHANNELGROUP, arg1: float) -> int: ...

  @staticmethod
  def FMOD_ChannelGroup_SetMixLevelsInput(arg0: SWIGTYPE_p_FMOD_CHANNELGROUP, arg1: SWIGTYPE_p_float, arg2: int) -> int: ...

  @staticmethod
  def FMOD_ChannelGroup_SetMixLevelsOutput(arg0: SWIGTYPE_p_FMOD_CHANNELGROUP, arg1: float, arg2: float, arg3: float, arg4: float, arg5: float, arg6: float, arg7: float, arg8: float) -> int: ...

  @staticmethod
  def FMOD_ChannelGroup_SetMixMatrix(arg0: SWIGTYPE_p_FMOD_CHANNELGROUP, arg1: SWIGTYPE_p_float, arg2: int, arg3: int, arg4: int) -> int: ...

  @staticmethod
  def FMOD_ChannelGroup_SetMode(arg0: SWIGTYPE_p_FMOD_CHANNELGROUP, arg1: SWIGTYPE_p_FMOD_MODE) -> int: ...

  @staticmethod
  def FMOD_ChannelGroup_SetMute(arg0: int, arg1: bool) -> int: ...

  @staticmethod
  def FMOD_ChannelGroup_SetPan(arg0: SWIGTYPE_p_FMOD_CHANNELGROUP, arg1: float) -> int: ...

  @staticmethod
  def FMOD_ChannelGroup_SetPaused(arg0: int, arg1: bool) -> int: ...

  @staticmethod
  def FMOD_ChannelGroup_SetPitch(arg0: SWIGTYPE_p_FMOD_CHANNELGROUP, arg1: float) -> int: ...

  @staticmethod
  def FMOD_ChannelGroup_SetReverbProperties(arg0: SWIGTYPE_p_FMOD_CHANNELGROUP, arg1: int, arg2: float) -> int: ...

  @staticmethod
  def FMOD_ChannelGroup_SetUserData(arg0: SWIGTYPE_p_FMOD_CHANNELGROUP, arg1: SWIGTYPE_p_void) -> int: ...

  @staticmethod
  def FMOD_ChannelGroup_SetVolume(arg0: int, arg1: float) -> int: ...

  @staticmethod
  def FMOD_ChannelGroup_SetVolumeRamp(arg0: SWIGTYPE_p_FMOD_CHANNELGROUP, arg1: SWIGTYPE_p_FMOD_BOOL) -> int: ...

  @staticmethod
  def FMOD_ChannelGroup_Stop(arg0: int) -> int: ...

  @staticmethod
  def FMOD_Channel_AddDSP(arg0: SWIGTYPE_p_FMOD_CHANNEL, arg1: int, arg2: SWIGTYPE_p_FMOD_DSP) -> int: ...

  @staticmethod
  def FMOD_Channel_AddFadePoint(arg0: SWIGTYPE_p_FMOD_CHANNEL, arg1: BigInteger, arg2: float) -> int: ...

  @staticmethod
  def FMOD_Channel_Get3DAttributes(arg0: SWIGTYPE_p_FMOD_CHANNEL, arg1: SWIGTYPE_p_FMOD_VECTOR, arg2: SWIGTYPE_p_FMOD_VECTOR) -> int: ...

  @staticmethod
  def FMOD_Channel_Get3DConeOrientation(arg0: SWIGTYPE_p_FMOD_CHANNEL, arg1: SWIGTYPE_p_FMOD_VECTOR) -> int: ...

  @staticmethod
  def FMOD_Channel_Get3DConeSettings(arg0: SWIGTYPE_p_FMOD_CHANNEL, arg1: SWIGTYPE_p_float, arg2: SWIGTYPE_p_float, arg3: SWIGTYPE_p_float) -> int: ...

  @staticmethod
  def FMOD_Channel_Get3DCustomRolloff(arg0: SWIGTYPE_p_FMOD_CHANNEL, arg1: SWIGTYPE_p_p_FMOD_VECTOR, arg2: SWIGTYPE_p_int) -> int: ...

  @staticmethod
  def FMOD_Channel_Get3DDistanceFilter(arg0: SWIGTYPE_p_FMOD_CHANNEL, arg1: SWIGTYPE_p_FMOD_BOOL, arg2: SWIGTYPE_p_float, arg3: SWIGTYPE_p_float) -> int: ...

  @staticmethod
  def FMOD_Channel_Get3DDopplerLevel(arg0: SWIGTYPE_p_FMOD_CHANNEL, arg1: SWIGTYPE_p_float) -> int: ...

  @staticmethod
  def FMOD_Channel_Get3DLevel(arg0: SWIGTYPE_p_FMOD_CHANNEL, arg1: SWIGTYPE_p_float) -> int: ...

  @staticmethod
  def FMOD_Channel_Get3DMinMaxDistance(arg0: SWIGTYPE_p_FMOD_CHANNEL, arg1: SWIGTYPE_p_float, arg2: SWIGTYPE_p_float) -> int: ...

  @staticmethod
  def FMOD_Channel_Get3DOcclusion(arg0: SWIGTYPE_p_FMOD_CHANNEL, arg1: SWIGTYPE_p_float, arg2: SWIGTYPE_p_float) -> int: ...

  @staticmethod
  def FMOD_Channel_Get3DSpread(arg0: SWIGTYPE_p_FMOD_CHANNEL, arg1: SWIGTYPE_p_float) -> int: ...

  @staticmethod
  def FMOD_Channel_GetAudibility(arg0: int) -> float: ...

  @staticmethod
  def FMOD_Channel_GetChannelGroup(arg0: SWIGTYPE_p_FMOD_CHANNEL, arg1: SWIGTYPE_p_p_FMOD_CHANNELGROUP) -> int: ...

  @staticmethod
  def FMOD_Channel_GetCurrentSound(arg0: SWIGTYPE_p_FMOD_CHANNEL, arg1: SWIGTYPE_p_p_FMOD_SOUND) -> int: ...

  @staticmethod
  def FMOD_Channel_GetDSP(arg0: SWIGTYPE_p_FMOD_CHANNEL, arg1: int, arg2: SWIGTYPE_p_p_FMOD_DSP) -> int: ...

  @staticmethod
  def FMOD_Channel_GetDSPClock(arg0: SWIGTYPE_p_FMOD_CHANNEL, arg1: SWIGTYPE_p_unsigned_long_long, arg2: SWIGTYPE_p_unsigned_long_long) -> int: ...

  @staticmethod
  def FMOD_Channel_GetDSPIndex(arg0: SWIGTYPE_p_FMOD_CHANNEL, arg1: SWIGTYPE_p_FMOD_DSP, arg2: SWIGTYPE_p_int) -> int: ...

  @staticmethod
  def FMOD_Channel_GetDelay(arg0: SWIGTYPE_p_FMOD_CHANNEL, arg1: SWIGTYPE_p_unsigned_long_long, arg2: SWIGTYPE_p_unsigned_long_long, arg3: SWIGTYPE_p_FMOD_BOOL) -> int: ...

  @staticmethod
  def FMOD_Channel_GetFadePoints(arg0: SWIGTYPE_p_FMOD_CHANNEL, arg1: SWIGTYPE_p_unsigned_int, arg2: SWIGTYPE_p_unsigned_long_long, arg3: SWIGTYPE_p_float) -> int: ...

  @staticmethod
  def FMOD_Channel_GetFrequency(arg0: SWIGTYPE_p_FMOD_CHANNEL, arg1: SWIGTYPE_p_float) -> int: ...

  @staticmethod
  def FMOD_Channel_GetIndex(arg0: SWIGTYPE_p_FMOD_CHANNEL, arg1: SWIGTYPE_p_int) -> int: ...

  @staticmethod
  def FMOD_Channel_GetLoopCount(arg0: SWIGTYPE_p_FMOD_CHANNEL, arg1: SWIGTYPE_p_int) -> int: ...

  @staticmethod
  def FMOD_Channel_GetLoopPoints(arg0: SWIGTYPE_p_FMOD_CHANNEL, arg1: SWIGTYPE_p_unsigned_int, arg2: SWIGTYPE_p_FMOD_TIMEUNIT, arg3: SWIGTYPE_p_unsigned_int, arg4: SWIGTYPE_p_FMOD_TIMEUNIT) -> int: ...

  @staticmethod
  def FMOD_Channel_GetLowPassGain(arg0: SWIGTYPE_p_FMOD_CHANNEL, arg1: SWIGTYPE_p_float) -> int: ...

  @staticmethod
  def FMOD_Channel_GetMixMatrix(arg0: SWIGTYPE_p_FMOD_CHANNEL, arg1: SWIGTYPE_p_float, arg2: SWIGTYPE_p_int, arg3: SWIGTYPE_p_int, arg4: int) -> int: ...

  @staticmethod
  def FMOD_Channel_GetMode(arg0: SWIGTYPE_p_FMOD_CHANNEL, arg1: SWIGTYPE_p_FMOD_MODE) -> int: ...

  @staticmethod
  def FMOD_Channel_GetMute(arg0: SWIGTYPE_p_FMOD_CHANNEL, arg1: SWIGTYPE_p_FMOD_BOOL) -> int: ...

  @staticmethod
  def FMOD_Channel_GetNumDSPs(arg0: SWIGTYPE_p_FMOD_CHANNEL, arg1: SWIGTYPE_p_int) -> int: ...

  @staticmethod
  def FMOD_Channel_GetPaused(arg0: SWIGTYPE_p_FMOD_CHANNEL, arg1: SWIGTYPE_p_FMOD_BOOL) -> int: ...

  @staticmethod
  def FMOD_Channel_GetPitch(arg0: SWIGTYPE_p_FMOD_CHANNEL, arg1: SWIGTYPE_p_float) -> int: ...

  @staticmethod
  def FMOD_Channel_GetPosition(arg0: int, arg1: int) -> int: ...

  @staticmethod
  def FMOD_Channel_GetPriority(arg0: SWIGTYPE_p_FMOD_CHANNEL, arg1: SWIGTYPE_p_int) -> int: ...

  @staticmethod
  def FMOD_Channel_GetReverbProperties(arg0: SWIGTYPE_p_FMOD_CHANNEL, arg1: int, arg2: SWIGTYPE_p_float) -> int: ...

  @staticmethod
  def FMOD_Channel_GetSystemObject(arg0: SWIGTYPE_p_FMOD_CHANNEL, arg1: SWIGTYPE_p_p_FMOD_SYSTEM) -> int: ...

  @staticmethod
  def FMOD_Channel_GetUserData(arg0: SWIGTYPE_p_FMOD_CHANNEL, arg1: SWIGTYPE_p_p_void) -> int: ...

  @staticmethod
  def FMOD_Channel_GetVolume(arg0: SWIGTYPE_p_FMOD_CHANNEL, arg1: SWIGTYPE_p_float) -> int: ...

  @staticmethod
  def FMOD_Channel_GetVolumeRamp(arg0: SWIGTYPE_p_FMOD_CHANNEL, arg1: SWIGTYPE_p_FMOD_BOOL) -> int: ...

  @staticmethod
  def FMOD_Channel_IsPlaying(arg0: int) -> bool: ...

  @staticmethod
  def FMOD_Channel_IsVirtual(arg0: int) -> bool: ...

  @staticmethod
  def FMOD_Channel_OverridePanDSP(arg0: SWIGTYPE_p_FMOD_CHANNEL, arg1: SWIGTYPE_p_FMOD_DSP) -> int: ...

  @staticmethod
  def FMOD_Channel_RemoveDSP(arg0: SWIGTYPE_p_FMOD_CHANNEL, arg1: SWIGTYPE_p_FMOD_DSP) -> int: ...

  @staticmethod
  def FMOD_Channel_RemoveFadePoints(arg0: SWIGTYPE_p_FMOD_CHANNEL, arg1: BigInteger, arg2: BigInteger) -> int: ...

  @staticmethod
  def FMOD_Channel_Set3DAttributes(arg0: int, arg1: float, arg2: float, arg3: float, arg4: float, arg5: float, arg6: float) -> int: ...

  @staticmethod
  def FMOD_Channel_Set3DConeOrientation(arg0: SWIGTYPE_p_FMOD_CHANNEL, arg1: SWIGTYPE_p_FMOD_VECTOR) -> int: ...

  @staticmethod
  def FMOD_Channel_Set3DConeSettings(arg0: SWIGTYPE_p_FMOD_CHANNEL, arg1: float, arg2: float, arg3: float) -> int: ...

  @staticmethod
  def FMOD_Channel_Set3DCustomRolloff(arg0: SWIGTYPE_p_FMOD_CHANNEL, arg1: SWIGTYPE_p_FMOD_VECTOR, arg2: int) -> int: ...

  @staticmethod
  def FMOD_Channel_Set3DDistanceFilter(arg0: SWIGTYPE_p_FMOD_CHANNEL, arg1: SWIGTYPE_p_FMOD_BOOL, arg2: float, arg3: float) -> int: ...

  @staticmethod
  def FMOD_Channel_Set3DDopplerLevel(arg0: SWIGTYPE_p_FMOD_CHANNEL, arg1: float) -> int: ...

  @staticmethod
  def FMOD_Channel_Set3DLevel(arg0: SWIGTYPE_p_FMOD_CHANNEL, arg1: float) -> int: ...

  @staticmethod
  def FMOD_Channel_Set3DMinMaxDistance(arg0: int, arg1: float, arg2: float) -> int: ...

  @staticmethod
  def FMOD_Channel_Set3DOcclusion(arg0: int, arg1: float, arg2: float) -> int: ...

  @staticmethod
  def FMOD_Channel_Set3DSpread(arg0: SWIGTYPE_p_FMOD_CHANNEL, arg1: float) -> int: ...

  @staticmethod
  def FMOD_Channel_SetCallback(arg0: SWIGTYPE_p_FMOD_CHANNEL, arg1: SWIGTYPE_p_FMOD_CHANNELCONTROL_CALLBACK) -> int: ...

  @staticmethod
  def FMOD_Channel_SetChannelGroup(arg0: int, arg1: int) -> int: ...

  @staticmethod
  def FMOD_Channel_SetDSPIndex(arg0: SWIGTYPE_p_FMOD_CHANNEL, arg1: SWIGTYPE_p_FMOD_DSP, arg2: int) -> int: ...

  @staticmethod
  def FMOD_Channel_SetDelay(arg0: SWIGTYPE_p_FMOD_CHANNEL, arg1: BigInteger, arg2: BigInteger, arg3: SWIGTYPE_p_FMOD_BOOL) -> int: ...

  @staticmethod
  def FMOD_Channel_SetFrequency(arg0: SWIGTYPE_p_FMOD_CHANNEL, arg1: float) -> int: ...

  @staticmethod
  def FMOD_Channel_SetLoopCount(arg0: int, arg1: int) -> int: ...

  @staticmethod
  def FMOD_Channel_SetLoopPoints(arg0: SWIGTYPE_p_FMOD_CHANNEL, arg1: int, arg2: SWIGTYPE_p_FMOD_TIMEUNIT, arg3: int, arg4: SWIGTYPE_p_FMOD_TIMEUNIT) -> int: ...

  @staticmethod
  def FMOD_Channel_SetLowPassGain(arg0: int, arg1: float) -> int: ...

  @staticmethod
  def FMOD_Channel_SetMixLevelsInput(arg0: SWIGTYPE_p_FMOD_CHANNEL, arg1: SWIGTYPE_p_float, arg2: int) -> int: ...

  @staticmethod
  def FMOD_Channel_SetMixLevelsOutput(arg0: SWIGTYPE_p_FMOD_CHANNEL, arg1: float, arg2: float, arg3: float, arg4: float, arg5: float, arg6: float, arg7: float, arg8: float) -> int: ...

  @staticmethod
  def FMOD_Channel_SetMixMatrix(arg0: SWIGTYPE_p_FMOD_CHANNEL, arg1: SWIGTYPE_p_float, arg2: int, arg3: int, arg4: int) -> int: ...

  @staticmethod
  def FMOD_Channel_SetMode(arg0: int, arg1: int) -> int: ...

  @staticmethod
  def FMOD_Channel_SetMute(arg0: SWIGTYPE_p_FMOD_CHANNEL, arg1: SWIGTYPE_p_FMOD_BOOL) -> int: ...

  @staticmethod
  def FMOD_Channel_SetPan(arg0: SWIGTYPE_p_FMOD_CHANNEL, arg1: float) -> int: ...

  @staticmethod
  def FMOD_Channel_SetPaused(arg0: int, arg1: bool) -> int: ...

  @staticmethod
  @overload
  def FMOD_Channel_SetPitch(arg0: SWIGTYPE_p_FMOD_CHANNEL, arg1: float) -> int: ...

  @staticmethod
  @overload
  def FMOD_Channel_SetPitch(arg0: int, arg1: float) -> int: ...

  @staticmethod
  def FMOD_Channel_SetPosition(arg0: int, arg1: int) -> int: ...

  @staticmethod
  def FMOD_Channel_SetPriority(arg0: int, arg1: int) -> int: ...

  @staticmethod
  def FMOD_Channel_SetReverbProperties(arg0: int, arg1: int, arg2: float) -> int: ...

  @staticmethod
  def FMOD_Channel_SetUserData(arg0: SWIGTYPE_p_FMOD_CHANNEL, arg1: SWIGTYPE_p_void) -> int: ...

  @staticmethod
  def FMOD_Channel_SetVolume(arg0: int, arg1: float) -> int: ...

  @staticmethod
  def FMOD_Channel_SetVolumeRamp(arg0: SWIGTYPE_p_FMOD_CHANNEL, arg1: SWIGTYPE_p_FMOD_BOOL) -> int: ...

  @staticmethod
  def FMOD_Channel_Stop(arg0: int) -> int: ...

  @staticmethod
  def FMOD_DSPConnection_GetInput(arg0: SWIGTYPE_p_FMOD_DSPCONNECTION, arg1: SWIGTYPE_p_p_FMOD_DSP) -> int: ...

  @staticmethod
  def FMOD_DSPConnection_GetMix(arg0: SWIGTYPE_p_FMOD_DSPCONNECTION, arg1: SWIGTYPE_p_float) -> int: ...

  @staticmethod
  def FMOD_DSPConnection_GetMixMatrix(arg0: SWIGTYPE_p_FMOD_DSPCONNECTION, arg1: SWIGTYPE_p_float, arg2: SWIGTYPE_p_int, arg3: SWIGTYPE_p_int, arg4: int) -> int: ...

  @staticmethod
  def FMOD_DSPConnection_GetOutput(arg0: SWIGTYPE_p_FMOD_DSPCONNECTION, arg1: SWIGTYPE_p_p_FMOD_DSP) -> int: ...

  @staticmethod
  def FMOD_DSPConnection_GetType(arg0: SWIGTYPE_p_FMOD_DSPCONNECTION, arg1: SWIGTYPE_p_FMOD_DSPCONNECTION_TYPE) -> int: ...

  @staticmethod
  def FMOD_DSPConnection_GetUserData(arg0: SWIGTYPE_p_FMOD_DSPCONNECTION, arg1: SWIGTYPE_p_p_void) -> int: ...

  @staticmethod
  def FMOD_DSPConnection_SetMix(arg0: SWIGTYPE_p_FMOD_DSPCONNECTION, arg1: float) -> int: ...

  @staticmethod
  def FMOD_DSPConnection_SetMixMatrix(arg0: SWIGTYPE_p_FMOD_DSPCONNECTION, arg1: SWIGTYPE_p_float, arg2: int, arg3: int, arg4: int) -> int: ...

  @staticmethod
  def FMOD_DSPConnection_SetUserData(arg0: SWIGTYPE_p_FMOD_DSPCONNECTION, arg1: SWIGTYPE_p_void) -> int: ...

  @staticmethod
  def FMOD_DSP_AddInput(arg0: SWIGTYPE_p_FMOD_DSP, arg1: SWIGTYPE_p_FMOD_DSP, arg2: SWIGTYPE_p_p_FMOD_DSPCONNECTION, arg3: SWIGTYPE_p_FMOD_DSPCONNECTION_TYPE) -> int: ...

  @staticmethod
  def FMOD_DSP_DisconnectAll(arg0: SWIGTYPE_p_FMOD_DSP, arg1: SWIGTYPE_p_FMOD_BOOL, arg2: SWIGTYPE_p_FMOD_BOOL) -> int: ...

  @staticmethod
  def FMOD_DSP_DisconnectFrom(arg0: SWIGTYPE_p_FMOD_DSP, arg1: SWIGTYPE_p_FMOD_DSP, arg2: SWIGTYPE_p_FMOD_DSPCONNECTION) -> int: ...

  @staticmethod
  def FMOD_DSP_GetActive(arg0: SWIGTYPE_p_FMOD_DSP, arg1: SWIGTYPE_p_FMOD_BOOL) -> int: ...

  @staticmethod
  def FMOD_DSP_GetBypass(arg0: SWIGTYPE_p_FMOD_DSP, arg1: SWIGTYPE_p_FMOD_BOOL) -> int: ...

  @staticmethod
  def FMOD_DSP_GetChannelFormat(arg0: SWIGTYPE_p_FMOD_DSP, arg1: SWIGTYPE_p_FMOD_CHANNELMASK, arg2: SWIGTYPE_p_int, arg3: SWIGTYPE_p_FMOD_SPEAKERMODE) -> int: ...

  @staticmethod
  def FMOD_DSP_GetDataParameterIndex(arg0: SWIGTYPE_p_FMOD_DSP, arg1: int, arg2: SWIGTYPE_p_int) -> int: ...

  @staticmethod
  def FMOD_DSP_GetIdle(arg0: SWIGTYPE_p_FMOD_DSP, arg1: SWIGTYPE_p_FMOD_BOOL) -> int: ...

  @staticmethod
  def FMOD_DSP_GetInfo(arg0: SWIGTYPE_p_FMOD_DSP, arg1: str, arg2: SWIGTYPE_p_unsigned_int, arg3: SWIGTYPE_p_int, arg4: SWIGTYPE_p_int, arg5: SWIGTYPE_p_int) -> int: ...

  @staticmethod
  def FMOD_DSP_GetInput(arg0: SWIGTYPE_p_FMOD_DSP, arg1: int, arg2: SWIGTYPE_p_p_FMOD_DSP, arg3: SWIGTYPE_p_p_FMOD_DSPCONNECTION) -> int: ...

  @staticmethod
  def FMOD_DSP_GetMeteringEnabled(arg0: SWIGTYPE_p_FMOD_DSP, arg1: SWIGTYPE_p_FMOD_BOOL, arg2: SWIGTYPE_p_FMOD_BOOL) -> int: ...

  @staticmethod
  def FMOD_DSP_GetMeteringInfo(arg0: SWIGTYPE_p_FMOD_DSP, arg1: SWIGTYPE_p_FMOD_DSP_METERING_INFO, arg2: SWIGTYPE_p_FMOD_DSP_METERING_INFO) -> int: ...

  @staticmethod
  def FMOD_DSP_GetNumInputs(arg0: SWIGTYPE_p_FMOD_DSP, arg1: SWIGTYPE_p_int) -> int: ...

  @staticmethod
  def FMOD_DSP_GetNumOutputs(arg0: SWIGTYPE_p_FMOD_DSP, arg1: SWIGTYPE_p_int) -> int: ...

  @staticmethod
  def FMOD_DSP_GetNumParameters(arg0: SWIGTYPE_p_FMOD_DSP, arg1: SWIGTYPE_p_int) -> int: ...

  @staticmethod
  def FMOD_DSP_GetOutput(arg0: SWIGTYPE_p_FMOD_DSP, arg1: int, arg2: SWIGTYPE_p_p_FMOD_DSP, arg3: SWIGTYPE_p_p_FMOD_DSPCONNECTION) -> int: ...

  @staticmethod
  def FMOD_DSP_GetOutputChannelFormat(arg0: SWIGTYPE_p_FMOD_DSP, arg1: SWIGTYPE_p_FMOD_CHANNELMASK, arg2: int, arg3: SWIGTYPE_p_FMOD_SPEAKERMODE, arg4: SWIGTYPE_p_FMOD_CHANNELMASK, arg5: SWIGTYPE_p_int, arg6: SWIGTYPE_p_FMOD_SPEAKERMODE) -> int: ...

  @staticmethod
  def FMOD_DSP_GetParameterBool(arg0: SWIGTYPE_p_FMOD_DSP, arg1: int, arg2: SWIGTYPE_p_FMOD_BOOL, arg3: str, arg4: int) -> int: ...

  @staticmethod
  def FMOD_DSP_GetParameterData(arg0: SWIGTYPE_p_FMOD_DSP, arg1: int, arg2: SWIGTYPE_p_p_void, arg3: SWIGTYPE_p_unsigned_int, arg4: str, arg5: int) -> int: ...

  @staticmethod
  def FMOD_DSP_GetParameterFloat(arg0: SWIGTYPE_p_FMOD_DSP, arg1: int, arg2: SWIGTYPE_p_float, arg3: str, arg4: int) -> int: ...

  @staticmethod
  def FMOD_DSP_GetParameterInfo(arg0: SWIGTYPE_p_FMOD_DSP, arg1: int, arg2: SWIGTYPE_p_p_FMOD_DSP_PARAMETER_DESC) -> int: ...

  @staticmethod
  def FMOD_DSP_GetParameterInt(arg0: SWIGTYPE_p_FMOD_DSP, arg1: int, arg2: SWIGTYPE_p_int, arg3: str, arg4: int) -> int: ...

  @staticmethod
  def FMOD_DSP_GetSystemObject(arg0: SWIGTYPE_p_FMOD_DSP, arg1: SWIGTYPE_p_p_FMOD_SYSTEM) -> int: ...

  @staticmethod
  def FMOD_DSP_GetType(arg0: SWIGTYPE_p_FMOD_DSP, arg1: SWIGTYPE_p_FMOD_DSP_TYPE) -> int: ...

  @staticmethod
  def FMOD_DSP_GetUserData(arg0: SWIGTYPE_p_FMOD_DSP, arg1: SWIGTYPE_p_p_void) -> int: ...

  @staticmethod
  def FMOD_DSP_GetWetDryMix(arg0: SWIGTYPE_p_FMOD_DSP, arg1: SWIGTYPE_p_float, arg2: SWIGTYPE_p_float, arg3: SWIGTYPE_p_float) -> int: ...

  @staticmethod
  def FMOD_DSP_Release(arg0: SWIGTYPE_p_FMOD_DSP) -> int: ...

  @staticmethod
  def FMOD_DSP_Reset(arg0: SWIGTYPE_p_FMOD_DSP) -> int: ...

  @staticmethod
  def FMOD_DSP_SetActive(arg0: SWIGTYPE_p_FMOD_DSP, arg1: SWIGTYPE_p_FMOD_BOOL) -> int: ...

  @staticmethod
  def FMOD_DSP_SetBypass(arg0: SWIGTYPE_p_FMOD_DSP, arg1: SWIGTYPE_p_FMOD_BOOL) -> int: ...

  @staticmethod
  def FMOD_DSP_SetChannelFormat(arg0: SWIGTYPE_p_FMOD_DSP, arg1: SWIGTYPE_p_FMOD_CHANNELMASK, arg2: int, arg3: SWIGTYPE_p_FMOD_SPEAKERMODE) -> int: ...

  @staticmethod
  def FMOD_DSP_SetMeteringEnabled(arg0: SWIGTYPE_p_FMOD_DSP, arg1: SWIGTYPE_p_FMOD_BOOL, arg2: SWIGTYPE_p_FMOD_BOOL) -> int: ...

  @staticmethod
  def FMOD_DSP_SetParameterBool(arg0: SWIGTYPE_p_FMOD_DSP, arg1: int, arg2: SWIGTYPE_p_FMOD_BOOL) -> int: ...

  @staticmethod
  def FMOD_DSP_SetParameterData(arg0: SWIGTYPE_p_FMOD_DSP, arg1: int, arg2: SWIGTYPE_p_void, arg3: int) -> int: ...

  @staticmethod
  def FMOD_DSP_SetParameterFloat(arg0: SWIGTYPE_p_FMOD_DSP, arg1: int, arg2: float) -> int: ...

  @staticmethod
  def FMOD_DSP_SetParameterInt(arg0: SWIGTYPE_p_FMOD_DSP, arg1: int, arg2: int) -> int: ...

  @staticmethod
  def FMOD_DSP_SetUserData(arg0: SWIGTYPE_p_FMOD_DSP, arg1: SWIGTYPE_p_void) -> int: ...

  @staticmethod
  def FMOD_DSP_SetWetDryMix(arg0: SWIGTYPE_p_FMOD_DSP, arg1: float, arg2: float, arg3: float) -> int: ...

  @staticmethod
  def FMOD_DSP_ShowConfigDialog(arg0: SWIGTYPE_p_FMOD_DSP, arg1: SWIGTYPE_p_void, arg2: SWIGTYPE_p_FMOD_BOOL) -> int: ...

  @staticmethod
  def FMOD_Debug_Initialize(arg0: SWIGTYPE_p_FMOD_DEBUG_FLAGS, arg1: SWIGTYPE_p_FMOD_DEBUG_MODE, arg2: SWIGTYPE_p_FMOD_DEBUG_CALLBACK, arg3: str) -> int: ...

  @staticmethod
  def FMOD_File_GetDiskBusy(arg0: SWIGTYPE_p_int) -> int: ...

  @staticmethod
  def FMOD_File_SetDiskBusy(arg0: int) -> int: ...

  @staticmethod
  def FMOD_Geometry_AddPolygon(arg0: SWIGTYPE_p_FMOD_GEOMETRY, arg1: float, arg2: float, arg3: SWIGTYPE_p_FMOD_BOOL, arg4: int, arg5: SWIGTYPE_p_FMOD_VECTOR, arg6: SWIGTYPE_p_int) -> int: ...

  @staticmethod
  def FMOD_Geometry_GetActive(arg0: SWIGTYPE_p_FMOD_GEOMETRY, arg1: SWIGTYPE_p_FMOD_BOOL) -> int: ...

  @staticmethod
  def FMOD_Geometry_GetMaxPolygons(arg0: SWIGTYPE_p_FMOD_GEOMETRY, arg1: SWIGTYPE_p_int, arg2: SWIGTYPE_p_int) -> int: ...

  @staticmethod
  def FMOD_Geometry_GetNumPolygons(arg0: SWIGTYPE_p_FMOD_GEOMETRY, arg1: SWIGTYPE_p_int) -> int: ...

  @staticmethod
  def FMOD_Geometry_GetPolygonAttributes(arg0: SWIGTYPE_p_FMOD_GEOMETRY, arg1: int, arg2: SWIGTYPE_p_float, arg3: SWIGTYPE_p_float, arg4: SWIGTYPE_p_FMOD_BOOL) -> int: ...

  @staticmethod
  def FMOD_Geometry_GetPolygonNumVertices(arg0: SWIGTYPE_p_FMOD_GEOMETRY, arg1: int, arg2: SWIGTYPE_p_int) -> int: ...

  @staticmethod
  def FMOD_Geometry_GetPolygonVertex(arg0: SWIGTYPE_p_FMOD_GEOMETRY, arg1: int, arg2: int, arg3: SWIGTYPE_p_FMOD_VECTOR) -> int: ...

  @staticmethod
  def FMOD_Geometry_GetPosition(arg0: SWIGTYPE_p_FMOD_GEOMETRY, arg1: SWIGTYPE_p_FMOD_VECTOR) -> int: ...

  @staticmethod
  def FMOD_Geometry_GetRotation(arg0: SWIGTYPE_p_FMOD_GEOMETRY, arg1: SWIGTYPE_p_FMOD_VECTOR, arg2: SWIGTYPE_p_FMOD_VECTOR) -> int: ...

  @staticmethod
  def FMOD_Geometry_GetScale(arg0: SWIGTYPE_p_FMOD_GEOMETRY, arg1: SWIGTYPE_p_FMOD_VECTOR) -> int: ...

  @staticmethod
  def FMOD_Geometry_GetUserData(arg0: SWIGTYPE_p_FMOD_GEOMETRY, arg1: SWIGTYPE_p_p_void) -> int: ...

  @staticmethod
  def FMOD_Geometry_Release(arg0: SWIGTYPE_p_FMOD_GEOMETRY) -> int: ...

  @staticmethod
  def FMOD_Geometry_Save(arg0: SWIGTYPE_p_FMOD_GEOMETRY, arg1: SWIGTYPE_p_void, arg2: SWIGTYPE_p_int) -> int: ...

  @staticmethod
  def FMOD_Geometry_SetActive(arg0: SWIGTYPE_p_FMOD_GEOMETRY, arg1: SWIGTYPE_p_FMOD_BOOL) -> int: ...

  @staticmethod
  def FMOD_Geometry_SetPolygonAttributes(arg0: SWIGTYPE_p_FMOD_GEOMETRY, arg1: int, arg2: float, arg3: float, arg4: SWIGTYPE_p_FMOD_BOOL) -> int: ...

  @staticmethod
  def FMOD_Geometry_SetPolygonVertex(arg0: SWIGTYPE_p_FMOD_GEOMETRY, arg1: int, arg2: int, arg3: SWIGTYPE_p_FMOD_VECTOR) -> int: ...

  @staticmethod
  def FMOD_Geometry_SetPosition(arg0: SWIGTYPE_p_FMOD_GEOMETRY, arg1: SWIGTYPE_p_FMOD_VECTOR) -> int: ...

  @staticmethod
  def FMOD_Geometry_SetRotation(arg0: SWIGTYPE_p_FMOD_GEOMETRY, arg1: SWIGTYPE_p_FMOD_VECTOR, arg2: SWIGTYPE_p_FMOD_VECTOR) -> int: ...

  @staticmethod
  def FMOD_Geometry_SetScale(arg0: SWIGTYPE_p_FMOD_GEOMETRY, arg1: SWIGTYPE_p_FMOD_VECTOR) -> int: ...

  @staticmethod
  def FMOD_Geometry_SetUserData(arg0: SWIGTYPE_p_FMOD_GEOMETRY, arg1: SWIGTYPE_p_void) -> int: ...

  @staticmethod
  def FMOD_Memory_GetStats(arg0: SWIGTYPE_p_int, arg1: SWIGTYPE_p_int, arg2: SWIGTYPE_p_FMOD_BOOL) -> int: ...

  @staticmethod
  def FMOD_Memory_Initialize(arg0: SWIGTYPE_p_void, arg1: int, arg2: SWIGTYPE_p_FMOD_MEMORY_ALLOC_CALLBACK, arg3: SWIGTYPE_p_FMOD_MEMORY_REALLOC_CALLBACK, arg4: SWIGTYPE_p_FMOD_MEMORY_FREE_CALLBACK, arg5: SWIGTYPE_p_FMOD_MEMORY_TYPE) -> int: ...

  @staticmethod
  def FMOD_RAWPlaySound_Release(arg0: int) -> int: ...

  @staticmethod
  def FMOD_RecordSound_Release(arg0: int) -> int: ...

  @staticmethod
  def FMOD_Reverb3D_Get3DAttributes(arg0: SWIGTYPE_p_FMOD_REVERB3D, arg1: SWIGTYPE_p_FMOD_VECTOR, arg2: SWIGTYPE_p_float, arg3: SWIGTYPE_p_float) -> int: ...

  @staticmethod
  def FMOD_Reverb3D_GetActive(arg0: SWIGTYPE_p_FMOD_REVERB3D, arg1: SWIGTYPE_p_FMOD_BOOL) -> int: ...

  @staticmethod
  def FMOD_Reverb3D_GetProperties(arg0: SWIGTYPE_p_FMOD_REVERB3D, arg1: SWIGTYPE_p_FMOD_REVERB_PROPERTIES) -> int: ...

  @staticmethod
  def FMOD_Reverb3D_GetUserData(arg0: SWIGTYPE_p_FMOD_REVERB3D, arg1: SWIGTYPE_p_p_void) -> int: ...

  @staticmethod
  def FMOD_Reverb3D_Release(arg0: SWIGTYPE_p_FMOD_REVERB3D) -> int: ...

  @staticmethod
  def FMOD_Reverb3D_Set3DAttributes(arg0: SWIGTYPE_p_FMOD_REVERB3D, arg1: SWIGTYPE_p_FMOD_VECTOR, arg2: float, arg3: float) -> int: ...

  @staticmethod
  def FMOD_Reverb3D_SetActive(arg0: SWIGTYPE_p_FMOD_REVERB3D, arg1: SWIGTYPE_p_FMOD_BOOL) -> int: ...

  @staticmethod
  def FMOD_Reverb3D_SetProperties(arg0: SWIGTYPE_p_FMOD_REVERB3D, arg1: SWIGTYPE_p_FMOD_REVERB_PROPERTIES) -> int: ...

  @staticmethod
  def FMOD_Reverb3D_SetUserData(arg0: SWIGTYPE_p_FMOD_REVERB3D, arg1: SWIGTYPE_p_void) -> int: ...

  @staticmethod
  def FMOD_SoundGroup_GetMaxAudible(arg0: SWIGTYPE_p_FMOD_SOUNDGROUP, arg1: SWIGTYPE_p_int) -> int: ...

  @staticmethod
  def FMOD_SoundGroup_GetMaxAudibleBehavior(arg0: SWIGTYPE_p_FMOD_SOUNDGROUP, arg1: SWIGTYPE_p_FMOD_SOUNDGROUP_BEHAVIOR) -> int: ...

  @staticmethod
  def FMOD_SoundGroup_GetMuteFadeSpeed(arg0: SWIGTYPE_p_FMOD_SOUNDGROUP, arg1: SWIGTYPE_p_float) -> int: ...

  @staticmethod
  def FMOD_SoundGroup_GetName(arg0: SWIGTYPE_p_FMOD_SOUNDGROUP, arg1: str, arg2: int) -> int: ...

  @staticmethod
  def FMOD_SoundGroup_GetNumPlaying(arg0: SWIGTYPE_p_FMOD_SOUNDGROUP, arg1: SWIGTYPE_p_int) -> int: ...

  @staticmethod
  def FMOD_SoundGroup_GetNumSounds(arg0: SWIGTYPE_p_FMOD_SOUNDGROUP, arg1: SWIGTYPE_p_int) -> int: ...

  @staticmethod
  def FMOD_SoundGroup_GetSound(arg0: SWIGTYPE_p_FMOD_SOUNDGROUP, arg1: int, arg2: SWIGTYPE_p_p_FMOD_SOUND) -> int: ...

  @staticmethod
  def FMOD_SoundGroup_GetSystemObject(arg0: SWIGTYPE_p_FMOD_SOUNDGROUP, arg1: SWIGTYPE_p_p_FMOD_SYSTEM) -> int: ...

  @staticmethod
  def FMOD_SoundGroup_GetUserData(arg0: SWIGTYPE_p_FMOD_SOUNDGROUP, arg1: SWIGTYPE_p_p_void) -> int: ...

  @staticmethod
  def FMOD_SoundGroup_GetVolume(arg0: SWIGTYPE_p_FMOD_SOUNDGROUP, arg1: SWIGTYPE_p_float) -> int: ...

  @staticmethod
  def FMOD_SoundGroup_Release(arg0: SWIGTYPE_p_FMOD_SOUNDGROUP) -> int: ...

  @staticmethod
  def FMOD_SoundGroup_SetMaxAudible(arg0: SWIGTYPE_p_FMOD_SOUNDGROUP, arg1: int) -> int: ...

  @staticmethod
  def FMOD_SoundGroup_SetMaxAudibleBehavior(arg0: SWIGTYPE_p_FMOD_SOUNDGROUP, arg1: SWIGTYPE_p_FMOD_SOUNDGROUP_BEHAVIOR) -> int: ...

  @staticmethod
  def FMOD_SoundGroup_SetMuteFadeSpeed(arg0: SWIGTYPE_p_FMOD_SOUNDGROUP, arg1: float) -> int: ...

  @staticmethod
  def FMOD_SoundGroup_SetUserData(arg0: SWIGTYPE_p_FMOD_SOUNDGROUP, arg1: SWIGTYPE_p_void) -> int: ...

  @staticmethod
  def FMOD_SoundGroup_SetVolume(arg0: SWIGTYPE_p_FMOD_SOUNDGROUP, arg1: float) -> int: ...

  @staticmethod
  def FMOD_SoundGroup_Stop(arg0: SWIGTYPE_p_FMOD_SOUNDGROUP) -> int: ...

  @staticmethod
  def FMOD_Sound_AddSyncPoint(arg0: SWIGTYPE_p_FMOD_SOUND, arg1: int, arg2: SWIGTYPE_p_FMOD_TIMEUNIT, arg3: str, arg4: SWIGTYPE_p_p_FMOD_SYNCPOINT) -> int: ...

  @staticmethod
  def FMOD_Sound_DeleteSyncPoint(arg0: SWIGTYPE_p_FMOD_SOUND, arg1: SWIGTYPE_p_FMOD_SYNCPOINT) -> int: ...

  @staticmethod
  def FMOD_Sound_Get3DConeSettings(arg0: SWIGTYPE_p_FMOD_SOUND, arg1: SWIGTYPE_p_float, arg2: SWIGTYPE_p_float, arg3: SWIGTYPE_p_float) -> int: ...

  @staticmethod
  def FMOD_Sound_Get3DCustomRolloff(arg0: SWIGTYPE_p_FMOD_SOUND, arg1: SWIGTYPE_p_p_FMOD_VECTOR, arg2: SWIGTYPE_p_int) -> int: ...

  @staticmethod
  def FMOD_Sound_Get3DMinMaxDistance(arg0: SWIGTYPE_p_FMOD_SOUND, arg1: SWIGTYPE_p_float, arg2: SWIGTYPE_p_float) -> int: ...

  @staticmethod
  def FMOD_Sound_GetData(arg0: int, arg1: list[int], arg2: Long, arg3: Long, arg4: Long) -> int: ...

  @staticmethod
  def FMOD_Sound_GetDefaults(arg0: SWIGTYPE_p_FMOD_SOUND, arg1: SWIGTYPE_p_float, arg2: SWIGTYPE_p_int) -> int: ...

  @staticmethod
  def FMOD_Sound_GetFormat(arg0: SWIGTYPE_p_FMOD_SOUND, arg1: SWIGTYPE_p_FMOD_SOUND_TYPE, arg2: SWIGTYPE_p_FMOD_SOUND_FORMAT, arg3: SWIGTYPE_p_int, arg4: SWIGTYPE_p_int) -> int: ...

  @staticmethod
  def FMOD_Sound_GetLength(arg0: int, arg1: int) -> int: ...

  @staticmethod
  def FMOD_Sound_GetLoopCount(arg0: SWIGTYPE_p_FMOD_SOUND, arg1: SWIGTYPE_p_int) -> int: ...

  @staticmethod
  def FMOD_Sound_GetLoopPoints(arg0: SWIGTYPE_p_FMOD_SOUND, arg1: SWIGTYPE_p_unsigned_int, arg2: SWIGTYPE_p_FMOD_TIMEUNIT, arg3: SWIGTYPE_p_unsigned_int, arg4: SWIGTYPE_p_FMOD_TIMEUNIT) -> int: ...

  @staticmethod
  def FMOD_Sound_GetMode(arg0: SWIGTYPE_p_FMOD_SOUND, arg1: SWIGTYPE_p_FMOD_MODE) -> int: ...

  @staticmethod
  def FMOD_Sound_GetMusicChannelVolume(arg0: SWIGTYPE_p_FMOD_SOUND, arg1: int, arg2: SWIGTYPE_p_float) -> int: ...

  @staticmethod
  def FMOD_Sound_GetMusicNumChannels(arg0: SWIGTYPE_p_FMOD_SOUND, arg1: SWIGTYPE_p_int) -> int: ...

  @staticmethod
  def FMOD_Sound_GetMusicSpeed(arg0: SWIGTYPE_p_FMOD_SOUND, arg1: SWIGTYPE_p_float) -> int: ...

  @staticmethod
  def FMOD_Sound_GetName(arg0: SWIGTYPE_p_FMOD_SOUND, arg1: str, arg2: int) -> int: ...

  @staticmethod
  def FMOD_Sound_GetNumSubSounds(arg0: SWIGTYPE_p_FMOD_SOUND, arg1: SWIGTYPE_p_int) -> int: ...

  @staticmethod
  def FMOD_Sound_GetNumSyncPoints(arg0: SWIGTYPE_p_FMOD_SOUND, arg1: SWIGTYPE_p_int) -> int: ...

  @staticmethod
  def FMOD_Sound_GetNumTags(arg0: SWIGTYPE_p_FMOD_SOUND, arg1: SWIGTYPE_p_int, arg2: SWIGTYPE_p_int) -> int: ...

  @staticmethod
  def FMOD_Sound_GetOpenState(arg0: SWIGTYPE_p_FMOD_SOUND, arg1: SWIGTYPE_p_FMOD_OPENSTATE, arg2: SWIGTYPE_p_unsigned_int, arg3: SWIGTYPE_p_FMOD_BOOL, arg4: SWIGTYPE_p_FMOD_BOOL) -> int: ...

  @staticmethod
  def FMOD_Sound_GetSoundGroup(arg0: SWIGTYPE_p_FMOD_SOUND, arg1: SWIGTYPE_p_p_FMOD_SOUNDGROUP) -> int: ...

  @staticmethod
  def FMOD_Sound_GetSubSound(arg0: SWIGTYPE_p_FMOD_SOUND, arg1: int, arg2: SWIGTYPE_p_p_FMOD_SOUND) -> int: ...

  @staticmethod
  def FMOD_Sound_GetSubSoundParent(arg0: SWIGTYPE_p_FMOD_SOUND, arg1: SWIGTYPE_p_p_FMOD_SOUND) -> int: ...

  @staticmethod
  def FMOD_Sound_GetSyncPoint(arg0: SWIGTYPE_p_FMOD_SOUND, arg1: int, arg2: SWIGTYPE_p_p_FMOD_SYNCPOINT) -> int: ...

  @staticmethod
  def FMOD_Sound_GetSyncPointInfo(arg0: SWIGTYPE_p_FMOD_SOUND, arg1: SWIGTYPE_p_FMOD_SYNCPOINT, arg2: str, arg3: int, arg4: SWIGTYPE_p_unsigned_int, arg5: SWIGTYPE_p_FMOD_TIMEUNIT) -> int: ...

  @staticmethod
  def FMOD_Sound_GetSystemObject(arg0: SWIGTYPE_p_FMOD_SOUND, arg1: SWIGTYPE_p_p_FMOD_SYSTEM) -> int: ...

  @staticmethod
  def FMOD_Sound_GetTag(arg0: SWIGTYPE_p_FMOD_SOUND, arg1: str, arg2: int, arg3: SWIGTYPE_p_FMOD_TAG) -> int: ...

  @staticmethod
  def FMOD_Sound_GetUserData(arg0: SWIGTYPE_p_FMOD_SOUND, arg1: SWIGTYPE_p_p_void) -> int: ...

  @staticmethod
  def FMOD_Sound_Lock(arg0: int, arg1: int, arg2: int, arg3: list[int], arg4: list[int], arg5: Long, arg6: Long, arg7: list[int]) -> int: ...

  @staticmethod
  def FMOD_Sound_ReadData(arg0: SWIGTYPE_p_FMOD_SOUND, arg1: SWIGTYPE_p_void, arg2: int, arg3: SWIGTYPE_p_unsigned_int) -> int: ...

  @staticmethod
  def FMOD_Sound_Release(arg0: int) -> int: ...

  @staticmethod
  def FMOD_Sound_SeekData(arg0: SWIGTYPE_p_FMOD_SOUND, arg1: int) -> int: ...

  @staticmethod
  def FMOD_Sound_Set3DConeSettings(arg0: SWIGTYPE_p_FMOD_SOUND, arg1: float, arg2: float, arg3: float) -> int: ...

  @staticmethod
  def FMOD_Sound_Set3DCustomRolloff(arg0: SWIGTYPE_p_FMOD_SOUND, arg1: SWIGTYPE_p_FMOD_VECTOR, arg2: int) -> int: ...

  @staticmethod
  def FMOD_Sound_Set3DMinMaxDistance(arg0: int, arg1: float, arg2: float) -> int: ...

  @staticmethod
  def FMOD_Sound_SetDefaults(arg0: SWIGTYPE_p_FMOD_SOUND, arg1: float, arg2: int) -> int: ...

  @staticmethod
  def FMOD_Sound_SetLoopCount(arg0: int, arg1: int) -> int: ...

  @staticmethod
  def FMOD_Sound_SetLoopPoints(arg0: SWIGTYPE_p_FMOD_SOUND, arg1: int, arg2: SWIGTYPE_p_FMOD_TIMEUNIT, arg3: int, arg4: SWIGTYPE_p_FMOD_TIMEUNIT) -> int: ...

  @staticmethod
  def FMOD_Sound_SetMode(arg0: int, arg1: int) -> int: ...

  @staticmethod
  def FMOD_Sound_SetMusicChannelVolume(arg0: SWIGTYPE_p_FMOD_SOUND, arg1: int, arg2: float) -> int: ...

  @staticmethod
  def FMOD_Sound_SetMusicSpeed(arg0: SWIGTYPE_p_FMOD_SOUND, arg1: float) -> int: ...

  @staticmethod
  def FMOD_Sound_SetSoundGroup(arg0: int, arg1: int) -> int: ...

  @staticmethod
  def FMOD_Sound_SetSubSound(arg0: SWIGTYPE_p_FMOD_SOUND, arg1: int, arg2: SWIGTYPE_p_FMOD_SOUND) -> int: ...

  @staticmethod
  def FMOD_Sound_SetUserData(arg0: SWIGTYPE_p_FMOD_SOUND, arg1: SWIGTYPE_p_void) -> int: ...

  @staticmethod
  def FMOD_Sound_Unlock(arg0: int, arg1: list[int]) -> int: ...

  @staticmethod
  def FMOD_Studio_Bus_GetMute(arg0: int) -> bool: ...

  @staticmethod
  def FMOD_Studio_Bus_GetPaused(arg0: int) -> bool: ...

  @staticmethod
  def FMOD_Studio_Bus_GetVolume(arg0: int) -> float: ...

  @staticmethod
  def FMOD_Studio_Bus_SetMute(arg0: int, arg1: bool) -> int: ...

  @staticmethod
  def FMOD_Studio_Bus_SetPaused(arg0: int, arg1: bool) -> int: ...

  @staticmethod
  def FMOD_Studio_Bus_SetVolume(arg0: int, arg1: float) -> int: ...

  @staticmethod
  def FMOD_Studio_Bus_StopAllEvents(arg0: int, arg1: bool) -> int: ...

  @staticmethod
  def FMOD_Studio_EventInstance3D(arg0: int, arg1: float, arg2: float, arg3: float) -> int: ...

  @staticmethod
  def FMOD_Studio_EventInstance_SetCallback(arg0: int, arg1: FMOD_STUDIO_EVENT_CALLBACK, arg2: int) -> int: ...

  @staticmethod
  @overload
  def FMOD_Studio_EventInstance_SetParameterByID(arg0: int, arg1: FMOD_STUDIO_PARAMETER_ID, arg2: float) -> int: ...

  @staticmethod
  @overload
  def FMOD_Studio_EventInstance_SetParameterByID(arg0: int, arg1: FMOD_STUDIO_PARAMETER_ID, arg2: float, arg3: bool) -> int: ...

  @staticmethod
  def FMOD_Studio_EventInstance_SetParameterByName(arg0: int, arg1: str, arg2: float) -> int: ...

  @staticmethod
  def FMOD_Studio_EventInstance_SetVolume(arg0: int, arg1: float) -> int: ...

  @staticmethod
  def FMOD_Studio_EventInstance_Stop(arg0: int, arg1: bool) -> int: ...

  @staticmethod
  def FMOD_Studio_GetParameter(arg0: int, arg1: str) -> float: ...

  @staticmethod
  def FMOD_Studio_GetPlaybackState(arg0: int) -> int: ...

  @staticmethod
  def FMOD_Studio_GetTimelinePosition(arg0: int) -> int: ...

  @staticmethod
  def FMOD_Studio_Listener3D(arg0: int, arg1: float, arg2: float, arg3: float, arg4: float, arg5: float, arg6: float, arg7: float, arg8: float, arg9: float, arg10: float, arg11: float, arg12: float) -> None: ...

  @staticmethod
  def FMOD_Studio_LoadEventSampleData(arg0: int) -> None: ...

  @staticmethod
  def FMOD_Studio_LoadSampleData(arg0: int) -> int: ...

  @staticmethod
  def FMOD_Studio_ReleaseEventInstance(arg0: int) -> int: ...

  @staticmethod
  def FMOD_Studio_SetNumListeners(arg0: int) -> int: ...

  @staticmethod
  def FMOD_Studio_StartEvent(arg0: int) -> None: ...

  @staticmethod
  def FMOD_Studio_System_Create() -> int: ...

  @staticmethod
  def FMOD_Studio_System_CreateEventInstance(arg0: int) -> int: ...

  @staticmethod
  def FMOD_Studio_System_GetBus(arg0: str) -> int: ...

  @staticmethod
  def FMOD_Studio_System_GetEvent(arg0: str) -> int: ...

  @staticmethod
  def FMOD_Studio_System_LoadBankFile(arg0: str) -> int: ...

  @staticmethod
  def FMOD_Studio_System_SetParameterByID(arg0: FMOD_STUDIO_PARAMETER_ID, arg1: float, arg2: bool) -> int: ...

  @staticmethod
  def FMOD_Studio_System_SetParameterByName(arg0: str, arg1: float, arg2: bool) -> int: ...

  @staticmethod
  def FMOD_System_AttachChannelGroupToPort(arg0: SWIGTYPE_p_FMOD_SYSTEM, arg1: SWIGTYPE_p_FMOD_PORT_TYPE, arg2: SWIGTYPE_p_FMOD_PORT_INDEX, arg3: SWIGTYPE_p_FMOD_CHANNELGROUP, arg4: SWIGTYPE_p_FMOD_BOOL) -> int: ...

  @staticmethod
  def FMOD_System_AttachFileSystem(arg0: SWIGTYPE_p_FMOD_SYSTEM, arg1: SWIGTYPE_p_FMOD_FILE_OPEN_CALLBACK, arg2: SWIGTYPE_p_FMOD_FILE_CLOSE_CALLBACK, arg3: SWIGTYPE_p_FMOD_FILE_READ_CALLBACK, arg4: SWIGTYPE_p_FMOD_FILE_SEEK_CALLBACK) -> int: ...

  @staticmethod
  def FMOD_System_Close(arg0: SWIGTYPE_p_FMOD_SYSTEM) -> int: ...

  @staticmethod
  def FMOD_System_Create() -> int: ...

  @staticmethod
  def FMOD_System_CreateChannelGroup(arg0: str) -> int: ...

  @staticmethod
  def FMOD_System_CreateDSP(arg0: SWIGTYPE_p_FMOD_SYSTEM, arg1: SWIGTYPE_p_FMOD_DSP_DESCRIPTION, arg2: SWIGTYPE_p_p_FMOD_DSP) -> int: ...

  @staticmethod
  def FMOD_System_CreateDSPByPlugin(arg0: SWIGTYPE_p_FMOD_SYSTEM, arg1: int, arg2: SWIGTYPE_p_p_FMOD_DSP) -> int: ...

  @staticmethod
  def FMOD_System_CreateDSPByType(arg0: SWIGTYPE_p_FMOD_SYSTEM, arg1: SWIGTYPE_p_FMOD_DSP_TYPE, arg2: SWIGTYPE_p_p_FMOD_DSP) -> int: ...

  @staticmethod
  def FMOD_System_CreateGeometry(arg0: SWIGTYPE_p_FMOD_SYSTEM, arg1: int, arg2: int, arg3: SWIGTYPE_p_p_FMOD_GEOMETRY) -> int: ...

  @staticmethod
  def FMOD_System_CreateRAWPlaySound(arg0: int, arg1: int, arg2: int) -> int: ...

  @staticmethod
  def FMOD_System_CreateRecordSound(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int) -> int: ...

  @staticmethod
  def FMOD_System_CreateReverb3D(arg0: SWIGTYPE_p_FMOD_SYSTEM, arg1: SWIGTYPE_p_p_FMOD_REVERB3D) -> int: ...

  @staticmethod
  def FMOD_System_CreateSound(arg0: str, arg1: int) -> int: ...

  @staticmethod
  def FMOD_System_CreateSoundGroup(arg0: SWIGTYPE_p_FMOD_SYSTEM, arg1: str, arg2: SWIGTYPE_p_p_FMOD_SOUNDGROUP) -> int: ...

  @staticmethod
  def FMOD_System_CreateStream(arg0: SWIGTYPE_p_FMOD_SYSTEM, arg1: str, arg2: SWIGTYPE_p_FMOD_MODE, arg3: SWIGTYPE_p_FMOD_CREATESOUNDEXINFO, arg4: SWIGTYPE_p_p_FMOD_SOUND) -> int: ...

  @staticmethod
  def FMOD_System_DetachChannelGroupFromPort(arg0: SWIGTYPE_p_FMOD_SYSTEM, arg1: SWIGTYPE_p_FMOD_CHANNELGROUP) -> int: ...

  @staticmethod
  def FMOD_System_Get3DListenerAttributes(arg0: SWIGTYPE_p_FMOD_SYSTEM, arg1: int, arg2: SWIGTYPE_p_FMOD_VECTOR, arg3: SWIGTYPE_p_FMOD_VECTOR, arg4: SWIGTYPE_p_FMOD_VECTOR, arg5: SWIGTYPE_p_FMOD_VECTOR) -> int: ...

  @staticmethod
  def FMOD_System_Get3DNumListeners(arg0: SWIGTYPE_p_FMOD_SYSTEM, arg1: SWIGTYPE_p_int) -> int: ...

  @staticmethod
  def FMOD_System_Get3DSettings(arg0: SWIGTYPE_p_float, arg1: SWIGTYPE_p_float, arg2: SWIGTYPE_p_float) -> int: ...

  @staticmethod
  def FMOD_System_GetAdvancedSettings(arg0: SWIGTYPE_p_FMOD_SYSTEM, arg1: SWIGTYPE_p_FMOD_ADVANCEDSETTINGS) -> int: ...

  @staticmethod
  def FMOD_System_GetCPUUsage(arg0: SWIGTYPE_p_FMOD_SYSTEM, arg1: SWIGTYPE_p_float, arg2: SWIGTYPE_p_float, arg3: SWIGTYPE_p_float, arg4: SWIGTYPE_p_float, arg5: SWIGTYPE_p_float) -> int: ...

  @staticmethod
  def FMOD_System_GetChannel(arg0: SWIGTYPE_p_FMOD_SYSTEM, arg1: int, arg2: SWIGTYPE_p_p_FMOD_CHANNEL) -> int: ...

  @staticmethod
  def FMOD_System_GetChannelsPlaying(arg0: SWIGTYPE_p_FMOD_SYSTEM, arg1: SWIGTYPE_p_int) -> int: ...

  @staticmethod
  def FMOD_System_GetDSPBufferSize(arg0: SWIGTYPE_p_FMOD_SYSTEM, arg1: SWIGTYPE_p_unsigned_int, arg2: SWIGTYPE_p_int) -> int: ...

  @staticmethod
  def FMOD_System_GetDSPInfoByPlugin(arg0: SWIGTYPE_p_FMOD_SYSTEM, arg1: int, arg2: SWIGTYPE_p_p_FMOD_DSP_DESCRIPTION) -> int: ...

  @staticmethod
  def FMOD_System_GetDriver(arg0: SWIGTYPE_p_FMOD_SYSTEM, arg1: SWIGTYPE_p_int) -> int: ...

  @staticmethod
  def FMOD_System_GetDriverInfo(arg0: SWIGTYPE_p_FMOD_SYSTEM, arg1: int, arg2: str, arg3: int, arg4: SWIGTYPE_p_FMOD_GUID, arg5: SWIGTYPE_p_int, arg6: SWIGTYPE_p_FMOD_SPEAKERMODE, arg7: SWIGTYPE_p_int) -> int: ...

  @staticmethod
  def FMOD_System_GetGeometryOcclusion(arg0: SWIGTYPE_p_FMOD_SYSTEM, arg1: SWIGTYPE_p_FMOD_VECTOR, arg2: SWIGTYPE_p_FMOD_VECTOR, arg3: SWIGTYPE_p_float, arg4: SWIGTYPE_p_float) -> int: ...

  @staticmethod
  def FMOD_System_GetGeometrySettings(arg0: SWIGTYPE_p_FMOD_SYSTEM, arg1: SWIGTYPE_p_float) -> int: ...

  @staticmethod
  def FMOD_System_GetMasterChannelGroup() -> int: ...

  @staticmethod
  def FMOD_System_GetMasterSoundGroup(arg0: SWIGTYPE_p_FMOD_SYSTEM, arg1: SWIGTYPE_p_p_FMOD_SOUNDGROUP) -> int: ...

  @staticmethod
  def FMOD_System_GetNetworkProxy(arg0: SWIGTYPE_p_FMOD_SYSTEM, arg1: str, arg2: int) -> int: ...

  @staticmethod
  def FMOD_System_GetNetworkTimeout(arg0: SWIGTYPE_p_FMOD_SYSTEM, arg1: SWIGTYPE_p_int) -> int: ...

  @staticmethod
  def FMOD_System_GetNumDrivers(arg0: SWIGTYPE_p_FMOD_SYSTEM, arg1: SWIGTYPE_p_int) -> int: ...

  @staticmethod
  def FMOD_System_GetNumPlugins(arg0: SWIGTYPE_p_FMOD_SYSTEM, arg1: SWIGTYPE_p_FMOD_PLUGINTYPE, arg2: SWIGTYPE_p_int) -> int: ...

  @staticmethod
  def FMOD_System_GetOutput(arg0: SWIGTYPE_p_FMOD_SYSTEM, arg1: SWIGTYPE_p_FMOD_OUTPUTTYPE) -> int: ...

  @staticmethod
  def FMOD_System_GetOutputByPlugin(arg0: SWIGTYPE_p_FMOD_SYSTEM, arg1: SWIGTYPE_p_unsigned_int) -> int: ...

  @staticmethod
  def FMOD_System_GetOutputHandle(arg0: SWIGTYPE_p_FMOD_SYSTEM, arg1: SWIGTYPE_p_p_void) -> int: ...

  @staticmethod
  def FMOD_System_GetPluginHandle(arg0: SWIGTYPE_p_FMOD_SYSTEM, arg1: SWIGTYPE_p_FMOD_PLUGINTYPE, arg2: int, arg3: SWIGTYPE_p_unsigned_int) -> int: ...

  @staticmethod
  def FMOD_System_GetPluginInfo(arg0: SWIGTYPE_p_FMOD_SYSTEM, arg1: int, arg2: SWIGTYPE_p_FMOD_PLUGINTYPE, arg3: str, arg4: int, arg5: SWIGTYPE_p_unsigned_int) -> int: ...

  @staticmethod
  def FMOD_System_GetRecordDriverInfo(arg0: int, arg1: FMOD_DriverInfo) -> int: ...

  @staticmethod
  def FMOD_System_GetRecordNumDrivers() -> int: ...

  @staticmethod
  def FMOD_System_GetRecordPosition(arg0: int, arg1: Long) -> int: ...

  @staticmethod
  def FMOD_System_GetReverbProperties(arg0: SWIGTYPE_p_FMOD_SYSTEM, arg1: int, arg2: SWIGTYPE_p_FMOD_REVERB_PROPERTIES) -> int: ...

  @staticmethod
  def FMOD_System_GetSoftwareChannels(arg0: SWIGTYPE_p_FMOD_SYSTEM, arg1: SWIGTYPE_p_int) -> int: ...

  @staticmethod
  def FMOD_System_GetSoftwareFormat(arg0: SWIGTYPE_p_FMOD_SYSTEM, arg1: SWIGTYPE_p_int, arg2: SWIGTYPE_p_FMOD_SPEAKERMODE, arg3: SWIGTYPE_p_int) -> int: ...

  @staticmethod
  def FMOD_System_GetSpeakerPosition(arg0: SWIGTYPE_p_FMOD_SYSTEM, arg1: SWIGTYPE_p_FMOD_SPEAKER, arg2: SWIGTYPE_p_float, arg3: SWIGTYPE_p_float, arg4: SWIGTYPE_p_FMOD_BOOL) -> int: ...

  @staticmethod
  def FMOD_System_GetStreamBufferSize(arg0: SWIGTYPE_p_FMOD_SYSTEM, arg1: SWIGTYPE_p_unsigned_int, arg2: SWIGTYPE_p_FMOD_TIMEUNIT) -> int: ...

  @staticmethod
  def FMOD_System_GetUserData(arg0: SWIGTYPE_p_FMOD_SYSTEM, arg1: SWIGTYPE_p_p_void) -> int: ...

  @staticmethod
  def FMOD_System_GetVersion(arg0: SWIGTYPE_p_FMOD_SYSTEM, arg1: SWIGTYPE_p_unsigned_int) -> int: ...

  @staticmethod
  def FMOD_System_Init(arg0: int, arg1: int, arg2: int) -> int: ...

  @staticmethod
  def FMOD_System_IsRecording(arg0: SWIGTYPE_p_FMOD_SYSTEM, arg1: int, arg2: SWIGTYPE_p_FMOD_BOOL) -> int: ...

  @staticmethod
  def FMOD_System_LoadGeometry(arg0: SWIGTYPE_p_FMOD_SYSTEM, arg1: SWIGTYPE_p_void, arg2: int, arg3: SWIGTYPE_p_p_FMOD_GEOMETRY) -> int: ...

  @staticmethod
  def FMOD_System_LoadPlugin(arg0: SWIGTYPE_p_FMOD_SYSTEM, arg1: str, arg2: SWIGTYPE_p_unsigned_int, arg3: int) -> int: ...

  @staticmethod
  def FMOD_System_LockDSP(arg0: SWIGTYPE_p_FMOD_SYSTEM) -> int: ...

  @staticmethod
  def FMOD_System_MixerResume(arg0: SWIGTYPE_p_FMOD_SYSTEM) -> int: ...

  @staticmethod
  def FMOD_System_MixerSuspend(arg0: SWIGTYPE_p_FMOD_SYSTEM) -> int: ...

  @staticmethod
  def FMOD_System_PlayDSP() -> int: ...

  @staticmethod
  def FMOD_System_PlaySound(arg0: int, arg1: bool) -> int: ...

  @staticmethod
  @overload
  def FMOD_System_RAWPlayData(arg0: int, arg1: list[int], arg2: int) -> int: ...

  @staticmethod
  @overload
  def FMOD_System_RAWPlayData(arg0: int, arg1: list[int], arg2: int) -> int: ...

  @staticmethod
  def FMOD_System_RecordStart(arg0: int, arg1: int, arg2: bool) -> int: ...

  @staticmethod
  def FMOD_System_RecordStop(arg0: int) -> int: ...

  @staticmethod
  def FMOD_System_RegisterCodec(arg0: SWIGTYPE_p_FMOD_SYSTEM, arg1: SWIGTYPE_p_FMOD_CODEC_DESCRIPTION, arg2: SWIGTYPE_p_unsigned_int, arg3: int) -> int: ...

  @staticmethod
  def FMOD_System_RegisterDSP(arg0: SWIGTYPE_p_FMOD_SYSTEM, arg1: SWIGTYPE_p_FMOD_DSP_DESCRIPTION, arg2: SWIGTYPE_p_unsigned_int) -> int: ...

  @staticmethod
  def FMOD_System_Release(arg0: SWIGTYPE_p_FMOD_SYSTEM) -> int: ...

  @staticmethod
  def FMOD_System_Set3DListenerAttributes(arg0: int, arg1: float, arg2: float, arg3: float, arg4: float, arg5: float, arg6: float, arg7: float, arg8: float, arg9: float, arg10: float, arg11: float, arg12: float) -> int: ...

  @staticmethod
  def FMOD_System_Set3DNumListeners(arg0: int) -> int: ...

  @staticmethod
  def FMOD_System_Set3DRolloffCallback(arg0: SWIGTYPE_p_FMOD_SYSTEM, arg1: SWIGTYPE_p_FMOD_3D_ROLLOFF_CALLBACK) -> int: ...

  @staticmethod
  def FMOD_System_Set3DSettings(arg0: float, arg1: float, arg2: float) -> int: ...

  @staticmethod
  def FMOD_System_SetAdvancedSettings(arg0: SWIGTYPE_p_FMOD_SYSTEM, arg1: SWIGTYPE_p_FMOD_ADVANCEDSETTINGS) -> int: ...

  @staticmethod
  def FMOD_System_SetCallback(arg0: SWIGTYPE_p_FMOD_SYSTEM, arg1: SWIGTYPE_p_FMOD_SYSTEM_CALLBACK, arg2: SWIGTYPE_p_FMOD_SYSTEM_CALLBACK_TYPE) -> int: ...

  @staticmethod
  def FMOD_System_SetDSPBufferSize(arg0: SWIGTYPE_p_FMOD_SYSTEM, arg1: int, arg2: int) -> int: ...

  @staticmethod
  def FMOD_System_SetDriver(arg0: SWIGTYPE_p_FMOD_SYSTEM, arg1: int) -> int: ...

  @staticmethod
  def FMOD_System_SetFileSystem(arg0: SWIGTYPE_p_FMOD_SYSTEM, arg1: SWIGTYPE_p_FMOD_FILE_OPEN_CALLBACK, arg2: SWIGTYPE_p_FMOD_FILE_CLOSE_CALLBACK, arg3: SWIGTYPE_p_FMOD_FILE_READ_CALLBACK, arg4: SWIGTYPE_p_FMOD_FILE_SEEK_CALLBACK, arg5: SWIGTYPE_p_FMOD_FILE_ASYNCREAD_CALLBACK, arg6: SWIGTYPE_p_FMOD_FILE_ASYNCCANCEL_CALLBACK, arg7: int) -> int: ...

  @staticmethod
  def FMOD_System_SetGeometrySettings(arg0: SWIGTYPE_p_FMOD_SYSTEM, arg1: float) -> int: ...

  @staticmethod
  def FMOD_System_SetNetworkProxy(arg0: SWIGTYPE_p_FMOD_SYSTEM, arg1: str) -> int: ...

  @staticmethod
  def FMOD_System_SetNetworkTimeout(arg0: SWIGTYPE_p_FMOD_SYSTEM, arg1: int) -> int: ...

  @staticmethod
  def FMOD_System_SetOutput(arg0: SWIGTYPE_p_FMOD_SYSTEM, arg1: SWIGTYPE_p_FMOD_OUTPUTTYPE) -> int: ...

  @staticmethod
  def FMOD_System_SetOutputByPlugin(arg0: SWIGTYPE_p_FMOD_SYSTEM, arg1: int) -> int: ...

  @staticmethod
  def FMOD_System_SetPluginPath(arg0: SWIGTYPE_p_FMOD_SYSTEM, arg1: str) -> int: ...

  @staticmethod
  def FMOD_System_SetRawPlayBufferingPeriod(arg0: int) -> int: ...

  @staticmethod
  def FMOD_System_SetRecordVolume(arg0: int) -> int: ...

  @staticmethod
  def FMOD_System_SetReverbDefault(arg0: int, arg1: int) -> None: ...

  @staticmethod
  def FMOD_System_SetReverbProperties(arg0: SWIGTYPE_p_FMOD_SYSTEM, arg1: int, arg2: SWIGTYPE_p_FMOD_REVERB_PROPERTIES) -> int: ...

  @staticmethod
  def FMOD_System_SetSoftwareChannels(arg0: SWIGTYPE_p_FMOD_SYSTEM, arg1: int) -> int: ...

  @staticmethod
  def FMOD_System_SetSoftwareFormat(arg0: SWIGTYPE_p_FMOD_SYSTEM, arg1: int, arg2: SWIGTYPE_p_FMOD_SPEAKERMODE, arg3: int) -> int: ...

  @staticmethod
  def FMOD_System_SetSpeakerPosition(arg0: SWIGTYPE_p_FMOD_SYSTEM, arg1: SWIGTYPE_p_FMOD_SPEAKER, arg2: float, arg3: float, arg4: SWIGTYPE_p_FMOD_BOOL) -> int: ...

  @staticmethod
  def FMOD_System_SetStreamBufferSize(arg0: SWIGTYPE_p_FMOD_SYSTEM, arg1: int, arg2: SWIGTYPE_p_FMOD_TIMEUNIT) -> int: ...

  @staticmethod
  def FMOD_System_SetUserData(arg0: SWIGTYPE_p_FMOD_SYSTEM, arg1: SWIGTYPE_p_void) -> int: ...

  @staticmethod
  def FMOD_System_SetVADMode(arg0: int) -> int: ...

  @staticmethod
  def FMOD_System_UnloadPlugin(arg0: SWIGTYPE_p_FMOD_SYSTEM, arg1: int) -> int: ...

  @staticmethod
  def FMOD_System_UnlockDSP(arg0: SWIGTYPE_p_FMOD_SYSTEM) -> int: ...

  @staticmethod
  def FMOD_System_Update() -> int: ...

  def __init__(self): ...


class javafmodJNI:

  @staticmethod
  def FMOD_ChannelGroup_AddDSP(arg0: int, arg1: int, arg2: int) -> int: ...

  @staticmethod
  def FMOD_ChannelGroup_AddFadePoint(arg0: int, arg1: BigInteger, arg2: float) -> int: ...

  @staticmethod
  def FMOD_ChannelGroup_AddGroup(arg0: int, arg1: int, arg2: int, arg3: int) -> int: ...

  @staticmethod
  def FMOD_ChannelGroup_Get3DAttributes(arg0: int, arg1: int, arg2: int) -> int: ...

  @staticmethod
  def FMOD_ChannelGroup_Get3DConeOrientation(arg0: int, arg1: int) -> int: ...

  @staticmethod
  def FMOD_ChannelGroup_Get3DConeSettings(arg0: int, arg1: int, arg2: int, arg3: int) -> int: ...

  @staticmethod
  def FMOD_ChannelGroup_Get3DCustomRolloff(arg0: int, arg1: int, arg2: int) -> int: ...

  @staticmethod
  def FMOD_ChannelGroup_Get3DDistanceFilter(arg0: int, arg1: int, arg2: int, arg3: int) -> int: ...

  @staticmethod
  def FMOD_ChannelGroup_Get3DDopplerLevel(arg0: int, arg1: int) -> int: ...

  @staticmethod
  def FMOD_ChannelGroup_Get3DLevel(arg0: int, arg1: int) -> int: ...

  @staticmethod
  def FMOD_ChannelGroup_Get3DMinMaxDistance(arg0: int, arg1: int, arg2: int) -> int: ...

  @staticmethod
  def FMOD_ChannelGroup_Get3DOcclusion(arg0: int, arg1: int, arg2: int) -> int: ...

  @staticmethod
  def FMOD_ChannelGroup_Get3DSpread(arg0: int, arg1: int) -> int: ...

  @staticmethod
  def FMOD_ChannelGroup_GetAudibility(arg0: int, arg1: int) -> int: ...

  @staticmethod
  def FMOD_ChannelGroup_GetChannel(arg0: int, arg1: int, arg2: int) -> int: ...

  @staticmethod
  def FMOD_ChannelGroup_GetDSP(arg0: int, arg1: int, arg2: int) -> int: ...

  @staticmethod
  def FMOD_ChannelGroup_GetDSPClock(arg0: int, arg1: int, arg2: int) -> int: ...

  @staticmethod
  def FMOD_ChannelGroup_GetDSPIndex(arg0: int, arg1: int, arg2: int) -> int: ...

  @staticmethod
  def FMOD_ChannelGroup_GetDelay(arg0: int, arg1: int, arg2: int, arg3: int) -> int: ...

  @staticmethod
  def FMOD_ChannelGroup_GetFadePoints(arg0: int, arg1: int, arg2: int, arg3: int) -> int: ...

  @staticmethod
  def FMOD_ChannelGroup_GetGroup(arg0: int, arg1: int, arg2: int) -> int: ...

  @staticmethod
  def FMOD_ChannelGroup_GetLowPassGain(arg0: int, arg1: int) -> int: ...

  @staticmethod
  def FMOD_ChannelGroup_GetMixMatrix(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int) -> int: ...

  @staticmethod
  def FMOD_ChannelGroup_GetMode(arg0: int, arg1: int) -> int: ...

  @staticmethod
  def FMOD_ChannelGroup_GetMute(arg0: int, arg1: int) -> int: ...

  @staticmethod
  def FMOD_ChannelGroup_GetName(arg0: int, arg1: str, arg2: int) -> int: ...

  @staticmethod
  def FMOD_ChannelGroup_GetNumChannels(arg0: int, arg1: int) -> int: ...

  @staticmethod
  def FMOD_ChannelGroup_GetNumDSPs(arg0: int) -> int: ...

  @staticmethod
  def FMOD_ChannelGroup_GetNumGroups(arg0: int, arg1: int) -> int: ...

  @staticmethod
  def FMOD_ChannelGroup_GetParentGroup(arg0: int, arg1: int) -> int: ...

  @staticmethod
  def FMOD_ChannelGroup_GetPaused(arg0: int, arg1: int) -> int: ...

  @staticmethod
  def FMOD_ChannelGroup_GetPitch(arg0: int, arg1: int) -> int: ...

  @staticmethod
  def FMOD_ChannelGroup_GetReverbProperties(arg0: int, arg1: int, arg2: int) -> int: ...

  @staticmethod
  def FMOD_ChannelGroup_GetSystemObject(arg0: int, arg1: int) -> int: ...

  @staticmethod
  def FMOD_ChannelGroup_GetUserData(arg0: int, arg1: int) -> int: ...

  @staticmethod
  def FMOD_ChannelGroup_GetVolume(arg0: int, arg1: int) -> int: ...

  @staticmethod
  def FMOD_ChannelGroup_GetVolumeRamp(arg0: int, arg1: int) -> int: ...

  @staticmethod
  def FMOD_ChannelGroup_IsPlaying(arg0: int, arg1: int) -> int: ...

  @staticmethod
  def FMOD_ChannelGroup_OverridePanDSP(arg0: int, arg1: int) -> int: ...

  @staticmethod
  def FMOD_ChannelGroup_Release(arg0: int) -> int: ...

  @staticmethod
  def FMOD_ChannelGroup_RemoveDSP(arg0: int, arg1: int) -> int: ...

  @staticmethod
  def FMOD_ChannelGroup_RemoveFadePoints(arg0: int, arg1: BigInteger, arg2: BigInteger) -> int: ...

  @staticmethod
  def FMOD_ChannelGroup_Set3DAttributes(arg0: int, arg1: int, arg2: int) -> int: ...

  @staticmethod
  def FMOD_ChannelGroup_Set3DConeOrientation(arg0: int, arg1: int) -> int: ...

  @staticmethod
  def FMOD_ChannelGroup_Set3DConeSettings(arg0: int, arg1: float, arg2: float, arg3: float) -> int: ...

  @staticmethod
  def FMOD_ChannelGroup_Set3DCustomRolloff(arg0: int, arg1: int, arg2: int) -> int: ...

  @staticmethod
  def FMOD_ChannelGroup_Set3DDistanceFilter(arg0: int, arg1: int, arg2: float, arg3: float) -> int: ...

  @staticmethod
  def FMOD_ChannelGroup_Set3DDopplerLevel(arg0: int, arg1: float) -> int: ...

  @staticmethod
  def FMOD_ChannelGroup_Set3DLevel(arg0: int, arg1: float) -> int: ...

  @staticmethod
  def FMOD_ChannelGroup_Set3DMinMaxDistance(arg0: int, arg1: float, arg2: float) -> int: ...

  @staticmethod
  def FMOD_ChannelGroup_Set3DOcclusion(arg0: int, arg1: float, arg2: float) -> int: ...

  @staticmethod
  def FMOD_ChannelGroup_Set3DSpread(arg0: int, arg1: float) -> int: ...

  @staticmethod
  def FMOD_ChannelGroup_SetCallback(arg0: int, arg1: int) -> int: ...

  @staticmethod
  def FMOD_ChannelGroup_SetDSPIndex(arg0: int, arg1: int, arg2: int) -> int: ...

  @staticmethod
  def FMOD_ChannelGroup_SetDelay(arg0: int, arg1: BigInteger, arg2: BigInteger, arg3: int) -> int: ...

  @staticmethod
  def FMOD_ChannelGroup_SetLowPassGain(arg0: int, arg1: float) -> int: ...

  @staticmethod
  def FMOD_ChannelGroup_SetMixLevelsInput(arg0: int, arg1: int, arg2: int) -> int: ...

  @staticmethod
  def FMOD_ChannelGroup_SetMixLevelsOutput(arg0: int, arg1: float, arg2: float, arg3: float, arg4: float, arg5: float, arg6: float, arg7: float, arg8: float) -> int: ...

  @staticmethod
  def FMOD_ChannelGroup_SetMixMatrix(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int) -> int: ...

  @staticmethod
  def FMOD_ChannelGroup_SetMode(arg0: int, arg1: int) -> int: ...

  @staticmethod
  def FMOD_ChannelGroup_SetMute(arg0: int, arg1: bool) -> int: ...

  @staticmethod
  def FMOD_ChannelGroup_SetPan(arg0: int, arg1: float) -> int: ...

  @staticmethod
  def FMOD_ChannelGroup_SetPaused(arg0: int, arg1: bool) -> int: ...

  @staticmethod
  def FMOD_ChannelGroup_SetPitch(arg0: int, arg1: float) -> int: ...

  @staticmethod
  def FMOD_ChannelGroup_SetReverbProperties(arg0: int, arg1: int, arg2: float) -> int: ...

  @staticmethod
  def FMOD_ChannelGroup_SetUserData(arg0: int, arg1: int) -> int: ...

  @staticmethod
  def FMOD_ChannelGroup_SetVolume(arg0: int, arg1: float) -> int: ...

  @staticmethod
  def FMOD_ChannelGroup_SetVolumeRamp(arg0: int, arg1: int) -> int: ...

  @staticmethod
  def FMOD_ChannelGroup_Stop(arg0: int) -> int: ...

  @staticmethod
  def FMOD_Channel_AddDSP(arg0: int, arg1: int, arg2: int) -> int: ...

  @staticmethod
  def FMOD_Channel_AddFadePoint(arg0: int, arg1: BigInteger, arg2: float) -> int: ...

  @staticmethod
  def FMOD_Channel_Get3DAttributes(arg0: int, arg1: int, arg2: int) -> int: ...

  @staticmethod
  def FMOD_Channel_Get3DConeOrientation(arg0: int, arg1: int) -> int: ...

  @staticmethod
  def FMOD_Channel_Get3DConeSettings(arg0: int, arg1: int, arg2: int, arg3: int) -> int: ...

  @staticmethod
  def FMOD_Channel_Get3DCustomRolloff(arg0: int, arg1: int, arg2: int) -> int: ...

  @staticmethod
  def FMOD_Channel_Get3DDistanceFilter(arg0: int, arg1: int, arg2: int, arg3: int) -> int: ...

  @staticmethod
  def FMOD_Channel_Get3DDopplerLevel(arg0: int, arg1: int) -> int: ...

  @staticmethod
  def FMOD_Channel_Get3DLevel(arg0: int, arg1: int) -> int: ...

  @staticmethod
  def FMOD_Channel_Get3DMinMaxDistance(arg0: int, arg1: int, arg2: int) -> int: ...

  @staticmethod
  def FMOD_Channel_Get3DOcclusion(arg0: int, arg1: int, arg2: int) -> int: ...

  @staticmethod
  def FMOD_Channel_Get3DSpread(arg0: int, arg1: int) -> int: ...

  @staticmethod
  def FMOD_Channel_GetAudibility(arg0: int) -> float: ...

  @staticmethod
  def FMOD_Channel_GetChannelGroup(arg0: int, arg1: int) -> int: ...

  @staticmethod
  def FMOD_Channel_GetCurrentSound(arg0: int, arg1: int) -> int: ...

  @staticmethod
  def FMOD_Channel_GetDSP(arg0: int, arg1: int, arg2: int) -> int: ...

  @staticmethod
  def FMOD_Channel_GetDSPClock(arg0: int, arg1: int, arg2: int) -> int: ...

  @staticmethod
  def FMOD_Channel_GetDSPIndex(arg0: int, arg1: int, arg2: int) -> int: ...

  @staticmethod
  def FMOD_Channel_GetDelay(arg0: int, arg1: int, arg2: int, arg3: int) -> int: ...

  @staticmethod
  def FMOD_Channel_GetFadePoints(arg0: int, arg1: int, arg2: int, arg3: int) -> int: ...

  @staticmethod
  def FMOD_Channel_GetFrequency(arg0: int, arg1: int) -> int: ...

  @staticmethod
  def FMOD_Channel_GetIndex(arg0: int, arg1: int) -> int: ...

  @staticmethod
  def FMOD_Channel_GetLoopCount(arg0: int, arg1: int) -> int: ...

  @staticmethod
  def FMOD_Channel_GetLoopPoints(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int) -> int: ...

  @staticmethod
  def FMOD_Channel_GetLowPassGain(arg0: int, arg1: int) -> int: ...

  @staticmethod
  def FMOD_Channel_GetMixMatrix(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int) -> int: ...

  @staticmethod
  def FMOD_Channel_GetMode(arg0: int, arg1: int) -> int: ...

  @staticmethod
  def FMOD_Channel_GetMute(arg0: int, arg1: int) -> int: ...

  @staticmethod
  def FMOD_Channel_GetNumDSPs(arg0: int) -> int: ...

  @staticmethod
  def FMOD_Channel_GetPaused(arg0: int, arg1: int) -> int: ...

  @staticmethod
  def FMOD_Channel_GetPitch(arg0: int, arg1: int) -> int: ...

  @staticmethod
  def FMOD_Channel_GetPosition(arg0: int, arg1: int) -> int: ...

  @staticmethod
  def FMOD_Channel_GetPriority(arg0: int, arg1: int) -> int: ...

  @staticmethod
  def FMOD_Channel_GetReverbProperties(arg0: int, arg1: int, arg2: int) -> int: ...

  @staticmethod
  def FMOD_Channel_GetSystemObject(arg0: int, arg1: int) -> int: ...

  @staticmethod
  def FMOD_Channel_GetUserData(arg0: int, arg1: int) -> int: ...

  @staticmethod
  def FMOD_Channel_GetVolume(arg0: int, arg1: int) -> int: ...

  @staticmethod
  def FMOD_Channel_GetVolumeRamp(arg0: int, arg1: int) -> int: ...

  @staticmethod
  def FMOD_Channel_IsPlaying(arg0: int) -> bool: ...

  @staticmethod
  def FMOD_Channel_IsVirtual(arg0: int) -> bool: ...

  @staticmethod
  def FMOD_Channel_OverridePanDSP(arg0: int, arg1: int) -> int: ...

  @staticmethod
  def FMOD_Channel_RemoveDSP(arg0: int, arg1: int) -> int: ...

  @staticmethod
  def FMOD_Channel_RemoveFadePoints(arg0: int, arg1: BigInteger, arg2: BigInteger) -> int: ...

  @staticmethod
  def FMOD_Channel_Set3DAttributes(arg0: int, arg1: float, arg2: float, arg3: float, arg4: float, arg5: float, arg6: float) -> int: ...

  @staticmethod
  def FMOD_Channel_Set3DConeOrientation(arg0: int, arg1: int) -> int: ...

  @staticmethod
  def FMOD_Channel_Set3DConeSettings(arg0: int, arg1: float, arg2: float, arg3: float) -> int: ...

  @staticmethod
  def FMOD_Channel_Set3DCustomRolloff(arg0: int, arg1: int, arg2: int) -> int: ...

  @staticmethod
  def FMOD_Channel_Set3DDistanceFilter(arg0: int, arg1: int, arg2: float, arg3: float) -> int: ...

  @staticmethod
  def FMOD_Channel_Set3DDopplerLevel(arg0: int, arg1: float) -> int: ...

  @staticmethod
  def FMOD_Channel_Set3DLevel(arg0: int, arg1: float) -> int: ...

  @staticmethod
  def FMOD_Channel_Set3DMinMaxDistance(arg0: int, arg1: float, arg2: float) -> int: ...

  @staticmethod
  def FMOD_Channel_Set3DOcclusion(arg0: int, arg1: float, arg2: float) -> int: ...

  @staticmethod
  def FMOD_Channel_Set3DSpread(arg0: int, arg1: float) -> int: ...

  @staticmethod
  def FMOD_Channel_SetCallback(arg0: int, arg1: int) -> int: ...

  @staticmethod
  def FMOD_Channel_SetChannelGroup(arg0: int, arg1: int) -> int: ...

  @staticmethod
  def FMOD_Channel_SetDSPIndex(arg0: int, arg1: int, arg2: int) -> int: ...

  @staticmethod
  def FMOD_Channel_SetDelay(arg0: int, arg1: BigInteger, arg2: BigInteger, arg3: int) -> int: ...

  @staticmethod
  def FMOD_Channel_SetFrequency(arg0: int, arg1: float) -> int: ...

  @staticmethod
  def FMOD_Channel_SetLoopCount(arg0: int, arg1: int) -> int: ...

  @staticmethod
  def FMOD_Channel_SetLoopPoints(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int) -> int: ...

  @staticmethod
  def FMOD_Channel_SetLowPassGain(arg0: int, arg1: float) -> int: ...

  @staticmethod
  def FMOD_Channel_SetMixLevelsInput(arg0: int, arg1: int, arg2: int) -> int: ...

  @staticmethod
  def FMOD_Channel_SetMixLevelsOutput(arg0: int, arg1: float, arg2: float, arg3: float, arg4: float, arg5: float, arg6: float, arg7: float, arg8: float) -> int: ...

  @staticmethod
  def FMOD_Channel_SetMixMatrix(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int) -> int: ...

  @staticmethod
  def FMOD_Channel_SetMode(arg0: int, arg1: int) -> int: ...

  @staticmethod
  def FMOD_Channel_SetMute(arg0: int, arg1: int) -> int: ...

  @staticmethod
  def FMOD_Channel_SetPan(arg0: int, arg1: float) -> int: ...

  @staticmethod
  def FMOD_Channel_SetPaused(arg0: int, arg1: int) -> int: ...

  @staticmethod
  def FMOD_Channel_SetPitch(arg0: int, arg1: float) -> int: ...

  @staticmethod
  def FMOD_Channel_SetPosition(arg0: int, arg1: int) -> int: ...

  @staticmethod
  def FMOD_Channel_SetPriority(arg0: int, arg1: int) -> int: ...

  @staticmethod
  def FMOD_Channel_SetReverbProperties(arg0: int, arg1: int, arg2: float) -> int: ...

  @staticmethod
  def FMOD_Channel_SetUserData(arg0: int, arg1: int) -> int: ...

  @staticmethod
  def FMOD_Channel_SetVolume(arg0: int, arg1: float) -> int: ...

  @staticmethod
  def FMOD_Channel_SetVolumeRamp(arg0: int, arg1: int) -> int: ...

  @staticmethod
  def FMOD_Channel_Stop(arg0: int) -> int: ...

  @staticmethod
  def FMOD_DSPConnection_GetInput(arg0: int, arg1: int) -> int: ...

  @staticmethod
  def FMOD_DSPConnection_GetMix(arg0: int, arg1: int) -> int: ...

  @staticmethod
  def FMOD_DSPConnection_GetMixMatrix(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int) -> int: ...

  @staticmethod
  def FMOD_DSPConnection_GetOutput(arg0: int, arg1: int) -> int: ...

  @staticmethod
  def FMOD_DSPConnection_GetType(arg0: int, arg1: int) -> int: ...

  @staticmethod
  def FMOD_DSPConnection_GetUserData(arg0: int, arg1: int) -> int: ...

  @staticmethod
  def FMOD_DSPConnection_SetMix(arg0: int, arg1: float) -> int: ...

  @staticmethod
  def FMOD_DSPConnection_SetMixMatrix(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int) -> int: ...

  @staticmethod
  def FMOD_DSPConnection_SetUserData(arg0: int, arg1: int) -> int: ...

  @staticmethod
  def FMOD_DSP_AddInput(arg0: int, arg1: int, arg2: int, arg3: int) -> int: ...

  @staticmethod
  def FMOD_DSP_DisconnectAll(arg0: int, arg1: int, arg2: int) -> int: ...

  @staticmethod
  def FMOD_DSP_DisconnectFrom(arg0: int, arg1: int, arg2: int) -> int: ...

  @staticmethod
  def FMOD_DSP_GetActive(arg0: int, arg1: int) -> int: ...

  @staticmethod
  def FMOD_DSP_GetBypass(arg0: int, arg1: int) -> int: ...

  @staticmethod
  def FMOD_DSP_GetChannelFormat(arg0: int, arg1: int, arg2: int, arg3: int) -> int: ...

  @staticmethod
  def FMOD_DSP_GetDataParameterIndex(arg0: int, arg1: int, arg2: int) -> int: ...

  @staticmethod
  def FMOD_DSP_GetIdle(arg0: int, arg1: int) -> int: ...

  @staticmethod
  def FMOD_DSP_GetInfo(arg0: int, arg1: str, arg2: int, arg3: int, arg4: int, arg5: int) -> int: ...

  @staticmethod
  def FMOD_DSP_GetInput(arg0: int, arg1: int, arg2: int, arg3: int) -> int: ...

  @staticmethod
  def FMOD_DSP_GetMeteringEnabled(arg0: int, arg1: int, arg2: int) -> int: ...

  @staticmethod
  def FMOD_DSP_GetMeteringInfo(arg0: int, arg1: int, arg2: int) -> int: ...

  @staticmethod
  def FMOD_DSP_GetNumInputs(arg0: int, arg1: int) -> int: ...

  @staticmethod
  def FMOD_DSP_GetNumOutputs(arg0: int, arg1: int) -> int: ...

  @staticmethod
  def FMOD_DSP_GetNumParameters(arg0: int, arg1: int) -> int: ...

  @staticmethod
  def FMOD_DSP_GetOutput(arg0: int, arg1: int, arg2: int, arg3: int) -> int: ...

  @staticmethod
  def FMOD_DSP_GetOutputChannelFormat(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int) -> int: ...

  @staticmethod
  def FMOD_DSP_GetParameterBool(arg0: int, arg1: int, arg2: int, arg3: str, arg4: int) -> int: ...

  @staticmethod
  def FMOD_DSP_GetParameterData(arg0: int, arg1: int, arg2: int, arg3: int, arg4: str, arg5: int) -> int: ...

  @staticmethod
  def FMOD_DSP_GetParameterFloat(arg0: int, arg1: int, arg2: int, arg3: str, arg4: int) -> int: ...

  @staticmethod
  def FMOD_DSP_GetParameterInfo(arg0: int, arg1: int, arg2: int) -> int: ...

  @staticmethod
  def FMOD_DSP_GetParameterInt(arg0: int, arg1: int, arg2: int, arg3: str, arg4: int) -> int: ...

  @staticmethod
  def FMOD_DSP_GetSystemObject(arg0: int, arg1: int) -> int: ...

  @staticmethod
  def FMOD_DSP_GetType(arg0: int, arg1: int) -> int: ...

  @staticmethod
  def FMOD_DSP_GetUserData(arg0: int, arg1: int) -> int: ...

  @staticmethod
  def FMOD_DSP_GetWetDryMix(arg0: int, arg1: int, arg2: int, arg3: int) -> int: ...

  @staticmethod
  def FMOD_DSP_Release(arg0: int) -> int: ...

  @staticmethod
  def FMOD_DSP_Reset(arg0: int) -> int: ...

  @staticmethod
  def FMOD_DSP_SetActive(arg0: int, arg1: int) -> int: ...

  @staticmethod
  def FMOD_DSP_SetBypass(arg0: int, arg1: int) -> int: ...

  @staticmethod
  def FMOD_DSP_SetChannelFormat(arg0: int, arg1: int, arg2: int, arg3: int) -> int: ...

  @staticmethod
  def FMOD_DSP_SetMeteringEnabled(arg0: int, arg1: int, arg2: int) -> int: ...

  @staticmethod
  def FMOD_DSP_SetParameterBool(arg0: int, arg1: int, arg2: int) -> int: ...

  @staticmethod
  def FMOD_DSP_SetParameterData(arg0: int, arg1: int, arg2: int, arg3: int) -> int: ...

  @staticmethod
  def FMOD_DSP_SetParameterFloat(arg0: int, arg1: int, arg2: float) -> int: ...

  @staticmethod
  def FMOD_DSP_SetParameterInt(arg0: int, arg1: int, arg2: int) -> int: ...

  @staticmethod
  def FMOD_DSP_SetUserData(arg0: int, arg1: int) -> int: ...

  @staticmethod
  def FMOD_DSP_SetWetDryMix(arg0: int, arg1: float, arg2: float, arg3: float) -> int: ...

  @staticmethod
  def FMOD_DSP_ShowConfigDialog(arg0: int, arg1: int, arg2: int) -> int: ...

  @staticmethod
  def FMOD_Debug_Initialize(arg0: int, arg1: int, arg2: int, arg3: str) -> int: ...

  @staticmethod
  def FMOD_File_GetDiskBusy(arg0: int) -> int: ...

  @staticmethod
  def FMOD_File_SetDiskBusy(arg0: int) -> int: ...

  @staticmethod
  def FMOD_Geometry_AddPolygon(arg0: int, arg1: float, arg2: float, arg3: int, arg4: int, arg5: int, arg6: int) -> int: ...

  @staticmethod
  def FMOD_Geometry_GetActive(arg0: int, arg1: int) -> int: ...

  @staticmethod
  def FMOD_Geometry_GetMaxPolygons(arg0: int, arg1: int, arg2: int) -> int: ...

  @staticmethod
  def FMOD_Geometry_GetNumPolygons(arg0: int, arg1: int) -> int: ...

  @staticmethod
  def FMOD_Geometry_GetPolygonAttributes(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int) -> int: ...

  @staticmethod
  def FMOD_Geometry_GetPolygonNumVertices(arg0: int, arg1: int, arg2: int) -> int: ...

  @staticmethod
  def FMOD_Geometry_GetPolygonVertex(arg0: int, arg1: int, arg2: int, arg3: int) -> int: ...

  @staticmethod
  def FMOD_Geometry_GetPosition(arg0: int, arg1: int) -> int: ...

  @staticmethod
  def FMOD_Geometry_GetRotation(arg0: int, arg1: int, arg2: int) -> int: ...

  @staticmethod
  def FMOD_Geometry_GetScale(arg0: int, arg1: int) -> int: ...

  @staticmethod
  def FMOD_Geometry_GetUserData(arg0: int, arg1: int) -> int: ...

  @staticmethod
  def FMOD_Geometry_Release(arg0: int) -> int: ...

  @staticmethod
  def FMOD_Geometry_Save(arg0: int, arg1: int, arg2: int) -> int: ...

  @staticmethod
  def FMOD_Geometry_SetActive(arg0: int, arg1: int) -> int: ...

  @staticmethod
  def FMOD_Geometry_SetPolygonAttributes(arg0: int, arg1: int, arg2: float, arg3: float, arg4: int) -> int: ...

  @staticmethod
  def FMOD_Geometry_SetPolygonVertex(arg0: int, arg1: int, arg2: int, arg3: int) -> int: ...

  @staticmethod
  def FMOD_Geometry_SetPosition(arg0: int, arg1: int) -> int: ...

  @staticmethod
  def FMOD_Geometry_SetRotation(arg0: int, arg1: int, arg2: int) -> int: ...

  @staticmethod
  def FMOD_Geometry_SetScale(arg0: int, arg1: int) -> int: ...

  @staticmethod
  def FMOD_Geometry_SetUserData(arg0: int, arg1: int) -> int: ...

  @staticmethod
  def FMOD_Memory_GetStats(arg0: int, arg1: int, arg2: int) -> int: ...

  @staticmethod
  def FMOD_Memory_Initialize(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int) -> int: ...

  @staticmethod
  def FMOD_RAWPlaySound_Release(arg0: int) -> int: ...

  @staticmethod
  def FMOD_RecordSound_Release(arg0: int) -> int: ...

  @staticmethod
  def FMOD_Reverb3D_Get3DAttributes(arg0: int, arg1: int, arg2: int, arg3: int) -> int: ...

  @staticmethod
  def FMOD_Reverb3D_GetActive(arg0: int, arg1: int) -> int: ...

  @staticmethod
  def FMOD_Reverb3D_GetProperties(arg0: int, arg1: int) -> int: ...

  @staticmethod
  def FMOD_Reverb3D_GetUserData(arg0: int, arg1: int) -> int: ...

  @staticmethod
  def FMOD_Reverb3D_Release(arg0: int) -> int: ...

  @staticmethod
  def FMOD_Reverb3D_Set3DAttributes(arg0: int, arg1: int, arg2: float, arg3: float) -> int: ...

  @staticmethod
  def FMOD_Reverb3D_SetActive(arg0: int, arg1: int) -> int: ...

  @staticmethod
  def FMOD_Reverb3D_SetProperties(arg0: int, arg1: int) -> int: ...

  @staticmethod
  def FMOD_Reverb3D_SetUserData(arg0: int, arg1: int) -> int: ...

  @staticmethod
  def FMOD_SoundGroup_GetMaxAudible(arg0: int, arg1: int) -> int: ...

  @staticmethod
  def FMOD_SoundGroup_GetMaxAudibleBehavior(arg0: int, arg1: int) -> int: ...

  @staticmethod
  def FMOD_SoundGroup_GetMuteFadeSpeed(arg0: int, arg1: int) -> int: ...

  @staticmethod
  def FMOD_SoundGroup_GetName(arg0: int, arg1: str, arg2: int) -> int: ...

  @staticmethod
  def FMOD_SoundGroup_GetNumPlaying(arg0: int, arg1: int) -> int: ...

  @staticmethod
  def FMOD_SoundGroup_GetNumSounds(arg0: int, arg1: int) -> int: ...

  @staticmethod
  def FMOD_SoundGroup_GetSound(arg0: int, arg1: int, arg2: int) -> int: ...

  @staticmethod
  def FMOD_SoundGroup_GetSystemObject(arg0: int, arg1: int) -> int: ...

  @staticmethod
  def FMOD_SoundGroup_GetUserData(arg0: int, arg1: int) -> int: ...

  @staticmethod
  def FMOD_SoundGroup_GetVolume(arg0: int, arg1: int) -> int: ...

  @staticmethod
  def FMOD_SoundGroup_Release(arg0: int) -> int: ...

  @staticmethod
  def FMOD_SoundGroup_SetMaxAudible(arg0: int, arg1: int) -> int: ...

  @staticmethod
  def FMOD_SoundGroup_SetMaxAudibleBehavior(arg0: int, arg1: int) -> int: ...

  @staticmethod
  def FMOD_SoundGroup_SetMuteFadeSpeed(arg0: int, arg1: float) -> int: ...

  @staticmethod
  def FMOD_SoundGroup_SetUserData(arg0: int, arg1: int) -> int: ...

  @staticmethod
  def FMOD_SoundGroup_SetVolume(arg0: int, arg1: float) -> int: ...

  @staticmethod
  def FMOD_SoundGroup_Stop(arg0: int) -> int: ...

  @staticmethod
  def FMOD_Sound_AddSyncPoint(arg0: int, arg1: int, arg2: int, arg3: str, arg4: int) -> int: ...

  @staticmethod
  def FMOD_Sound_DeleteSyncPoint(arg0: int, arg1: int) -> int: ...

  @staticmethod
  def FMOD_Sound_Get3DConeSettings(arg0: int, arg1: int, arg2: int, arg3: int) -> int: ...

  @staticmethod
  def FMOD_Sound_Get3DCustomRolloff(arg0: int, arg1: int, arg2: int) -> int: ...

  @staticmethod
  def FMOD_Sound_Get3DMinMaxDistance(arg0: int, arg1: int, arg2: int) -> int: ...

  @staticmethod
  def FMOD_Sound_GetData(arg0: int, arg1: list[int], arg2: Long, arg3: Long, arg4: Long) -> int: ...

  @staticmethod
  def FMOD_Sound_GetDefaults(arg0: int, arg1: int, arg2: int) -> int: ...

  @staticmethod
  def FMOD_Sound_GetFormat(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int) -> int: ...

  @staticmethod
  def FMOD_Sound_GetLength(arg0: int, arg1: int) -> int: ...

  @staticmethod
  def FMOD_Sound_GetLoopCount(arg0: int, arg1: int) -> int: ...

  @staticmethod
  def FMOD_Sound_GetLoopPoints(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int) -> int: ...

  @staticmethod
  def FMOD_Sound_GetMode(arg0: int, arg1: int) -> int: ...

  @staticmethod
  def FMOD_Sound_GetMusicChannelVolume(arg0: int, arg1: int, arg2: int) -> int: ...

  @staticmethod
  def FMOD_Sound_GetMusicNumChannels(arg0: int, arg1: int) -> int: ...

  @staticmethod
  def FMOD_Sound_GetMusicSpeed(arg0: int, arg1: int) -> int: ...

  @staticmethod
  def FMOD_Sound_GetName(arg0: int, arg1: str, arg2: int) -> int: ...

  @staticmethod
  def FMOD_Sound_GetNumSubSounds(arg0: int, arg1: int) -> int: ...

  @staticmethod
  def FMOD_Sound_GetNumSyncPoints(arg0: int, arg1: int) -> int: ...

  @staticmethod
  def FMOD_Sound_GetNumTags(arg0: int, arg1: int, arg2: int) -> int: ...

  @staticmethod
  def FMOD_Sound_GetOpenState(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int) -> int: ...

  @staticmethod
  def FMOD_Sound_GetSoundGroup(arg0: int, arg1: int) -> int: ...

  @staticmethod
  def FMOD_Sound_GetSubSound(arg0: int, arg1: int, arg2: int) -> int: ...

  @staticmethod
  def FMOD_Sound_GetSubSoundParent(arg0: int, arg1: int) -> int: ...

  @staticmethod
  def FMOD_Sound_GetSyncPoint(arg0: int, arg1: int, arg2: int) -> int: ...

  @staticmethod
  def FMOD_Sound_GetSyncPointInfo(arg0: int, arg1: int, arg2: str, arg3: int, arg4: int, arg5: int) -> int: ...

  @staticmethod
  def FMOD_Sound_GetSystemObject(arg0: int, arg1: int) -> int: ...

  @staticmethod
  def FMOD_Sound_GetTag(arg0: int, arg1: str, arg2: int, arg3: int) -> int: ...

  @staticmethod
  def FMOD_Sound_GetUserData(arg0: int, arg1: int) -> int: ...

  @staticmethod
  def FMOD_Sound_Lock(arg0: int, arg1: int, arg2: int, arg3: list[int], arg4: list[int], arg5: Long, arg6: Long, arg7: list[int]) -> int: ...

  @staticmethod
  def FMOD_Sound_ReadData(arg0: int, arg1: int, arg2: int, arg3: int) -> int: ...

  @staticmethod
  def FMOD_Sound_Release(arg0: int) -> int: ...

  @staticmethod
  def FMOD_Sound_SeekData(arg0: int, arg1: int) -> int: ...

  @staticmethod
  def FMOD_Sound_Set3DConeSettings(arg0: int, arg1: float, arg2: float, arg3: float) -> int: ...

  @staticmethod
  def FMOD_Sound_Set3DCustomRolloff(arg0: int, arg1: int, arg2: int) -> int: ...

  @staticmethod
  def FMOD_Sound_Set3DMinMaxDistance(arg0: int, arg1: float, arg2: float) -> int: ...

  @staticmethod
  def FMOD_Sound_SetDefaults(arg0: int, arg1: float, arg2: int) -> int: ...

  @staticmethod
  def FMOD_Sound_SetLoopCount(arg0: int, arg1: int) -> int: ...

  @staticmethod
  def FMOD_Sound_SetLoopPoints(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int) -> int: ...

  @staticmethod
  def FMOD_Sound_SetMode(arg0: int, arg1: int) -> int: ...

  @staticmethod
  def FMOD_Sound_SetMusicChannelVolume(arg0: int, arg1: int, arg2: float) -> int: ...

  @staticmethod
  def FMOD_Sound_SetMusicSpeed(arg0: int, arg1: float) -> int: ...

  @staticmethod
  def FMOD_Sound_SetSoundGroup(arg0: int, arg1: int) -> int: ...

  @staticmethod
  def FMOD_Sound_SetSubSound(arg0: int, arg1: int, arg2: int) -> int: ...

  @staticmethod
  def FMOD_Sound_SetUserData(arg0: int, arg1: int) -> int: ...

  @staticmethod
  def FMOD_Sound_Unlock(arg0: int, arg1: list[int]) -> int: ...

  @staticmethod
  def FMOD_Studio_Bank_GetEventCount(arg0: int) -> int: ...

  @staticmethod
  def FMOD_Studio_Bank_GetEventList(arg0: int, arg1: list[int]) -> int: ...

  @staticmethod
  def FMOD_Studio_Bus_GetMute(arg0: int) -> bool: ...

  @staticmethod
  def FMOD_Studio_Bus_GetPaused(arg0: int) -> bool: ...

  @staticmethod
  def FMOD_Studio_Bus_GetVolume(arg0: int) -> float: ...

  @staticmethod
  def FMOD_Studio_Bus_SetMute(arg0: int, arg1: bool) -> int: ...

  @staticmethod
  def FMOD_Studio_Bus_SetPaused(arg0: int, arg1: bool) -> int: ...

  @staticmethod
  def FMOD_Studio_Bus_SetVolume(arg0: int, arg1: float) -> int: ...

  @staticmethod
  def FMOD_Studio_Bus_StopAllEvents(arg0: int, arg1: bool) -> int: ...

  @staticmethod
  def FMOD_Studio_Create() -> int: ...

  @staticmethod
  def FMOD_Studio_CreateEventInstance(arg0: int) -> int: ...

  @staticmethod
  def FMOD_Studio_EventDescription_GetID(arg0: int) -> int: ...

  @staticmethod
  def FMOD_Studio_EventDescription_GetInstanceCount(arg0: int) -> int: ...

  @staticmethod
  def FMOD_Studio_EventDescription_GetInstanceList(arg0: int, arg1: list[int]) -> int: ...

  @staticmethod
  def FMOD_Studio_EventDescription_GetLength(arg0: int) -> int: ...

  @staticmethod
  def FMOD_Studio_EventDescription_GetParameterDescriptionByIndex(arg0: int, arg1: int) -> int: ...

  @staticmethod
  def FMOD_Studio_EventDescription_GetParameterDescriptionCount(arg0: int) -> int: ...

  @staticmethod
  def FMOD_Studio_EventDescription_GetPath(arg0: int) -> str: ...

  @staticmethod
  def FMOD_Studio_EventDescription_HasSustainPoint(arg0: int) -> bool: ...

  @staticmethod
  def FMOD_Studio_EventInstance3D(arg0: int, arg1: float, arg2: float, arg3: float) -> int: ...

  @staticmethod
  def FMOD_Studio_EventInstance_GetPaused(arg0: int) -> bool: ...

  @staticmethod
  def FMOD_Studio_EventInstance_GetVolume(arg0: int) -> float: ...

  @staticmethod
  def FMOD_Studio_EventInstance_KeyOff(arg0: int) -> int: ...

  @staticmethod
  def FMOD_Studio_EventInstance_SetCallback(arg0: int, arg1: FMOD_STUDIO_EVENT_CALLBACK, arg2: int) -> int: ...

  @staticmethod
  def FMOD_Studio_EventInstance_SetParameterByID(arg0: int, arg1: int, arg2: float, arg3: bool) -> int: ...

  @staticmethod
  def FMOD_Studio_EventInstance_SetParameterByName(arg0: int, arg1: str, arg2: float) -> int: ...

  @staticmethod
  def FMOD_Studio_EventInstance_SetPaused(arg0: int, arg1: bool) -> None: ...

  @staticmethod
  def FMOD_Studio_EventInstance_SetProperty(arg0: int, arg1: int, arg2: float) -> None: ...

  @staticmethod
  def FMOD_Studio_EventInstance_SetTimelinePosition(arg0: int, arg1: int) -> int: ...

  @staticmethod
  def FMOD_Studio_EventInstance_SetVolume(arg0: int, arg1: float) -> int: ...

  @staticmethod
  def FMOD_Studio_EventInstance_Stop(arg0: int, arg1: bool) -> int: ...

  @staticmethod
  def FMOD_Studio_GetEvent(arg0: str) -> int: ...

  @staticmethod
  def FMOD_Studio_GetParameter(arg0: int, arg1: str) -> float: ...

  @staticmethod
  def FMOD_Studio_GetPlaybackState(arg0: int) -> int: ...

  @staticmethod
  def FMOD_Studio_GetTimelinePosition(arg0: int) -> int: ...

  @staticmethod
  def FMOD_Studio_Listener3D(arg0: int, arg1: float, arg2: float, arg3: float, arg4: float, arg5: float, arg6: float, arg7: float, arg8: float, arg9: float, arg10: float, arg11: float, arg12: float) -> None: ...

  @staticmethod
  def FMOD_Studio_LoadBankFile(arg0: str) -> int: ...

  @staticmethod
  def FMOD_Studio_LoadEventSampleData(arg0: int) -> int: ...

  @staticmethod
  def FMOD_Studio_LoadSampleData(arg0: int) -> int: ...

  @staticmethod
  def FMOD_Studio_ParameterDescription_Free(arg0: int) -> None: ...

  @staticmethod
  def FMOD_Studio_ParameterDescription_GetFlags(arg0: int) -> int: ...

  @staticmethod
  def FMOD_Studio_ParameterDescription_GetID(arg0: int) -> int: ...

  @staticmethod
  def FMOD_Studio_ParameterDescription_GetName(arg0: int) -> str: ...

  @staticmethod
  def FMOD_Studio_ReleaseEventInstance(arg0: int) -> int: ...

  @staticmethod
  def FMOD_Studio_SetNumListeners(arg0: int) -> int: ...

  @staticmethod
  def FMOD_Studio_StartEvent(arg0: int) -> None: ...

  @staticmethod
  def FMOD_Studio_System_FlushCommands() -> None: ...

  @staticmethod
  def FMOD_Studio_System_GetBankCount() -> int: ...

  @staticmethod
  def FMOD_Studio_System_GetBankList(arg0: list[int]) -> int: ...

  @staticmethod
  def FMOD_Studio_System_GetBus(arg0: str) -> int: ...

  @staticmethod
  def FMOD_Studio_System_GetParameterDescriptionCount() -> int: ...

  @staticmethod
  def FMOD_Studio_System_GetParameterDescriptionList(arg0: list[int]) -> int: ...

  @staticmethod
  def FMOD_Studio_System_SetParameterByID(arg0: int, arg1: float, arg2: bool) -> int: ...

  @staticmethod
  def FMOD_Studio_System_SetParameterByName(arg0: str, arg1: float, arg2: bool) -> int: ...

  @staticmethod
  def FMOD_System_AttachChannelGroupToPort(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int) -> int: ...

  @staticmethod
  def FMOD_System_AttachFileSystem(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int) -> int: ...

  @staticmethod
  def FMOD_System_Close(arg0: int) -> int: ...

  @staticmethod
  def FMOD_System_Create() -> int: ...

  @staticmethod
  def FMOD_System_CreateChannelGroup(arg0: str) -> int: ...

  @staticmethod
  def FMOD_System_CreateDSP(arg0: int, arg1: int, arg2: int) -> int: ...

  @staticmethod
  def FMOD_System_CreateDSPByPlugin(arg0: int, arg1: int, arg2: int) -> int: ...

  @staticmethod
  def FMOD_System_CreateDSPByType(arg0: int) -> int: ...

  @staticmethod
  def FMOD_System_CreateGeometry(arg0: int, arg1: int, arg2: int, arg3: int) -> int: ...

  @staticmethod
  def FMOD_System_CreateRAWPlaySound(arg0: int, arg1: int, arg2: int) -> int: ...

  @staticmethod
  def FMOD_System_CreateRecordSound(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int) -> int: ...

  @staticmethod
  def FMOD_System_CreateReverb3D(arg0: int, arg1: int) -> int: ...

  @staticmethod
  def FMOD_System_CreateSound(arg0: str, arg1: int) -> int: ...

  @staticmethod
  def FMOD_System_CreateSoundGroup(arg0: int, arg1: str, arg2: int) -> int: ...

  @staticmethod
  def FMOD_System_CreateStream(arg0: int, arg1: str, arg2: int, arg3: int, arg4: int) -> int: ...

  @staticmethod
  def FMOD_System_DetachChannelGroupFromPort(arg0: int, arg1: int) -> int: ...

  @staticmethod
  def FMOD_System_Get3DListenerAttributes(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int) -> int: ...

  @staticmethod
  def FMOD_System_Get3DNumListeners(arg0: int, arg1: int) -> int: ...

  @staticmethod
  def FMOD_System_Get3DSettings(arg0: int, arg1: int, arg2: int) -> int: ...

  @staticmethod
  def FMOD_System_GetAdvancedSettings(arg0: int, arg1: int) -> int: ...

  @staticmethod
  def FMOD_System_GetCPUUsage(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int) -> int: ...

  @staticmethod
  def FMOD_System_GetChannel(arg0: int, arg1: int, arg2: int) -> int: ...

  @staticmethod
  def FMOD_System_GetChannelsPlaying(arg0: int, arg1: int) -> int: ...

  @staticmethod
  def FMOD_System_GetDSPBufferSize(arg0: int, arg1: int, arg2: int) -> int: ...

  @staticmethod
  def FMOD_System_GetDSPInfoByPlugin(arg0: int, arg1: int, arg2: int) -> int: ...

  @staticmethod
  def FMOD_System_GetDriver(arg0: int, arg1: int) -> int: ...

  @staticmethod
  def FMOD_System_GetDriverInfo(arg0: int, arg1: int, arg2: str, arg3: int, arg4: int, arg5: int, arg6: int, arg7: int) -> int: ...

  @staticmethod
  def FMOD_System_GetGeometryOcclusion(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int) -> int: ...

  @staticmethod
  def FMOD_System_GetGeometrySettings(arg0: int, arg1: int) -> int: ...

  @staticmethod
  def FMOD_System_GetMasterChannelGroup() -> int: ...

  @staticmethod
  def FMOD_System_GetMasterSoundGroup(arg0: int, arg1: int) -> int: ...

  @staticmethod
  def FMOD_System_GetNetworkProxy(arg0: int, arg1: str, arg2: int) -> int: ...

  @staticmethod
  def FMOD_System_GetNetworkTimeout(arg0: int, arg1: int) -> int: ...

  @staticmethod
  def FMOD_System_GetNumDrivers(arg0: int, arg1: int) -> int: ...

  @staticmethod
  def FMOD_System_GetNumPlugins(arg0: int, arg1: int, arg2: int) -> int: ...

  @staticmethod
  def FMOD_System_GetOutput(arg0: int, arg1: int) -> int: ...

  @staticmethod
  def FMOD_System_GetOutputByPlugin(arg0: int, arg1: int) -> int: ...

  @staticmethod
  def FMOD_System_GetOutputHandle(arg0: int, arg1: int) -> int: ...

  @staticmethod
  def FMOD_System_GetPluginHandle(arg0: int, arg1: int, arg2: int, arg3: int) -> int: ...

  @staticmethod
  def FMOD_System_GetPluginInfo(arg0: int, arg1: int, arg2: int, arg3: str, arg4: int, arg5: int) -> int: ...

  @staticmethod
  def FMOD_System_GetRecordDriverInfo(arg0: int, arg1: FMOD_DriverInfo) -> int: ...

  @staticmethod
  def FMOD_System_GetRecordNumDrivers() -> int: ...

  @staticmethod
  def FMOD_System_GetRecordPosition(arg0: int, arg1: Long) -> int: ...

  @staticmethod
  def FMOD_System_GetReverbProperties(arg0: int, arg1: int, arg2: int) -> int: ...

  @staticmethod
  def FMOD_System_GetSoftwareChannels(arg0: int, arg1: int) -> int: ...

  @staticmethod
  def FMOD_System_GetSoftwareFormat(arg0: int, arg1: int, arg2: int, arg3: int) -> int: ...

  @staticmethod
  def FMOD_System_GetSpeakerPosition(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int) -> int: ...

  @staticmethod
  def FMOD_System_GetStreamBufferSize(arg0: int, arg1: int, arg2: int) -> int: ...

  @staticmethod
  def FMOD_System_GetUserData(arg0: int, arg1: int) -> int: ...

  @staticmethod
  def FMOD_System_GetVersion(arg0: int, arg1: int) -> int: ...

  @staticmethod
  def FMOD_System_Init(arg0: int, arg1: int, arg2: int) -> int: ...

  @staticmethod
  def FMOD_System_IsRecording(arg0: int, arg1: int, arg2: int) -> int: ...

  @staticmethod
  def FMOD_System_LoadGeometry(arg0: int, arg1: int, arg2: int, arg3: int) -> int: ...

  @staticmethod
  def FMOD_System_LoadPlugin(arg0: int, arg1: str, arg2: int, arg3: int) -> int: ...

  @staticmethod
  def FMOD_System_LockDSP(arg0: int) -> int: ...

  @staticmethod
  def FMOD_System_MixerResume(arg0: int) -> int: ...

  @staticmethod
  def FMOD_System_MixerSuspend(arg0: int) -> int: ...

  @staticmethod
  def FMOD_System_PlayDSP() -> int: ...

  @staticmethod
  def FMOD_System_PlaySound(arg0: int, arg1: int) -> int: ...

  @staticmethod
  def FMOD_System_RAWPlayData(arg0: int, arg1: list[int], arg2: int) -> int: ...

  @staticmethod
  def FMOD_System_RecordStart(arg0: int, arg1: int, arg2: bool) -> int: ...

  @staticmethod
  def FMOD_System_RecordStop(arg0: int) -> int: ...

  @staticmethod
  def FMOD_System_RegisterCodec(arg0: int, arg1: int, arg2: int, arg3: int) -> int: ...

  @staticmethod
  def FMOD_System_RegisterDSP(arg0: int, arg1: int, arg2: int) -> int: ...

  @staticmethod
  def FMOD_System_Release(arg0: int) -> int: ...

  @staticmethod
  def FMOD_System_Set3DListenerAttributes(arg0: int, arg1: float, arg2: float, arg3: float, arg4: float, arg5: float, arg6: float, arg7: float, arg8: float, arg9: float, arg10: float, arg11: float, arg12: float) -> int: ...

  @staticmethod
  def FMOD_System_Set3DNumListeners(arg0: int) -> int: ...

  @staticmethod
  def FMOD_System_Set3DRolloffCallback(arg0: int, arg1: int) -> int: ...

  @staticmethod
  def FMOD_System_Set3DSettings(arg0: float, arg1: float, arg2: float) -> int: ...

  @staticmethod
  def FMOD_System_SetAdvancedSettings(arg0: int, arg1: int) -> int: ...

  @staticmethod
  def FMOD_System_SetCallback(arg0: int, arg1: int, arg2: int) -> int: ...

  @staticmethod
  def FMOD_System_SetDSPBufferSize(arg0: int, arg1: int, arg2: int) -> int: ...

  @staticmethod
  def FMOD_System_SetDriver(arg0: int, arg1: int) -> int: ...

  @staticmethod
  def FMOD_System_SetFileSystem(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int, arg7: int) -> int: ...

  @staticmethod
  def FMOD_System_SetGeometrySettings(arg0: int, arg1: float) -> int: ...

  @staticmethod
  def FMOD_System_SetNetworkProxy(arg0: int, arg1: str) -> int: ...

  @staticmethod
  def FMOD_System_SetNetworkTimeout(arg0: int, arg1: int) -> int: ...

  @staticmethod
  def FMOD_System_SetOutput(arg0: int, arg1: int) -> int: ...

  @staticmethod
  def FMOD_System_SetOutputByPlugin(arg0: int, arg1: int) -> int: ...

  @staticmethod
  def FMOD_System_SetPluginPath(arg0: int, arg1: str) -> int: ...

  @staticmethod
  def FMOD_System_SetRawPlayBufferingPeriod(arg0: int) -> int: ...

  @staticmethod
  def FMOD_System_SetRecordVolume(arg0: int) -> int: ...

  @staticmethod
  def FMOD_System_SetReverbDefault(arg0: int, arg1: int) -> None: ...

  @staticmethod
  def FMOD_System_SetReverbProperties(arg0: int, arg1: int, arg2: int) -> int: ...

  @staticmethod
  def FMOD_System_SetSoftwareChannels(arg0: int, arg1: int) -> int: ...

  @staticmethod
  def FMOD_System_SetSoftwareFormat(arg0: int, arg1: int, arg2: int, arg3: int) -> int: ...

  @staticmethod
  def FMOD_System_SetSpeakerPosition(arg0: int, arg1: int, arg2: float, arg3: float, arg4: int) -> int: ...

  @staticmethod
  def FMOD_System_SetStreamBufferSize(arg0: int, arg1: int, arg2: int) -> int: ...

  @staticmethod
  def FMOD_System_SetUserData(arg0: int, arg1: int) -> int: ...

  @staticmethod
  def FMOD_System_SetVADMode(arg0: int) -> int: ...

  @staticmethod
  def FMOD_System_UnloadPlugin(arg0: int, arg1: int) -> int: ...

  @staticmethod
  def FMOD_System_UnlockDSP(arg0: int) -> int: ...

  @staticmethod
  def FMOD_System_Update() -> int: ...

  @staticmethod
  def init() -> None: ...

  def __init__(self): ...

