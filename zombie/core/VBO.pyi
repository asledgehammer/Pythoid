from typing import Any, overload, TypeVar
from java.lang.annotation import Annotation
from java.nio import ByteBuffer, IntBuffer

class GLBufferObject15:

  @overload
  def GL_ARRAY_BUFFER(self) -> int: ...

  @overload
  def GL_ARRAY_BUFFER(self) -> int: ...

  @overload
  def GL_BUFFER_SIZE(self) -> int: ...

  @overload
  def GL_BUFFER_SIZE(self) -> int: ...

  @overload
  def GL_ELEMENT_ARRAY_BUFFER(self) -> int: ...

  @overload
  def GL_ELEMENT_ARRAY_BUFFER(self) -> int: ...

  @overload
  def GL_STATIC_DRAW(self) -> int: ...

  @overload
  def GL_STATIC_DRAW(self) -> int: ...

  @overload
  def GL_STREAM_DRAW(self) -> int: ...

  @overload
  def GL_STREAM_DRAW(self) -> int: ...

  @overload
  def GL_WRITE_ONLY(self) -> int: ...

  @overload
  def GL_WRITE_ONLY(self) -> int: ...

  @overload
  def glBindBuffer(self, target: int, buffer: int) -> None: ...

  @overload
  def glBindBuffer(self, target: int, buffer: int) -> None: ...

  @overload
  def glBufferData(self, target: int, data: ByteBuffer, usage: int) -> None: ...

  @overload
  def glBufferData(self, target: int, data: ByteBuffer, usage: int) -> None: ...

  @overload
  def glBufferData(self, target: int, data_size: int, usage: int) -> None: ...

  @overload
  def glBufferData(self, target: int, data_size: int, usage: int) -> None: ...

  @overload
  def glDeleteBuffers(self, buffers: int) -> None: ...

  @overload
  def glDeleteBuffers(self, buffers: int) -> None: ...

  @overload
  def glGenBuffers(self) -> int: ...

  @overload
  def glGenBuffers(self) -> int: ...

  @overload
  def glGetBufferParameter(self, target: int, pname: int, params: IntBuffer) -> None: ...

  @overload
  def glGetBufferParameter(self, target: int, pname: int, params: IntBuffer) -> None: ...

  @overload
  def glMapBuffer(self, target: int, access: int, length: int, old_buffer: ByteBuffer) -> ByteBuffer: ...

  @overload
  def glMapBuffer(self, target: int, access: int, length: int, old_buffer: ByteBuffer) -> ByteBuffer: ...

  @overload
  def glUnmapBuffer(self, target: int) -> bool: ...

  @overload
  def glUnmapBuffer(self, target: int) -> bool: ...

  def __init__(self): ...


class GLBufferObjectARB:

  @overload
  def GL_ARRAY_BUFFER(self) -> int: ...

  @overload
  def GL_ARRAY_BUFFER(self) -> int: ...

  @overload
  def GL_BUFFER_SIZE(self) -> int: ...

  @overload
  def GL_BUFFER_SIZE(self) -> int: ...

  @overload
  def GL_ELEMENT_ARRAY_BUFFER(self) -> int: ...

  @overload
  def GL_ELEMENT_ARRAY_BUFFER(self) -> int: ...

  @overload
  def GL_STATIC_DRAW(self) -> int: ...

  @overload
  def GL_STATIC_DRAW(self) -> int: ...

  @overload
  def GL_STREAM_DRAW(self) -> int: ...

  @overload
  def GL_STREAM_DRAW(self) -> int: ...

  @overload
  def GL_WRITE_ONLY(self) -> int: ...

  @overload
  def GL_WRITE_ONLY(self) -> int: ...

  @overload
  def glBindBuffer(self, target: int, buffer: int) -> None: ...

  @overload
  def glBindBuffer(self, target: int, buffer: int) -> None: ...

  @overload
  def glBufferData(self, target: int, data: ByteBuffer, usage: int) -> None: ...

  @overload
  def glBufferData(self, target: int, data: ByteBuffer, usage: int) -> None: ...

  @overload
  def glBufferData(self, target: int, data_size: int, usage: int) -> None: ...

  @overload
  def glBufferData(self, target: int, data_size: int, usage: int) -> None: ...

  @overload
  def glDeleteBuffers(self, buffers: int) -> None: ...

  @overload
  def glDeleteBuffers(self, buffers: int) -> None: ...

  @overload
  def glGenBuffers(self) -> int: ...

  @overload
  def glGenBuffers(self) -> int: ...

  @overload
  def glGetBufferParameter(self, target: int, pname: int, params: IntBuffer) -> None: ...

  @overload
  def glGetBufferParameter(self, target: int, pname: int, params: IntBuffer) -> None: ...

  @overload
  def glMapBuffer(self, target: int, access: int, length: int, old_buffer: ByteBuffer) -> ByteBuffer: ...

  @overload
  def glMapBuffer(self, target: int, access: int, length: int, old_buffer: ByteBuffer) -> ByteBuffer: ...

  @overload
  def glUnmapBuffer(self, target: int) -> bool: ...

  @overload
  def glUnmapBuffer(self, target: int) -> bool: ...

  def __init__(self): ...


class GLVertexBufferObject:

  funcs: IGLBufferObject

  def bind(self) -> None: ...

  def bindNone(self) -> None: ...

  def bufferData(self, data: ByteBuffer) -> None: ...

  def clear(self) -> None: ...

  def create(self) -> None: ...

  def disableVertexAttribArray(self) -> None: ...

  def enableVertexAttribArray(self, index: int) -> None: ...

  def getID(self) -> int: ...

  def isMapped(self) -> bool: ...

  @overload
  def map(self) -> ByteBuffer: ...

  @overload
  def map(self, size: int) -> ByteBuffer: ...

  def orphan(self) -> None: ...

  def toString(self) -> str: ...

  def unmap(self) -> bool: ...

  @staticmethod
  def init() -> None: ...

  @overload
  def __init__(self, type: int, usage: int): ...
  @overload
  def __init__(self, size: int, type: int, usage: int): ...


class IGLBufferObject:

  def GL_ARRAY_BUFFER(self) -> int: ...

  def GL_BUFFER_SIZE(self) -> int: ...

  def GL_ELEMENT_ARRAY_BUFFER(self) -> int: ...

  def GL_STATIC_DRAW(self) -> int: ...

  def GL_STREAM_DRAW(self) -> int: ...

  def GL_WRITE_ONLY(self) -> int: ...

  def glBindBuffer(self, target: int, buffer: int) -> None: ...

  @overload
  def glBufferData(self, target: int, data: ByteBuffer, usage: int) -> None: ...

  @overload
  def glBufferData(self, target: int, data_size: int, usage: int) -> None: ...

  def glDeleteBuffers(self, buffers: int) -> None: ...

  def glGenBuffers(self) -> int: ...

  def glGetBufferParameter(self, target: int, pname: int, params: IntBuffer) -> None: ...

  def glMapBuffer(self, target: int, access: int, length: int, old_buffer: ByteBuffer) -> ByteBuffer: ...

  def glUnmapBuffer(self, target: int) -> bool: ...

