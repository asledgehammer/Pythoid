from typing import Any, overload, TypeVar
from java.lang.annotation import Annotation
from java.nio import ByteBuffer
from java.util import List, ArrayList
from se.krka.kahlua.vm import KahluaTable
from zombie.core.raknet import UdpConnection

class GlobalModData:

  instance: GlobalModData

  SAVE_EXT: str

  SAVE_FILE: str

  def add(self, tag: str, table: KahluaTable) -> None: ...

  def collectTableNames(self, list: List[str]) -> None: ...

  @overload
  def create(self) -> str: ...

  @overload
  def create(self, tag: str) -> KahluaTable: ...

  def exists(self, tag: str) -> bool: ...

  def get(self, tag: str) -> KahluaTable: ...

  def getOrCreate(self, tag: str) -> KahluaTable: ...

  def init(self) -> None: ...

  def load(self) -> None: ...

  def receive(self, bb: ByteBuffer) -> None: ...

  def receiveRequest(self, bb: ByteBuffer, requesterConnection: UdpConnection) -> None: ...

  def remove(self, tag: str) -> KahluaTable: ...

  def request(self, tag: str) -> None: ...

  def reset(self) -> None: ...

  def save(self) -> None: ...

  def transmit(self, tag: str) -> None: ...

  def __init__(self): ...


class ModData:

  @staticmethod
  def add(tag: str, table: KahluaTable) -> None: ...

  @staticmethod
  @overload
  def create() -> str: ...

  @staticmethod
  @overload
  def create(tag: str) -> KahluaTable: ...

  @staticmethod
  def exists(tag: str) -> bool: ...

  @staticmethod
  def get(tag: str) -> KahluaTable: ...

  @staticmethod
  def getOrCreate(tag: str) -> KahluaTable: ...

  @staticmethod
  def getTableNames() -> ArrayList[str]: ...

  @staticmethod
  def remove(tag: str) -> KahluaTable: ...

  @staticmethod
  def request(tag: str) -> None: ...

  @staticmethod
  def transmit(tag: str) -> None: ...

  def __init__(self): ...

