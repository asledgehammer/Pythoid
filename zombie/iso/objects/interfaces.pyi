from typing import Any, overload, TypeVar
from java.lang.annotation import Annotation
from java.nio import ByteBuffer
from se.krka.kahlua.vm import KahluaTable
from zombie.characters import IsoGameCharacter
from zombie.inventory import ItemContainer, InventoryItem
from zombie.inventory.types import HandWeapon
from zombie.iso import IsoGridSquare, IsoMovingObject
from zombie.iso.objects import IsoBarricade

class Activatable:

  def Activated(self) -> bool: ...

  def Toggle(self) -> None: ...

  def getActivatableType(self) -> str: ...


class BarricadeAble:

  def getBarricadeForCharacter(self, chr: IsoGameCharacter) -> IsoBarricade: ...

  def getBarricadeOnOppositeSquare(self) -> IsoBarricade: ...

  def getBarricadeOnSameSquare(self) -> IsoBarricade: ...

  def getBarricadeOppositeCharacter(self, chr: IsoGameCharacter) -> IsoBarricade: ...

  def getNorth(self) -> bool: ...

  def getOppositeSquare(self) -> IsoGridSquare: ...

  def getSquare(self) -> IsoGridSquare: ...

  def isBarricadeAllowed(self) -> bool: ...

  def isBarricaded(self) -> bool: ...


class IClothingWasherDryerLogic:

  def getContainer(self) -> ItemContainer: ...

  def isActivated(self) -> bool: ...

  def isItemAllowedInContainer(self, container: ItemContainer, item: InventoryItem) -> bool: ...

  def isRemoveItemAllowedFromContainer(self, container: ItemContainer, item: InventoryItem) -> bool: ...

  def loadChange(self, change: str, bb: ByteBuffer) -> None: ...

  def saveChange(self, change: str, tbl: KahluaTable, bb: ByteBuffer) -> None: ...

  def setActivated(self, activated: bool) -> None: ...

  def switchModeOff(self) -> None: ...

  def switchModeOn(self) -> None: ...

  def update(self) -> None: ...


class Thumpable:

  def Thump(self, thumper: IsoMovingObject) -> None: ...

  def WeaponHit(self, chr: IsoGameCharacter, weapon: HandWeapon) -> None: ...

  def getThumpCondition(self) -> float: ...

  def getThumpableFor(self, chr: IsoGameCharacter) -> Thumpable: ...

  def isDestroyed(self) -> bool: ...

