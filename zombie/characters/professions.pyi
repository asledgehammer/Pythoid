from typing import Any, overload, TypeVar
from java.lang.annotation import Annotation
from java.lang import Integer
from java.util import LinkedHashMap, ArrayList, List, Stack, HashMap
from zombie.characters.skills import PerkFactory
from zombie.core.textures import Texture

class ProfessionFactory:

  ProfessionMap: LinkedHashMap[str, ProfessionFactory.Profession]

  @staticmethod
  def Reset() -> None: ...

  @staticmethod
  def addProfession(type: str, name: str, IconPath: str, points: int) -> ProfessionFactory.Profession: ...

  @staticmethod
  def getProfession(type: str) -> ProfessionFactory.Profession: ...

  @staticmethod
  def getProfessions() -> ArrayList[ProfessionFactory.Profession]: ...

  @staticmethod
  def init() -> None: ...

  def __init__(self): ...

  class Profession:

    def addFreeTrait(self, trait: str) -> None: ...

    def addXPBoost(self, perk: PerkFactory.Perk, level: int) -> None: ...

    def getCost(self) -> int: ...

    def getDescription(self) -> str: ...

    def getFreeRecipes(self) -> List[str]: ...

    def getFreeTraitStack(self) -> Stack[str]: ...

    def getFreeTraits(self) -> ArrayList[str]: ...

    def getIconPath(self) -> str: ...

    @overload
    def getLabel(self) -> str: ...

    @overload
    def getLabel(self) -> str: ...

    @overload
    def getLeftLabel(self) -> str: ...

    @overload
    def getLeftLabel(self) -> str: ...

    def getName(self) -> str: ...

    @overload
    def getRightLabel(self) -> str: ...

    @overload
    def getRightLabel(self) -> str: ...

    def getTexture(self) -> Texture: ...

    def getType(self) -> str: ...

    def getXPBoostMap(self) -> HashMap[PerkFactory.Perk, Integer]: ...

    def setCost(self, cost: int) -> None: ...

    def setDescription(self, description: str) -> None: ...

    def setFreeRecipes(self, freeRecipes: List[str]) -> None: ...

    def setFreeTraitStack(self, FreeTraitStack: Stack[str]) -> None: ...

    def setIconPath(self, IconPath: str) -> None: ...

    def setName(self, name: str) -> None: ...

    def setType(self, type: str) -> None: ...

    def __init__(self, type: str, name: str, IconPathname: str, cost: int, desc: str):
      self.cost: int
      self.description: str
      self.freetraitstack: Stack[str]
      self.iconpath: str
      self.name: str
      self.texture: Texture
      self.type: str
      self.xpboostmap: HashMap[PerkFactory.Perk, Integer]

