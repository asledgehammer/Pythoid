from typing import Any, overload, TypeVar
from java.lang.annotation import Annotation
from java.util import ArrayList
from se.krka.kahlua.vm import KahluaTable
from zombie.ai.astar import Mover, Path
from zombie.characters import CharacterActionAnims, IsoGameCharacter
from zombie.core.skinnedmodel.advancedanimation import AnimEvent
from zombie.inventory import InventoryItem

class BaseAction:

  def OnAnimEvent(self, event: AnimEvent) -> None: ...

  def PlayLoopedSoundTillComplete(self, name: str, radius: int, maxGain: float) -> None: ...

  def finished(self) -> bool: ...

  def forceComplete(self) -> None: ...

  def forceStop(self) -> None: ...

  def getCurrentTime(self) -> float: ...

  def getJobDelta(self) -> float: ...

  def getPrimaryHandItem(self) -> InventoryItem: ...

  def getPrimaryHandMdl(self) -> str: ...

  def getSecondaryHandItem(self) -> InventoryItem: ...

  def getSecondaryHandMdl(self) -> str: ...

  def hasStalled(self) -> bool: ...

  def perform(self) -> None: ...

  def reset(self) -> None: ...

  def resetJobDelta(self) -> None: ...

  @overload
  def setActionAnim(self, animNode: str) -> None: ...

  @overload
  def setActionAnim(self, act: CharacterActionAnims) -> None: ...

  @overload
  def setAnimVariable(self, key: str, val: bool) -> None: ...

  @overload
  def setAnimVariable(self, key: str, val: str) -> None: ...

  def setBlockMovementEtc(self, block: bool) -> None: ...

  def setLoopedAction(self, looped: bool) -> None: ...

  def setOverrideAnimation(self, override: bool) -> None: ...

  @overload
  def setOverrideHandModels(self, primaryHand: InventoryItem, secondaryHand: InventoryItem) -> None: ...

  @overload
  def setOverrideHandModels(self, primaryHand: InventoryItem, secondaryHand: InventoryItem, resetModel: bool) -> None: ...

  def setOverrideHandModelsObject(self, primaryHand: object, secondaryHand: object, resetModel: bool) -> None: ...

  @overload
  def setOverrideHandModelsString(self, primaryHand: str, secondaryHand: str) -> None: ...

  @overload
  def setOverrideHandModelsString(self, primaryHand: str, secondaryHand: str, resetModel: bool) -> None: ...

  def setUseProgressBar(self, use: bool) -> None: ...

  def start(self) -> None: ...

  def stop(self) -> None: ...

  def stopTimedActionAnim(self) -> None: ...

  def update(self) -> None: ...

  def valid(self) -> bool: ...

  def waitToStart(self) -> None: ...

  def __init__(self, chr: IsoGameCharacter):
    self.animvariables: ArrayList[str]
    self.blockmovementetc: bool
    self.bstarted: bool
    self.caloriesmodifier: float
    self.chr: IsoGameCharacter
    self.currenttime: float
    self.delta: float
    self.forcecomplete: bool
    self.forceprogressbar: bool
    self.forcestop: bool
    self.lasttime: float
    self.loopaction: bool
    self.maxtime: int
    self.overrideanimation: bool
    self.overridehandmodels: bool
    self.prevlasttime: float
    self.soundeffect: int
    self.stoponaim: bool
    self.stoponrun: bool
    self.stoponwalk: bool
    self.useprogressbar: bool


class LuaTimedAction(BaseAction):

  statObj: list[object]

  def perform(self) -> None: ...

  def start(self) -> None: ...

  def stop(self) -> None: ...

  def update(self) -> None: ...

  def valid(self) -> bool: ...

  def __init__(self, table: KahluaTable, chr: IsoGameCharacter): ...


class LuaTimedActionNew(BaseAction):

  @overload
  def Failed(self, mover: Mover) -> None: ...

  @overload
  def Failed(self, mover: Mover) -> None: ...

  def OnAnimEvent(self, event: AnimEvent) -> None: ...

  def Pathfind(self, chr: IsoGameCharacter, x: int, y: int, z: int) -> None: ...

  @overload
  def Succeeded(self, path: Path, mover: Mover) -> None: ...

  @overload
  def Succeeded(self, path: Path, mover: Mover) -> None: ...

  def getMetaType(self) -> str: ...

  @overload
  def getName(self) -> str: ...

  @overload
  def getName(self) -> str: ...

  def perform(self) -> None: ...

  def setCurrentTime(self, time: float) -> None: ...

  def setTime(self, maxTime: int) -> None: ...

  def start(self) -> None: ...

  def stop(self) -> None: ...

  def update(self) -> None: ...

  def valid(self) -> bool: ...

  def waitToStart(self) -> None: ...

  def __init__(self, table: KahluaTable, chr: IsoGameCharacter): ...

