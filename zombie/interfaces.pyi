from typing import Any, overload, TypeVar
from java.lang.annotation import Annotation
from java.nio import ByteBuffer
from zombie.core.textures import Mask
from zombie.core.utils import WrappedBuffer

class ICommonSoundEmitter:

  def hasSustainPoints(self, handle: int) -> bool: ...

  def isEmpty(self) -> bool: ...

  @overload
  def isPlaying(self, alias: str) -> bool: ...

  @overload
  def isPlaying(self, channel: int) -> bool: ...

  @overload
  def playSound(self, file: str) -> int: ...

  @overload
  def playSound(self, file: str, doWorldSound: bool) -> int: ...

  def setPitch(self, handle: int, pitch: float) -> None: ...

  def setPos(self, x: float, y: float, z: float) -> None: ...

  def setVolume(self, handle: int, volume: float) -> None: ...

  def stopOrTriggerSound(self, handle: int) -> None: ...

  def stopOrTriggerSoundByName(self, name: str) -> None: ...

  def stopSound(self, channel: int) -> int: ...

  def tick(self) -> None: ...

  def triggerCue(self, handle: int) -> None: ...


class IDestroyable:

  def destroy(self) -> None: ...

  def isDestroyed(self) -> bool: ...


class IListBoxItem:

  def getLabel(self) -> str: ...

  def getLeftLabel(self) -> str: ...

  def getRightLabel(self) -> str: ...


class IMaskerable:

  def getMask(self) -> Mask: ...


class ITexture:

  @overload
  def bind(self) -> None: ...

  @overload
  def bind(self, unit: int) -> None: ...

  def destroy(self) -> None: ...

  def getData(self) -> WrappedBuffer: ...

  def getHeight(self) -> int: ...

  def getHeightHW(self) -> int: ...

  def getID(self) -> int: ...

  def getMask(self) -> Mask: ...

  def getWidth(self) -> int: ...

  def getWidthHW(self) -> int: ...

  def getXEnd(self) -> float: ...

  def getXStart(self) -> float: ...

  def getYEnd(self) -> float: ...

  def getYStart(self) -> float: ...

  def isDestroyed(self) -> bool: ...

  def isSolid(self) -> bool: ...

  def makeTransp(self, red: int, green: int, blue: int) -> None: ...

  def setAlphaForeach(self, red: int, green: int, blue: int, alpha: int) -> None: ...

  def setData(self, data: ByteBuffer) -> None: ...

  def setMask(self, mask: Mask) -> None: ...

  def setRegion(self, x: int, y: int, width: int, height: int) -> None: ...


class IUpdater:

  def render(self) -> None: ...

  def renderlast(self) -> None: ...

  def update(self) -> None: ...

