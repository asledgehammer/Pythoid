from typing import Any, overload, TypeVar
from java.lang.annotation import Annotation
from java.io import DataInputStream, DataOutputStream, File, BufferedReader, PrintWriter
from java.lang import Class, Double, Integer, Boolean, Short
from java.lang.reflect import Field, Method
from java.net import URI
from java.nio import ByteBuffer
from java.util import ArrayList, HashMap, List, Stack, Comparator
from java.util.function import Predicate, Function, ToDoubleFunction, ToIntFunction, ToLongFunction
from se.krka.kahlua.converter import KahluaConverterManager
from se.krka.kahlua.integration import LuaCaller
from se.krka.kahlua.integration.expose import LuaJavaClassExposer
from se.krka.kahlua.j2se import J2SEPlatform
from se.krka.kahlua.vm import Platform, KahluaTable, LuaClosure, LuaCallFrame, KahluaTableIterator, Prototype, KahluaThread, Coroutine
from zombie import BaseAmbientStreamManager, GameTime, SandboxOptions, BaseSoundManager, WorldSoundManager
from zombie.ai.sadisticAIDirector import SleepingEvent
from zombie.audio import BaseSoundBank
from zombie.characters import IsoPlayer, IsoGameCharacter, IsoZombie, Faction, SurvivorDesc
from zombie.characters.BodyDamage import BodyPart
from zombie.characters.skills import PerkFactory
from zombie.core import Core, PerformanceSettings, Language, SpriteRenderer
from zombie.core.raknet import UdpConnection
from zombie.core.skinnedmodel.model import Model
from zombie.core.skinnedmodel.population import BeardStyles, HairStyles
from zombie.core.textures import Texture
from zombie.core.znet import SteamWorkshopItem
from zombie.debug import DebugOptions
from zombie.erosion import ErosionMain
from zombie.gameStates import GameState, AnimationViewerState, AttachmentEditorState, ChooseGameInfo
from zombie.inventory import InventoryItem, ItemContainer
from zombie.iso import IsoGridSquare, IsoObject, BuildingDef, RoomDef, ContainerOverlays, TileOverlays, IsoDirections, IsoCell, IsoMarkers, IsoPuddles, SearchMode, IsoMetaGrid, IsoWorld, WorldMarkers
from zombie.iso.areas import SafeHouse
from zombie.iso.areas.isoregion import IsoRegionsRenderer
from zombie.iso.objects import IsoDeadBody
from zombie.iso.sprite import IsoSprite, IsoSpriteManager
from zombie.iso.weather import ClimateManager, ClimateMoon
from zombie.network import GameClient, ServerOptions, ServerSettingsManager, Server
from zombie.popman import ZombiePopulationRenderer
from zombie.radio import RadioAPI, ZomboidRadio
from zombie.radio.StorySounds import SLSoundManager
from zombie.scripting import ScriptManager
from zombie.scripting.objects import VehicleScript, Item, Recipe, EvolvedRecipe
from zombie.ui import UIElement, TextManager
from zombie.vehicles import BaseVehicle, EditVehicleState

T = TypeVar('T', default=Any)
U = TypeVar('U', default=Any)

class Event:

  ADD: int

  NUM_FUNCTIONS: int

  def register(self, platform: Platform, environment: KahluaTable) -> None: ...

  def trigger(self, env: KahluaTable, caller: LuaCaller, params: list[object]) -> bool: ...

  def __init__(self, name: str, index: int):
    self.callbacks: ArrayList[LuaClosure]
    self.name: str

  class Add:

    @overload
    def call(self, callFrame: LuaCallFrame, nArguments: int) -> int: ...

    @overload
    def call(self, callFrame: LuaCallFrame, nArguments: int) -> int: ...

    def __init__(self, e: Event): ...

  class Remove:

    @overload
    def call(self, callFrame: LuaCallFrame, nArguments: int) -> int: ...

    @overload
    def call(self, callFrame: LuaCallFrame, nArguments: int) -> int: ...

    def __init__(self, e: Event): ...


class KahluaNumberConverter:

  @staticmethod
  def install(manager: KahluaConverterManager) -> None: ...

  class NumberToLuaConverter[T]:

    @overload
    def fromJavaToLua(self, arg0: T) -> object: ...

    @overload
    def fromJavaToLua(self, arg0: object) -> object: ...

    @overload
    def fromJavaToLua(self, arg0: object) -> object: ...

    @overload
    def getJavaType(self) -> Class[T]: ...

    @overload
    def getJavaType(self) -> Class[JavaType]: ...

    def __init__(self, arg0: Class[T]): ...

  class DoubleCache:

    @staticmethod
    def valueOf(arg0: float) -> Double: ...


class LuaBackendClass:

  @overload
  def call(self, func: str) -> object: ...

  @overload
  def call(self, func: str, param1: object) -> object: ...

  @overload
  def call(self, func: str, param1: object, param2: object) -> object: ...

  @overload
  def call(self, func: str, param1: object, param2: object, param3: object) -> object: ...

  @overload
  def call(self, func: str, param1: object, param2: object, param3: object, param4: object) -> object: ...

  @overload
  def call(self, func: str, param1: object, param2: object, param3: object, param4: object, param5: object) -> object: ...

  @overload
  def callBool(self, func: str) -> bool: ...

  @overload
  def callBool(self, func: str, param1: object) -> bool: ...

  @overload
  def callBool(self, func: str, param1: object, param2: object) -> bool: ...

  @overload
  def callBool(self, func: str, param1: object, param2: object, param3: object) -> bool: ...

  @overload
  def callBool(self, func: str, param1: object, param2: object, param3: object, param4: object) -> bool: ...

  @overload
  def callBool(self, func: str, param1: object, param2: object, param3: object, param4: object, param5: object) -> bool: ...

  @overload
  def callFloat(self, func: str) -> float: ...

  @overload
  def callFloat(self, func: str, param1: object) -> float: ...

  @overload
  def callFloat(self, func: str, param1: object, param2: object) -> float: ...

  @overload
  def callFloat(self, func: str, param1: object, param2: object, param3: object) -> float: ...

  @overload
  def callFloat(self, func: str, param1: object, param2: object, param3: object, param4: object) -> float: ...

  @overload
  def callFloat(self, func: str, param1: object, param2: object, param3: object, param4: object, param5: object) -> float: ...

  @overload
  def callInt(self, func: str) -> int: ...

  @overload
  def callInt(self, func: str, param1: object) -> int: ...

  @overload
  def callInt(self, func: str, param1: object, param2: object) -> int: ...

  @overload
  def callInt(self, func: str, param1: object, param2: object, param3: object) -> int: ...

  @overload
  def callInt(self, func: str, param1: object, param2: object, param3: object, param4: object) -> int: ...

  @overload
  def callInt(self, func: str, param1: object, param2: object, param3: object, param4: object, param5: object) -> int: ...

  @overload
  def callVoid(self, func: str) -> None: ...

  @overload
  def callVoid(self, func: str, param1: object) -> None: ...

  @overload
  def callVoid(self, func: str, param1: object, param2: object) -> None: ...

  @overload
  def callVoid(self, func: str, param1: object, param2: object, param3: object) -> None: ...

  @overload
  def callVoid(self, func: str, param1: object, param2: object, param3: object, param4: object) -> None: ...

  @overload
  def callVoid(self, func: str, param1: object, param2: object, param3: object, param4: object, param5: object) -> None: ...

  @overload
  def getMetatable(self) -> KahluaTable: ...

  @overload
  def getMetatable(self) -> KahluaTable: ...

  @overload
  def getString(self, string: str) -> str: ...

  @overload
  def getString(self, string: str) -> str: ...

  @overload
  def isEmpty(self) -> bool: ...

  @overload
  def isEmpty(self) -> bool: ...

  @overload
  def iterator(self) -> KahluaTableIterator: ...

  @overload
  def iterator(self) -> KahluaTableIterator: ...

  @overload
  def len(self) -> int: ...

  @overload
  def len(self) -> int: ...

  @overload
  def load(self, input: DataInputStream, WorldVersion: int) -> None: ...

  @overload
  def load(self, input: DataInputStream, WorldVersion: int) -> None: ...

  @overload
  def load(self, input: ByteBuffer, WorldVersion: int) -> None: ...

  @overload
  def load(self, input: ByteBuffer, WorldVersion: int) -> None: ...

  @overload
  def rawget(self, key: int) -> object: ...

  @overload
  def rawget(self, key: int) -> object: ...

  @overload
  def rawget(self, key: object) -> object: ...

  @overload
  def rawget(self, key: object) -> object: ...

  @overload
  def rawset(self, key: int, value: object) -> None: ...

  @overload
  def rawset(self, key: int, value: object) -> None: ...

  @overload
  def rawset(self, key: object, value: object) -> None: ...

  @overload
  def rawset(self, key: object, value: object) -> None: ...

  @overload
  def save(self, output: DataOutputStream) -> None: ...

  @overload
  def save(self, output: DataOutputStream) -> None: ...

  @overload
  def save(self, output: ByteBuffer) -> None: ...

  @overload
  def save(self, output: ByteBuffer) -> None: ...

  @overload
  def setMetatable(self, metatable: KahluaTable) -> None: ...

  @overload
  def setMetatable(self, metatable: KahluaTable) -> None: ...

  @overload
  def size(self) -> int: ...

  @overload
  def size(self) -> int: ...

  @overload
  def wipe(self) -> None: ...

  @overload
  def wipe(self) -> None: ...

  def __init__(self, type: str): ...


class LuaEventManager:

  OnTickCallbacks: ArrayList[LuaClosure]

  @overload
  def call(self, callFrame: LuaCallFrame, nArguments: int) -> int: ...

  @overload
  def call(self, callFrame: LuaCallFrame, nArguments: int) -> int: ...

  @staticmethod
  def AddEvent(name: str) -> Event: ...

  @staticmethod
  def Reset() -> None: ...

  @staticmethod
  def ResetCallbacks() -> None: ...

  @staticmethod
  def clear() -> None: ...

  @staticmethod
  def register(platform: Platform, environment: KahluaTable) -> None: ...

  @staticmethod
  def reroute(prototype: Prototype, luaClosure: LuaClosure) -> None: ...

  @staticmethod
  @overload
  def triggerEvent(event: str) -> None: ...

  @staticmethod
  @overload
  def triggerEvent(event: str, param1: object) -> None: ...

  @staticmethod
  @overload
  def triggerEvent(event: str, param1: object, param2: object) -> None: ...

  @staticmethod
  @overload
  def triggerEvent(event: str, param1: object, param2: object, param3: object) -> None: ...

  @staticmethod
  @overload
  def triggerEvent(event: str, param1: object, param2: object, param3: object, param4: object) -> None: ...

  @staticmethod
  @overload
  def triggerEvent(event: str, param1: object, param2: object, param3: object, param4: object, param5: object) -> None: ...

  @staticmethod
  @overload
  def triggerEvent(event: str, param1: object, param2: object, param3: object, param4: object, param5: object, param6: object) -> None: ...

  @staticmethod
  @overload
  def triggerEvent(event: str, param1: object, param2: object, param3: object, param4: object, param5: object, param6: object, param7: object) -> None: ...

  @staticmethod
  @overload
  def triggerEvent(event: str, param1: object, param2: object, param3: object, param4: object, param5: object, param6: object, param7: object, param8: object) -> None: ...

  @staticmethod
  @overload
  def triggerEventGarbage(event: str, param1: object) -> None: ...

  @staticmethod
  @overload
  def triggerEventGarbage(event: str, param1: object, param2: object) -> None: ...

  @staticmethod
  @overload
  def triggerEventGarbage(event: str, param1: object, param2: object, param3: object) -> None: ...

  @staticmethod
  @overload
  def triggerEventGarbage(event: str, param1: object, param2: object, param3: object, param4: object) -> None: ...

  @staticmethod
  def triggerEventUnique(event: str, param1: object) -> None: ...

  def __init__(self): ...


class LuaHookManager:

  OnTickCallbacks: ArrayList[LuaClosure]

  @overload
  def call(self, callFrame: LuaCallFrame, nArguments: int) -> int: ...

  @overload
  def call(self, callFrame: LuaCallFrame, nArguments: int) -> int: ...

  @staticmethod
  def AddEvent(name: str) -> None: ...

  @staticmethod
  def Reset() -> None: ...

  @staticmethod
  @overload
  def TriggerHook(event: str) -> bool: ...

  @staticmethod
  @overload
  def TriggerHook(event: str, param1: object) -> bool: ...

  @staticmethod
  @overload
  def TriggerHook(event: str, param1: object, param2: object) -> bool: ...

  @staticmethod
  @overload
  def TriggerHook(event: str, param1: object, param2: object, param3: object) -> bool: ...

  @staticmethod
  @overload
  def TriggerHook(event: str, param1: object, param2: object, param3: object, param4: object) -> bool: ...

  @staticmethod
  @overload
  def TriggerHook(event: str, param1: object, param2: object, param3: object, param4: object, param5: object) -> bool: ...

  @staticmethod
  @overload
  def TriggerHook(event: str, param1: object, param2: object, param3: object, param4: object, param5: object, param6: object) -> bool: ...

  @staticmethod
  def clear() -> None: ...

  @staticmethod
  def register(platform: Platform, environment: KahluaTable) -> None: ...

  def __init__(self): ...


class LuaManager:

  caller: LuaCaller

  checksumDone: bool

  converterManager: KahluaConverterManager

  debugcaller: LuaCaller

  debugthread: KahluaThread

  env: KahluaTable

  exposer: LuaManager.Exposer

  loaded: ArrayList[str]

  loadedReturn: HashMap[str, object]

  loadList: ArrayList[str]

  platform: J2SEPlatform

  thread: KahluaThread

  @staticmethod
  def AdjacentFreeTileFinder(test: IsoGridSquare, player: IsoPlayer) -> IsoGridSquare: ...

  @staticmethod
  def LoadDir(path: str) -> None: ...

  @staticmethod
  @overload
  def LoadDirBase() -> None: ...

  @staticmethod
  @overload
  def LoadDirBase(sub: str) -> None: ...

  @staticmethod
  @overload
  def LoadDirBase(sub: str, onlyChecksum: bool) -> None: ...

  @staticmethod
  @overload
  def RunLua(filename: str) -> object: ...

  @staticmethod
  @overload
  def RunLua(filename: str, bRewriteEvents: bool) -> object: ...

  @staticmethod
  def Test() -> None: ...

  @staticmethod
  def call(func: str, param1: object) -> None: ...

  @staticmethod
  @overload
  def copyTable(arg0: KahluaTable) -> KahluaTable: ...

  @staticmethod
  @overload
  def copyTable(to: KahluaTable, arg1: KahluaTable) -> KahluaTable: ...

  @staticmethod
  def dropItem(i: InventoryItem) -> None: ...

  @staticmethod
  def fillContainer(container: ItemContainer, isoPlayer: IsoPlayer) -> None: ...

  @staticmethod
  def finishChecksum() -> None: ...

  @staticmethod
  def get(key: object) -> object: ...

  @staticmethod
  def getDotDelimitedClosure(path: str) -> LuaClosure: ...

  @staticmethod
  def getFunctionObject(functionName: str) -> object: ...

  @staticmethod
  def getHourMinuteJava() -> str: ...

  @staticmethod
  def getLuaCacheDir() -> str: ...

  @staticmethod
  def getSandboxCacheDir() -> str: ...

  @staticmethod
  def init() -> None: ...

  @staticmethod
  def initChecksum() -> None: ...

  @staticmethod
  def outputTable(t: KahluaTable, nTabs: int) -> None: ...

  @staticmethod
  def searchFolders(base: URI, fo: File) -> None: ...

  @staticmethod
  def transferItem(character: IsoGameCharacter, item: InventoryItem, src: ItemContainer, dest: ItemContainer) -> None: ...

  @staticmethod
  def updateOverlaySprite(obj: IsoObject) -> None: ...

  def __init__(self): ...

  class Exposer(LuaJavaClassExposer):

    def exposeAll(self) -> None: ...

    def setExposed(self, clazz: Class[Any]) -> None: ...

    def shouldExpose(self, clazz: Class[Any]) -> bool: ...

    def __init__(self, manager: KahluaConverterManager, platform: Platform, environment: KahluaTable): ...

  class GlobalObject:

    def Render3DItem(self, item: InventoryItem, sq: IsoGridSquare, xoffset: float, yoffset: float, zoffset: float, rotation: float) -> None: ...

    def SyncXp(self, player: IsoPlayer) -> None: ...

    def addBloodSplat(self, sq: IsoGridSquare, nbr: int) -> None: ...

    def addSound(self, source: IsoObject, x: int, y: int, z: int, radius: int, volume: int) -> None: ...

    def addZombieSitting(self, x: int, y: int, z: int) -> None: ...

    def addZombiesEating(self, x: int, y: int, z: int, totalZombies: int, skeletonBody: bool) -> None: ...

    def addZombiesInBuilding(self, arg0: BuildingDef, totalZombies: int, outfit: str, room: RoomDef, femaleChance: Integer) -> ArrayList[IsoZombie]: ...

    def addZombiesInOutfitArea(self, x1: int, y1: int, x2: int, y2: int, z: int, totalZombies: int, outfit: str, femaleChance: Integer) -> ArrayList[IsoZombie]: ...

    def checkServerName(self, name: str) -> str: ...

    def getAverageFPS(self) -> Double: ...

    def getContainerOverlays(self) -> ContainerOverlays: ...

    def getTileOverlays(self) -> TileOverlays: ...

    def screenZoomIn(self) -> None: ...

    def screenZoomOut(self) -> None: ...

    def sendAddXp(self, player: IsoPlayer, perk: PerkFactory.Perk, amount: int) -> None: ...

    @staticmethod
    def AddNoiseToken(sq: IsoGridSquare, radius: int) -> None: ...

    @staticmethod
    def AddWorldSound(player: IsoPlayer, radius: int, volume: int) -> None: ...

    @staticmethod
    def InvMngGetItem(itemId: int, itemType: str, player: IsoPlayer) -> None: ...

    @staticmethod
    def InvMngRemoveItem(itemId: int, player: IsoPlayer) -> None: ...

    @staticmethod
    def SendCommandToServer(command: str) -> None: ...

    @staticmethod
    @overload
    def ZombRand(max: float) -> float: ...

    @staticmethod
    @overload
    def ZombRand(min: float, max: float) -> float: ...

    @staticmethod
    def ZombRandBetween(min: float, max: float) -> float: ...

    @staticmethod
    def ZombRandFloat(min: float, max: float) -> float: ...

    @staticmethod
    def acceptFactionInvite(faction: Faction, host: str) -> None: ...

    @staticmethod
    def acceptSafehouseInvite(safehouse: SafeHouse, host: str) -> None: ...

    @staticmethod
    def acceptTrading(you: IsoPlayer, other: IsoPlayer, accept: bool) -> None: ...

    @staticmethod
    def activateJoypadOnSteamDeck() -> None: ...

    @staticmethod
    def activateSteamOverlayToWebPage(url: str) -> None: ...

    @staticmethod
    def activateSteamOverlayToWorkshop() -> None: ...

    @staticmethod
    def activateSteamOverlayToWorkshopItem(itemID: str) -> None: ...

    @staticmethod
    def activateSteamOverlayToWorkshopUser() -> None: ...

    @staticmethod
    def addAllBurntVehicles() -> None: ...

    @staticmethod
    def addAllSmashedVehicles() -> None: ...

    @staticmethod
    @overload
    def addAllVehicles() -> None: ...

    @staticmethod
    @overload
    def addAllVehicles(predicate: Predicate[VehicleScript]) -> None: ...

    @staticmethod
    def addCarCrash() -> None: ...

    @staticmethod
    def addPhysicsObject() -> BaseVehicle: ...

    @staticmethod
    def addTicket(author: str, message: str, ticketID: int) -> None: ...

    @staticmethod
    def addUserlog(user: str, type: str, text: str) -> None: ...

    @staticmethod
    def addVehicle(script: str) -> BaseVehicle: ...

    @staticmethod
    def addVehicleDebug(scriptName: str, dir: IsoDirections, skinIndex: Integer, sq: IsoGridSquare) -> BaseVehicle: ...

    @staticmethod
    def addVirtualZombie(x: int, y: int) -> None: ...

    @staticmethod
    def addWarningPoint(user: str, reason: str, amount: int) -> None: ...

    @staticmethod
    @overload
    def addZombiesInOutfit(x: int, y: int, z: int, totalZombies: int, outfit: str, femaleChance: Integer) -> ArrayList[IsoZombie]: ...

    @staticmethod
    @overload
    def addZombiesInOutfit(x: int, y: int, z: int, totalZombies: int, outfit: str, femaleChance: Integer, isCrawler: bool, isFallOnFront: bool, isFakeDead: bool, isKnockedDown: bool, health: float) -> ArrayList[IsoZombie]: ...

    @staticmethod
    def assaultPlayer() -> None: ...

    @staticmethod
    def attachTrailerToPlayerVehicle(playerIndex: int) -> None: ...

    @staticmethod
    def backToSinglePlayer() -> None: ...

    @staticmethod
    def breakpoint() -> None: ...

    @staticmethod
    def canConnect() -> bool: ...

    @staticmethod
    def canInviteFriends() -> bool: ...

    @staticmethod
    def canModifyPlayerScoreboard() -> bool: ...

    @staticmethod
    def canModifyPlayerStats() -> bool: ...

    @staticmethod
    def canSeePlayerStats() -> bool: ...

    @staticmethod
    def checkModsNeedUpdate(arg0: UdpConnection) -> None: ...

    @staticmethod
    def checkPlayerCanUseChat(chatCommand: str) -> Boolean: ...

    @staticmethod
    def checkSaveFileExists(f: str) -> bool: ...

    @staticmethod
    def checkSaveFolderExists(f: str) -> bool: ...

    @staticmethod
    def checkSavePlayerExists() -> bool: ...

    @staticmethod
    def checkStringPattern(pattern: str) -> bool: ...

    @staticmethod
    def cloneItemType(newName: str, oldName: str) -> Item: ...

    @staticmethod
    def configureLighting(darkStep: float) -> None: ...

    @staticmethod
    def connectToServerStateCallback(button: str) -> None: ...

    @staticmethod
    def connectionManagerLog(arg0: str, arg1: str) -> None: ...

    @staticmethod
    @overload
    def copyTable(table: KahluaTable) -> KahluaTable: ...

    @staticmethod
    @overload
    def copyTable(to: KahluaTable, arg1: KahluaTable) -> KahluaTable: ...

    @staticmethod
    def createHordeFromTo(spawnX: float, spawnY: float, targetX: float, targetY: float, count: int) -> None: ...

    @staticmethod
    def createHordeInAreaTo(spawnX: int, spawnY: int, spawnW: int, spawnH: int, targetX: int, targetY: int, count: int) -> None: ...

    @staticmethod
    def createItemTransaction(item: InventoryItem, src: ItemContainer, dst: ItemContainer) -> None: ...

    @staticmethod
    def createNewScriptItem(base: str, name: str, display: str, type: str, icon: str) -> Item: ...

    @staticmethod
    def createRandomDeadBody(square: IsoGridSquare, blood: int) -> IsoDeadBody: ...

    @staticmethod
    def createRegionFile() -> KahluaTable: ...

    @staticmethod
    def createStory(storyName: str) -> None: ...

    @staticmethod
    def createTile(tile: str, square: IsoGridSquare) -> None: ...

    @staticmethod
    def createWorld(worldName: str) -> None: ...

    @staticmethod
    def createZombie(x: float, y: float, z: float, desc: SurvivorDesc, palette: int, dir: IsoDirections) -> IsoZombie: ...

    @staticmethod
    def debugFullyStreamedIn(x: int, y: int) -> None: ...

    @staticmethod
    @overload
    def debugLuaTable(param: object) -> None: ...

    @staticmethod
    @overload
    def debugLuaTable(param: object, depth: int) -> None: ...

    @staticmethod
    def debugSetRoomType(roomType: Double) -> None: ...

    @staticmethod
    def deleteAllGameModeSaves(gameMode: str) -> None: ...

    @staticmethod
    def deletePlayerSave(fileName: str) -> None: ...

    @staticmethod
    def deleteSandboxPreset(name: str) -> None: ...

    @staticmethod
    def deleteSave(file: str) -> None: ...

    @staticmethod
    def disconnect() -> None: ...

    @staticmethod
    def doChallenge(challenge: KahluaTable) -> None: ...

    @staticmethod
    def doKeyPress(doIt: bool) -> None: ...

    @staticmethod
    def doLuaDebuggerAction(action: str) -> None: ...

    @staticmethod
    def doTutorial(tutorial: KahluaTable) -> None: ...

    @staticmethod
    def drawOverheadMap(ui: UIElement, zoom: float, xpos: float, ypos: float) -> None: ...

    @staticmethod
    def endFileInput() -> None: ...

    @staticmethod
    def endFileOutput() -> None: ...

    @staticmethod
    def endHelicopter() -> None: ...

    @staticmethod
    def endTextFileInput() -> None: ...

    @staticmethod
    def executeQuery(query: str, params: KahluaTable) -> None: ...

    @staticmethod
    def fileExists(filename: str) -> bool: ...

    @staticmethod
    def focusOnTab(id: Short) -> None: ...

    @staticmethod
    def forceChangeState(state: GameState) -> None: ...

    @staticmethod
    def forceDisconnect() -> None: ...

    @staticmethod
    def forceSnowCheck() -> None: ...

    @staticmethod
    def getAbsoluteSaveFolderName(f: str) -> str: ...

    @staticmethod
    def getAccessLevel() -> str: ...

    @staticmethod
    def getActivatedMods() -> ArrayList[str]: ...

    @staticmethod
    def getAllBeardStyles() -> ArrayList[str]: ...

    @staticmethod
    def getAllDecalNamesForItem(item: InventoryItem) -> ArrayList[str]: ...

    @staticmethod
    def getAllHairStyles(female: bool) -> ArrayList[str]: ...

    @staticmethod
    def getAllItems() -> ArrayList[Item]: ...

    @staticmethod
    def getAllItemsForBodyLocation(bodyLocation: str) -> KahluaTable: ...

    @staticmethod
    def getAllOutfits(female: bool) -> ArrayList[str]: ...

    @staticmethod
    def getAllRecipes() -> ArrayList[Recipe]: ...

    @staticmethod
    def getAllSavedPlayers() -> List[BufferedReader]: ...

    @staticmethod
    def getAllVehicles() -> ArrayList[str]: ...

    @staticmethod
    def getAmbientStreamManager() -> BaseAmbientStreamManager: ...

    @staticmethod
    def getAnimationViewerState() -> AnimationViewerState: ...

    @staticmethod
    def getAttachmentEditorState() -> AttachmentEditorState: ...

    @staticmethod
    def getBeardStylesInstance() -> BeardStyles: ...

    @staticmethod
    def getBehaviourDebugPlayer() -> IsoGameCharacter: ...

    @staticmethod
    def getButtonCount(joypad: int) -> int: ...

    @staticmethod
    def getCallframeTop(c: Coroutine) -> int: ...

    @staticmethod
    def getCameraOffX() -> float: ...

    @staticmethod
    def getCameraOffY() -> float: ...

    @staticmethod
    def getCell() -> IsoCell: ...

    @staticmethod
    def getClassField(o: object, i: int) -> Field: ...

    @staticmethod
    def getClassFieldVal(o: object, field: Field) -> object: ...

    @staticmethod
    def getClassFunction(o: object, i: int) -> Method: ...

    @staticmethod
    def getClientUsername() -> str: ...

    @staticmethod
    def getClimateManager() -> ClimateManager: ...

    @staticmethod
    def getClimateMoon() -> ClimateMoon: ...

    @staticmethod
    def getConnectedPlayers() -> ArrayList[IsoPlayer]: ...

    @staticmethod
    def getControllerAxisCount(c: int) -> int: ...

    @staticmethod
    def getControllerAxisValue(c: int, axis: int) -> float: ...

    @staticmethod
    def getControllerButtonCount(c: int) -> int: ...

    @staticmethod
    def getControllerCount() -> int: ...

    @staticmethod
    def getControllerDeadZone(c: int, axis: int) -> float: ...

    @staticmethod
    def getControllerGUID(joypad: int) -> str: ...

    @staticmethod
    def getControllerName(joypad: int) -> str: ...

    @staticmethod
    def getControllerPovX(c: int) -> float: ...

    @staticmethod
    def getControllerPovY(c: int) -> float: ...

    @staticmethod
    def getCore() -> Core: ...

    @staticmethod
    def getCoroutineCallframeStack(c: Coroutine, n: int) -> LuaCallFrame: ...

    @staticmethod
    def getCoroutineObjStack(c: Coroutine, n: int) -> object: ...

    @staticmethod
    def getCoroutineObjStackWithBase(c: Coroutine, n: int) -> object: ...

    @staticmethod
    def getCoroutineTop(c: Coroutine) -> int: ...

    @staticmethod
    def getCurrentCoroutine() -> Coroutine: ...

    @staticmethod
    def getCurrentUserProfileName() -> str: ...

    @staticmethod
    def getCurrentUserSteamID() -> str: ...

    @staticmethod
    def getDBSchema() -> None: ...

    @staticmethod
    def getDebug() -> bool: ...

    @staticmethod
    def getDebugOptions() -> DebugOptions: ...

    @staticmethod
    def getDirectionTo(chara: IsoGameCharacter, objTarget: IsoObject) -> IsoDirections: ...

    @staticmethod
    def getEditVehicleState() -> EditVehicleState: ...

    @staticmethod
    def getErosion() -> ErosionMain: ...

    @staticmethod
    def getEvolvedRecipes() -> Stack[EvolvedRecipe]: ...

    @staticmethod
    def getFMODSoundBank() -> BaseSoundBank: ...

    @staticmethod
    def getFileInput(filename: str) -> DataInputStream: ...

    @staticmethod
    def getFileOutput(filename: str) -> DataOutputStream: ...

    @staticmethod
    def getFileReader(filename: str, createIfNull: bool) -> BufferedReader: ...

    @staticmethod
    def getFileSeparator() -> str: ...

    @staticmethod
    def getFileWriter(filename: str, createIfNull: bool, append: bool) -> LuaManager.GlobalObject.LuaFileWriter: ...

    @staticmethod
    def getFilenameOfCallframe(c: LuaCallFrame) -> str: ...

    @staticmethod
    def getFilenameOfClosure(c: LuaClosure) -> str: ...

    @staticmethod
    def getFirstLineOfClosure(c: LuaClosure) -> int: ...

    @staticmethod
    def getFriendsList() -> KahluaTable: ...

    @staticmethod
    def getFullSaveDirectoryTable() -> KahluaTable: ...

    @staticmethod
    def getGameClient() -> GameClient: ...

    @staticmethod
    def getGameFilesInput(filename: str) -> DataInputStream: ...

    @staticmethod
    def getGameFilesTextInput(filename: str) -> BufferedReader: ...

    @staticmethod
    def getGameSpeed() -> int: ...

    @staticmethod
    def getGameTime() -> GameTime: ...

    @staticmethod
    def getGameVersion() -> str: ...

    @staticmethod
    def getGametimeTimestamp() -> int: ...

    @staticmethod
    def getHairStylesInstance() -> HairStyles: ...

    @staticmethod
    def getHourMinute() -> str: ...

    @staticmethod
    def getIsoMarkers() -> IsoMarkers: ...

    @staticmethod
    def getItemNameFromFullType(fullType: str) -> str: ...

    @staticmethod
    def getItemText(txt: str) -> str: ...

    @staticmethod
    def getJoypadAButton(joypad: int) -> int: ...

    @staticmethod
    def getJoypadAimingAxisX(joypad: int) -> float: ...

    @staticmethod
    def getJoypadAimingAxisY(joypad: int) -> float: ...

    @staticmethod
    def getJoypadBButton(joypad: int) -> int: ...

    @staticmethod
    def getJoypadBackButton(joypad: int) -> int: ...

    @staticmethod
    def getJoypadLBumper(joypad: int) -> int: ...

    @staticmethod
    def getJoypadLeftStickButton(joypad: int) -> int: ...

    @staticmethod
    def getJoypadMovementAxisX(joypad: int) -> float: ...

    @staticmethod
    def getJoypadMovementAxisY(joypad: int) -> float: ...

    @staticmethod
    def getJoypadRBumper(joypad: int) -> int: ...

    @staticmethod
    def getJoypadRightStickButton(joypad: int) -> int: ...

    @staticmethod
    def getJoypadStartButton(joypad: int) -> int: ...

    @staticmethod
    def getJoypadXButton(joypad: int) -> int: ...

    @staticmethod
    def getJoypadYButton(joypad: int) -> int: ...

    @staticmethod
    def getKeyCode(keyName: str) -> int: ...

    @staticmethod
    def getKeyName(key: int) -> str: ...

    @staticmethod
    def getLastPlayedDate(filename: str) -> str: ...

    @staticmethod
    def getLastStandPlayerFileNames() -> List[str]: ...

    @staticmethod
    def getLastStandPlayersDirectory() -> str: ...

    @staticmethod
    def getLatestSave() -> KahluaTable: ...

    @staticmethod
    def getLineNumber(c: LuaCallFrame) -> int: ...

    @staticmethod
    def getLoadedLua(n: int) -> str: ...

    @staticmethod
    def getLoadedLuaCount() -> int: ...

    @staticmethod
    def getLocalVarCount(c: Coroutine) -> int: ...

    @staticmethod
    def getLocalVarName(c: Coroutine, n: int) -> str: ...

    @staticmethod
    def getLocalVarStack(c: Coroutine, n: int) -> int: ...

    @staticmethod
    def getLotDirectories() -> ArrayList[str]: ...

    @staticmethod
    def getLuaDebuggerErrorCount() -> int: ...

    @staticmethod
    def getLuaDebuggerErrors() -> ArrayList[str]: ...

    @staticmethod
    def getMPStatistics() -> KahluaTable: ...

    @staticmethod
    def getMPStatus() -> KahluaTable: ...

    @staticmethod
    def getMapDirectoryTable() -> KahluaTable: ...

    @staticmethod
    def getMapFoldersForMod(modID: str) -> ArrayList[str]: ...

    @staticmethod
    def getMapInfo(mapDir: str) -> KahluaTable: ...

    @staticmethod
    def getMaxActivePlayers() -> int: ...

    @staticmethod
    def getMaxPlayers() -> Double: ...

    @staticmethod
    def getMethodParameter(o: Method, i: int) -> str: ...

    @staticmethod
    def getMethodParameterCount(o: Method) -> int: ...

    @staticmethod
    def getModDirectoryTable() -> KahluaTable: ...

    @staticmethod
    def getModFileReader(modId: str, filename: str, createIfNull: bool) -> BufferedReader: ...

    @staticmethod
    def getModFileWriter(modId: str, filename: str, createIfNull: bool, append: bool) -> LuaManager.GlobalObject.LuaFileWriter: ...

    @staticmethod
    def getModInfo(modDir: str) -> ChooseGameInfo.Mod: ...

    @staticmethod
    def getModInfoByID(modID: str) -> ChooseGameInfo.Mod: ...

    @staticmethod
    def getMods() -> List[str]: ...

    @staticmethod
    def getMouseX() -> int: ...

    @staticmethod
    def getMouseXScaled() -> int: ...

    @staticmethod
    def getMouseY() -> int: ...

    @staticmethod
    def getMouseYScaled() -> int: ...

    @staticmethod
    def getMyDocumentFolder() -> str: ...

    @staticmethod
    def getNumActivePlayers() -> int: ...

    @staticmethod
    def getNumClassFields(o: object) -> int: ...

    @staticmethod
    def getNumClassFunctions(o: object) -> int: ...

    @staticmethod
    def getOnlinePlayers() -> ArrayList[IsoPlayer]: ...

    @staticmethod
    def getOnlineUsername() -> str: ...

    @staticmethod
    def getPacketCounts(category: int) -> KahluaTable: ...

    @staticmethod
    def getPerformance() -> PerformanceSettings: ...

    @staticmethod
    def getPlayer() -> IsoPlayer: ...

    @staticmethod
    def getPlayerByOnlineID(id: int) -> IsoPlayer: ...

    @staticmethod
    def getPlayerFromUsername(username: str) -> IsoPlayer: ...

    @staticmethod
    def getPlayerInfo(player: IsoPlayer) -> KahluaTable: ...

    @staticmethod
    def getPlayerScreenHeight(player: int) -> int: ...

    @staticmethod
    def getPlayerScreenLeft(player: int) -> int: ...

    @staticmethod
    def getPlayerScreenTop(player: int) -> int: ...

    @staticmethod
    def getPlayerScreenWidth(player: int) -> int: ...

    @staticmethod
    def getPublicServersList() -> KahluaTable: ...

    @staticmethod
    def getPuddlesManager() -> IsoPuddles: ...

    @staticmethod
    def getRadioAPI() -> RadioAPI: ...

    @staticmethod
    def getRadioText(txt: str) -> str: ...

    @staticmethod
    def getRadioTranslators(language: Language) -> ArrayList[str]: ...

    @staticmethod
    def getRandomUUID() -> str: ...

    @staticmethod
    def getRecipeDisplayName(name: str) -> str: ...

    @staticmethod
    def getReconnectCountdownTimer() -> str: ...

    @staticmethod
    def getRenderer() -> SpriteRenderer: ...

    @staticmethod
    def getSLSoundManager() -> SLSoundManager: ...

    @staticmethod
    def getSandboxFileWriter(filename: str, createIfNull: bool, append: bool) -> LuaManager.GlobalObject.LuaFileWriter: ...

    @staticmethod
    def getSandboxOptions() -> SandboxOptions: ...

    @staticmethod
    def getSandboxPresets() -> List[str]: ...

    @staticmethod
    def getSaveDirectory(folder: str) -> ArrayList[File]: ...

    @staticmethod
    def getSaveDirectoryTable() -> KahluaTable: ...

    @staticmethod
    def getSaveInfo(saveDir: str) -> KahluaTable: ...

    @staticmethod
    def getSaveName(file: File) -> str: ...

    @staticmethod
    def getScriptManager() -> ScriptManager: ...

    @staticmethod
    def getSearchMode() -> SearchMode: ...

    @staticmethod
    def getServerAddressFromArgs() -> str: ...

    @staticmethod
    def getServerIP() -> str: ...

    @staticmethod
    def getServerList() -> KahluaTable: ...

    @staticmethod
    def getServerListFile() -> str: ...

    @staticmethod
    def getServerModData() -> None: ...

    @staticmethod
    def getServerName() -> str: ...

    @staticmethod
    def getServerOptions() -> ServerOptions: ...

    @staticmethod
    def getServerPasswordFromArgs() -> str: ...

    @staticmethod
    def getServerPort() -> str: ...

    @staticmethod
    def getServerSavedWorldVersion(saveFolder: str) -> int: ...

    @staticmethod
    def getServerSettingsManager() -> ServerSettingsManager: ...

    @staticmethod
    def getServerSpawnRegions() -> KahluaTable: ...

    @staticmethod
    def getServerStatistic() -> KahluaTable: ...

    @staticmethod
    def getServerStatisticEnable() -> bool: ...

    @staticmethod
    def getShortenedFilename(str: str) -> str: ...

    @staticmethod
    def getSleepingEvent() -> SleepingEvent: ...

    @staticmethod
    def getSoundManager() -> BaseSoundManager: ...

    @staticmethod
    def getSpecificPlayer(player: int) -> IsoPlayer: ...

    @staticmethod
    def getSprite(sprite: str) -> IsoSprite: ...

    @staticmethod
    def getSpriteManager(sprite: str) -> IsoSpriteManager: ...

    @staticmethod
    def getSquare(x: float, y: float, z: float) -> IsoGridSquare: ...

    @staticmethod
    def getSteamAvatarFromSteamID(steamID: str) -> Texture: ...

    @staticmethod
    def getSteamAvatarFromUsername(username: str) -> Texture: ...

    @staticmethod
    def getSteamIDFromUsername(username: str) -> str: ...

    @staticmethod
    def getSteamModeActive() -> Boolean: ...

    @staticmethod
    def getSteamProfileNameFromSteamID(steamID: str) -> str: ...

    @staticmethod
    def getSteamProfileNameFromUsername(username: str) -> str: ...

    @staticmethod
    def getSteamScoreboard() -> bool: ...

    @staticmethod
    def getSteamWorkshopItemIDs() -> ArrayList[str]: ...

    @staticmethod
    def getSteamWorkshopItemMods(itemIDStr: str) -> ArrayList[ChooseGameInfo.Mod]: ...

    @staticmethod
    def getSteamWorkshopStagedItems() -> ArrayList[SteamWorkshopItem]: ...

    @staticmethod
    def getTableResult(tableName: str, numberPerPages: int) -> None: ...

    @staticmethod
    @overload
    def getText(txt: str) -> str: ...

    @staticmethod
    @overload
    def getText(txt: str, arg1: object) -> str: ...

    @staticmethod
    @overload
    def getText(txt: str, arg1: object, arg2: object) -> str: ...

    @staticmethod
    @overload
    def getText(txt: str, arg1: object, arg2: object, arg3: object) -> str: ...

    @staticmethod
    @overload
    def getText(txt: str, arg1: object, arg2: object, arg3: object, arg4: object) -> str: ...

    @staticmethod
    def getTextManager() -> TextManager: ...

    @staticmethod
    def getTextMediaEN(txt: str) -> str: ...

    @staticmethod
    @overload
    def getTextOrNull(txt: str) -> str: ...

    @staticmethod
    @overload
    def getTextOrNull(txt: str, arg1: object) -> str: ...

    @staticmethod
    @overload
    def getTextOrNull(txt: str, arg1: object, arg2: object) -> str: ...

    @staticmethod
    @overload
    def getTextOrNull(txt: str, arg1: object, arg2: object, arg3: object) -> str: ...

    @staticmethod
    @overload
    def getTextOrNull(txt: str, arg1: object, arg2: object, arg3: object, arg4: object) -> str: ...

    @staticmethod
    def getTexture(filename: str) -> Texture: ...

    @staticmethod
    def getTextureFromSaveDir(filename: str, saveName: str) -> Texture: ...

    @staticmethod
    def getTickets(author: str) -> None: ...

    @staticmethod
    def getTimeInMillis() -> int: ...

    @staticmethod
    def getTimestamp() -> int: ...

    @staticmethod
    def getTimestampMs() -> int: ...

    @staticmethod
    def getTranslatorCredits(language: Language) -> ArrayList[str]: ...

    @staticmethod
    def getUrlInputStream(url: str) -> DataInputStream: ...

    @staticmethod
    def getVehicleById(id: int) -> BaseVehicle: ...

    @staticmethod
    def getVehicleInfo(vehicle: BaseVehicle) -> KahluaTable: ...

    @staticmethod
    def getVehicleZoneAt(x: int, y: int, z: int) -> IsoMetaGrid.VehicleZone: ...

    @staticmethod
    def getWorld() -> IsoWorld: ...

    @staticmethod
    def getWorldMarkers() -> WorldMarkers: ...

    @staticmethod
    def getWorldSoundManager() -> WorldSoundManager: ...

    @staticmethod
    def getZombieInfo(zombie: IsoZombie) -> KahluaTable: ...

    @staticmethod
    def getZomboidRadio() -> ZomboidRadio: ...

    @staticmethod
    def getZone(x: int, y: int, z: int) -> IsoMetaGrid.Zone: ...

    @staticmethod
    def getZones(x: int, y: int, z: int) -> ArrayList[IsoMetaGrid.Zone]: ...

    @staticmethod
    def hasBreakpoint(file: str, line: int) -> bool: ...

    @staticmethod
    def hasDataBreakpoint(table: KahluaTable, key: object) -> bool: ...

    @staticmethod
    def hasDataReadBreakpoint(table: KahluaTable, key: object) -> bool: ...

    @staticmethod
    def initUISystem() -> None: ...

    @staticmethod
    @overload
    def instanceItem(item: str) -> InventoryItem: ...

    @staticmethod
    @overload
    def instanceItem(item: Item) -> InventoryItem: ...

    @staticmethod
    def instanceof(obj: object, name: str) -> bool: ...

    @staticmethod
    def inviteFriend(steamID: str) -> None: ...

    @staticmethod
    def is64bit() -> bool: ...

    @staticmethod
    def isAccessLevel(accessLevel: str) -> bool: ...

    @staticmethod
    def isAdmin() -> bool: ...

    @staticmethod
    def isAltKeyDown() -> bool: ...

    @staticmethod
    def isClient() -> bool: ...

    @staticmethod
    def isControllerConnected(index: int) -> bool: ...

    @staticmethod
    def isCoopHost() -> bool: ...

    @staticmethod
    def isCtrlKeyDown() -> bool: ...

    @staticmethod
    def isCurrentExecutionPoint(file: str, line: int) -> bool: ...

    @staticmethod
    def isDebugEnabled() -> bool: ...

    @staticmethod
    def isDemo() -> bool: ...

    @staticmethod
    def isDesktopOpenSupported() -> bool: ...

    @staticmethod
    def isFloatingGamepadTextInputVisible() -> bool: ...

    @staticmethod
    def isGamePaused() -> bool: ...

    @staticmethod
    def isIngameState() -> bool: ...

    @staticmethod
    def isItemTransactionConsistent(item: InventoryItem, src: ItemContainer, dst: ItemContainer) -> bool: ...

    @staticmethod
    def isJoypadConnected(index: int) -> bool: ...

    @staticmethod
    def isJoypadDown(joypad: int) -> bool: ...

    @staticmethod
    def isJoypadLBPressed(joypad: int) -> bool: ...

    @staticmethod
    def isJoypadLTPressed(joypad: int) -> bool: ...

    @staticmethod
    def isJoypadLeft(joypad: int) -> bool: ...

    @staticmethod
    def isJoypadLeftStickButtonPressed(joypad: int) -> bool: ...

    @staticmethod
    def isJoypadPressed(joypad: int, button: int) -> bool: ...

    @staticmethod
    def isJoypadRBPressed(joypad: int) -> bool: ...

    @staticmethod
    def isJoypadRTPressed(joypad: int) -> bool: ...

    @staticmethod
    def isJoypadRight(joypad: int) -> bool: ...

    @staticmethod
    def isJoypadRightStickButtonPressed(joypad: int) -> bool: ...

    @staticmethod
    def isJoypadUp(joypad: int) -> bool: ...

    @staticmethod
    def isKeyDown(key: int) -> bool: ...

    @staticmethod
    def isKeyPressed(key: int) -> bool: ...

    @staticmethod
    def isModActive(mod: ChooseGameInfo.Mod) -> bool: ...

    @staticmethod
    def isMouseButtonDown(number: int) -> bool: ...

    @staticmethod
    def isPublicServerListAllowed() -> bool: ...

    @staticmethod
    def isServer() -> bool: ...

    @staticmethod
    def isServerSoftReset() -> bool: ...

    @staticmethod
    def isShiftKeyDown() -> bool: ...

    @staticmethod
    def isShowConnectionInfo() -> bool: ...

    @staticmethod
    def isShowPingInfo() -> bool: ...

    @staticmethod
    def isShowServerInfo() -> bool: ...

    @staticmethod
    def isSoundPlaying(sound: object) -> bool: ...

    @staticmethod
    def isSteamOverlayEnabled() -> bool: ...

    @staticmethod
    def isSteamRunningOnSteamDeck() -> bool: ...

    @staticmethod
    def isSystemLinux() -> bool: ...

    @staticmethod
    def isSystemMacOS() -> bool: ...

    @staticmethod
    def isSystemWindows() -> bool: ...

    @staticmethod
    def isValidSteamID(s: str) -> bool: ...

    @staticmethod
    def isValidUserName(user: str) -> bool: ...

    @staticmethod
    def isXBOXController() -> bool: ...

    @staticmethod
    def isoRegionsRenderer() -> IsoRegionsRenderer: ...

    @staticmethod
    def isoToScreenX(player: int, x: float, y: float, z: float) -> float: ...

    @staticmethod
    def isoToScreenY(player: int, x: float, y: float, z: float) -> float: ...

    @staticmethod
    def istype(obj: object, name: str) -> bool: ...

    @staticmethod
    def loadSkinnedZomboidModel(name: str, loc: str, tex: str) -> Model: ...

    @staticmethod
    def loadStaticZomboidModel(name: str, loc: str, tex: str) -> Model: ...

    @staticmethod
    def loadVehicleModel(name: str, loc: str, tex: str) -> Model: ...

    @staticmethod
    def loadZomboidModel(name: str, mesh: str, tex: str, shader: str, bStatic: bool) -> Model: ...

    @staticmethod
    def localVarName(c: Coroutine, n: int) -> str: ...

    @staticmethod
    def luaDebug() -> None: ...

    @staticmethod
    def manipulateSavefile(folder: str, action: str) -> None: ...

    @staticmethod
    def moduleDotType(module: str, type: str) -> str: ...

    @staticmethod
    def openUrl(url: str) -> None: ...

    @staticmethod
    def pauseSoundAndMusic() -> None: ...

    @staticmethod
    def ping(username: str, pwd: str, ip: str, port: str) -> None: ...

    @staticmethod
    def playServerSound(sound: str, sq: IsoGridSquare) -> None: ...

    @staticmethod
    def proceedFactionMessage(message: str) -> None: ...

    @staticmethod
    def proceedPM(command: str) -> str: ...

    @staticmethod
    def processAdminChatMessage(message: str) -> None: ...

    @staticmethod
    def processGeneralMessage(message: str) -> None: ...

    @staticmethod
    def processSafehouseMessage(message: str) -> None: ...

    @staticmethod
    def processSayMessage(message: str) -> None: ...

    @staticmethod
    def processShoutMessage(message: str) -> None: ...

    @staticmethod
    def querySteamWorkshopItemDetails(itemIDs: ArrayList[str], functionObj: LuaClosure, arg1: object) -> None: ...

    @staticmethod
    def queueCharEvent(eventChar: str) -> None: ...

    @staticmethod
    def queueKeyEvent(lwjglKeyCode: int) -> None: ...

    @staticmethod
    def rainConfig(cmd: str, arg: int) -> None: ...

    @staticmethod
    def reactivateJoypadAfterResetLua() -> bool: ...

    @staticmethod
    def refreshAnimSets(reload: bool) -> None: ...

    @staticmethod
    def reloadActionGroups() -> None: ...

    @staticmethod
    def reloadControllerConfigFiles() -> None: ...

    @staticmethod
    def reloadEngineRPM() -> None: ...

    @staticmethod
    def reloadLuaFile(filename: str) -> None: ...

    @staticmethod
    def reloadModelsMatching(meshName: str) -> None: ...

    @staticmethod
    def reloadServerLuaFile(filename: str) -> None: ...

    @staticmethod
    def reloadSoundFiles() -> None: ...

    @staticmethod
    def reloadVehicleTextures(scriptName: str) -> None: ...

    @staticmethod
    def reloadVehicles() -> None: ...

    @staticmethod
    def removeItemTransaction(item: InventoryItem, src: ItemContainer, dst: ItemContainer) -> None: ...

    @staticmethod
    def removeTicket(ticketID: int) -> None: ...

    @staticmethod
    def removeUserlog(user: str, type: str, text: str) -> None: ...

    @staticmethod
    def renameSavefile(gameMode: str, oldName: str, newName: str) -> bool: ...

    @staticmethod
    def renderIsoCircle(x: float, y: float, z: float, radius: float, r: float, g: float, b: float, a: float, thickness: int) -> None: ...

    @staticmethod
    def replaceWith(toReplace: str, regex: str, by: str) -> str: ...

    @staticmethod
    def requestPacketCounts() -> None: ...

    @staticmethod
    def requestTrading(you: IsoPlayer, other: IsoPlayer) -> None: ...

    @staticmethod
    def requestUserlog(user: str) -> None: ...

    @staticmethod
    def require(f: str) -> object: ...

    @staticmethod
    def resetRegionFile() -> None: ...

    @staticmethod
    def resumeSoundAndMusic() -> None: ...

    @staticmethod
    def revertToKeyboardAndMouse() -> None: ...

    @staticmethod
    def sanitizeWorldName(worldName: str) -> str: ...

    @staticmethod
    def save(doCharacter: bool) -> None: ...

    @staticmethod
    def saveControllerSettings(c: int) -> None: ...

    @staticmethod
    def saveGame() -> None: ...

    @staticmethod
    def saveModsFile() -> None: ...

    @staticmethod
    def scoreboardUpdate() -> None: ...

    @staticmethod
    def screenToIsoX(player: int, x: float, y: float, z: float) -> float: ...

    @staticmethod
    def screenToIsoY(player: int, x: float, y: float, z: float) -> float: ...

    @staticmethod
    def sendBandage(onlineID: int, i: int, bandaged: bool, bandageLife: float, isAlcoholic: bool, bandageType: str) -> None: ...

    @staticmethod
    def sendCataplasm(onlineID: int, i: int, plantainFactor: float, comfreyFactor: float, garlicFactor: float) -> None: ...

    @staticmethod
    def sendCleanBurn(wielder: IsoGameCharacter, target: IsoGameCharacter, bodyPart: BodyPart, bandage: InventoryItem) -> None: ...

    @staticmethod
    @overload
    def sendClientCommand(module: str, command: str, args: KahluaTable) -> None: ...

    @staticmethod
    @overload
    def sendClientCommand(player: IsoPlayer, module: str, command: str, args: KahluaTable) -> None: ...

    @staticmethod
    def sendClothing(player: IsoPlayer) -> None: ...

    @staticmethod
    def sendDisinfect(wielder: IsoGameCharacter, target: IsoGameCharacter, bodyPart: BodyPart, alcohol: InventoryItem) -> None: ...

    @staticmethod
    def sendFactionInvite(faction: Faction, host: IsoPlayer, invited: str) -> None: ...

    @staticmethod
    def sendItemListNet(sender: IsoPlayer, items: ArrayList[InventoryItem], receiver: IsoPlayer, transferID: str, custom: str) -> bool: ...

    @staticmethod
    def sendItemsInContainer(obj: IsoObject, container: ItemContainer) -> None: ...

    @staticmethod
    def sendPersonalColor(player: IsoPlayer) -> None: ...

    @staticmethod
    def sendPing() -> None: ...

    @staticmethod
    def sendPlayerExtraInfo(p: IsoPlayer) -> None: ...

    @staticmethod
    def sendPlayerStatsChange(player: IsoPlayer) -> None: ...

    @staticmethod
    def sendRemoveBullet(wielder: IsoGameCharacter, target: IsoGameCharacter, bodyPart: BodyPart) -> None: ...

    @staticmethod
    def sendRemoveGlass(wielder: IsoGameCharacter, target: IsoGameCharacter, bodyPart: BodyPart, handPain: bool) -> None: ...

    @staticmethod
    def sendRequestInventory(player: IsoPlayer) -> None: ...

    @staticmethod
    def sendSafehouseInvite(safehouse: SafeHouse, host: IsoPlayer, invited: str) -> None: ...

    @staticmethod
    @overload
    def sendServerCommand(module: str, command: str, args: KahluaTable) -> None: ...

    @staticmethod
    @overload
    def sendServerCommand(player: IsoPlayer, module: str, command: str, args: KahluaTable) -> None: ...

    @staticmethod
    def sendSplint(onlineID: int, i: int, doIt: bool, factor: float, splintItem: str) -> None: ...

    @staticmethod
    def sendStitch(wielder: IsoGameCharacter, target: IsoGameCharacter, bodyPart: BodyPart, item: InventoryItem, doIt: bool) -> None: ...

    @staticmethod
    def sendSwitchSeat(vehicle: BaseVehicle, chr: IsoGameCharacter, seatFrom: int, seatTo: int) -> None: ...

    @staticmethod
    def sendVisual(player: IsoPlayer) -> None: ...

    @staticmethod
    def serverConnect(arg0: str, arg1: str, arg2: str, arg3: str, arg4: str, arg5: str, arg6: str, arg7: bool) -> None: ...

    @staticmethod
    def serverConnectCoop(serverSteamID: str) -> None: ...

    @staticmethod
    def serverFileExists(filename: str) -> bool: ...

    @staticmethod
    def setActivePlayer(id: int) -> None: ...

    @staticmethod
    def setAdmin() -> None: ...

    @staticmethod
    def setAggroTarget(id: int, x: int, y: int) -> None: ...

    @staticmethod
    def setBehaviorStep(b: bool) -> None: ...

    @staticmethod
    def setControllerDeadZone(c: int, axis: int, value: float) -> None: ...

    @staticmethod
    def setDebugToggleControllerPluggedIn(index: int) -> None: ...

    @staticmethod
    def setGameSpeed(NewSpeed: int) -> None: ...

    @staticmethod
    def setModelMetaData(name: str, mesh: str, tex: str, shader: str, bStatic: bool) -> None: ...

    @staticmethod
    def setMouseXY(x: int, y: int) -> None: ...

    @staticmethod
    def setPlayerJoypad(player: int, joypad: int, playerObj: IsoPlayer, username: str) -> None: ...

    @staticmethod
    def setPlayerMouse(playerObj: IsoPlayer) -> None: ...

    @staticmethod
    def setPlayerMovementActive(id: int, bActive: bool) -> None: ...

    @staticmethod
    def setProgressBarValue(player: IsoPlayer, value: int) -> None: ...

    @staticmethod
    def setPuddles(initialPuddles: float) -> None: ...

    @staticmethod
    def setSavefilePlayer1(gameMode: str, saveDir: str, sqlID: int) -> None: ...

    @staticmethod
    def setServerStatisticEnable(enable: bool) -> None: ...

    @staticmethod
    def setShowConnectionInfo(enabled: bool) -> None: ...

    @staticmethod
    def setShowPausedMessage(b: bool) -> None: ...

    @staticmethod
    def setShowPingInfo(enabled: bool) -> None: ...

    @staticmethod
    def setShowServerInfo(enabled: bool) -> None: ...

    @staticmethod
    def showAnimationViewer() -> None: ...

    @staticmethod
    def showAttachmentEditor() -> None: ...

    @staticmethod
    def showChunkDebugger() -> None: ...

    @staticmethod
    def showFolderInDesktop(folder: str) -> None: ...

    @staticmethod
    def showGlobalObjectDebugger() -> None: ...

    @staticmethod
    def showSteamFloatingGamepadTextInput(multiLine: bool, x: int, y: int, width: int, height: int) -> bool: ...

    @staticmethod
    def showSteamGamepadTextInput(password: bool, multiLine: bool, description: str, maxChars: int, existingText: str) -> bool: ...

    @staticmethod
    def showVehicleEditor(scriptName: str) -> None: ...

    @staticmethod
    def showWorldMapEditor(value: str) -> None: ...

    @staticmethod
    def showWrongChatTabMessage(actualTabID: int, rightTabID: int, chatCommand: str) -> None: ...

    @staticmethod
    def sledgeDestroy(object: IsoObject) -> None: ...

    @staticmethod
    def spawnHorde(x: float, y: float, x2: float, y2: float, z: float, count: int) -> None: ...

    @staticmethod
    def spawnpointsExistsForMod(modID: str, mapFolder: str) -> bool: ...

    @staticmethod
    def steamGetInternetServerDetails(index: int) -> Server: ...

    @staticmethod
    def steamGetInternetServersCount() -> int: ...

    @staticmethod
    def steamReleaseInternetServersRequest() -> None: ...

    @staticmethod
    def steamRequestInternetServersList() -> None: ...

    @staticmethod
    def steamRequestServerDetails(host: str, port: int) -> bool: ...

    @staticmethod
    def steamRequestServerRules(host: str, port: int) -> bool: ...

    @staticmethod
    def stopPing() -> None: ...

    @staticmethod
    def stopSound(sound: int) -> None: ...

    @staticmethod
    def tabToX(a: str, tabX: int) -> str: ...

    @staticmethod
    @overload
    def takeScreenshot() -> None: ...

    @staticmethod
    @overload
    def takeScreenshot(fileName: str) -> None: ...

    @staticmethod
    def testHelicopter() -> None: ...

    @staticmethod
    def testSound() -> None: ...

    @staticmethod
    def timSort(table: KahluaTable, functionObject: object) -> None: ...

    @staticmethod
    def toInt(val: float) -> int: ...

    @staticmethod
    def toggleBreakOnChange(table: KahluaTable, key: object) -> None: ...

    @staticmethod
    def toggleBreakOnRead(table: KahluaTable, key: object) -> None: ...

    @staticmethod
    def toggleBreakpoint(file: str, line: int) -> None: ...

    @staticmethod
    def toggleModActive(mod: ChooseGameInfo.Mod, active: bool) -> None: ...

    @staticmethod
    def toggleSafetyServer(player: IsoPlayer) -> None: ...

    @staticmethod
    def toggleVehicleRenderToTexture() -> None: ...

    @staticmethod
    def tradingUISendAddItem(you: IsoPlayer, other: IsoPlayer, i: InventoryItem) -> None: ...

    @staticmethod
    def tradingUISendRemoveItem(you: IsoPlayer, other: IsoPlayer, index: int) -> None: ...

    @staticmethod
    def tradingUISendUpdateState(you: IsoPlayer, other: IsoPlayer, state: int) -> None: ...

    @staticmethod
    def transformIntoKahluaTable(map: HashMap[object, object]) -> KahluaTable: ...

    @staticmethod
    def translatePointXInOverheadMapToWindow(x: float, ui: UIElement, zoom: float, xpos: float) -> float: ...

    @staticmethod
    def translatePointXInOverheadMapToWorld(x: float, ui: UIElement, zoom: float, xpos: float) -> float: ...

    @staticmethod
    def translatePointYInOverheadMapToWindow(y: float, ui: UIElement, zoom: float, ypos: float) -> float: ...

    @staticmethod
    def translatePointYInOverheadMapToWorld(y: float, ui: UIElement, zoom: float, ypos: float) -> float: ...

    @staticmethod
    @overload
    def triggerEvent(event: str) -> None: ...

    @staticmethod
    @overload
    def triggerEvent(event: str, param: object) -> None: ...

    @staticmethod
    @overload
    def triggerEvent(event: str, param: object, param2: object) -> None: ...

    @staticmethod
    @overload
    def triggerEvent(event: str, param: object, param2: object, param3: object) -> None: ...

    @staticmethod
    @overload
    def triggerEvent(event: str, param: object, param2: object, param3: object, param4: object) -> None: ...

    @staticmethod
    def updateChatSettings(fontSize: str, showTimestamp: bool, showTitle: bool) -> None: ...

    @staticmethod
    def updateFire() -> None: ...

    @staticmethod
    def useStaticErosionRand(use: bool) -> None: ...

    @staticmethod
    def useTextureFiltering(bUse: bool) -> None: ...

    @staticmethod
    def wasKeyDown(key: int) -> bool: ...

    @staticmethod
    def wasMouseActiveMoreRecentlyThanJoypad() -> bool: ...

    @staticmethod
    def writeLog(loggerName: str, logs: str) -> None: ...

    @staticmethod
    def zpopClearZombies(cellX: int, cellY: int) -> None: ...

    @staticmethod
    def zpopNewRenderer() -> ZombiePopulationRenderer: ...

    @staticmethod
    def zpopSpawnNow(cellX: int, cellY: int) -> None: ...

    @staticmethod
    def zpopSpawnTimeToZero(cellX: int, cellY: int) -> None: ...

    def __init__(self): ...

    class LuaFileWriter:

      def close(self) -> None: ...

      def write(self, str: str) -> None: ...

      def writeln(self, str: str) -> None: ...

      def __init__(self, writer: PrintWriter): ...

    class ItemQuery:

      @overload
      def onItemCreated(self, arg0: int, arg1: bool) -> None: ...

      @overload
      def onItemCreated(self, arg0: int, arg1: bool) -> None: ...

      @overload
      def onItemDownloaded(self, arg0: int) -> None: ...

      @overload
      def onItemDownloaded(self, arg0: int) -> None: ...

      @overload
      def onItemNotCreated(self, arg0: int) -> None: ...

      @overload
      def onItemNotCreated(self, arg0: int) -> None: ...

      @overload
      def onItemNotDownloaded(self, arg0: int, arg1: int) -> None: ...

      @overload
      def onItemNotDownloaded(self, arg0: int, arg1: int) -> None: ...

      @overload
      def onItemNotSubscribed(self, arg0: int, arg1: int) -> None: ...

      @overload
      def onItemNotSubscribed(self, arg0: int, arg1: int) -> None: ...

      @overload
      def onItemNotUpdated(self, arg0: int) -> None: ...

      @overload
      def onItemNotUpdated(self, arg0: int) -> None: ...

      @overload
      def onItemQueryCompleted(self, arg0: int, arg1: int) -> None: ...

      @overload
      def onItemQueryCompleted(self, arg0: int, arg1: int) -> None: ...

      @overload
      def onItemQueryNotCompleted(self, arg0: int, arg1: int) -> None: ...

      @overload
      def onItemQueryNotCompleted(self, arg0: int, arg1: int) -> None: ...

      @overload
      def onItemSubscribed(self, arg0: int) -> None: ...

      @overload
      def onItemSubscribed(self, arg0: int) -> None: ...

      @overload
      def onItemUpdated(self, arg0: bool) -> None: ...

      @overload
      def onItemUpdated(self, arg0: bool) -> None: ...

      def __init__(self, arg0: ArrayList[str], arg1: LuaClosure, arg2: object): ...

    class ItemQueryJava:

      @overload
      def onItemCreated(self, arg0: int, arg1: bool) -> None: ...

      @overload
      def onItemCreated(self, arg0: int, arg1: bool) -> None: ...

      @overload
      def onItemDownloaded(self, arg0: int) -> None: ...

      @overload
      def onItemDownloaded(self, arg0: int) -> None: ...

      @overload
      def onItemNotCreated(self, arg0: int) -> None: ...

      @overload
      def onItemNotCreated(self, arg0: int) -> None: ...

      @overload
      def onItemNotDownloaded(self, arg0: int, arg1: int) -> None: ...

      @overload
      def onItemNotDownloaded(self, arg0: int, arg1: int) -> None: ...

      @overload
      def onItemNotSubscribed(self, arg0: int, arg1: int) -> None: ...

      @overload
      def onItemNotSubscribed(self, arg0: int, arg1: int) -> None: ...

      @overload
      def onItemNotUpdated(self, arg0: int) -> None: ...

      @overload
      def onItemNotUpdated(self, arg0: int) -> None: ...

      @overload
      def onItemQueryCompleted(self, arg0: int, arg1: int) -> None: ...

      @overload
      def onItemQueryCompleted(self, arg0: int, arg1: int) -> None: ...

      @overload
      def onItemQueryNotCompleted(self, arg0: int, arg1: int) -> None: ...

      @overload
      def onItemQueryNotCompleted(self, arg0: int, arg1: int) -> None: ...

      @overload
      def onItemSubscribed(self, arg0: int) -> None: ...

      @overload
      def onItemSubscribed(self, arg0: int) -> None: ...

      @overload
      def onItemUpdated(self, arg0: bool) -> None: ...

      @overload
      def onItemUpdated(self, arg0: bool) -> None: ...

      def __init__(self, arg0: ArrayList[str], arg1: UdpConnection): ...

    class TimSortComparator:

      @overload
      def compare(self, arg0: object, arg1: object) -> int: ...

      @overload
      def compare(self, arg0: object, arg1: object) -> int: ...

      def equals(self, arg0: object) -> bool: ...

      def reversed(self) -> Comparator[T]: ...

      @overload
      def thenComparing(self, arg0: Comparator[T]) -> Comparator[T]: ...

      @overload
      def thenComparing(self, arg0: Function[T, U]) -> Comparator[T]: ...

      @overload
      def thenComparing(self, arg0: Function[T, U], arg1: Comparator[U]) -> Comparator[T]: ...

      def thenComparingDouble(self, arg0: ToDoubleFunction[T]) -> Comparator[T]: ...

      def thenComparingInt(self, arg0: ToIntFunction[T]) -> Comparator[T]: ...

      def thenComparingLong(self, arg0: ToLongFunction[T]) -> Comparator[T]: ...

      @staticmethod
      @overload
      def comparing(arg0: Function[T, U]) -> Comparator[T]: ...

      @staticmethod
      @overload
      def comparing(arg0: Function[T, U], arg1: Comparator[U]) -> Comparator[T]: ...

      @staticmethod
      def comparingDouble(arg0: ToDoubleFunction[T]) -> Comparator[T]: ...

      @staticmethod
      def comparingInt(arg0: ToIntFunction[T]) -> Comparator[T]: ...

      @staticmethod
      def comparingLong(arg0: ToLongFunction[T]) -> Comparator[T]: ...

      @staticmethod
      def naturalOrder() -> Comparator[T]: ...

      @staticmethod
      def nullsFirst(arg0: Comparator[T]) -> Comparator[T]: ...

      @staticmethod
      def nullsLast(arg0: Comparator[T]) -> Comparator[T]: ...

      @staticmethod
      def reverseOrder() -> Comparator[T]: ...


class MapObjects:

  @staticmethod
  @overload
  def OnLoadWithSprite(spriteName: str, __function__: LuaClosure, priority: int) -> None: ...

  @staticmethod
  @overload
  def OnLoadWithSprite(spriteNames: KahluaTable, __function__: LuaClosure, priority: int) -> None: ...

  @staticmethod
  @overload
  def OnNewWithSprite(spriteName: str, __function__: LuaClosure, priority: int) -> None: ...

  @staticmethod
  @overload
  def OnNewWithSprite(spriteNames: KahluaTable, __function__: LuaClosure, priority: int) -> None: ...

  @staticmethod
  def Reset() -> None: ...

  @staticmethod
  def debugLoadChunk(wx: int, wy: int) -> None: ...

  @staticmethod
  def debugLoadSquare(x: int, y: int, z: int) -> None: ...

  @staticmethod
  def debugNewSquare(x: int, y: int, z: int) -> None: ...

  @staticmethod
  def loadGridSquare(square: IsoGridSquare) -> None: ...

  @staticmethod
  def newGridSquare(square: IsoGridSquare) -> None: ...

  @staticmethod
  def reroute(prototype: Prototype, luaClosure: LuaClosure) -> None: ...

  def __init__(self): ...

  class Callback: ...

