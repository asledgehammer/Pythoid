from typing import Any, overload, TypeVar
from java.lang.annotation import Annotation
from java.lang import Class

class Desc:

  def annotationType(self) -> Class[Annotation]: ...

  def equals(self, arg0: object) -> bool: ...

  def hashCode(self) -> int: ...

  def toString(self) -> str: ...

  def value(self) -> str: ...


class LuaConstructor:

  def annotationType(self) -> Class[Annotation]: ...

  def equals(self, arg0: object) -> bool: ...

  def hashCode(self) -> int: ...

  def name(self) -> str: ...

  def toString(self) -> str: ...


class LuaMethod:

  def annotationType(self) -> Class[Annotation]: ...

  def equals(self, arg0: object) -> bool: ...

  def hashCode(self) -> int: ...

  def name(self) -> str: ...

  def toString(self) -> str: ...

