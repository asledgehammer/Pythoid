from typing import Any, overload, TypeVar
from java.lang.annotation import Annotation
from java.io import PrintStream
from java.lang import CharSequence
from java.nio import IntBuffer, ByteBuffer, LongBuffer, FloatBuffer, ShortBuffer, DoubleBuffer
from org.lwjgl import PointerBuffer, CLongBuffer
from org.lwjgl.system import FunctionProvider, SharedLibrary, Callback, Struct, StructBuffer, MemoryStack
from org.lwjgl.system.linux import XVisualInfo
from org.lwjgl.system.windows import RECT

class AMDBlendMinmaxFactor:

  GL_FACTOR_MAX_AMD: int

  GL_FACTOR_MIN_AMD: int


class AMDDebugOutput:

  GL_DEBUG_CATEGORY_API_ERROR_AMD: int

  GL_DEBUG_CATEGORY_APPLICATION_AMD: int

  GL_DEBUG_CATEGORY_DEPRECATION_AMD: int

  GL_DEBUG_CATEGORY_OTHER_AMD: int

  GL_DEBUG_CATEGORY_PERFORMANCE_AMD: int

  GL_DEBUG_CATEGORY_SHADER_COMPILER_AMD: int

  GL_DEBUG_CATEGORY_UNDEFINED_BEHAVIOR_AMD: int

  GL_DEBUG_CATEGORY_WINDOW_SYSTEM_AMD: int

  GL_DEBUG_LOGGED_MESSAGES_AMD: int

  GL_DEBUG_SEVERITY_HIGH_AMD: int

  GL_DEBUG_SEVERITY_LOW_AMD: int

  GL_DEBUG_SEVERITY_MEDIUM_AMD: int

  GL_MAX_DEBUG_LOGGED_MESSAGES_AMD: int

  GL_MAX_DEBUG_MESSAGE_LENGTH_AMD: int

  @staticmethod
  def glDebugMessageCallbackAMD(arg0: GLDebugMessageAMDCallbackI, arg1: int) -> None: ...

  @staticmethod
  @overload
  def glDebugMessageEnableAMD(arg0: int, arg1: int, arg2: list[int], arg3: bool) -> None: ...

  @staticmethod
  @overload
  def glDebugMessageEnableAMD(arg0: int, arg1: int, arg2: int, arg3: bool) -> None: ...

  @staticmethod
  @overload
  def glDebugMessageEnableAMD(arg0: int, arg1: int, arg2: IntBuffer, arg3: bool) -> None: ...

  @staticmethod
  @overload
  def glDebugMessageInsertAMD(arg0: int, arg1: int, arg2: int, arg3: CharSequence) -> None: ...

  @staticmethod
  @overload
  def glDebugMessageInsertAMD(arg0: int, arg1: int, arg2: int, arg3: ByteBuffer) -> None: ...

  @staticmethod
  @overload
  def glGetDebugMessageLogAMD(arg0: int, arg1: list[int], arg2: list[int], arg3: list[int], arg4: list[int], arg5: ByteBuffer) -> int: ...

  @staticmethod
  @overload
  def glGetDebugMessageLogAMD(arg0: int, arg1: IntBuffer, arg2: IntBuffer, arg3: IntBuffer, arg4: IntBuffer, arg5: ByteBuffer) -> int: ...

  @staticmethod
  def nglDebugMessageCallbackAMD(arg0: int, arg1: int) -> None: ...

  @staticmethod
  def nglDebugMessageEnableAMD(arg0: int, arg1: int, arg2: int, arg3: int, arg4: bool) -> None: ...

  @staticmethod
  def nglDebugMessageInsertAMD(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int) -> None: ...

  @staticmethod
  def nglGetDebugMessageLogAMD(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int) -> int: ...


class AMDDepthClampSeparate:

  GL_DEPTH_CLAMP_FAR_AMD: int

  GL_DEPTH_CLAMP_NEAR_AMD: int


class AMDDrawBuffersBlend:

  @staticmethod
  def glBlendEquationIndexedAMD(arg0: int, arg1: int) -> None: ...

  @staticmethod
  def glBlendEquationSeparateIndexedAMD(arg0: int, arg1: int, arg2: int) -> None: ...

  @staticmethod
  def glBlendFuncIndexedAMD(arg0: int, arg1: int, arg2: int) -> None: ...

  @staticmethod
  def glBlendFuncSeparateIndexedAMD(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int) -> None: ...


class AMDFramebufferMultisampleAdvanced:

  GL_MAX_COLOR_FRAMEBUFFER_SAMPLES_AMD: int

  GL_MAX_COLOR_FRAMEBUFFER_STORAGE_SAMPLES_AMD: int

  GL_MAX_DEPTH_STENCIL_FRAMEBUFFER_SAMPLES_AMD: int

  GL_NUM_SUPPORTED_MULTISAMPLE_MODES_AMD: int

  GL_RENDERBUFFER_STORAGE_SAMPLES_AMD: int

  GL_SUPPORTED_MULTISAMPLE_MODES_AMD: int

  @staticmethod
  def glNamedRenderbufferStorageMultisampleAdvancedAMD(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int) -> None: ...

  @staticmethod
  def glRenderbufferStorageMultisampleAdvancedAMD(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int) -> None: ...


class AMDGPUShaderHalfFloat:

  GL_FLOAT16_MAT2_AMD: int

  GL_FLOAT16_MAT2x3_AMD: int

  GL_FLOAT16_MAT2x4_AMD: int

  GL_FLOAT16_MAT3_AMD: int

  GL_FLOAT16_MAT3x2_AMD: int

  GL_FLOAT16_MAT3x4_AMD: int

  GL_FLOAT16_MAT4_AMD: int

  GL_FLOAT16_MAT4x2_AMD: int

  GL_FLOAT16_MAT4x3_AMD: int


class AMDGPUShaderHalfFloatFetch:

  GL_FLOAT16_IMAGE_1D_AMD: int

  GL_FLOAT16_IMAGE_1D_ARRAY_AMD: int

  GL_FLOAT16_IMAGE_2D_AMD: int

  GL_FLOAT16_IMAGE_2D_ARRAY_AMD: int

  GL_FLOAT16_IMAGE_2D_MULTISAMPLE_AMD: int

  GL_FLOAT16_IMAGE_2D_MULTISAMPLE_ARRAY_AMD: int

  GL_FLOAT16_IMAGE_2D_RECT_AMD: int

  GL_FLOAT16_IMAGE_3D_AMD: int

  GL_FLOAT16_IMAGE_BUFFER_AMD: int

  GL_FLOAT16_IMAGE_CUBE_AMD: int

  GL_FLOAT16_IMAGE_CUBE_MAP_ARRAY_AMD: int

  GL_FLOAT16_SAMPLER_1D_AMD: int

  GL_FLOAT16_SAMPLER_1D_ARRAY_AMD: int

  GL_FLOAT16_SAMPLER_1D_ARRAY_SHADOW_AMD: int

  GL_FLOAT16_SAMPLER_1D_SHADOW_AMD: int

  GL_FLOAT16_SAMPLER_2D_AMD: int

  GL_FLOAT16_SAMPLER_2D_ARRAY_AMD: int

  GL_FLOAT16_SAMPLER_2D_ARRAY_SHADOW_AMD: int

  GL_FLOAT16_SAMPLER_2D_MULTISAMPLE_AMD: int

  GL_FLOAT16_SAMPLER_2D_MULTISAMPLE_ARRAY_AMD: int

  GL_FLOAT16_SAMPLER_2D_RECT_AMD: int

  GL_FLOAT16_SAMPLER_2D_RECT_SHADOW_AMD: int

  GL_FLOAT16_SAMPLER_2D_SHADOW_AMD: int

  GL_FLOAT16_SAMPLER_3D_AMD: int

  GL_FLOAT16_SAMPLER_BUFFER_AMD: int

  GL_FLOAT16_SAMPLER_CUBE_AMD: int

  GL_FLOAT16_SAMPLER_CUBE_MAP_ARRAY_AMD: int

  GL_FLOAT16_SAMPLER_CUBE_MAP_ARRAY_SHADOW_AMD: int

  GL_FLOAT16_SAMPLER_CUBE_SHADOW_AMD: int


class AMDGPUShaderInt64:

  GL_FLOAT16_NV: int

  GL_FLOAT16_VEC2_NV: int

  GL_FLOAT16_VEC3_NV: int

  GL_FLOAT16_VEC4_NV: int

  GL_INT16_NV: int

  GL_INT16_VEC2_NV: int

  GL_INT16_VEC3_NV: int

  GL_INT16_VEC4_NV: int

  GL_INT64_NV: int

  GL_INT64_VEC2_NV: int

  GL_INT64_VEC3_NV: int

  GL_INT64_VEC4_NV: int

  GL_INT8_NV: int

  GL_INT8_VEC2_NV: int

  GL_INT8_VEC3_NV: int

  GL_INT8_VEC4_NV: int

  GL_UNSIGNED_INT16_NV: int

  GL_UNSIGNED_INT16_VEC2_NV: int

  GL_UNSIGNED_INT16_VEC3_NV: int

  GL_UNSIGNED_INT16_VEC4_NV: int

  GL_UNSIGNED_INT64_NV: int

  GL_UNSIGNED_INT64_VEC2_NV: int

  GL_UNSIGNED_INT64_VEC3_NV: int

  GL_UNSIGNED_INT64_VEC4_NV: int

  GL_UNSIGNED_INT8_NV: int

  GL_UNSIGNED_INT8_VEC2_NV: int

  GL_UNSIGNED_INT8_VEC3_NV: int

  GL_UNSIGNED_INT8_VEC4_NV: int

  @staticmethod
  def glGetUniformi64NV(arg0: int, arg1: int) -> int: ...

  @staticmethod
  @overload
  def glGetUniformi64vNV(arg0: int, arg1: int, arg2: list[int]) -> None: ...

  @staticmethod
  @overload
  def glGetUniformi64vNV(arg0: int, arg1: int, arg2: LongBuffer) -> None: ...

  @staticmethod
  def glGetUniformui64NV(arg0: int, arg1: int) -> int: ...

  @staticmethod
  @overload
  def glGetUniformui64vNV(arg0: int, arg1: int, arg2: list[int]) -> None: ...

  @staticmethod
  @overload
  def glGetUniformui64vNV(arg0: int, arg1: int, arg2: LongBuffer) -> None: ...

  @staticmethod
  def glProgramUniform1i64NV(arg0: int, arg1: int, arg2: int) -> None: ...

  @staticmethod
  @overload
  def glProgramUniform1i64vNV(arg0: int, arg1: int, arg2: list[int]) -> None: ...

  @staticmethod
  @overload
  def glProgramUniform1i64vNV(arg0: int, arg1: int, arg2: LongBuffer) -> None: ...

  @staticmethod
  def glProgramUniform1ui64NV(arg0: int, arg1: int, arg2: int) -> None: ...

  @staticmethod
  @overload
  def glProgramUniform1ui64vNV(arg0: int, arg1: int, arg2: list[int]) -> None: ...

  @staticmethod
  @overload
  def glProgramUniform1ui64vNV(arg0: int, arg1: int, arg2: LongBuffer) -> None: ...

  @staticmethod
  def glProgramUniform2i64NV(arg0: int, arg1: int, arg2: int, arg3: int) -> None: ...

  @staticmethod
  @overload
  def glProgramUniform2i64vNV(arg0: int, arg1: int, arg2: list[int]) -> None: ...

  @staticmethod
  @overload
  def glProgramUniform2i64vNV(arg0: int, arg1: int, arg2: LongBuffer) -> None: ...

  @staticmethod
  def glProgramUniform2ui64NV(arg0: int, arg1: int, arg2: int, arg3: int) -> None: ...

  @staticmethod
  @overload
  def glProgramUniform2ui64vNV(arg0: int, arg1: int, arg2: list[int]) -> None: ...

  @staticmethod
  @overload
  def glProgramUniform2ui64vNV(arg0: int, arg1: int, arg2: LongBuffer) -> None: ...

  @staticmethod
  def glProgramUniform3i64NV(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int) -> None: ...

  @staticmethod
  @overload
  def glProgramUniform3i64vNV(arg0: int, arg1: int, arg2: list[int]) -> None: ...

  @staticmethod
  @overload
  def glProgramUniform3i64vNV(arg0: int, arg1: int, arg2: LongBuffer) -> None: ...

  @staticmethod
  def glProgramUniform3ui64NV(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int) -> None: ...

  @staticmethod
  @overload
  def glProgramUniform3ui64vNV(arg0: int, arg1: int, arg2: list[int]) -> None: ...

  @staticmethod
  @overload
  def glProgramUniform3ui64vNV(arg0: int, arg1: int, arg2: LongBuffer) -> None: ...

  @staticmethod
  def glProgramUniform4i64NV(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int) -> None: ...

  @staticmethod
  @overload
  def glProgramUniform4i64vNV(arg0: int, arg1: int, arg2: list[int]) -> None: ...

  @staticmethod
  @overload
  def glProgramUniform4i64vNV(arg0: int, arg1: int, arg2: LongBuffer) -> None: ...

  @staticmethod
  def glProgramUniform4ui64NV(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int) -> None: ...

  @staticmethod
  @overload
  def glProgramUniform4ui64vNV(arg0: int, arg1: int, arg2: list[int]) -> None: ...

  @staticmethod
  @overload
  def glProgramUniform4ui64vNV(arg0: int, arg1: int, arg2: LongBuffer) -> None: ...

  @staticmethod
  def glUniform1i64NV(arg0: int, arg1: int) -> None: ...

  @staticmethod
  @overload
  def glUniform1i64vNV(arg0: int, arg1: list[int]) -> None: ...

  @staticmethod
  @overload
  def glUniform1i64vNV(arg0: int, arg1: LongBuffer) -> None: ...

  @staticmethod
  def glUniform1ui64NV(arg0: int, arg1: int) -> None: ...

  @staticmethod
  @overload
  def glUniform1ui64vNV(arg0: int, arg1: list[int]) -> None: ...

  @staticmethod
  @overload
  def glUniform1ui64vNV(arg0: int, arg1: LongBuffer) -> None: ...

  @staticmethod
  def glUniform2i64NV(arg0: int, arg1: int, arg2: int) -> None: ...

  @staticmethod
  @overload
  def glUniform2i64vNV(arg0: int, arg1: list[int]) -> None: ...

  @staticmethod
  @overload
  def glUniform2i64vNV(arg0: int, arg1: LongBuffer) -> None: ...

  @staticmethod
  def glUniform2ui64NV(arg0: int, arg1: int, arg2: int) -> None: ...

  @staticmethod
  @overload
  def glUniform2ui64vNV(arg0: int, arg1: list[int]) -> None: ...

  @staticmethod
  @overload
  def glUniform2ui64vNV(arg0: int, arg1: LongBuffer) -> None: ...

  @staticmethod
  def glUniform3i64NV(arg0: int, arg1: int, arg2: int, arg3: int) -> None: ...

  @staticmethod
  @overload
  def glUniform3i64vNV(arg0: int, arg1: list[int]) -> None: ...

  @staticmethod
  @overload
  def glUniform3i64vNV(arg0: int, arg1: LongBuffer) -> None: ...

  @staticmethod
  def glUniform3ui64NV(arg0: int, arg1: int, arg2: int, arg3: int) -> None: ...

  @staticmethod
  @overload
  def glUniform3ui64vNV(arg0: int, arg1: list[int]) -> None: ...

  @staticmethod
  @overload
  def glUniform3ui64vNV(arg0: int, arg1: LongBuffer) -> None: ...

  @staticmethod
  def glUniform4i64NV(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int) -> None: ...

  @staticmethod
  @overload
  def glUniform4i64vNV(arg0: int, arg1: list[int]) -> None: ...

  @staticmethod
  @overload
  def glUniform4i64vNV(arg0: int, arg1: LongBuffer) -> None: ...

  @staticmethod
  def glUniform4ui64NV(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int) -> None: ...

  @staticmethod
  @overload
  def glUniform4ui64vNV(arg0: int, arg1: list[int]) -> None: ...

  @staticmethod
  @overload
  def glUniform4ui64vNV(arg0: int, arg1: LongBuffer) -> None: ...

  @staticmethod
  def nglGetUniformi64vNV(arg0: int, arg1: int, arg2: int) -> None: ...

  @staticmethod
  def nglGetUniformui64vNV(arg0: int, arg1: int, arg2: int) -> None: ...

  @staticmethod
  def nglProgramUniform1i64vNV(arg0: int, arg1: int, arg2: int, arg3: int) -> None: ...

  @staticmethod
  def nglProgramUniform1ui64vNV(arg0: int, arg1: int, arg2: int, arg3: int) -> None: ...

  @staticmethod
  def nglProgramUniform2i64vNV(arg0: int, arg1: int, arg2: int, arg3: int) -> None: ...

  @staticmethod
  def nglProgramUniform2ui64vNV(arg0: int, arg1: int, arg2: int, arg3: int) -> None: ...

  @staticmethod
  def nglProgramUniform3i64vNV(arg0: int, arg1: int, arg2: int, arg3: int) -> None: ...

  @staticmethod
  def nglProgramUniform3ui64vNV(arg0: int, arg1: int, arg2: int, arg3: int) -> None: ...

  @staticmethod
  def nglProgramUniform4i64vNV(arg0: int, arg1: int, arg2: int, arg3: int) -> None: ...

  @staticmethod
  def nglProgramUniform4ui64vNV(arg0: int, arg1: int, arg2: int, arg3: int) -> None: ...

  @staticmethod
  def nglUniform1i64vNV(arg0: int, arg1: int, arg2: int) -> None: ...

  @staticmethod
  def nglUniform1ui64vNV(arg0: int, arg1: int, arg2: int) -> None: ...

  @staticmethod
  def nglUniform2i64vNV(arg0: int, arg1: int, arg2: int) -> None: ...

  @staticmethod
  def nglUniform2ui64vNV(arg0: int, arg1: int, arg2: int) -> None: ...

  @staticmethod
  def nglUniform3i64vNV(arg0: int, arg1: int, arg2: int) -> None: ...

  @staticmethod
  def nglUniform3ui64vNV(arg0: int, arg1: int, arg2: int) -> None: ...

  @staticmethod
  def nglUniform4i64vNV(arg0: int, arg1: int, arg2: int) -> None: ...

  @staticmethod
  def nglUniform4ui64vNV(arg0: int, arg1: int, arg2: int) -> None: ...


class AMDInterleavedElements:

  GL_VERTEX_ELEMENT_SWIZZLE_AMD: int

  GL_VERTEX_ID_SWIZZLE_AMD: int

  @staticmethod
  def glVertexAttribParameteriAMD(arg0: int, arg1: int, arg2: int) -> None: ...


class AMDOcclusionQueryEvent:

  GL_OCCLUSION_QUERY_EVENT_MASK_AMD: int

  GL_QUERY_ALL_EVENT_BITS_AMD: int

  GL_QUERY_DEPTH_BOUNDS_FAIL_EVENT_BIT_AMD: int

  GL_QUERY_DEPTH_FAIL_EVENT_BIT_AMD: int

  GL_QUERY_DEPTH_PASS_EVENT_BIT_AMD: int

  GL_QUERY_STENCIL_FAIL_EVENT_BIT_AMD: int

  @staticmethod
  def glQueryObjectParameteruiAMD(arg0: int, arg1: int, arg2: int, arg3: int) -> None: ...


class AMDPerformanceMonitor:

  GL_COUNTER_RANGE_AMD: int

  GL_COUNTER_TYPE_AMD: int

  GL_PERCENTAGE_AMD: int

  GL_PERFMON_RESULT_AMD: int

  GL_PERFMON_RESULT_AVAILABLE_AMD: int

  GL_PERFMON_RESULT_SIZE_AMD: int

  GL_UNSIGNED_INT64_AMD: int

  @staticmethod
  def glBeginPerfMonitorAMD(arg0: int) -> None: ...

  @staticmethod
  @overload
  def glDeletePerfMonitorsAMD(arg0: list[int]) -> None: ...

  @staticmethod
  @overload
  def glDeletePerfMonitorsAMD(arg0: int) -> None: ...

  @staticmethod
  @overload
  def glDeletePerfMonitorsAMD(arg0: IntBuffer) -> None: ...

  @staticmethod
  def glEndPerfMonitorAMD(arg0: int) -> None: ...

  @staticmethod
  @overload
  def glGenPerfMonitorsAMD() -> int: ...

  @staticmethod
  @overload
  def glGenPerfMonitorsAMD(arg0: list[int]) -> None: ...

  @staticmethod
  @overload
  def glGenPerfMonitorsAMD(arg0: IntBuffer) -> None: ...

  @staticmethod
  @overload
  def glGetPerfMonitorCounterDataAMD(arg0: int, arg1: int, arg2: list[int], arg3: list[int]) -> None: ...

  @staticmethod
  @overload
  def glGetPerfMonitorCounterDataAMD(arg0: int, arg1: int, arg2: IntBuffer, arg3: IntBuffer) -> None: ...

  @staticmethod
  @overload
  def glGetPerfMonitorCounterInfoAMD(arg0: int, arg1: int, arg2: int, arg3: list[float]) -> None: ...

  @staticmethod
  @overload
  def glGetPerfMonitorCounterInfoAMD(arg0: int, arg1: int, arg2: int, arg3: list[int]) -> None: ...

  @staticmethod
  @overload
  def glGetPerfMonitorCounterInfoAMD(arg0: int, arg1: int, arg2: int, arg3: ByteBuffer) -> None: ...

  @staticmethod
  @overload
  def glGetPerfMonitorCounterInfoAMD(arg0: int, arg1: int, arg2: int, arg3: FloatBuffer) -> None: ...

  @staticmethod
  @overload
  def glGetPerfMonitorCounterInfoAMD(arg0: int, arg1: int, arg2: int, arg3: IntBuffer) -> None: ...

  @staticmethod
  @overload
  def glGetPerfMonitorCounterStringAMD(arg0: int, arg1: int, arg2: list[int], arg3: ByteBuffer) -> None: ...

  @staticmethod
  @overload
  def glGetPerfMonitorCounterStringAMD(arg0: int, arg1: int, arg2: IntBuffer, arg3: ByteBuffer) -> None: ...

  @staticmethod
  @overload
  def glGetPerfMonitorCountersAMD(arg0: int, arg1: list[int], arg2: list[int], arg3: list[int]) -> None: ...

  @staticmethod
  @overload
  def glGetPerfMonitorCountersAMD(arg0: int, arg1: IntBuffer, arg2: IntBuffer, arg3: IntBuffer) -> None: ...

  @staticmethod
  @overload
  def glGetPerfMonitorGroupStringAMD(arg0: int, arg1: list[int], arg2: ByteBuffer) -> None: ...

  @staticmethod
  @overload
  def glGetPerfMonitorGroupStringAMD(arg0: int, arg1: IntBuffer, arg2: ByteBuffer) -> None: ...

  @staticmethod
  @overload
  def glGetPerfMonitorGroupsAMD(arg0: list[int], arg1: list[int]) -> None: ...

  @staticmethod
  @overload
  def glGetPerfMonitorGroupsAMD(arg0: IntBuffer, arg1: IntBuffer) -> None: ...

  @staticmethod
  @overload
  def glSelectPerfMonitorCountersAMD(arg0: int, arg1: bool, arg2: int, arg3: list[int]) -> None: ...

  @staticmethod
  @overload
  def glSelectPerfMonitorCountersAMD(arg0: int, arg1: bool, arg2: int, arg3: IntBuffer) -> None: ...

  @staticmethod
  def nglDeletePerfMonitorsAMD(arg0: int, arg1: int) -> None: ...

  @staticmethod
  def nglGenPerfMonitorsAMD(arg0: int, arg1: int) -> None: ...

  @staticmethod
  def nglGetPerfMonitorCounterDataAMD(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int) -> None: ...

  @staticmethod
  def nglGetPerfMonitorCounterInfoAMD(arg0: int, arg1: int, arg2: int, arg3: int) -> None: ...

  @staticmethod
  def nglGetPerfMonitorCounterStringAMD(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int) -> None: ...

  @staticmethod
  def nglGetPerfMonitorCountersAMD(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int) -> None: ...

  @staticmethod
  def nglGetPerfMonitorGroupStringAMD(arg0: int, arg1: int, arg2: int, arg3: int) -> None: ...

  @staticmethod
  def nglGetPerfMonitorGroupsAMD(arg0: int, arg1: int, arg2: int) -> None: ...

  @staticmethod
  def nglSelectPerfMonitorCountersAMD(arg0: int, arg1: bool, arg2: int, arg3: int, arg4: int) -> None: ...


class AMDPinnedMemory:

  GL_EXTERNAL_VIRTUAL_MEMORY_BUFFER_AMD: int


class AMDQueryBufferObject:

  GL_QUERY_BUFFER_AMD: int

  GL_QUERY_BUFFER_BINDING_AMD: int

  GL_QUERY_RESULT_NO_WAIT_AMD: int


class AMDSamplePositions:

  GL_SUBSAMPLE_DISTANCE_AMD: int

  @staticmethod
  @overload
  def glSetMultisamplefvAMD(arg0: int, arg1: int, arg2: list[float]) -> None: ...

  @staticmethod
  @overload
  def glSetMultisamplefvAMD(arg0: int, arg1: int, arg2: FloatBuffer) -> None: ...

  @staticmethod
  def nglSetMultisamplefvAMD(arg0: int, arg1: int, arg2: int) -> None: ...


class AMDSeamlessCubemapPerTexture:

  GL_TEXTURE_CUBE_MAP_SEAMLESS: int


class AMDSparseTexture:

  GL_MAX_SPARSE_3D_TEXTURE_SIZE_AMD: int

  GL_MAX_SPARSE_ARRAY_TEXTURE_LAYERS: int

  GL_MAX_SPARSE_TEXTURE_SIZE_AMD: int

  GL_MIN_LOD_WARNING_AMD: int

  GL_MIN_SPARSE_LEVEL_AMD: int

  GL_TEXTURE_STORAGE_SPARSE_BIT_AMD: int

  GL_VIRTUAL_PAGE_SIZE_X_AMD: int

  GL_VIRTUAL_PAGE_SIZE_Y_AMD: int

  GL_VIRTUAL_PAGE_SIZE_Z_AMD: int

  @staticmethod
  def glTexStorageSparseAMD(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int) -> None: ...

  @staticmethod
  def glTextureStorageSparseAMD(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int, arg7: int) -> None: ...


class AMDStencilOperationExtended:

  GL_REPLACE_VALUE_AMD: int

  GL_SET_AMD: int

  GL_STENCIL_BACK_OP_VALUE_AMD: int

  GL_STENCIL_OP_VALUE_AMD: int

  @staticmethod
  def glStencilOpValueAMD(arg0: int, arg1: int) -> None: ...


class AMDTransformFeedback4:

  GL_STREAM_RASTERIZATION_AMD: int


class AMDVertexShaderTessellator:

  GL_CONTINUOUS_AMD: int

  GL_DISCRETE_AMD: int

  GL_INT_SAMPLER_BUFFER_AMD: int

  GL_SAMPLER_BUFFER_AMD: int

  GL_TESSELLATION_FACTOR_AMD: int

  GL_TESSELLATION_MODE_AMD: int

  GL_UNSIGNED_INT_SAMPLER_BUFFER_AMD: int

  @staticmethod
  def glTessellationFactorAMD(arg0: float) -> None: ...

  @staticmethod
  def glTessellationModeAMD(arg0: int) -> None: ...


class ARBBaseInstance:

  @staticmethod
  def glDrawArraysInstancedBaseInstance(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int) -> None: ...

  @staticmethod
  @overload
  def glDrawElementsInstancedBaseInstance(arg0: int, arg1: ByteBuffer, arg2: int, arg3: int) -> None: ...

  @staticmethod
  @overload
  def glDrawElementsInstancedBaseInstance(arg0: int, arg1: IntBuffer, arg2: int, arg3: int) -> None: ...

  @staticmethod
  @overload
  def glDrawElementsInstancedBaseInstance(arg0: int, arg1: ShortBuffer, arg2: int, arg3: int) -> None: ...

  @staticmethod
  @overload
  def glDrawElementsInstancedBaseInstance(arg0: int, arg1: int, arg2: ByteBuffer, arg3: int, arg4: int) -> None: ...

  @staticmethod
  @overload
  def glDrawElementsInstancedBaseInstance(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int) -> None: ...

  @staticmethod
  @overload
  def glDrawElementsInstancedBaseVertexBaseInstance(arg0: int, arg1: ByteBuffer, arg2: int, arg3: int, arg4: int) -> None: ...

  @staticmethod
  @overload
  def glDrawElementsInstancedBaseVertexBaseInstance(arg0: int, arg1: IntBuffer, arg2: int, arg3: int, arg4: int) -> None: ...

  @staticmethod
  @overload
  def glDrawElementsInstancedBaseVertexBaseInstance(arg0: int, arg1: ShortBuffer, arg2: int, arg3: int, arg4: int) -> None: ...

  @staticmethod
  @overload
  def glDrawElementsInstancedBaseVertexBaseInstance(arg0: int, arg1: int, arg2: ByteBuffer, arg3: int, arg4: int, arg5: int) -> None: ...

  @staticmethod
  @overload
  def glDrawElementsInstancedBaseVertexBaseInstance(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int) -> None: ...

  @staticmethod
  def nglDrawElementsInstancedBaseInstance(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int) -> None: ...

  @staticmethod
  def nglDrawElementsInstancedBaseVertexBaseInstance(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int) -> None: ...


class ARBBindlessTexture:

  GL_UNSIGNED_INT64_ARB: int

  @staticmethod
  def glGetImageHandleARB(arg0: int, arg1: int, arg2: bool, arg3: int, arg4: int) -> int: ...

  @staticmethod
  def glGetTextureHandleARB(arg0: int) -> int: ...

  @staticmethod
  def glGetTextureSamplerHandleARB(arg0: int, arg1: int) -> int: ...

  @staticmethod
  def glGetVertexAttribLui64ARB(arg0: int, arg1: int) -> int: ...

  @staticmethod
  @overload
  def glGetVertexAttribLui64vARB(arg0: int, arg1: int, arg2: list[int]) -> None: ...

  @staticmethod
  @overload
  def glGetVertexAttribLui64vARB(arg0: int, arg1: int, arg2: LongBuffer) -> None: ...

  @staticmethod
  def glIsImageHandleResidentARB(arg0: int) -> bool: ...

  @staticmethod
  def glIsTextureHandleResidentARB(arg0: int) -> bool: ...

  @staticmethod
  def glMakeImageHandleNonResidentARB(arg0: int) -> None: ...

  @staticmethod
  def glMakeImageHandleResidentARB(arg0: int, arg1: int) -> None: ...

  @staticmethod
  def glMakeTextureHandleNonResidentARB(arg0: int) -> None: ...

  @staticmethod
  def glMakeTextureHandleResidentARB(arg0: int) -> None: ...

  @staticmethod
  def glProgramUniformHandleui64ARB(arg0: int, arg1: int, arg2: int) -> None: ...

  @staticmethod
  @overload
  def glProgramUniformHandleui64vARB(arg0: int, arg1: int, arg2: list[int]) -> None: ...

  @staticmethod
  @overload
  def glProgramUniformHandleui64vARB(arg0: int, arg1: int, arg2: LongBuffer) -> None: ...

  @staticmethod
  def glUniformHandleui64ARB(arg0: int, arg1: int) -> None: ...

  @staticmethod
  @overload
  def glUniformHandleui64vARB(arg0: int, arg1: list[int]) -> None: ...

  @staticmethod
  @overload
  def glUniformHandleui64vARB(arg0: int, arg1: LongBuffer) -> None: ...

  @staticmethod
  def glVertexAttribL1ui64ARB(arg0: int, arg1: int) -> None: ...

  @staticmethod
  @overload
  def glVertexAttribL1ui64vARB(arg0: int, arg1: list[int]) -> None: ...

  @staticmethod
  @overload
  def glVertexAttribL1ui64vARB(arg0: int, arg1: LongBuffer) -> None: ...

  @staticmethod
  def nglGetVertexAttribLui64vARB(arg0: int, arg1: int, arg2: int) -> None: ...

  @staticmethod
  def nglProgramUniformHandleui64vARB(arg0: int, arg1: int, arg2: int, arg3: int) -> None: ...

  @staticmethod
  def nglUniformHandleui64vARB(arg0: int, arg1: int, arg2: int) -> None: ...

  @staticmethod
  def nglVertexAttribL1ui64vARB(arg0: int, arg1: int) -> None: ...


class ARBBlendFuncExtended:

  GL_MAX_DUAL_SOURCE_DRAW_BUFFERS: int

  GL_ONE_MINUS_SRC1_ALPHA: int

  GL_ONE_MINUS_SRC1_COLOR: int

  GL_SRC1_COLOR: int

  @staticmethod
  @overload
  def glBindFragDataLocationIndexed(arg0: int, arg1: int, arg2: int, arg3: CharSequence) -> None: ...

  @staticmethod
  @overload
  def glBindFragDataLocationIndexed(arg0: int, arg1: int, arg2: int, arg3: ByteBuffer) -> None: ...

  @staticmethod
  @overload
  def glGetFragDataIndex(arg0: int, arg1: CharSequence) -> int: ...

  @staticmethod
  @overload
  def glGetFragDataIndex(arg0: int, arg1: ByteBuffer) -> int: ...

  @staticmethod
  def nglBindFragDataLocationIndexed(arg0: int, arg1: int, arg2: int, arg3: int) -> None: ...

  @staticmethod
  def nglGetFragDataIndex(arg0: int, arg1: int) -> int: ...


class ARBBufferStorage:

  GL_BUFFER_IMMUTABLE_STORAGE: int

  GL_BUFFER_STORAGE_FLAGS: int

  GL_CLIENT_MAPPED_BUFFER_BARRIER_BIT: int

  GL_CLIENT_STORAGE_BIT: int

  GL_DYNAMIC_STORAGE_BIT: int

  GL_MAP_COHERENT_BIT: int

  GL_MAP_PERSISTENT_BIT: int

  @staticmethod
  @overload
  def glBufferStorage(arg0: int, arg1: list[float], arg2: int) -> None: ...

  @staticmethod
  @overload
  def glBufferStorage(arg0: int, arg1: list[float], arg2: int) -> None: ...

  @staticmethod
  @overload
  def glBufferStorage(arg0: int, arg1: list[int], arg2: int) -> None: ...

  @staticmethod
  @overload
  def glBufferStorage(arg0: int, arg1: list[int], arg2: int) -> None: ...

  @staticmethod
  @overload
  def glBufferStorage(arg0: int, arg1: ByteBuffer, arg2: int) -> None: ...

  @staticmethod
  @overload
  def glBufferStorage(arg0: int, arg1: DoubleBuffer, arg2: int) -> None: ...

  @staticmethod
  @overload
  def glBufferStorage(arg0: int, arg1: FloatBuffer, arg2: int) -> None: ...

  @staticmethod
  @overload
  def glBufferStorage(arg0: int, arg1: IntBuffer, arg2: int) -> None: ...

  @staticmethod
  @overload
  def glBufferStorage(arg0: int, arg1: ShortBuffer, arg2: int) -> None: ...

  @staticmethod
  @overload
  def glBufferStorage(arg0: int, arg1: int, arg2: int) -> None: ...

  @staticmethod
  @overload
  def glNamedBufferStorageEXT(arg0: int, arg1: list[float], arg2: int) -> None: ...

  @staticmethod
  @overload
  def glNamedBufferStorageEXT(arg0: int, arg1: list[float], arg2: int) -> None: ...

  @staticmethod
  @overload
  def glNamedBufferStorageEXT(arg0: int, arg1: list[int], arg2: int) -> None: ...

  @staticmethod
  @overload
  def glNamedBufferStorageEXT(arg0: int, arg1: list[int], arg2: int) -> None: ...

  @staticmethod
  @overload
  def glNamedBufferStorageEXT(arg0: int, arg1: ByteBuffer, arg2: int) -> None: ...

  @staticmethod
  @overload
  def glNamedBufferStorageEXT(arg0: int, arg1: DoubleBuffer, arg2: int) -> None: ...

  @staticmethod
  @overload
  def glNamedBufferStorageEXT(arg0: int, arg1: FloatBuffer, arg2: int) -> None: ...

  @staticmethod
  @overload
  def glNamedBufferStorageEXT(arg0: int, arg1: IntBuffer, arg2: int) -> None: ...

  @staticmethod
  @overload
  def glNamedBufferStorageEXT(arg0: int, arg1: ShortBuffer, arg2: int) -> None: ...

  @staticmethod
  @overload
  def glNamedBufferStorageEXT(arg0: int, arg1: int, arg2: int) -> None: ...

  @staticmethod
  def nglBufferStorage(arg0: int, arg1: int, arg2: int, arg3: int) -> None: ...

  @staticmethod
  def nglNamedBufferStorageEXT(arg0: int, arg1: int, arg2: int, arg3: int) -> None: ...


class ARBCLEvent:

  GL_SYNC_CL_EVENT_ARB: int

  GL_SYNC_CL_EVENT_COMPLETE_ARB: int

  @staticmethod
  def glCreateSyncFromCLeventARB(arg0: int, arg1: int, arg2: int) -> int: ...

  @staticmethod
  def nglCreateSyncFromCLeventARB(arg0: int, arg1: int, arg2: int) -> int: ...


class ARBClearBufferObject:

  @staticmethod
  @overload
  def glClearBufferData(arg0: int, arg1: int, arg2: int, arg3: int, arg4: list[float]) -> None: ...

  @staticmethod
  @overload
  def glClearBufferData(arg0: int, arg1: int, arg2: int, arg3: int, arg4: list[int]) -> None: ...

  @staticmethod
  @overload
  def glClearBufferData(arg0: int, arg1: int, arg2: int, arg3: int, arg4: list[int]) -> None: ...

  @staticmethod
  @overload
  def glClearBufferData(arg0: int, arg1: int, arg2: int, arg3: int, arg4: ByteBuffer) -> None: ...

  @staticmethod
  @overload
  def glClearBufferData(arg0: int, arg1: int, arg2: int, arg3: int, arg4: FloatBuffer) -> None: ...

  @staticmethod
  @overload
  def glClearBufferData(arg0: int, arg1: int, arg2: int, arg3: int, arg4: IntBuffer) -> None: ...

  @staticmethod
  @overload
  def glClearBufferData(arg0: int, arg1: int, arg2: int, arg3: int, arg4: ShortBuffer) -> None: ...

  @staticmethod
  @overload
  def glClearBufferSubData(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: list[float]) -> None: ...

  @staticmethod
  @overload
  def glClearBufferSubData(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: list[int]) -> None: ...

  @staticmethod
  @overload
  def glClearBufferSubData(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: list[int]) -> None: ...

  @staticmethod
  @overload
  def glClearBufferSubData(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: ByteBuffer) -> None: ...

  @staticmethod
  @overload
  def glClearBufferSubData(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: FloatBuffer) -> None: ...

  @staticmethod
  @overload
  def glClearBufferSubData(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: IntBuffer) -> None: ...

  @staticmethod
  @overload
  def glClearBufferSubData(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: ShortBuffer) -> None: ...

  @staticmethod
  @overload
  def glClearNamedBufferDataEXT(arg0: int, arg1: int, arg2: int, arg3: int, arg4: list[float]) -> None: ...

  @staticmethod
  @overload
  def glClearNamedBufferDataEXT(arg0: int, arg1: int, arg2: int, arg3: int, arg4: list[int]) -> None: ...

  @staticmethod
  @overload
  def glClearNamedBufferDataEXT(arg0: int, arg1: int, arg2: int, arg3: int, arg4: list[int]) -> None: ...

  @staticmethod
  @overload
  def glClearNamedBufferDataEXT(arg0: int, arg1: int, arg2: int, arg3: int, arg4: ByteBuffer) -> None: ...

  @staticmethod
  @overload
  def glClearNamedBufferDataEXT(arg0: int, arg1: int, arg2: int, arg3: int, arg4: FloatBuffer) -> None: ...

  @staticmethod
  @overload
  def glClearNamedBufferDataEXT(arg0: int, arg1: int, arg2: int, arg3: int, arg4: IntBuffer) -> None: ...

  @staticmethod
  @overload
  def glClearNamedBufferDataEXT(arg0: int, arg1: int, arg2: int, arg3: int, arg4: ShortBuffer) -> None: ...

  @staticmethod
  @overload
  def glClearNamedBufferSubDataEXT(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: list[float]) -> None: ...

  @staticmethod
  @overload
  def glClearNamedBufferSubDataEXT(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: list[int]) -> None: ...

  @staticmethod
  @overload
  def glClearNamedBufferSubDataEXT(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: list[int]) -> None: ...

  @staticmethod
  @overload
  def glClearNamedBufferSubDataEXT(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: ByteBuffer) -> None: ...

  @staticmethod
  @overload
  def glClearNamedBufferSubDataEXT(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: FloatBuffer) -> None: ...

  @staticmethod
  @overload
  def glClearNamedBufferSubDataEXT(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: IntBuffer) -> None: ...

  @staticmethod
  @overload
  def glClearNamedBufferSubDataEXT(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: ShortBuffer) -> None: ...

  @staticmethod
  def nglClearBufferData(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int) -> None: ...

  @staticmethod
  def nglClearBufferSubData(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int) -> None: ...

  @staticmethod
  def nglClearNamedBufferDataEXT(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int) -> None: ...

  @staticmethod
  def nglClearNamedBufferSubDataEXT(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int) -> None: ...


class ARBClearTexture:

  GL_CLEAR_TEXTURE: int

  @staticmethod
  @overload
  def glClearTexImage(arg0: int, arg1: int, arg2: int, arg3: int, arg4: list[float]) -> None: ...

  @staticmethod
  @overload
  def glClearTexImage(arg0: int, arg1: int, arg2: int, arg3: int, arg4: list[float]) -> None: ...

  @staticmethod
  @overload
  def glClearTexImage(arg0: int, arg1: int, arg2: int, arg3: int, arg4: list[int]) -> None: ...

  @staticmethod
  @overload
  def glClearTexImage(arg0: int, arg1: int, arg2: int, arg3: int, arg4: list[int]) -> None: ...

  @staticmethod
  @overload
  def glClearTexImage(arg0: int, arg1: int, arg2: int, arg3: int, arg4: ByteBuffer) -> None: ...

  @staticmethod
  @overload
  def glClearTexImage(arg0: int, arg1: int, arg2: int, arg3: int, arg4: DoubleBuffer) -> None: ...

  @staticmethod
  @overload
  def glClearTexImage(arg0: int, arg1: int, arg2: int, arg3: int, arg4: FloatBuffer) -> None: ...

  @staticmethod
  @overload
  def glClearTexImage(arg0: int, arg1: int, arg2: int, arg3: int, arg4: IntBuffer) -> None: ...

  @staticmethod
  @overload
  def glClearTexImage(arg0: int, arg1: int, arg2: int, arg3: int, arg4: ShortBuffer) -> None: ...

  @staticmethod
  @overload
  def glClearTexSubImage(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int, arg7: int, arg8: int, arg9: int, arg10: list[float]) -> None: ...

  @staticmethod
  @overload
  def glClearTexSubImage(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int, arg7: int, arg8: int, arg9: int, arg10: list[float]) -> None: ...

  @staticmethod
  @overload
  def glClearTexSubImage(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int, arg7: int, arg8: int, arg9: int, arg10: list[int]) -> None: ...

  @staticmethod
  @overload
  def glClearTexSubImage(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int, arg7: int, arg8: int, arg9: int, arg10: list[int]) -> None: ...

  @staticmethod
  @overload
  def glClearTexSubImage(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int, arg7: int, arg8: int, arg9: int, arg10: ByteBuffer) -> None: ...

  @staticmethod
  @overload
  def glClearTexSubImage(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int, arg7: int, arg8: int, arg9: int, arg10: DoubleBuffer) -> None: ...

  @staticmethod
  @overload
  def glClearTexSubImage(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int, arg7: int, arg8: int, arg9: int, arg10: FloatBuffer) -> None: ...

  @staticmethod
  @overload
  def glClearTexSubImage(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int, arg7: int, arg8: int, arg9: int, arg10: IntBuffer) -> None: ...

  @staticmethod
  @overload
  def glClearTexSubImage(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int, arg7: int, arg8: int, arg9: int, arg10: ShortBuffer) -> None: ...

  @staticmethod
  def nglClearTexImage(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int) -> None: ...

  @staticmethod
  def nglClearTexSubImage(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int, arg7: int, arg8: int, arg9: int, arg10: int) -> None: ...


class ARBClipControl:

  GL_CLIP_DEPTH_MODE: int

  GL_CLIP_ORIGIN: int

  GL_LOWER_LEFT: int

  GL_NEGATIVE_ONE_TO_ONE: int

  GL_UPPER_LEFT: int

  GL_ZERO_TO_ONE: int

  @staticmethod
  def glClipControl(arg0: int, arg1: int) -> None: ...


class ARBColorBufferFloat:

  GL_CLAMP_FRAGMENT_COLOR_ARB: int

  GL_CLAMP_READ_COLOR_ARB: int

  GL_CLAMP_VERTEX_COLOR_ARB: int

  GL_FIXED_ONLY_ARB: int

  GL_RGBA_FLOAT_MODE_ARB: int

  @staticmethod
  def glClampColorARB(arg0: int, arg1: int) -> None: ...


class ARBCompressedTexturePixelStorage:

  GL_PACK_COMPRESSED_BLOCK_DEPTH: int

  GL_PACK_COMPRESSED_BLOCK_HEIGHT: int

  GL_PACK_COMPRESSED_BLOCK_SIZE: int

  GL_PACK_COMPRESSED_BLOCK_WIDTH: int

  GL_UNPACK_COMPRESSED_BLOCK_DEPTH: int

  GL_UNPACK_COMPRESSED_BLOCK_HEIGHT: int

  GL_UNPACK_COMPRESSED_BLOCK_SIZE: int

  GL_UNPACK_COMPRESSED_BLOCK_WIDTH: int


class ARBComputeShader:

  GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_COMPUTE_SHADER: int

  GL_COMPUTE_SHADER: int

  GL_COMPUTE_SHADER_BIT: int

  GL_COMPUTE_WORK_GROUP_SIZE: int

  GL_DISPATCH_INDIRECT_BUFFER: int

  GL_DISPATCH_INDIRECT_BUFFER_BINDING: int

  GL_MAX_COMBINED_COMPUTE_UNIFORM_COMPONENTS: int

  GL_MAX_COMPUTE_ATOMIC_COUNTER_BUFFERS: int

  GL_MAX_COMPUTE_ATOMIC_COUNTERS: int

  GL_MAX_COMPUTE_IMAGE_UNIFORMS: int

  GL_MAX_COMPUTE_SHARED_MEMORY_SIZE: int

  GL_MAX_COMPUTE_TEXTURE_IMAGE_UNITS: int

  GL_MAX_COMPUTE_UNIFORM_BLOCKS: int

  GL_MAX_COMPUTE_UNIFORM_COMPONENTS: int

  GL_MAX_COMPUTE_WORK_GROUP_COUNT: int

  GL_MAX_COMPUTE_WORK_GROUP_INVOCATIONS: int

  GL_MAX_COMPUTE_WORK_GROUP_SIZE: int

  GL_UNIFORM_BLOCK_REFERENCED_BY_COMPUTE_SHADER: int

  @staticmethod
  def glDispatchCompute(arg0: int, arg1: int, arg2: int) -> None: ...

  @staticmethod
  def glDispatchComputeIndirect(arg0: int) -> None: ...


class ARBComputeVariableGroupSize:

  GL_MAX_COMPUTE_FIXED_GROUP_INVOCATIONS_ARB: int

  GL_MAX_COMPUTE_FIXED_GROUP_SIZE_ARB: int

  GL_MAX_COMPUTE_VARIABLE_GROUP_INVOCATIONS_ARB: int

  GL_MAX_COMPUTE_VARIABLE_GROUP_SIZE_ARB: int

  @staticmethod
  def glDispatchComputeGroupSizeARB(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int) -> None: ...


class ARBConditionalRenderInverted:

  GL_QUERY_BY_REGION_NO_WAIT_INVERTED: int

  GL_QUERY_BY_REGION_WAIT_INVERTED: int

  GL_QUERY_NO_WAIT_INVERTED: int

  GL_QUERY_WAIT_INVERTED: int


class ARBCopyBuffer:

  GL_COPY_READ_BUFFER: int

  GL_COPY_WRITE_BUFFER: int

  @staticmethod
  def glCopyBufferSubData(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int) -> None: ...


class ARBCopyImage:

  @staticmethod
  def glCopyImageSubData(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int, arg7: int, arg8: int, arg9: int, arg10: int, arg11: int, arg12: int, arg13: int, arg14: int) -> None: ...


class ARBCullDistance:

  GL_MAX_COMBINED_CLIP_AND_CULL_DISTANCES: int

  GL_MAX_CULL_DISTANCES: int


class ARBDebugOutput:

  GL_DEBUG_CALLBACK_FUNCTION_ARB: int

  GL_DEBUG_CALLBACK_USER_PARAM_ARB: int

  GL_DEBUG_LOGGED_MESSAGES_ARB: int

  GL_DEBUG_NEXT_LOGGED_MESSAGE_LENGTH_ARB: int

  GL_DEBUG_OUTPUT_SYNCHRONOUS_ARB: int

  GL_DEBUG_SEVERITY_HIGH_ARB: int

  GL_DEBUG_SEVERITY_LOW_ARB: int

  GL_DEBUG_SEVERITY_MEDIUM_ARB: int

  GL_DEBUG_SOURCE_API_ARB: int

  GL_DEBUG_SOURCE_APPLICATION_ARB: int

  GL_DEBUG_SOURCE_OTHER_ARB: int

  GL_DEBUG_SOURCE_SHADER_COMPILER_ARB: int

  GL_DEBUG_SOURCE_THIRD_PARTY_ARB: int

  GL_DEBUG_SOURCE_WINDOW_SYSTEM_ARB: int

  GL_DEBUG_TYPE_DEPRECATED_BEHAVIOR_ARB: int

  GL_DEBUG_TYPE_ERROR_ARB: int

  GL_DEBUG_TYPE_OTHER_ARB: int

  GL_DEBUG_TYPE_PERFORMANCE_ARB: int

  GL_DEBUG_TYPE_PORTABILITY_ARB: int

  GL_DEBUG_TYPE_UNDEFINED_BEHAVIOR_ARB: int

  GL_MAX_DEBUG_LOGGED_MESSAGES_ARB: int

  GL_MAX_DEBUG_MESSAGE_LENGTH_ARB: int

  @staticmethod
  def glDebugMessageCallbackARB(arg0: GLDebugMessageARBCallbackI, arg1: int) -> None: ...

  @staticmethod
  @overload
  def glDebugMessageControlARB(arg0: int, arg1: int, arg2: int, arg3: list[int], arg4: bool) -> None: ...

  @staticmethod
  @overload
  def glDebugMessageControlARB(arg0: int, arg1: int, arg2: int, arg3: int, arg4: bool) -> None: ...

  @staticmethod
  @overload
  def glDebugMessageControlARB(arg0: int, arg1: int, arg2: int, arg3: IntBuffer, arg4: bool) -> None: ...

  @staticmethod
  @overload
  def glDebugMessageInsertARB(arg0: int, arg1: int, arg2: int, arg3: int, arg4: CharSequence) -> None: ...

  @staticmethod
  @overload
  def glDebugMessageInsertARB(arg0: int, arg1: int, arg2: int, arg3: int, arg4: ByteBuffer) -> None: ...

  @staticmethod
  @overload
  def glGetDebugMessageLogARB(arg0: int, arg1: list[int], arg2: list[int], arg3: list[int], arg4: list[int], arg5: list[int], arg6: ByteBuffer) -> int: ...

  @staticmethod
  @overload
  def glGetDebugMessageLogARB(arg0: int, arg1: IntBuffer, arg2: IntBuffer, arg3: IntBuffer, arg4: IntBuffer, arg5: IntBuffer, arg6: ByteBuffer) -> int: ...

  @staticmethod
  def nglDebugMessageCallbackARB(arg0: int, arg1: int) -> None: ...

  @staticmethod
  def nglDebugMessageControlARB(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: bool) -> None: ...

  @staticmethod
  def nglDebugMessageInsertARB(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int) -> None: ...

  @staticmethod
  def nglGetDebugMessageLogARB(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int, arg7: int) -> int: ...


class ARBDepthBufferFloat:

  GL_DEPTH32F_STENCIL8: int

  GL_DEPTH_COMPONENT32F: int

  GL_FLOAT_32_UNSIGNED_INT_24_8_REV: int


class ARBDepthClamp:

  GL_DEPTH_CLAMP: int


class ARBDepthTexture:

  GL_DEPTH_COMPONENT16_ARB: int

  GL_DEPTH_COMPONENT24_ARB: int

  GL_DEPTH_COMPONENT32_ARB: int

  GL_DEPTH_TEXTURE_MODE_ARB: int

  GL_TEXTURE_DEPTH_SIZE_ARB: int


class ARBDirectStateAccess:

  GL_QUERY_TARGET: int

  GL_TEXTURE_TARGET: int

  @staticmethod
  def glBindTextureUnit(arg0: int, arg1: int) -> None: ...

  @staticmethod
  def glBlitNamedFramebuffer(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int, arg7: int, arg8: int, arg9: int, arg10: int, arg11: int) -> None: ...

  @staticmethod
  def glCheckNamedFramebufferStatus(arg0: int, arg1: int) -> int: ...

  @staticmethod
  @overload
  def glClearNamedBufferData(arg0: int, arg1: int, arg2: int, arg3: int, arg4: list[float]) -> None: ...

  @staticmethod
  @overload
  def glClearNamedBufferData(arg0: int, arg1: int, arg2: int, arg3: int, arg4: list[int]) -> None: ...

  @staticmethod
  @overload
  def glClearNamedBufferData(arg0: int, arg1: int, arg2: int, arg3: int, arg4: list[int]) -> None: ...

  @staticmethod
  @overload
  def glClearNamedBufferData(arg0: int, arg1: int, arg2: int, arg3: int, arg4: ByteBuffer) -> None: ...

  @staticmethod
  @overload
  def glClearNamedBufferData(arg0: int, arg1: int, arg2: int, arg3: int, arg4: FloatBuffer) -> None: ...

  @staticmethod
  @overload
  def glClearNamedBufferData(arg0: int, arg1: int, arg2: int, arg3: int, arg4: IntBuffer) -> None: ...

  @staticmethod
  @overload
  def glClearNamedBufferData(arg0: int, arg1: int, arg2: int, arg3: int, arg4: ShortBuffer) -> None: ...

  @staticmethod
  @overload
  def glClearNamedBufferSubData(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: list[float]) -> None: ...

  @staticmethod
  @overload
  def glClearNamedBufferSubData(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: list[int]) -> None: ...

  @staticmethod
  @overload
  def glClearNamedBufferSubData(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: list[int]) -> None: ...

  @staticmethod
  @overload
  def glClearNamedBufferSubData(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: ByteBuffer) -> None: ...

  @staticmethod
  @overload
  def glClearNamedBufferSubData(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: FloatBuffer) -> None: ...

  @staticmethod
  @overload
  def glClearNamedBufferSubData(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: IntBuffer) -> None: ...

  @staticmethod
  @overload
  def glClearNamedBufferSubData(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: ShortBuffer) -> None: ...

  @staticmethod
  def glClearNamedFramebufferfi(arg0: int, arg1: int, arg2: int, arg3: float, arg4: int) -> None: ...

  @staticmethod
  @overload
  def glClearNamedFramebufferfv(arg0: int, arg1: int, arg2: int, arg3: list[float]) -> None: ...

  @staticmethod
  @overload
  def glClearNamedFramebufferfv(arg0: int, arg1: int, arg2: int, arg3: FloatBuffer) -> None: ...

  @staticmethod
  @overload
  def glClearNamedFramebufferiv(arg0: int, arg1: int, arg2: int, arg3: list[int]) -> None: ...

  @staticmethod
  @overload
  def glClearNamedFramebufferiv(arg0: int, arg1: int, arg2: int, arg3: IntBuffer) -> None: ...

  @staticmethod
  @overload
  def glClearNamedFramebufferuiv(arg0: int, arg1: int, arg2: int, arg3: list[int]) -> None: ...

  @staticmethod
  @overload
  def glClearNamedFramebufferuiv(arg0: int, arg1: int, arg2: int, arg3: IntBuffer) -> None: ...

  @staticmethod
  @overload
  def glCompressedTextureSubImage1D(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: ByteBuffer) -> None: ...

  @staticmethod
  @overload
  def glCompressedTextureSubImage1D(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int) -> None: ...

  @staticmethod
  @overload
  def glCompressedTextureSubImage2D(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int, arg7: ByteBuffer) -> None: ...

  @staticmethod
  @overload
  def glCompressedTextureSubImage2D(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int, arg7: int, arg8: int) -> None: ...

  @staticmethod
  @overload
  def glCompressedTextureSubImage3D(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int, arg7: int, arg8: int, arg9: ByteBuffer) -> None: ...

  @staticmethod
  @overload
  def glCompressedTextureSubImage3D(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int, arg7: int, arg8: int, arg9: int, arg10: int) -> None: ...

  @staticmethod
  def glCopyNamedBufferSubData(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int) -> None: ...

  @staticmethod
  def glCopyTextureSubImage1D(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int) -> None: ...

  @staticmethod
  def glCopyTextureSubImage2D(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int, arg7: int) -> None: ...

  @staticmethod
  def glCopyTextureSubImage3D(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int, arg7: int, arg8: int) -> None: ...

  @staticmethod
  @overload
  def glCreateBuffers() -> int: ...

  @staticmethod
  @overload
  def glCreateBuffers(arg0: list[int]) -> None: ...

  @staticmethod
  @overload
  def glCreateBuffers(arg0: IntBuffer) -> None: ...

  @staticmethod
  @overload
  def glCreateFramebuffers() -> int: ...

  @staticmethod
  @overload
  def glCreateFramebuffers(arg0: list[int]) -> None: ...

  @staticmethod
  @overload
  def glCreateFramebuffers(arg0: IntBuffer) -> None: ...

  @staticmethod
  @overload
  def glCreateProgramPipelines() -> int: ...

  @staticmethod
  @overload
  def glCreateProgramPipelines(arg0: list[int]) -> None: ...

  @staticmethod
  @overload
  def glCreateProgramPipelines(arg0: IntBuffer) -> None: ...

  @staticmethod
  @overload
  def glCreateQueries(arg0: int) -> int: ...

  @staticmethod
  @overload
  def glCreateQueries(arg0: int, arg1: list[int]) -> None: ...

  @staticmethod
  @overload
  def glCreateQueries(arg0: int, arg1: IntBuffer) -> None: ...

  @staticmethod
  @overload
  def glCreateRenderbuffers() -> int: ...

  @staticmethod
  @overload
  def glCreateRenderbuffers(arg0: list[int]) -> None: ...

  @staticmethod
  @overload
  def glCreateRenderbuffers(arg0: IntBuffer) -> None: ...

  @staticmethod
  @overload
  def glCreateSamplers() -> int: ...

  @staticmethod
  @overload
  def glCreateSamplers(arg0: list[int]) -> None: ...

  @staticmethod
  @overload
  def glCreateSamplers(arg0: IntBuffer) -> None: ...

  @staticmethod
  @overload
  def glCreateTextures(arg0: int) -> int: ...

  @staticmethod
  @overload
  def glCreateTextures(arg0: int, arg1: list[int]) -> None: ...

  @staticmethod
  @overload
  def glCreateTextures(arg0: int, arg1: IntBuffer) -> None: ...

  @staticmethod
  @overload
  def glCreateTransformFeedbacks() -> int: ...

  @staticmethod
  @overload
  def glCreateTransformFeedbacks(arg0: list[int]) -> None: ...

  @staticmethod
  @overload
  def glCreateTransformFeedbacks(arg0: IntBuffer) -> None: ...

  @staticmethod
  @overload
  def glCreateVertexArrays() -> int: ...

  @staticmethod
  @overload
  def glCreateVertexArrays(arg0: list[int]) -> None: ...

  @staticmethod
  @overload
  def glCreateVertexArrays(arg0: IntBuffer) -> None: ...

  @staticmethod
  def glDisableVertexArrayAttrib(arg0: int, arg1: int) -> None: ...

  @staticmethod
  def glEnableVertexArrayAttrib(arg0: int, arg1: int) -> None: ...

  @staticmethod
  def glFlushMappedNamedBufferRange(arg0: int, arg1: int, arg2: int) -> None: ...

  @staticmethod
  def glGenerateTextureMipmap(arg0: int) -> None: ...

  @staticmethod
  @overload
  def glGetCompressedTextureImage(arg0: int, arg1: int, arg2: ByteBuffer) -> None: ...

  @staticmethod
  @overload
  def glGetCompressedTextureImage(arg0: int, arg1: int, arg2: int, arg3: int) -> None: ...

  @staticmethod
  def glGetNamedBufferParameteri(arg0: int, arg1: int) -> int: ...

  @staticmethod
  def glGetNamedBufferParameteri64(arg0: int, arg1: int) -> int: ...

  @staticmethod
  @overload
  def glGetNamedBufferParameteri64v(arg0: int, arg1: int, arg2: list[int]) -> None: ...

  @staticmethod
  @overload
  def glGetNamedBufferParameteri64v(arg0: int, arg1: int, arg2: LongBuffer) -> None: ...

  @staticmethod
  @overload
  def glGetNamedBufferParameteriv(arg0: int, arg1: int, arg2: list[int]) -> None: ...

  @staticmethod
  @overload
  def glGetNamedBufferParameteriv(arg0: int, arg1: int, arg2: IntBuffer) -> None: ...

  @staticmethod
  def glGetNamedBufferPointer(arg0: int, arg1: int) -> int: ...

  @staticmethod
  def glGetNamedBufferPointerv(arg0: int, arg1: int, arg2: PointerBuffer) -> None: ...

  @staticmethod
  @overload
  def glGetNamedBufferSubData(arg0: int, arg1: int, arg2: list[float]) -> None: ...

  @staticmethod
  @overload
  def glGetNamedBufferSubData(arg0: int, arg1: int, arg2: list[float]) -> None: ...

  @staticmethod
  @overload
  def glGetNamedBufferSubData(arg0: int, arg1: int, arg2: list[int]) -> None: ...

  @staticmethod
  @overload
  def glGetNamedBufferSubData(arg0: int, arg1: int, arg2: list[int]) -> None: ...

  @staticmethod
  @overload
  def glGetNamedBufferSubData(arg0: int, arg1: int, arg2: list[int]) -> None: ...

  @staticmethod
  @overload
  def glGetNamedBufferSubData(arg0: int, arg1: int, arg2: ByteBuffer) -> None: ...

  @staticmethod
  @overload
  def glGetNamedBufferSubData(arg0: int, arg1: int, arg2: DoubleBuffer) -> None: ...

  @staticmethod
  @overload
  def glGetNamedBufferSubData(arg0: int, arg1: int, arg2: FloatBuffer) -> None: ...

  @staticmethod
  @overload
  def glGetNamedBufferSubData(arg0: int, arg1: int, arg2: IntBuffer) -> None: ...

  @staticmethod
  @overload
  def glGetNamedBufferSubData(arg0: int, arg1: int, arg2: LongBuffer) -> None: ...

  @staticmethod
  @overload
  def glGetNamedBufferSubData(arg0: int, arg1: int, arg2: ShortBuffer) -> None: ...

  @staticmethod
  def glGetNamedFramebufferAttachmentParameteri(arg0: int, arg1: int, arg2: int) -> int: ...

  @staticmethod
  @overload
  def glGetNamedFramebufferAttachmentParameteriv(arg0: int, arg1: int, arg2: int, arg3: list[int]) -> None: ...

  @staticmethod
  @overload
  def glGetNamedFramebufferAttachmentParameteriv(arg0: int, arg1: int, arg2: int, arg3: IntBuffer) -> None: ...

  @staticmethod
  def glGetNamedFramebufferParameteri(arg0: int, arg1: int) -> int: ...

  @staticmethod
  @overload
  def glGetNamedFramebufferParameteriv(arg0: int, arg1: int, arg2: list[int]) -> None: ...

  @staticmethod
  @overload
  def glGetNamedFramebufferParameteriv(arg0: int, arg1: int, arg2: IntBuffer) -> None: ...

  @staticmethod
  def glGetNamedRenderbufferParameteri(arg0: int, arg1: int) -> int: ...

  @staticmethod
  @overload
  def glGetNamedRenderbufferParameteriv(arg0: int, arg1: int, arg2: list[int]) -> None: ...

  @staticmethod
  @overload
  def glGetNamedRenderbufferParameteriv(arg0: int, arg1: int, arg2: IntBuffer) -> None: ...

  @staticmethod
  def glGetQueryBufferObjecti64v(arg0: int, arg1: int, arg2: int, arg3: int) -> None: ...

  @staticmethod
  def glGetQueryBufferObjectiv(arg0: int, arg1: int, arg2: int, arg3: int) -> None: ...

  @staticmethod
  def glGetQueryBufferObjectui64v(arg0: int, arg1: int, arg2: int, arg3: int) -> None: ...

  @staticmethod
  def glGetQueryBufferObjectuiv(arg0: int, arg1: int, arg2: int, arg3: int) -> None: ...

  @staticmethod
  @overload
  def glGetTextureImage(arg0: int, arg1: int, arg2: int, arg3: int, arg4: list[float]) -> None: ...

  @staticmethod
  @overload
  def glGetTextureImage(arg0: int, arg1: int, arg2: int, arg3: int, arg4: list[float]) -> None: ...

  @staticmethod
  @overload
  def glGetTextureImage(arg0: int, arg1: int, arg2: int, arg3: int, arg4: list[int]) -> None: ...

  @staticmethod
  @overload
  def glGetTextureImage(arg0: int, arg1: int, arg2: int, arg3: int, arg4: list[int]) -> None: ...

  @staticmethod
  @overload
  def glGetTextureImage(arg0: int, arg1: int, arg2: int, arg3: int, arg4: ByteBuffer) -> None: ...

  @staticmethod
  @overload
  def glGetTextureImage(arg0: int, arg1: int, arg2: int, arg3: int, arg4: DoubleBuffer) -> None: ...

  @staticmethod
  @overload
  def glGetTextureImage(arg0: int, arg1: int, arg2: int, arg3: int, arg4: FloatBuffer) -> None: ...

  @staticmethod
  @overload
  def glGetTextureImage(arg0: int, arg1: int, arg2: int, arg3: int, arg4: IntBuffer) -> None: ...

  @staticmethod
  @overload
  def glGetTextureImage(arg0: int, arg1: int, arg2: int, arg3: int, arg4: ShortBuffer) -> None: ...

  @staticmethod
  @overload
  def glGetTextureImage(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int) -> None: ...

  @staticmethod
  def glGetTextureLevelParameterf(arg0: int, arg1: int, arg2: int) -> float: ...

  @staticmethod
  @overload
  def glGetTextureLevelParameterfv(arg0: int, arg1: int, arg2: int, arg3: list[float]) -> None: ...

  @staticmethod
  @overload
  def glGetTextureLevelParameterfv(arg0: int, arg1: int, arg2: int, arg3: FloatBuffer) -> None: ...

  @staticmethod
  def glGetTextureLevelParameteri(arg0: int, arg1: int, arg2: int) -> int: ...

  @staticmethod
  @overload
  def glGetTextureLevelParameteriv(arg0: int, arg1: int, arg2: int, arg3: list[int]) -> None: ...

  @staticmethod
  @overload
  def glGetTextureLevelParameteriv(arg0: int, arg1: int, arg2: int, arg3: IntBuffer) -> None: ...

  @staticmethod
  def glGetTextureParameterIi(arg0: int, arg1: int) -> int: ...

  @staticmethod
  @overload
  def glGetTextureParameterIiv(arg0: int, arg1: int, arg2: list[int]) -> None: ...

  @staticmethod
  @overload
  def glGetTextureParameterIiv(arg0: int, arg1: int, arg2: IntBuffer) -> None: ...

  @staticmethod
  def glGetTextureParameterIui(arg0: int, arg1: int) -> int: ...

  @staticmethod
  @overload
  def glGetTextureParameterIuiv(arg0: int, arg1: int, arg2: list[int]) -> None: ...

  @staticmethod
  @overload
  def glGetTextureParameterIuiv(arg0: int, arg1: int, arg2: IntBuffer) -> None: ...

  @staticmethod
  def glGetTextureParameterf(arg0: int, arg1: int) -> float: ...

  @staticmethod
  @overload
  def glGetTextureParameterfv(arg0: int, arg1: int, arg2: list[float]) -> None: ...

  @staticmethod
  @overload
  def glGetTextureParameterfv(arg0: int, arg1: int, arg2: FloatBuffer) -> None: ...

  @staticmethod
  def glGetTextureParameteri(arg0: int, arg1: int) -> int: ...

  @staticmethod
  @overload
  def glGetTextureParameteriv(arg0: int, arg1: int, arg2: list[int]) -> None: ...

  @staticmethod
  @overload
  def glGetTextureParameteriv(arg0: int, arg1: int, arg2: IntBuffer) -> None: ...

  @staticmethod
  @overload
  def glGetTransformFeedbacki(arg0: int, arg1: int) -> int: ...

  @staticmethod
  @overload
  def glGetTransformFeedbacki(arg0: int, arg1: int, arg2: int) -> int: ...

  @staticmethod
  def glGetTransformFeedbacki64(arg0: int, arg1: int, arg2: int) -> int: ...

  @staticmethod
  @overload
  def glGetTransformFeedbacki64_v(arg0: int, arg1: int, arg2: int, arg3: list[int]) -> None: ...

  @staticmethod
  @overload
  def glGetTransformFeedbacki64_v(arg0: int, arg1: int, arg2: int, arg3: LongBuffer) -> None: ...

  @staticmethod
  @overload
  def glGetTransformFeedbacki_v(arg0: int, arg1: int, arg2: int, arg3: list[int]) -> None: ...

  @staticmethod
  @overload
  def glGetTransformFeedbacki_v(arg0: int, arg1: int, arg2: int, arg3: IntBuffer) -> None: ...

  @staticmethod
  @overload
  def glGetTransformFeedbackiv(arg0: int, arg1: int, arg2: list[int]) -> None: ...

  @staticmethod
  @overload
  def glGetTransformFeedbackiv(arg0: int, arg1: int, arg2: IntBuffer) -> None: ...

  @staticmethod
  def glGetVertexArrayIndexed64i(arg0: int, arg1: int, arg2: int) -> int: ...

  @staticmethod
  @overload
  def glGetVertexArrayIndexed64iv(arg0: int, arg1: int, arg2: int, arg3: list[int]) -> None: ...

  @staticmethod
  @overload
  def glGetVertexArrayIndexed64iv(arg0: int, arg1: int, arg2: int, arg3: LongBuffer) -> None: ...

  @staticmethod
  def glGetVertexArrayIndexedi(arg0: int, arg1: int, arg2: int) -> int: ...

  @staticmethod
  @overload
  def glGetVertexArrayIndexediv(arg0: int, arg1: int, arg2: int, arg3: list[int]) -> None: ...

  @staticmethod
  @overload
  def glGetVertexArrayIndexediv(arg0: int, arg1: int, arg2: int, arg3: IntBuffer) -> None: ...

  @staticmethod
  def glGetVertexArrayi(arg0: int, arg1: int) -> int: ...

  @staticmethod
  @overload
  def glGetVertexArrayiv(arg0: int, arg1: int, arg2: list[int]) -> None: ...

  @staticmethod
  @overload
  def glGetVertexArrayiv(arg0: int, arg1: int, arg2: IntBuffer) -> None: ...

  @staticmethod
  @overload
  def glInvalidateNamedFramebufferData(arg0: int, arg1: list[int]) -> None: ...

  @staticmethod
  @overload
  def glInvalidateNamedFramebufferData(arg0: int, arg1: int) -> None: ...

  @staticmethod
  @overload
  def glInvalidateNamedFramebufferData(arg0: int, arg1: IntBuffer) -> None: ...

  @staticmethod
  @overload
  def glInvalidateNamedFramebufferSubData(arg0: int, arg1: list[int], arg2: int, arg3: int, arg4: int, arg5: int) -> None: ...

  @staticmethod
  @overload
  def glInvalidateNamedFramebufferSubData(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int) -> None: ...

  @staticmethod
  @overload
  def glInvalidateNamedFramebufferSubData(arg0: int, arg1: IntBuffer, arg2: int, arg3: int, arg4: int, arg5: int) -> None: ...

  @staticmethod
  @overload
  def glMapNamedBuffer(arg0: int, arg1: int) -> ByteBuffer: ...

  @staticmethod
  @overload
  def glMapNamedBuffer(arg0: int, arg1: int, arg2: ByteBuffer) -> ByteBuffer: ...

  @staticmethod
  @overload
  def glMapNamedBuffer(arg0: int, arg1: int, arg2: int, arg3: ByteBuffer) -> ByteBuffer: ...

  @staticmethod
  @overload
  def glMapNamedBufferRange(arg0: int, arg1: int, arg2: int, arg3: int) -> ByteBuffer: ...

  @staticmethod
  @overload
  def glMapNamedBufferRange(arg0: int, arg1: int, arg2: int, arg3: int, arg4: ByteBuffer) -> ByteBuffer: ...

  @staticmethod
  @overload
  def glNamedBufferData(arg0: int, arg1: list[float], arg2: int) -> None: ...

  @staticmethod
  @overload
  def glNamedBufferData(arg0: int, arg1: list[float], arg2: int) -> None: ...

  @staticmethod
  @overload
  def glNamedBufferData(arg0: int, arg1: list[int], arg2: int) -> None: ...

  @staticmethod
  @overload
  def glNamedBufferData(arg0: int, arg1: list[int], arg2: int) -> None: ...

  @staticmethod
  @overload
  def glNamedBufferData(arg0: int, arg1: list[int], arg2: int) -> None: ...

  @staticmethod
  @overload
  def glNamedBufferData(arg0: int, arg1: ByteBuffer, arg2: int) -> None: ...

  @staticmethod
  @overload
  def glNamedBufferData(arg0: int, arg1: DoubleBuffer, arg2: int) -> None: ...

  @staticmethod
  @overload
  def glNamedBufferData(arg0: int, arg1: FloatBuffer, arg2: int) -> None: ...

  @staticmethod
  @overload
  def glNamedBufferData(arg0: int, arg1: IntBuffer, arg2: int) -> None: ...

  @staticmethod
  @overload
  def glNamedBufferData(arg0: int, arg1: LongBuffer, arg2: int) -> None: ...

  @staticmethod
  @overload
  def glNamedBufferData(arg0: int, arg1: ShortBuffer, arg2: int) -> None: ...

  @staticmethod
  @overload
  def glNamedBufferData(arg0: int, arg1: int, arg2: int) -> None: ...

  @staticmethod
  @overload
  def glNamedBufferStorage(arg0: int, arg1: list[float], arg2: int) -> None: ...

  @staticmethod
  @overload
  def glNamedBufferStorage(arg0: int, arg1: list[float], arg2: int) -> None: ...

  @staticmethod
  @overload
  def glNamedBufferStorage(arg0: int, arg1: list[int], arg2: int) -> None: ...

  @staticmethod
  @overload
  def glNamedBufferStorage(arg0: int, arg1: list[int], arg2: int) -> None: ...

  @staticmethod
  @overload
  def glNamedBufferStorage(arg0: int, arg1: ByteBuffer, arg2: int) -> None: ...

  @staticmethod
  @overload
  def glNamedBufferStorage(arg0: int, arg1: DoubleBuffer, arg2: int) -> None: ...

  @staticmethod
  @overload
  def glNamedBufferStorage(arg0: int, arg1: FloatBuffer, arg2: int) -> None: ...

  @staticmethod
  @overload
  def glNamedBufferStorage(arg0: int, arg1: IntBuffer, arg2: int) -> None: ...

  @staticmethod
  @overload
  def glNamedBufferStorage(arg0: int, arg1: ShortBuffer, arg2: int) -> None: ...

  @staticmethod
  @overload
  def glNamedBufferStorage(arg0: int, arg1: int, arg2: int) -> None: ...

  @staticmethod
  @overload
  def glNamedBufferSubData(arg0: int, arg1: int, arg2: list[float]) -> None: ...

  @staticmethod
  @overload
  def glNamedBufferSubData(arg0: int, arg1: int, arg2: list[float]) -> None: ...

  @staticmethod
  @overload
  def glNamedBufferSubData(arg0: int, arg1: int, arg2: list[int]) -> None: ...

  @staticmethod
  @overload
  def glNamedBufferSubData(arg0: int, arg1: int, arg2: list[int]) -> None: ...

  @staticmethod
  @overload
  def glNamedBufferSubData(arg0: int, arg1: int, arg2: list[int]) -> None: ...

  @staticmethod
  @overload
  def glNamedBufferSubData(arg0: int, arg1: int, arg2: ByteBuffer) -> None: ...

  @staticmethod
  @overload
  def glNamedBufferSubData(arg0: int, arg1: int, arg2: DoubleBuffer) -> None: ...

  @staticmethod
  @overload
  def glNamedBufferSubData(arg0: int, arg1: int, arg2: FloatBuffer) -> None: ...

  @staticmethod
  @overload
  def glNamedBufferSubData(arg0: int, arg1: int, arg2: IntBuffer) -> None: ...

  @staticmethod
  @overload
  def glNamedBufferSubData(arg0: int, arg1: int, arg2: LongBuffer) -> None: ...

  @staticmethod
  @overload
  def glNamedBufferSubData(arg0: int, arg1: int, arg2: ShortBuffer) -> None: ...

  @staticmethod
  def glNamedFramebufferDrawBuffer(arg0: int, arg1: int) -> None: ...

  @staticmethod
  @overload
  def glNamedFramebufferDrawBuffers(arg0: int, arg1: list[int]) -> None: ...

  @staticmethod
  @overload
  def glNamedFramebufferDrawBuffers(arg0: int, arg1: int) -> None: ...

  @staticmethod
  @overload
  def glNamedFramebufferDrawBuffers(arg0: int, arg1: IntBuffer) -> None: ...

  @staticmethod
  def glNamedFramebufferParameteri(arg0: int, arg1: int, arg2: int) -> None: ...

  @staticmethod
  def glNamedFramebufferReadBuffer(arg0: int, arg1: int) -> None: ...

  @staticmethod
  def glNamedFramebufferRenderbuffer(arg0: int, arg1: int, arg2: int, arg3: int) -> None: ...

  @staticmethod
  def glNamedFramebufferTexture(arg0: int, arg1: int, arg2: int, arg3: int) -> None: ...

  @staticmethod
  def glNamedFramebufferTextureLayer(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int) -> None: ...

  @staticmethod
  def glNamedRenderbufferStorage(arg0: int, arg1: int, arg2: int, arg3: int) -> None: ...

  @staticmethod
  def glNamedRenderbufferStorageMultisample(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int) -> None: ...

  @staticmethod
  def glTextureBuffer(arg0: int, arg1: int, arg2: int) -> None: ...

  @staticmethod
  def glTextureBufferRange(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int) -> None: ...

  @staticmethod
  def glTextureParameterIi(arg0: int, arg1: int, arg2: int) -> None: ...

  @staticmethod
  @overload
  def glTextureParameterIiv(arg0: int, arg1: int, arg2: list[int]) -> None: ...

  @staticmethod
  @overload
  def glTextureParameterIiv(arg0: int, arg1: int, arg2: IntBuffer) -> None: ...

  @staticmethod
  def glTextureParameterIui(arg0: int, arg1: int, arg2: int) -> None: ...

  @staticmethod
  @overload
  def glTextureParameterIuiv(arg0: int, arg1: int, arg2: list[int]) -> None: ...

  @staticmethod
  @overload
  def glTextureParameterIuiv(arg0: int, arg1: int, arg2: IntBuffer) -> None: ...

  @staticmethod
  def glTextureParameterf(arg0: int, arg1: int, arg2: float) -> None: ...

  @staticmethod
  @overload
  def glTextureParameterfv(arg0: int, arg1: int, arg2: list[float]) -> None: ...

  @staticmethod
  @overload
  def glTextureParameterfv(arg0: int, arg1: int, arg2: FloatBuffer) -> None: ...

  @staticmethod
  def glTextureParameteri(arg0: int, arg1: int, arg2: int) -> None: ...

  @staticmethod
  @overload
  def glTextureParameteriv(arg0: int, arg1: int, arg2: list[int]) -> None: ...

  @staticmethod
  @overload
  def glTextureParameteriv(arg0: int, arg1: int, arg2: IntBuffer) -> None: ...

  @staticmethod
  def glTextureStorage1D(arg0: int, arg1: int, arg2: int, arg3: int) -> None: ...

  @staticmethod
  def glTextureStorage2D(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int) -> None: ...

  @staticmethod
  def glTextureStorage2DMultisample(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: bool) -> None: ...

  @staticmethod
  def glTextureStorage3D(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int) -> None: ...

  @staticmethod
  def glTextureStorage3DMultisample(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: bool) -> None: ...

  @staticmethod
  @overload
  def glTextureSubImage1D(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: list[float]) -> None: ...

  @staticmethod
  @overload
  def glTextureSubImage1D(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: list[float]) -> None: ...

  @staticmethod
  @overload
  def glTextureSubImage1D(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: list[int]) -> None: ...

  @staticmethod
  @overload
  def glTextureSubImage1D(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: list[int]) -> None: ...

  @staticmethod
  @overload
  def glTextureSubImage1D(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: ByteBuffer) -> None: ...

  @staticmethod
  @overload
  def glTextureSubImage1D(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: DoubleBuffer) -> None: ...

  @staticmethod
  @overload
  def glTextureSubImage1D(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: FloatBuffer) -> None: ...

  @staticmethod
  @overload
  def glTextureSubImage1D(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: IntBuffer) -> None: ...

  @staticmethod
  @overload
  def glTextureSubImage1D(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: ShortBuffer) -> None: ...

  @staticmethod
  @overload
  def glTextureSubImage1D(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int) -> None: ...

  @staticmethod
  @overload
  def glTextureSubImage2D(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int, arg7: int, arg8: list[float]) -> None: ...

  @staticmethod
  @overload
  def glTextureSubImage2D(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int, arg7: int, arg8: list[float]) -> None: ...

  @staticmethod
  @overload
  def glTextureSubImage2D(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int, arg7: int, arg8: list[int]) -> None: ...

  @staticmethod
  @overload
  def glTextureSubImage2D(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int, arg7: int, arg8: list[int]) -> None: ...

  @staticmethod
  @overload
  def glTextureSubImage2D(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int, arg7: int, arg8: ByteBuffer) -> None: ...

  @staticmethod
  @overload
  def glTextureSubImage2D(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int, arg7: int, arg8: DoubleBuffer) -> None: ...

  @staticmethod
  @overload
  def glTextureSubImage2D(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int, arg7: int, arg8: FloatBuffer) -> None: ...

  @staticmethod
  @overload
  def glTextureSubImage2D(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int, arg7: int, arg8: IntBuffer) -> None: ...

  @staticmethod
  @overload
  def glTextureSubImage2D(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int, arg7: int, arg8: ShortBuffer) -> None: ...

  @staticmethod
  @overload
  def glTextureSubImage2D(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int, arg7: int, arg8: int) -> None: ...

  @staticmethod
  @overload
  def glTextureSubImage3D(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int, arg7: int, arg8: int, arg9: int, arg10: list[float]) -> None: ...

  @staticmethod
  @overload
  def glTextureSubImage3D(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int, arg7: int, arg8: int, arg9: int, arg10: list[float]) -> None: ...

  @staticmethod
  @overload
  def glTextureSubImage3D(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int, arg7: int, arg8: int, arg9: int, arg10: list[int]) -> None: ...

  @staticmethod
  @overload
  def glTextureSubImage3D(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int, arg7: int, arg8: int, arg9: int, arg10: list[int]) -> None: ...

  @staticmethod
  @overload
  def glTextureSubImage3D(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int, arg7: int, arg8: int, arg9: int, arg10: ByteBuffer) -> None: ...

  @staticmethod
  @overload
  def glTextureSubImage3D(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int, arg7: int, arg8: int, arg9: int, arg10: DoubleBuffer) -> None: ...

  @staticmethod
  @overload
  def glTextureSubImage3D(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int, arg7: int, arg8: int, arg9: int, arg10: FloatBuffer) -> None: ...

  @staticmethod
  @overload
  def glTextureSubImage3D(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int, arg7: int, arg8: int, arg9: int, arg10: IntBuffer) -> None: ...

  @staticmethod
  @overload
  def glTextureSubImage3D(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int, arg7: int, arg8: int, arg9: int, arg10: ShortBuffer) -> None: ...

  @staticmethod
  @overload
  def glTextureSubImage3D(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int, arg7: int, arg8: int, arg9: int, arg10: int) -> None: ...

  @staticmethod
  def glTransformFeedbackBufferBase(arg0: int, arg1: int, arg2: int) -> None: ...

  @staticmethod
  def glTransformFeedbackBufferRange(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int) -> None: ...

  @staticmethod
  def glUnmapNamedBuffer(arg0: int) -> bool: ...

  @staticmethod
  def glVertexArrayAttribBinding(arg0: int, arg1: int, arg2: int) -> None: ...

  @staticmethod
  def glVertexArrayAttribFormat(arg0: int, arg1: int, arg2: int, arg3: int, arg4: bool, arg5: int) -> None: ...

  @staticmethod
  def glVertexArrayAttribIFormat(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int) -> None: ...

  @staticmethod
  def glVertexArrayAttribLFormat(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int) -> None: ...

  @staticmethod
  def glVertexArrayBindingDivisor(arg0: int, arg1: int, arg2: int) -> None: ...

  @staticmethod
  def glVertexArrayElementBuffer(arg0: int, arg1: int) -> None: ...

  @staticmethod
  def glVertexArrayVertexBuffer(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int) -> None: ...

  @staticmethod
  @overload
  def glVertexArrayVertexBuffers(arg0: int, arg1: int, arg2: list[int], arg3: PointerBuffer, arg4: list[int]) -> None: ...

  @staticmethod
  @overload
  def glVertexArrayVertexBuffers(arg0: int, arg1: int, arg2: IntBuffer, arg3: PointerBuffer, arg4: IntBuffer) -> None: ...

  @staticmethod
  def nglClearNamedBufferData(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int) -> None: ...

  @staticmethod
  def nglClearNamedBufferSubData(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int) -> None: ...

  @staticmethod
  def nglClearNamedFramebufferfv(arg0: int, arg1: int, arg2: int, arg3: int) -> None: ...

  @staticmethod
  def nglClearNamedFramebufferiv(arg0: int, arg1: int, arg2: int, arg3: int) -> None: ...

  @staticmethod
  def nglClearNamedFramebufferuiv(arg0: int, arg1: int, arg2: int, arg3: int) -> None: ...

  @staticmethod
  def nglCompressedTextureSubImage1D(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int) -> None: ...

  @staticmethod
  def nglCompressedTextureSubImage2D(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int, arg7: int, arg8: int) -> None: ...

  @staticmethod
  def nglCompressedTextureSubImage3D(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int, arg7: int, arg8: int, arg9: int, arg10: int) -> None: ...

  @staticmethod
  def nglCreateBuffers(arg0: int, arg1: int) -> None: ...

  @staticmethod
  def nglCreateFramebuffers(arg0: int, arg1: int) -> None: ...

  @staticmethod
  def nglCreateProgramPipelines(arg0: int, arg1: int) -> None: ...

  @staticmethod
  def nglCreateQueries(arg0: int, arg1: int, arg2: int) -> None: ...

  @staticmethod
  def nglCreateRenderbuffers(arg0: int, arg1: int) -> None: ...

  @staticmethod
  def nglCreateSamplers(arg0: int, arg1: int) -> None: ...

  @staticmethod
  def nglCreateTextures(arg0: int, arg1: int, arg2: int) -> None: ...

  @staticmethod
  def nglCreateTransformFeedbacks(arg0: int, arg1: int) -> None: ...

  @staticmethod
  def nglCreateVertexArrays(arg0: int, arg1: int) -> None: ...

  @staticmethod
  def nglGetCompressedTextureImage(arg0: int, arg1: int, arg2: int, arg3: int) -> None: ...

  @staticmethod
  def nglGetNamedBufferParameteri64v(arg0: int, arg1: int, arg2: int) -> None: ...

  @staticmethod
  def nglGetNamedBufferParameteriv(arg0: int, arg1: int, arg2: int) -> None: ...

  @staticmethod
  def nglGetNamedBufferPointerv(arg0: int, arg1: int, arg2: int) -> None: ...

  @staticmethod
  def nglGetNamedBufferSubData(arg0: int, arg1: int, arg2: int, arg3: int) -> None: ...

  @staticmethod
  def nglGetNamedFramebufferAttachmentParameteriv(arg0: int, arg1: int, arg2: int, arg3: int) -> None: ...

  @staticmethod
  def nglGetNamedFramebufferParameteriv(arg0: int, arg1: int, arg2: int) -> None: ...

  @staticmethod
  def nglGetNamedRenderbufferParameteriv(arg0: int, arg1: int, arg2: int) -> None: ...

  @staticmethod
  def nglGetTextureImage(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int) -> None: ...

  @staticmethod
  def nglGetTextureLevelParameterfv(arg0: int, arg1: int, arg2: int, arg3: int) -> None: ...

  @staticmethod
  def nglGetTextureLevelParameteriv(arg0: int, arg1: int, arg2: int, arg3: int) -> None: ...

  @staticmethod
  def nglGetTextureParameterIiv(arg0: int, arg1: int, arg2: int) -> None: ...

  @staticmethod
  def nglGetTextureParameterIuiv(arg0: int, arg1: int, arg2: int) -> None: ...

  @staticmethod
  def nglGetTextureParameterfv(arg0: int, arg1: int, arg2: int) -> None: ...

  @staticmethod
  def nglGetTextureParameteriv(arg0: int, arg1: int, arg2: int) -> None: ...

  @staticmethod
  def nglGetTransformFeedbacki64_v(arg0: int, arg1: int, arg2: int, arg3: int) -> None: ...

  @staticmethod
  def nglGetTransformFeedbacki_v(arg0: int, arg1: int, arg2: int, arg3: int) -> None: ...

  @staticmethod
  def nglGetTransformFeedbackiv(arg0: int, arg1: int, arg2: int) -> None: ...

  @staticmethod
  def nglGetVertexArrayIndexed64iv(arg0: int, arg1: int, arg2: int, arg3: int) -> None: ...

  @staticmethod
  def nglGetVertexArrayIndexediv(arg0: int, arg1: int, arg2: int, arg3: int) -> None: ...

  @staticmethod
  def nglGetVertexArrayiv(arg0: int, arg1: int, arg2: int) -> None: ...

  @staticmethod
  def nglInvalidateNamedFramebufferData(arg0: int, arg1: int, arg2: int) -> None: ...

  @staticmethod
  def nglInvalidateNamedFramebufferSubData(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int) -> None: ...

  @staticmethod
  def nglMapNamedBuffer(arg0: int, arg1: int) -> int: ...

  @staticmethod
  def nglMapNamedBufferRange(arg0: int, arg1: int, arg2: int, arg3: int) -> int: ...

  @staticmethod
  def nglNamedBufferData(arg0: int, arg1: int, arg2: int, arg3: int) -> None: ...

  @staticmethod
  def nglNamedBufferStorage(arg0: int, arg1: int, arg2: int, arg3: int) -> None: ...

  @staticmethod
  def nglNamedBufferSubData(arg0: int, arg1: int, arg2: int, arg3: int) -> None: ...

  @staticmethod
  def nglNamedFramebufferDrawBuffers(arg0: int, arg1: int, arg2: int) -> None: ...

  @staticmethod
  def nglTextureParameterIiv(arg0: int, arg1: int, arg2: int) -> None: ...

  @staticmethod
  def nglTextureParameterIuiv(arg0: int, arg1: int, arg2: int) -> None: ...

  @staticmethod
  def nglTextureParameterfv(arg0: int, arg1: int, arg2: int) -> None: ...

  @staticmethod
  def nglTextureParameteriv(arg0: int, arg1: int, arg2: int) -> None: ...

  @staticmethod
  def nglTextureSubImage1D(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int) -> None: ...

  @staticmethod
  def nglTextureSubImage2D(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int, arg7: int, arg8: int) -> None: ...

  @staticmethod
  def nglTextureSubImage3D(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int, arg7: int, arg8: int, arg9: int, arg10: int) -> None: ...

  @staticmethod
  def nglVertexArrayVertexBuffers(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int) -> None: ...


class ARBDrawBuffers:

  GL_DRAW_BUFFER0_ARB: int

  GL_DRAW_BUFFER10_ARB: int

  GL_DRAW_BUFFER11_ARB: int

  GL_DRAW_BUFFER12_ARB: int

  GL_DRAW_BUFFER13_ARB: int

  GL_DRAW_BUFFER14_ARB: int

  GL_DRAW_BUFFER15_ARB: int

  GL_DRAW_BUFFER1_ARB: int

  GL_DRAW_BUFFER2_ARB: int

  GL_DRAW_BUFFER3_ARB: int

  GL_DRAW_BUFFER4_ARB: int

  GL_DRAW_BUFFER5_ARB: int

  GL_DRAW_BUFFER6_ARB: int

  GL_DRAW_BUFFER7_ARB: int

  GL_DRAW_BUFFER8_ARB: int

  GL_DRAW_BUFFER9_ARB: int

  GL_MAX_DRAW_BUFFERS_ARB: int

  @staticmethod
  @overload
  def glDrawBuffersARB(arg0: list[int]) -> None: ...

  @staticmethod
  @overload
  def glDrawBuffersARB(arg0: IntBuffer) -> None: ...

  @staticmethod
  def nglDrawBuffersARB(arg0: int, arg1: int) -> None: ...


class ARBDrawBuffersBlend:

  @staticmethod
  def glBlendEquationSeparateiARB(arg0: int, arg1: int, arg2: int) -> None: ...

  @staticmethod
  def glBlendEquationiARB(arg0: int, arg1: int) -> None: ...

  @staticmethod
  def glBlendFuncSeparateiARB(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int) -> None: ...

  @staticmethod
  def glBlendFunciARB(arg0: int, arg1: int, arg2: int) -> None: ...


class ARBDrawElementsBaseVertex:

  @staticmethod
  @overload
  def glDrawElementsBaseVertex(arg0: int, arg1: ByteBuffer, arg2: int) -> None: ...

  @staticmethod
  @overload
  def glDrawElementsBaseVertex(arg0: int, arg1: IntBuffer, arg2: int) -> None: ...

  @staticmethod
  @overload
  def glDrawElementsBaseVertex(arg0: int, arg1: ShortBuffer, arg2: int) -> None: ...

  @staticmethod
  @overload
  def glDrawElementsBaseVertex(arg0: int, arg1: int, arg2: ByteBuffer, arg3: int) -> None: ...

  @staticmethod
  @overload
  def glDrawElementsBaseVertex(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int) -> None: ...

  @staticmethod
  @overload
  def glDrawElementsInstancedBaseVertex(arg0: int, arg1: ByteBuffer, arg2: int, arg3: int) -> None: ...

  @staticmethod
  @overload
  def glDrawElementsInstancedBaseVertex(arg0: int, arg1: IntBuffer, arg2: int, arg3: int) -> None: ...

  @staticmethod
  @overload
  def glDrawElementsInstancedBaseVertex(arg0: int, arg1: ShortBuffer, arg2: int, arg3: int) -> None: ...

  @staticmethod
  @overload
  def glDrawElementsInstancedBaseVertex(arg0: int, arg1: int, arg2: ByteBuffer, arg3: int, arg4: int) -> None: ...

  @staticmethod
  @overload
  def glDrawElementsInstancedBaseVertex(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int) -> None: ...

  @staticmethod
  @overload
  def glDrawRangeElementsBaseVertex(arg0: int, arg1: int, arg2: int, arg3: ByteBuffer, arg4: int) -> None: ...

  @staticmethod
  @overload
  def glDrawRangeElementsBaseVertex(arg0: int, arg1: int, arg2: int, arg3: IntBuffer, arg4: int) -> None: ...

  @staticmethod
  @overload
  def glDrawRangeElementsBaseVertex(arg0: int, arg1: int, arg2: int, arg3: ShortBuffer, arg4: int) -> None: ...

  @staticmethod
  @overload
  def glDrawRangeElementsBaseVertex(arg0: int, arg1: int, arg2: int, arg3: int, arg4: ByteBuffer, arg5: int) -> None: ...

  @staticmethod
  @overload
  def glDrawRangeElementsBaseVertex(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int) -> None: ...

  @staticmethod
  @overload
  def glMultiDrawElementsBaseVertex(arg0: int, arg1: list[int], arg2: int, arg3: PointerBuffer, arg4: list[int]) -> None: ...

  @staticmethod
  @overload
  def glMultiDrawElementsBaseVertex(arg0: int, arg1: IntBuffer, arg2: int, arg3: PointerBuffer, arg4: IntBuffer) -> None: ...

  @staticmethod
  def nglDrawElementsBaseVertex(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int) -> None: ...

  @staticmethod
  def nglDrawElementsInstancedBaseVertex(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int) -> None: ...

  @staticmethod
  def nglDrawRangeElementsBaseVertex(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int) -> None: ...

  @staticmethod
  def nglMultiDrawElementsBaseVertex(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int) -> None: ...


class ARBDrawIndirect:

  GL_DRAW_INDIRECT_BUFFER: int

  GL_DRAW_INDIRECT_BUFFER_BINDING: int

  @staticmethod
  @overload
  def glDrawArraysIndirect(arg0: int, arg1: list[int]) -> None: ...

  @staticmethod
  @overload
  def glDrawArraysIndirect(arg0: int, arg1: ByteBuffer) -> None: ...

  @staticmethod
  @overload
  def glDrawArraysIndirect(arg0: int, arg1: IntBuffer) -> None: ...

  @staticmethod
  @overload
  def glDrawArraysIndirect(arg0: int, arg1: int) -> None: ...

  @staticmethod
  @overload
  def glDrawElementsIndirect(arg0: int, arg1: int, arg2: list[int]) -> None: ...

  @staticmethod
  @overload
  def glDrawElementsIndirect(arg0: int, arg1: int, arg2: ByteBuffer) -> None: ...

  @staticmethod
  @overload
  def glDrawElementsIndirect(arg0: int, arg1: int, arg2: IntBuffer) -> None: ...

  @staticmethod
  @overload
  def glDrawElementsIndirect(arg0: int, arg1: int, arg2: int) -> None: ...

  @staticmethod
  def nglDrawArraysIndirect(arg0: int, arg1: int) -> None: ...

  @staticmethod
  def nglDrawElementsIndirect(arg0: int, arg1: int, arg2: int) -> None: ...


class ARBDrawInstanced:

  @staticmethod
  def glDrawArraysInstancedARB(arg0: int, arg1: int, arg2: int, arg3: int) -> None: ...

  @staticmethod
  @overload
  def glDrawElementsInstancedARB(arg0: int, arg1: ByteBuffer, arg2: int) -> None: ...

  @staticmethod
  @overload
  def glDrawElementsInstancedARB(arg0: int, arg1: IntBuffer, arg2: int) -> None: ...

  @staticmethod
  @overload
  def glDrawElementsInstancedARB(arg0: int, arg1: ShortBuffer, arg2: int) -> None: ...

  @staticmethod
  @overload
  def glDrawElementsInstancedARB(arg0: int, arg1: int, arg2: ByteBuffer, arg3: int) -> None: ...

  @staticmethod
  @overload
  def glDrawElementsInstancedARB(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int) -> None: ...

  @staticmethod
  def nglDrawElementsInstancedARB(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int) -> None: ...


class ARBES2Compatibility:

  GL_FIXED: int

  GL_HIGH_FLOAT: int

  GL_HIGH_INT: int

  GL_IMPLEMENTATION_COLOR_READ_FORMAT: int

  GL_IMPLEMENTATION_COLOR_READ_TYPE: int

  GL_LOW_FLOAT: int

  GL_LOW_INT: int

  GL_MAX_FRAGMENT_UNIFORM_VECTORS: int

  GL_MAX_VARYING_VECTORS: int

  GL_MAX_VERTEX_UNIFORM_VECTORS: int

  GL_MEDIUM_FLOAT: int

  GL_MEDIUM_INT: int

  GL_NUM_SHADER_BINARY_FORMATS: int

  GL_RGB565: int

  GL_SHADER_BINARY_FORMATS: int

  GL_SHADER_COMPILER: int

  @staticmethod
  def glClearDepthf(arg0: float) -> None: ...

  @staticmethod
  def glDepthRangef(arg0: float, arg1: float) -> None: ...

  @staticmethod
  @overload
  def glGetShaderPrecisionFormat(arg0: int, arg1: int, arg2: IntBuffer) -> int: ...

  @staticmethod
  @overload
  def glGetShaderPrecisionFormat(arg0: int, arg1: int, arg2: list[int], arg3: list[int]) -> None: ...

  @staticmethod
  @overload
  def glGetShaderPrecisionFormat(arg0: int, arg1: int, arg2: IntBuffer, arg3: IntBuffer) -> None: ...

  @staticmethod
  def glReleaseShaderCompiler() -> None: ...

  @staticmethod
  @overload
  def glShaderBinary(arg0: list[int], arg1: int, arg2: ByteBuffer) -> None: ...

  @staticmethod
  @overload
  def glShaderBinary(arg0: IntBuffer, arg1: int, arg2: ByteBuffer) -> None: ...

  @staticmethod
  def nglGetShaderPrecisionFormat(arg0: int, arg1: int, arg2: int, arg3: int) -> None: ...

  @staticmethod
  def nglShaderBinary(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int) -> None: ...


class ARBES31Compatibility:

  @staticmethod
  def glMemoryBarrierByRegion(arg0: int) -> None: ...


class ARBES32Compatibility:

  GL_MULTISAMPLE_LINE_WIDTH_GRANULARITY_ARB: int

  GL_MULTISAMPLE_LINE_WIDTH_RANGE_ARB: int

  GL_PRIMITIVE_BOUNDING_BOX_ARB: int

  @staticmethod
  def glPrimitiveBoundingBoxARB(arg0: float, arg1: float, arg2: float, arg3: float, arg4: float, arg5: float, arg6: float, arg7: float) -> None: ...


class ARBES3Compatibility:

  GL_ANY_SAMPLES_PASSED_CONSERVATIVE: int

  GL_COMPRESSED_R11_EAC: int

  GL_COMPRESSED_RG11_EAC: int

  GL_COMPRESSED_RGB8_ETC2: int

  GL_COMPRESSED_RGB8_PUNCHTHROUGH_ALPHA1_ETC2: int

  GL_COMPRESSED_RGBA8_ETC2_EAC: int

  GL_COMPRESSED_SIGNED_R11_EAC: int

  GL_COMPRESSED_SIGNED_RG11_EAC: int

  GL_COMPRESSED_SRGB8_ALPHA8_ETC2_EAC: int

  GL_COMPRESSED_SRGB8_ETC2: int

  GL_COMPRESSED_SRGB8_PUNCHTHROUGH_ALPHA1_ETC2: int

  GL_MAX_ELEMENT_INDEX: int

  GL_PRIMITIVE_RESTART_FIXED_INDEX: int


class ARBEnhancedLayouts:

  GL_LOCATION_COMPONENT: int

  GL_TRANSFORM_FEEDBACK_BUFFER_INDEX: int

  GL_TRANSFORM_FEEDBACK_BUFFER_STRIDE: int


class ARBExplicitUniformLocation:

  GL_MAX_UNIFORM_LOCATIONS: int


class ARBFragmentProgram:

  GL_FRAGMENT_PROGRAM_ARB: int

  GL_MAX_PROGRAM_ALU_INSTRUCTIONS_ARB: int

  GL_MAX_PROGRAM_NATIVE_ALU_INSTRUCTIONS_ARB: int

  GL_MAX_PROGRAM_NATIVE_TEX_INDIRECTIONS_ARB: int

  GL_MAX_PROGRAM_NATIVE_TEX_INSTRUCTIONS_ARB: int

  GL_MAX_PROGRAM_TEX_INDIRECTIONS_ARB: int

  GL_MAX_PROGRAM_TEX_INSTRUCTIONS_ARB: int

  GL_MAX_TEXTURE_COORDS_ARB: int

  GL_MAX_TEXTURE_IMAGE_UNITS_ARB: int

  GL_PROGRAM_ALU_INSTRUCTIONS_ARB: int

  GL_PROGRAM_NATIVE_ALU_INSTRUCTIONS_ARB: int

  GL_PROGRAM_NATIVE_TEX_INDIRECTIONS_ARB: int

  GL_PROGRAM_NATIVE_TEX_INSTRUCTIONS_ARB: int

  GL_PROGRAM_TEX_INDIRECTIONS_ARB: int

  GL_PROGRAM_TEX_INSTRUCTIONS_ARB: int


class ARBFragmentShader:

  GL_FRAGMENT_SHADER_ARB: int

  GL_FRAGMENT_SHADER_DERIVATIVE_HINT_ARB: int

  GL_MAX_FRAGMENT_UNIFORM_COMPONENTS_ARB: int


class ARBFramebufferNoAttachments:

  GL_FRAMEBUFFER_DEFAULT_FIXED_SAMPLE_LOCATIONS: int

  GL_FRAMEBUFFER_DEFAULT_HEIGHT: int

  GL_FRAMEBUFFER_DEFAULT_LAYERS: int

  GL_FRAMEBUFFER_DEFAULT_SAMPLES: int

  GL_FRAMEBUFFER_DEFAULT_WIDTH: int

  GL_MAX_FRAMEBUFFER_HEIGHT: int

  GL_MAX_FRAMEBUFFER_LAYERS: int

  GL_MAX_FRAMEBUFFER_SAMPLES: int

  GL_MAX_FRAMEBUFFER_WIDTH: int

  @staticmethod
  def glFramebufferParameteri(arg0: int, arg1: int, arg2: int) -> None: ...

  @staticmethod
  def glGetFramebufferParameteri(arg0: int, arg1: int) -> int: ...

  @staticmethod
  @overload
  def glGetFramebufferParameteriv(arg0: int, arg1: int, arg2: list[int]) -> None: ...

  @staticmethod
  @overload
  def glGetFramebufferParameteriv(arg0: int, arg1: int, arg2: IntBuffer) -> None: ...

  @staticmethod
  def glGetNamedFramebufferParameteriEXT(arg0: int, arg1: int) -> int: ...

  @staticmethod
  @overload
  def glGetNamedFramebufferParameterivEXT(arg0: int, arg1: int, arg2: list[int]) -> None: ...

  @staticmethod
  @overload
  def glGetNamedFramebufferParameterivEXT(arg0: int, arg1: int, arg2: IntBuffer) -> None: ...

  @staticmethod
  def glNamedFramebufferParameteriEXT(arg0: int, arg1: int, arg2: int) -> None: ...

  @staticmethod
  def nglGetFramebufferParameteriv(arg0: int, arg1: int, arg2: int) -> None: ...

  @staticmethod
  def nglGetNamedFramebufferParameterivEXT(arg0: int, arg1: int, arg2: int) -> None: ...


class ARBFramebufferObject:

  GL_COLOR_ATTACHMENT0: int

  GL_COLOR_ATTACHMENT1: int

  GL_COLOR_ATTACHMENT10: int

  GL_COLOR_ATTACHMENT11: int

  GL_COLOR_ATTACHMENT12: int

  GL_COLOR_ATTACHMENT13: int

  GL_COLOR_ATTACHMENT14: int

  GL_COLOR_ATTACHMENT15: int

  GL_COLOR_ATTACHMENT2: int

  GL_COLOR_ATTACHMENT3: int

  GL_COLOR_ATTACHMENT4: int

  GL_COLOR_ATTACHMENT5: int

  GL_COLOR_ATTACHMENT6: int

  GL_COLOR_ATTACHMENT7: int

  GL_COLOR_ATTACHMENT8: int

  GL_COLOR_ATTACHMENT9: int

  GL_DEPTH24_STENCIL8: int

  GL_DEPTH_ATTACHMENT: int

  GL_DEPTH_STENCIL: int

  GL_DEPTH_STENCIL_ATTACHMENT: int

  GL_DRAW_FRAMEBUFFER: int

  GL_DRAW_FRAMEBUFFER_BINDING: int

  GL_FRAMEBUFFER: int

  GL_FRAMEBUFFER_ATTACHMENT_ALPHA_SIZE: int

  GL_FRAMEBUFFER_ATTACHMENT_BLUE_SIZE: int

  GL_FRAMEBUFFER_ATTACHMENT_COLOR_ENCODING: int

  GL_FRAMEBUFFER_ATTACHMENT_COMPONENT_TYPE: int

  GL_FRAMEBUFFER_ATTACHMENT_DEPTH_SIZE: int

  GL_FRAMEBUFFER_ATTACHMENT_GREEN_SIZE: int

  GL_FRAMEBUFFER_ATTACHMENT_OBJECT_NAME: int

  GL_FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE: int

  GL_FRAMEBUFFER_ATTACHMENT_RED_SIZE: int

  GL_FRAMEBUFFER_ATTACHMENT_STENCIL_SIZE: int

  GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE: int

  GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LAYER: int

  GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL: int

  GL_FRAMEBUFFER_BINDING: int

  GL_FRAMEBUFFER_COMPLETE: int

  GL_FRAMEBUFFER_DEFAULT: int

  GL_FRAMEBUFFER_INCOMPLETE_ATTACHMENT: int

  GL_FRAMEBUFFER_INCOMPLETE_DRAW_BUFFER: int

  GL_FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT: int

  GL_FRAMEBUFFER_INCOMPLETE_MULTISAMPLE: int

  GL_FRAMEBUFFER_INCOMPLETE_READ_BUFFER: int

  GL_FRAMEBUFFER_UNDEFINED: int

  GL_FRAMEBUFFER_UNSUPPORTED: int

  GL_INDEX: int

  GL_INVALID_FRAMEBUFFER_OPERATION: int

  GL_MAX_COLOR_ATTACHMENTS: int

  GL_MAX_RENDERBUFFER_SIZE: int

  GL_MAX_SAMPLES: int

  GL_READ_FRAMEBUFFER: int

  GL_READ_FRAMEBUFFER_BINDING: int

  GL_RENDERBUFFER: int

  GL_RENDERBUFFER_ALPHA_SIZE: int

  GL_RENDERBUFFER_BINDING: int

  GL_RENDERBUFFER_BLUE_SIZE: int

  GL_RENDERBUFFER_DEPTH_SIZE: int

  GL_RENDERBUFFER_GREEN_SIZE: int

  GL_RENDERBUFFER_HEIGHT: int

  GL_RENDERBUFFER_INTERNAL_FORMAT: int

  GL_RENDERBUFFER_RED_SIZE: int

  GL_RENDERBUFFER_SAMPLES: int

  GL_RENDERBUFFER_STENCIL_SIZE: int

  GL_RENDERBUFFER_WIDTH: int

  GL_STENCIL_ATTACHMENT: int

  GL_STENCIL_INDEX1: int

  GL_STENCIL_INDEX16: int

  GL_STENCIL_INDEX4: int

  GL_STENCIL_INDEX8: int

  GL_TEXTURE_STENCIL_SIZE: int

  GL_UNSIGNED_INT_24_8: int

  GL_UNSIGNED_NORMALIZED: int

  @staticmethod
  def glBindFramebuffer(arg0: int, arg1: int) -> None: ...

  @staticmethod
  def glBindRenderbuffer(arg0: int, arg1: int) -> None: ...

  @staticmethod
  def glBlitFramebuffer(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int, arg7: int, arg8: int, arg9: int) -> None: ...

  @staticmethod
  def glCheckFramebufferStatus(arg0: int) -> int: ...

  @staticmethod
  @overload
  def glDeleteFramebuffers(arg0: list[int]) -> None: ...

  @staticmethod
  @overload
  def glDeleteFramebuffers(arg0: int) -> None: ...

  @staticmethod
  @overload
  def glDeleteFramebuffers(arg0: IntBuffer) -> None: ...

  @staticmethod
  @overload
  def glDeleteRenderbuffers(arg0: list[int]) -> None: ...

  @staticmethod
  @overload
  def glDeleteRenderbuffers(arg0: int) -> None: ...

  @staticmethod
  @overload
  def glDeleteRenderbuffers(arg0: IntBuffer) -> None: ...

  @staticmethod
  def glFramebufferRenderbuffer(arg0: int, arg1: int, arg2: int, arg3: int) -> None: ...

  @staticmethod
  def glFramebufferTexture1D(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int) -> None: ...

  @staticmethod
  def glFramebufferTexture2D(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int) -> None: ...

  @staticmethod
  def glFramebufferTexture3D(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int) -> None: ...

  @staticmethod
  def glFramebufferTextureLayer(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int) -> None: ...

  @staticmethod
  @overload
  def glGenFramebuffers() -> int: ...

  @staticmethod
  @overload
  def glGenFramebuffers(arg0: list[int]) -> None: ...

  @staticmethod
  @overload
  def glGenFramebuffers(arg0: IntBuffer) -> None: ...

  @staticmethod
  @overload
  def glGenRenderbuffers() -> int: ...

  @staticmethod
  @overload
  def glGenRenderbuffers(arg0: list[int]) -> None: ...

  @staticmethod
  @overload
  def glGenRenderbuffers(arg0: IntBuffer) -> None: ...

  @staticmethod
  def glGenerateMipmap(arg0: int) -> None: ...

  @staticmethod
  def glGetFramebufferAttachmentParameteri(arg0: int, arg1: int, arg2: int) -> int: ...

  @staticmethod
  @overload
  def glGetFramebufferAttachmentParameteriv(arg0: int, arg1: int, arg2: int, arg3: list[int]) -> None: ...

  @staticmethod
  @overload
  def glGetFramebufferAttachmentParameteriv(arg0: int, arg1: int, arg2: int, arg3: IntBuffer) -> None: ...

  @staticmethod
  def glGetRenderbufferParameteri(arg0: int, arg1: int) -> int: ...

  @staticmethod
  @overload
  def glGetRenderbufferParameteriv(arg0: int, arg1: int, arg2: list[int]) -> None: ...

  @staticmethod
  @overload
  def glGetRenderbufferParameteriv(arg0: int, arg1: int, arg2: IntBuffer) -> None: ...

  @staticmethod
  def glIsFramebuffer(arg0: int) -> bool: ...

  @staticmethod
  def glIsRenderbuffer(arg0: int) -> bool: ...

  @staticmethod
  def glRenderbufferStorage(arg0: int, arg1: int, arg2: int, arg3: int) -> None: ...

  @staticmethod
  def glRenderbufferStorageMultisample(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int) -> None: ...

  @staticmethod
  def nglDeleteFramebuffers(arg0: int, arg1: int) -> None: ...

  @staticmethod
  def nglDeleteRenderbuffers(arg0: int, arg1: int) -> None: ...

  @staticmethod
  def nglGenFramebuffers(arg0: int, arg1: int) -> None: ...

  @staticmethod
  def nglGenRenderbuffers(arg0: int, arg1: int) -> None: ...

  @staticmethod
  def nglGetFramebufferAttachmentParameteriv(arg0: int, arg1: int, arg2: int, arg3: int) -> None: ...

  @staticmethod
  def nglGetRenderbufferParameteriv(arg0: int, arg1: int, arg2: int) -> None: ...


class ARBFramebufferSRGB:

  GL_FRAMEBUFFER_SRGB: int


class ARBGLSPIRV:

  GL_SHADER_BINARY_FORMAT_SPIR_V_ARB: int

  GL_SPIR_V_BINARY_ARB: int

  @staticmethod
  @overload
  def glSpecializeShaderARB(arg0: int, arg1: CharSequence, arg2: list[int], arg3: list[int]) -> None: ...

  @staticmethod
  @overload
  def glSpecializeShaderARB(arg0: int, arg1: CharSequence, arg2: IntBuffer, arg3: IntBuffer) -> None: ...

  @staticmethod
  @overload
  def glSpecializeShaderARB(arg0: int, arg1: ByteBuffer, arg2: list[int], arg3: list[int]) -> None: ...

  @staticmethod
  @overload
  def glSpecializeShaderARB(arg0: int, arg1: ByteBuffer, arg2: IntBuffer, arg3: IntBuffer) -> None: ...

  @staticmethod
  def nglSpecializeShaderARB(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int) -> None: ...


class ARBGPUShader5:

  GL_FRAGMENT_INTERPOLATION_OFFSET_BITS: int

  GL_GEOMETRY_SHADER_INVOCATIONS: int

  GL_MAX_FRAGMENT_INTERPOLATION_OFFSET: int

  GL_MAX_GEOMETRY_SHADER_INVOCATIONS: int

  GL_MAX_VERTEX_STREAMS: int

  GL_MIN_FRAGMENT_INTERPOLATION_OFFSET: int


class ARBGPUShaderFP64:

  GL_DOUBLE_MAT2: int

  GL_DOUBLE_MAT2x3: int

  GL_DOUBLE_MAT2x4: int

  GL_DOUBLE_MAT3: int

  GL_DOUBLE_MAT3x2: int

  GL_DOUBLE_MAT3x4: int

  GL_DOUBLE_MAT4: int

  GL_DOUBLE_MAT4x2: int

  GL_DOUBLE_MAT4x3: int

  GL_DOUBLE_VEC2: int

  GL_DOUBLE_VEC3: int

  GL_DOUBLE_VEC4: int

  @staticmethod
  def glGetUniformd(arg0: int, arg1: int) -> float: ...

  @staticmethod
  @overload
  def glGetUniformdv(arg0: int, arg1: int, arg2: list[float]) -> None: ...

  @staticmethod
  @overload
  def glGetUniformdv(arg0: int, arg1: int, arg2: DoubleBuffer) -> None: ...

  @staticmethod
  def glProgramUniform1dEXT(arg0: int, arg1: int, arg2: float) -> None: ...

  @staticmethod
  @overload
  def glProgramUniform1dvEXT(arg0: int, arg1: int, arg2: list[float]) -> None: ...

  @staticmethod
  @overload
  def glProgramUniform1dvEXT(arg0: int, arg1: int, arg2: DoubleBuffer) -> None: ...

  @staticmethod
  def glProgramUniform2dEXT(arg0: int, arg1: int, arg2: float, arg3: float) -> None: ...

  @staticmethod
  @overload
  def glProgramUniform2dvEXT(arg0: int, arg1: int, arg2: list[float]) -> None: ...

  @staticmethod
  @overload
  def glProgramUniform2dvEXT(arg0: int, arg1: int, arg2: DoubleBuffer) -> None: ...

  @staticmethod
  def glProgramUniform3dEXT(arg0: int, arg1: int, arg2: float, arg3: float, arg4: float) -> None: ...

  @staticmethod
  @overload
  def glProgramUniform3dvEXT(arg0: int, arg1: int, arg2: list[float]) -> None: ...

  @staticmethod
  @overload
  def glProgramUniform3dvEXT(arg0: int, arg1: int, arg2: DoubleBuffer) -> None: ...

  @staticmethod
  def glProgramUniform4dEXT(arg0: int, arg1: int, arg2: float, arg3: float, arg4: float, arg5: float) -> None: ...

  @staticmethod
  @overload
  def glProgramUniform4dvEXT(arg0: int, arg1: int, arg2: list[float]) -> None: ...

  @staticmethod
  @overload
  def glProgramUniform4dvEXT(arg0: int, arg1: int, arg2: DoubleBuffer) -> None: ...

  @staticmethod
  @overload
  def glProgramUniformMatrix2dvEXT(arg0: int, arg1: int, arg2: bool, arg3: list[float]) -> None: ...

  @staticmethod
  @overload
  def glProgramUniformMatrix2dvEXT(arg0: int, arg1: int, arg2: bool, arg3: DoubleBuffer) -> None: ...

  @staticmethod
  @overload
  def glProgramUniformMatrix2x3dvEXT(arg0: int, arg1: int, arg2: bool, arg3: list[float]) -> None: ...

  @staticmethod
  @overload
  def glProgramUniformMatrix2x3dvEXT(arg0: int, arg1: int, arg2: bool, arg3: DoubleBuffer) -> None: ...

  @staticmethod
  @overload
  def glProgramUniformMatrix2x4dvEXT(arg0: int, arg1: int, arg2: bool, arg3: list[float]) -> None: ...

  @staticmethod
  @overload
  def glProgramUniformMatrix2x4dvEXT(arg0: int, arg1: int, arg2: bool, arg3: DoubleBuffer) -> None: ...

  @staticmethod
  @overload
  def glProgramUniformMatrix3dvEXT(arg0: int, arg1: int, arg2: bool, arg3: list[float]) -> None: ...

  @staticmethod
  @overload
  def glProgramUniformMatrix3dvEXT(arg0: int, arg1: int, arg2: bool, arg3: DoubleBuffer) -> None: ...

  @staticmethod
  @overload
  def glProgramUniformMatrix3x2dvEXT(arg0: int, arg1: int, arg2: bool, arg3: list[float]) -> None: ...

  @staticmethod
  @overload
  def glProgramUniformMatrix3x2dvEXT(arg0: int, arg1: int, arg2: bool, arg3: DoubleBuffer) -> None: ...

  @staticmethod
  @overload
  def glProgramUniformMatrix3x4dvEXT(arg0: int, arg1: int, arg2: bool, arg3: list[float]) -> None: ...

  @staticmethod
  @overload
  def glProgramUniformMatrix3x4dvEXT(arg0: int, arg1: int, arg2: bool, arg3: DoubleBuffer) -> None: ...

  @staticmethod
  @overload
  def glProgramUniformMatrix4dvEXT(arg0: int, arg1: int, arg2: bool, arg3: list[float]) -> None: ...

  @staticmethod
  @overload
  def glProgramUniformMatrix4dvEXT(arg0: int, arg1: int, arg2: bool, arg3: DoubleBuffer) -> None: ...

  @staticmethod
  @overload
  def glProgramUniformMatrix4x2dvEXT(arg0: int, arg1: int, arg2: bool, arg3: list[float]) -> None: ...

  @staticmethod
  @overload
  def glProgramUniformMatrix4x2dvEXT(arg0: int, arg1: int, arg2: bool, arg3: DoubleBuffer) -> None: ...

  @staticmethod
  @overload
  def glProgramUniformMatrix4x3dvEXT(arg0: int, arg1: int, arg2: bool, arg3: list[float]) -> None: ...

  @staticmethod
  @overload
  def glProgramUniformMatrix4x3dvEXT(arg0: int, arg1: int, arg2: bool, arg3: DoubleBuffer) -> None: ...

  @staticmethod
  def glUniform1d(arg0: int, arg1: float) -> None: ...

  @staticmethod
  @overload
  def glUniform1dv(arg0: int, arg1: list[float]) -> None: ...

  @staticmethod
  @overload
  def glUniform1dv(arg0: int, arg1: DoubleBuffer) -> None: ...

  @staticmethod
  def glUniform2d(arg0: int, arg1: float, arg2: float) -> None: ...

  @staticmethod
  @overload
  def glUniform2dv(arg0: int, arg1: list[float]) -> None: ...

  @staticmethod
  @overload
  def glUniform2dv(arg0: int, arg1: DoubleBuffer) -> None: ...

  @staticmethod
  def glUniform3d(arg0: int, arg1: float, arg2: float, arg3: float) -> None: ...

  @staticmethod
  @overload
  def glUniform3dv(arg0: int, arg1: list[float]) -> None: ...

  @staticmethod
  @overload
  def glUniform3dv(arg0: int, arg1: DoubleBuffer) -> None: ...

  @staticmethod
  def glUniform4d(arg0: int, arg1: float, arg2: float, arg3: float, arg4: float) -> None: ...

  @staticmethod
  @overload
  def glUniform4dv(arg0: int, arg1: list[float]) -> None: ...

  @staticmethod
  @overload
  def glUniform4dv(arg0: int, arg1: DoubleBuffer) -> None: ...

  @staticmethod
  @overload
  def glUniformMatrix2dv(arg0: int, arg1: bool, arg2: list[float]) -> None: ...

  @staticmethod
  @overload
  def glUniformMatrix2dv(arg0: int, arg1: bool, arg2: DoubleBuffer) -> None: ...

  @staticmethod
  @overload
  def glUniformMatrix2x3dv(arg0: int, arg1: bool, arg2: list[float]) -> None: ...

  @staticmethod
  @overload
  def glUniformMatrix2x3dv(arg0: int, arg1: bool, arg2: DoubleBuffer) -> None: ...

  @staticmethod
  @overload
  def glUniformMatrix2x4dv(arg0: int, arg1: bool, arg2: list[float]) -> None: ...

  @staticmethod
  @overload
  def glUniformMatrix2x4dv(arg0: int, arg1: bool, arg2: DoubleBuffer) -> None: ...

  @staticmethod
  @overload
  def glUniformMatrix3dv(arg0: int, arg1: bool, arg2: list[float]) -> None: ...

  @staticmethod
  @overload
  def glUniformMatrix3dv(arg0: int, arg1: bool, arg2: DoubleBuffer) -> None: ...

  @staticmethod
  @overload
  def glUniformMatrix3x2dv(arg0: int, arg1: bool, arg2: list[float]) -> None: ...

  @staticmethod
  @overload
  def glUniformMatrix3x2dv(arg0: int, arg1: bool, arg2: DoubleBuffer) -> None: ...

  @staticmethod
  @overload
  def glUniformMatrix3x4dv(arg0: int, arg1: bool, arg2: list[float]) -> None: ...

  @staticmethod
  @overload
  def glUniformMatrix3x4dv(arg0: int, arg1: bool, arg2: DoubleBuffer) -> None: ...

  @staticmethod
  @overload
  def glUniformMatrix4dv(arg0: int, arg1: bool, arg2: list[float]) -> None: ...

  @staticmethod
  @overload
  def glUniformMatrix4dv(arg0: int, arg1: bool, arg2: DoubleBuffer) -> None: ...

  @staticmethod
  @overload
  def glUniformMatrix4x2dv(arg0: int, arg1: bool, arg2: list[float]) -> None: ...

  @staticmethod
  @overload
  def glUniformMatrix4x2dv(arg0: int, arg1: bool, arg2: DoubleBuffer) -> None: ...

  @staticmethod
  @overload
  def glUniformMatrix4x3dv(arg0: int, arg1: bool, arg2: list[float]) -> None: ...

  @staticmethod
  @overload
  def glUniformMatrix4x3dv(arg0: int, arg1: bool, arg2: DoubleBuffer) -> None: ...

  @staticmethod
  def nglGetUniformdv(arg0: int, arg1: int, arg2: int) -> None: ...

  @staticmethod
  def nglProgramUniform1dvEXT(arg0: int, arg1: int, arg2: int, arg3: int) -> None: ...

  @staticmethod
  def nglProgramUniform2dvEXT(arg0: int, arg1: int, arg2: int, arg3: int) -> None: ...

  @staticmethod
  def nglProgramUniform3dvEXT(arg0: int, arg1: int, arg2: int, arg3: int) -> None: ...

  @staticmethod
  def nglProgramUniform4dvEXT(arg0: int, arg1: int, arg2: int, arg3: int) -> None: ...

  @staticmethod
  def nglProgramUniformMatrix2dvEXT(arg0: int, arg1: int, arg2: int, arg3: bool, arg4: int) -> None: ...

  @staticmethod
  def nglProgramUniformMatrix2x3dvEXT(arg0: int, arg1: int, arg2: int, arg3: bool, arg4: int) -> None: ...

  @staticmethod
  def nglProgramUniformMatrix2x4dvEXT(arg0: int, arg1: int, arg2: int, arg3: bool, arg4: int) -> None: ...

  @staticmethod
  def nglProgramUniformMatrix3dvEXT(arg0: int, arg1: int, arg2: int, arg3: bool, arg4: int) -> None: ...

  @staticmethod
  def nglProgramUniformMatrix3x2dvEXT(arg0: int, arg1: int, arg2: int, arg3: bool, arg4: int) -> None: ...

  @staticmethod
  def nglProgramUniformMatrix3x4dvEXT(arg0: int, arg1: int, arg2: int, arg3: bool, arg4: int) -> None: ...

  @staticmethod
  def nglProgramUniformMatrix4dvEXT(arg0: int, arg1: int, arg2: int, arg3: bool, arg4: int) -> None: ...

  @staticmethod
  def nglProgramUniformMatrix4x2dvEXT(arg0: int, arg1: int, arg2: int, arg3: bool, arg4: int) -> None: ...

  @staticmethod
  def nglProgramUniformMatrix4x3dvEXT(arg0: int, arg1: int, arg2: int, arg3: bool, arg4: int) -> None: ...

  @staticmethod
  def nglUniform1dv(arg0: int, arg1: int, arg2: int) -> None: ...

  @staticmethod
  def nglUniform2dv(arg0: int, arg1: int, arg2: int) -> None: ...

  @staticmethod
  def nglUniform3dv(arg0: int, arg1: int, arg2: int) -> None: ...

  @staticmethod
  def nglUniform4dv(arg0: int, arg1: int, arg2: int) -> None: ...

  @staticmethod
  def nglUniformMatrix2dv(arg0: int, arg1: int, arg2: bool, arg3: int) -> None: ...

  @staticmethod
  def nglUniformMatrix2x3dv(arg0: int, arg1: int, arg2: bool, arg3: int) -> None: ...

  @staticmethod
  def nglUniformMatrix2x4dv(arg0: int, arg1: int, arg2: bool, arg3: int) -> None: ...

  @staticmethod
  def nglUniformMatrix3dv(arg0: int, arg1: int, arg2: bool, arg3: int) -> None: ...

  @staticmethod
  def nglUniformMatrix3x2dv(arg0: int, arg1: int, arg2: bool, arg3: int) -> None: ...

  @staticmethod
  def nglUniformMatrix3x4dv(arg0: int, arg1: int, arg2: bool, arg3: int) -> None: ...

  @staticmethod
  def nglUniformMatrix4dv(arg0: int, arg1: int, arg2: bool, arg3: int) -> None: ...

  @staticmethod
  def nglUniformMatrix4x2dv(arg0: int, arg1: int, arg2: bool, arg3: int) -> None: ...

  @staticmethod
  def nglUniformMatrix4x3dv(arg0: int, arg1: int, arg2: bool, arg3: int) -> None: ...


class ARBGPUShaderInt64:

  GL_INT64_ARB: int

  GL_INT64_VEC2_ARB: int

  GL_INT64_VEC3_ARB: int

  GL_INT64_VEC4_ARB: int

  GL_UNSIGNED_INT64_ARB: int

  GL_UNSIGNED_INT64_VEC2_ARB: int

  GL_UNSIGNED_INT64_VEC3_ARB: int

  GL_UNSIGNED_INT64_VEC4_ARB: int

  @staticmethod
  @overload
  def glGetUniformi64vARB(arg0: int, arg1: int) -> int: ...

  @staticmethod
  @overload
  def glGetUniformi64vARB(arg0: int, arg1: int, arg2: list[int]) -> None: ...

  @staticmethod
  @overload
  def glGetUniformi64vARB(arg0: int, arg1: int, arg2: LongBuffer) -> None: ...

  @staticmethod
  @overload
  def glGetUniformui64vARB(arg0: int, arg1: int) -> int: ...

  @staticmethod
  @overload
  def glGetUniformui64vARB(arg0: int, arg1: int, arg2: list[int]) -> None: ...

  @staticmethod
  @overload
  def glGetUniformui64vARB(arg0: int, arg1: int, arg2: LongBuffer) -> None: ...

  @staticmethod
  @overload
  def glGetnUniformi64vARB(arg0: int, arg1: int) -> int: ...

  @staticmethod
  @overload
  def glGetnUniformi64vARB(arg0: int, arg1: int, arg2: list[int]) -> None: ...

  @staticmethod
  @overload
  def glGetnUniformi64vARB(arg0: int, arg1: int, arg2: LongBuffer) -> None: ...

  @staticmethod
  @overload
  def glGetnUniformui64vARB(arg0: int, arg1: int) -> int: ...

  @staticmethod
  @overload
  def glGetnUniformui64vARB(arg0: int, arg1: int, arg2: list[int]) -> None: ...

  @staticmethod
  @overload
  def glGetnUniformui64vARB(arg0: int, arg1: int, arg2: LongBuffer) -> None: ...

  @staticmethod
  def glProgramUniform1i64ARB(arg0: int, arg1: int, arg2: int) -> None: ...

  @staticmethod
  @overload
  def glProgramUniform1i64vARB(arg0: int, arg1: int, arg2: list[int]) -> None: ...

  @staticmethod
  @overload
  def glProgramUniform1i64vARB(arg0: int, arg1: int, arg2: LongBuffer) -> None: ...

  @staticmethod
  def glProgramUniform1ui64ARB(arg0: int, arg1: int, arg2: int) -> None: ...

  @staticmethod
  @overload
  def glProgramUniform1ui64vARB(arg0: int, arg1: int, arg2: list[int]) -> None: ...

  @staticmethod
  @overload
  def glProgramUniform1ui64vARB(arg0: int, arg1: int, arg2: LongBuffer) -> None: ...

  @staticmethod
  def glProgramUniform2i64ARB(arg0: int, arg1: int, arg2: int, arg3: int) -> None: ...

  @staticmethod
  @overload
  def glProgramUniform2i64vARB(arg0: int, arg1: int, arg2: list[int]) -> None: ...

  @staticmethod
  @overload
  def glProgramUniform2i64vARB(arg0: int, arg1: int, arg2: LongBuffer) -> None: ...

  @staticmethod
  def glProgramUniform2ui64ARB(arg0: int, arg1: int, arg2: int, arg3: int) -> None: ...

  @staticmethod
  @overload
  def glProgramUniform2ui64vARB(arg0: int, arg1: int, arg2: list[int]) -> None: ...

  @staticmethod
  @overload
  def glProgramUniform2ui64vARB(arg0: int, arg1: int, arg2: LongBuffer) -> None: ...

  @staticmethod
  def glProgramUniform3i64ARB(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int) -> None: ...

  @staticmethod
  @overload
  def glProgramUniform3i64vARB(arg0: int, arg1: int, arg2: list[int]) -> None: ...

  @staticmethod
  @overload
  def glProgramUniform3i64vARB(arg0: int, arg1: int, arg2: LongBuffer) -> None: ...

  @staticmethod
  def glProgramUniform3ui64ARB(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int) -> None: ...

  @staticmethod
  @overload
  def glProgramUniform3ui64vARB(arg0: int, arg1: int, arg2: list[int]) -> None: ...

  @staticmethod
  @overload
  def glProgramUniform3ui64vARB(arg0: int, arg1: int, arg2: LongBuffer) -> None: ...

  @staticmethod
  def glProgramUniform4i64ARB(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int) -> None: ...

  @staticmethod
  @overload
  def glProgramUniform4i64vARB(arg0: int, arg1: int, arg2: list[int]) -> None: ...

  @staticmethod
  @overload
  def glProgramUniform4i64vARB(arg0: int, arg1: int, arg2: LongBuffer) -> None: ...

  @staticmethod
  def glProgramUniform4ui64ARB(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int) -> None: ...

  @staticmethod
  @overload
  def glProgramUniform4ui64vARB(arg0: int, arg1: int, arg2: list[int]) -> None: ...

  @staticmethod
  @overload
  def glProgramUniform4ui64vARB(arg0: int, arg1: int, arg2: LongBuffer) -> None: ...

  @staticmethod
  def glUniform1i64ARB(arg0: int, arg1: int) -> None: ...

  @staticmethod
  @overload
  def glUniform1i64vARB(arg0: int, arg1: list[int]) -> None: ...

  @staticmethod
  @overload
  def glUniform1i64vARB(arg0: int, arg1: LongBuffer) -> None: ...

  @staticmethod
  def glUniform1ui64ARB(arg0: int, arg1: int) -> None: ...

  @staticmethod
  @overload
  def glUniform1ui64vARB(arg0: int, arg1: list[int]) -> None: ...

  @staticmethod
  @overload
  def glUniform1ui64vARB(arg0: int, arg1: LongBuffer) -> None: ...

  @staticmethod
  def glUniform2i64ARB(arg0: int, arg1: int, arg2: int) -> None: ...

  @staticmethod
  @overload
  def glUniform2i64vARB(arg0: int, arg1: list[int]) -> None: ...

  @staticmethod
  @overload
  def glUniform2i64vARB(arg0: int, arg1: LongBuffer) -> None: ...

  @staticmethod
  def glUniform2ui64ARB(arg0: int, arg1: int, arg2: int) -> None: ...

  @staticmethod
  @overload
  def glUniform2ui64vARB(arg0: int, arg1: list[int]) -> None: ...

  @staticmethod
  @overload
  def glUniform2ui64vARB(arg0: int, arg1: LongBuffer) -> None: ...

  @staticmethod
  def glUniform3i64ARB(arg0: int, arg1: int, arg2: int, arg3: int) -> None: ...

  @staticmethod
  @overload
  def glUniform3i64vARB(arg0: int, arg1: list[int]) -> None: ...

  @staticmethod
  @overload
  def glUniform3i64vARB(arg0: int, arg1: LongBuffer) -> None: ...

  @staticmethod
  def glUniform3ui64ARB(arg0: int, arg1: int, arg2: int, arg3: int) -> None: ...

  @staticmethod
  @overload
  def glUniform3ui64vARB(arg0: int, arg1: list[int]) -> None: ...

  @staticmethod
  @overload
  def glUniform3ui64vARB(arg0: int, arg1: LongBuffer) -> None: ...

  @staticmethod
  def glUniform4i64ARB(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int) -> None: ...

  @staticmethod
  @overload
  def glUniform4i64vARB(arg0: int, arg1: list[int]) -> None: ...

  @staticmethod
  @overload
  def glUniform4i64vARB(arg0: int, arg1: LongBuffer) -> None: ...

  @staticmethod
  def glUniform4ui64ARB(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int) -> None: ...

  @staticmethod
  @overload
  def glUniform4ui64vARB(arg0: int, arg1: list[int]) -> None: ...

  @staticmethod
  @overload
  def glUniform4ui64vARB(arg0: int, arg1: LongBuffer) -> None: ...

  @staticmethod
  def nglGetUniformi64vARB(arg0: int, arg1: int, arg2: int) -> None: ...

  @staticmethod
  def nglGetUniformui64vARB(arg0: int, arg1: int, arg2: int) -> None: ...

  @staticmethod
  def nglGetnUniformi64vARB(arg0: int, arg1: int, arg2: int, arg3: int) -> None: ...

  @staticmethod
  def nglGetnUniformui64vARB(arg0: int, arg1: int, arg2: int, arg3: int) -> None: ...

  @staticmethod
  def nglProgramUniform1i64vARB(arg0: int, arg1: int, arg2: int, arg3: int) -> None: ...

  @staticmethod
  def nglProgramUniform1ui64vARB(arg0: int, arg1: int, arg2: int, arg3: int) -> None: ...

  @staticmethod
  def nglProgramUniform2i64vARB(arg0: int, arg1: int, arg2: int, arg3: int) -> None: ...

  @staticmethod
  def nglProgramUniform2ui64vARB(arg0: int, arg1: int, arg2: int, arg3: int) -> None: ...

  @staticmethod
  def nglProgramUniform3i64vARB(arg0: int, arg1: int, arg2: int, arg3: int) -> None: ...

  @staticmethod
  def nglProgramUniform3ui64vARB(arg0: int, arg1: int, arg2: int, arg3: int) -> None: ...

  @staticmethod
  def nglProgramUniform4i64vARB(arg0: int, arg1: int, arg2: int, arg3: int) -> None: ...

  @staticmethod
  def nglProgramUniform4ui64vARB(arg0: int, arg1: int, arg2: int, arg3: int) -> None: ...

  @staticmethod
  def nglUniform1i64vARB(arg0: int, arg1: int, arg2: int) -> None: ...

  @staticmethod
  def nglUniform1ui64vARB(arg0: int, arg1: int, arg2: int) -> None: ...

  @staticmethod
  def nglUniform2i64vARB(arg0: int, arg1: int, arg2: int) -> None: ...

  @staticmethod
  def nglUniform2ui64vARB(arg0: int, arg1: int, arg2: int) -> None: ...

  @staticmethod
  def nglUniform3i64vARB(arg0: int, arg1: int, arg2: int) -> None: ...

  @staticmethod
  def nglUniform3ui64vARB(arg0: int, arg1: int, arg2: int) -> None: ...

  @staticmethod
  def nglUniform4i64vARB(arg0: int, arg1: int, arg2: int) -> None: ...

  @staticmethod
  def nglUniform4ui64vARB(arg0: int, arg1: int, arg2: int) -> None: ...


class ARBGeometryShader4:

  GL_FRAMEBUFFER_ATTACHMENT_LAYERED_ARB: int

  GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LAYER: int

  GL_FRAMEBUFFER_INCOMPLETE_LAYER_COUNT_ARB: int

  GL_FRAMEBUFFER_INCOMPLETE_LAYER_TARGETS_ARB: int

  GL_GEOMETRY_INPUT_TYPE_ARB: int

  GL_GEOMETRY_OUTPUT_TYPE_ARB: int

  GL_GEOMETRY_SHADER_ARB: int

  GL_GEOMETRY_VERTICES_OUT_ARB: int

  GL_LINE_STRIP_ADJACENCY_ARB: int

  GL_LINES_ADJACENCY_ARB: int

  GL_MAX_GEOMETRY_OUTPUT_VERTICES_ARB: int

  GL_MAX_GEOMETRY_TEXTURE_IMAGE_UNITS_ARB: int

  GL_MAX_GEOMETRY_TOTAL_OUTPUT_COMPONENTS_ARB: int

  GL_MAX_GEOMETRY_UNIFORM_COMPONENTS_ARB: int

  GL_MAX_GEOMETRY_VARYING_COMPONENTS_ARB: int

  GL_MAX_VERTEX_VARYING_COMPONENTS_ARB: int

  GL_PROGRAM_POINT_SIZE_ARB: int

  GL_TRIANGLE_STRIP_ADJACENCY_ARB: int

  GL_TRIANGLES_ADJACENCY_ARB: int

  @staticmethod
  def glFramebufferTextureARB(arg0: int, arg1: int, arg2: int, arg3: int) -> None: ...

  @staticmethod
  def glFramebufferTextureFaceARB(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int) -> None: ...

  @staticmethod
  def glFramebufferTextureLayerARB(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int) -> None: ...

  @staticmethod
  def glProgramParameteriARB(arg0: int, arg1: int, arg2: int) -> None: ...


class ARBGetProgramBinary:

  GL_NUM_PROGRAM_BINARY_FORMATS: int

  GL_PROGRAM_BINARY_FORMATS: int

  GL_PROGRAM_BINARY_LENGTH: int

  GL_PROGRAM_BINARY_RETRIEVABLE_HINT: int

  @staticmethod
  @overload
  def glGetProgramBinary(arg0: int, arg1: list[int], arg2: list[int], arg3: ByteBuffer) -> None: ...

  @staticmethod
  @overload
  def glGetProgramBinary(arg0: int, arg1: IntBuffer, arg2: IntBuffer, arg3: ByteBuffer) -> None: ...

  @staticmethod
  def glProgramBinary(arg0: int, arg1: int, arg2: ByteBuffer) -> None: ...

  @staticmethod
  def glProgramParameteri(arg0: int, arg1: int, arg2: int) -> None: ...

  @staticmethod
  def nglGetProgramBinary(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int) -> None: ...

  @staticmethod
  def nglProgramBinary(arg0: int, arg1: int, arg2: int, arg3: int) -> None: ...


class ARBGetTextureSubImage:

  @staticmethod
  @overload
  def glGetCompressedTextureSubImage(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int, arg7: int, arg8: list[float]) -> None: ...

  @staticmethod
  @overload
  def glGetCompressedTextureSubImage(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int, arg7: int, arg8: list[float]) -> None: ...

  @staticmethod
  @overload
  def glGetCompressedTextureSubImage(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int, arg7: int, arg8: list[int]) -> None: ...

  @staticmethod
  @overload
  def glGetCompressedTextureSubImage(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int, arg7: int, arg8: list[int]) -> None: ...

  @staticmethod
  @overload
  def glGetCompressedTextureSubImage(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int, arg7: int, arg8: ByteBuffer) -> None: ...

  @staticmethod
  @overload
  def glGetCompressedTextureSubImage(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int, arg7: int, arg8: DoubleBuffer) -> None: ...

  @staticmethod
  @overload
  def glGetCompressedTextureSubImage(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int, arg7: int, arg8: FloatBuffer) -> None: ...

  @staticmethod
  @overload
  def glGetCompressedTextureSubImage(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int, arg7: int, arg8: IntBuffer) -> None: ...

  @staticmethod
  @overload
  def glGetCompressedTextureSubImage(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int, arg7: int, arg8: ShortBuffer) -> None: ...

  @staticmethod
  @overload
  def glGetCompressedTextureSubImage(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int, arg7: int, arg8: int, arg9: int) -> None: ...

  @staticmethod
  @overload
  def glGetTextureSubImage(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int, arg7: int, arg8: int, arg9: int, arg10: list[float]) -> None: ...

  @staticmethod
  @overload
  def glGetTextureSubImage(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int, arg7: int, arg8: int, arg9: int, arg10: list[float]) -> None: ...

  @staticmethod
  @overload
  def glGetTextureSubImage(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int, arg7: int, arg8: int, arg9: int, arg10: list[int]) -> None: ...

  @staticmethod
  @overload
  def glGetTextureSubImage(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int, arg7: int, arg8: int, arg9: int, arg10: list[int]) -> None: ...

  @staticmethod
  @overload
  def glGetTextureSubImage(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int, arg7: int, arg8: int, arg9: int, arg10: ByteBuffer) -> None: ...

  @staticmethod
  @overload
  def glGetTextureSubImage(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int, arg7: int, arg8: int, arg9: int, arg10: DoubleBuffer) -> None: ...

  @staticmethod
  @overload
  def glGetTextureSubImage(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int, arg7: int, arg8: int, arg9: int, arg10: FloatBuffer) -> None: ...

  @staticmethod
  @overload
  def glGetTextureSubImage(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int, arg7: int, arg8: int, arg9: int, arg10: IntBuffer) -> None: ...

  @staticmethod
  @overload
  def glGetTextureSubImage(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int, arg7: int, arg8: int, arg9: int, arg10: ShortBuffer) -> None: ...

  @staticmethod
  @overload
  def glGetTextureSubImage(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int, arg7: int, arg8: int, arg9: int, arg10: int, arg11: int) -> None: ...

  @staticmethod
  def nglGetCompressedTextureSubImage(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int, arg7: int, arg8: int, arg9: int) -> None: ...

  @staticmethod
  def nglGetTextureSubImage(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int, arg7: int, arg8: int, arg9: int, arg10: int, arg11: int) -> None: ...


class ARBHalfFloatPixel:

  GL_HALF_FLOAT_ARB: int


class ARBHalfFloatVertex:

  GL_HALF_FLOAT: int


class ARBImaging:

  GL_BLEND_COLOR: int

  GL_BLEND_EQUATION: int

  GL_COLOR_MATRIX: int

  GL_COLOR_MATRIX_STACK_DEPTH: int

  GL_COLOR_TABLE: int

  GL_COLOR_TABLE_ALPHA_SIZE: int

  GL_COLOR_TABLE_BIAS: int

  GL_COLOR_TABLE_BLUE_SIZE: int

  GL_COLOR_TABLE_FORMAT: int

  GL_COLOR_TABLE_GREEN_SIZE: int

  GL_COLOR_TABLE_INTENSITY_SIZE: int

  GL_COLOR_TABLE_LUMINANCE_SIZE: int

  GL_COLOR_TABLE_RED_SIZE: int

  GL_COLOR_TABLE_SCALE: int

  GL_COLOR_TABLE_WIDTH: int

  GL_CONSTANT_ALPHA: int

  GL_CONSTANT_BORDER: int

  GL_CONSTANT_COLOR: int

  GL_CONVOLUTION_1D: int

  GL_CONVOLUTION_2D: int

  GL_CONVOLUTION_BORDER_COLOR: int

  GL_CONVOLUTION_BORDER_MODE: int

  GL_CONVOLUTION_FILTER_BIAS: int

  GL_CONVOLUTION_FILTER_SCALE: int

  GL_CONVOLUTION_FORMAT: int

  GL_CONVOLUTION_HEIGHT: int

  GL_CONVOLUTION_WIDTH: int

  GL_FUNC_ADD: int

  GL_FUNC_REVERSE_SUBTRACT: int

  GL_FUNC_SUBTRACT: int

  GL_HISTOGRAM: int

  GL_HISTOGRAM_ALPHA_SIZE: int

  GL_HISTOGRAM_BLUE_SIZE: int

  GL_HISTOGRAM_FORMAT: int

  GL_HISTOGRAM_GREEN_SIZE: int

  GL_HISTOGRAM_LUMINANCE_SIZE: int

  GL_HISTOGRAM_RED_SIZE: int

  GL_HISTOGRAM_SINK: int

  GL_HISTOGRAM_WIDTH: int

  GL_MAX: int

  GL_MAX_COLOR_MATRIX_STACK_DEPTH: int

  GL_MAX_CONVOLUTION_HEIGHT: int

  GL_MAX_CONVOLUTION_WIDTH: int

  GL_MIN: int

  GL_MINMAX: int

  GL_MINMAX_FORMAT: int

  GL_MINMAX_SINK: int

  GL_ONE_MINUS_CONSTANT_ALPHA: int

  GL_ONE_MINUS_CONSTANT_COLOR: int

  GL_POST_COLOR_MATRIX_ALPHA_BIAS: int

  GL_POST_COLOR_MATRIX_ALPHA_SCALE: int

  GL_POST_COLOR_MATRIX_BLUE_BIAS: int

  GL_POST_COLOR_MATRIX_BLUE_SCALE: int

  GL_POST_COLOR_MATRIX_COLOR_TABLE: int

  GL_POST_COLOR_MATRIX_GREEN_BIAS: int

  GL_POST_COLOR_MATRIX_GREEN_SCALE: int

  GL_POST_COLOR_MATRIX_RED_BIAS: int

  GL_POST_COLOR_MATRIX_RED_SCALE: int

  GL_POST_CONVOLUTION_ALPHA_BIAS: int

  GL_POST_CONVOLUTION_ALPHA_SCALE: int

  GL_POST_CONVOLUTION_BLUE_BIAS: int

  GL_POST_CONVOLUTION_BLUE_SCALE: int

  GL_POST_CONVOLUTION_COLOR_TABLE: int

  GL_POST_CONVOLUTION_GREEN_BIAS: int

  GL_POST_CONVOLUTION_GREEN_SCALE: int

  GL_POST_CONVOLUTION_RED_BIAS: int

  GL_POST_CONVOLUTION_RED_SCALE: int

  GL_PROXY_COLOR_TABLE: int

  GL_PROXY_HISTOGRAM: int

  GL_PROXY_POST_COLOR_MATRIX_COLOR_TABLE: int

  GL_PROXY_POST_CONVOLUTION_COLOR_TABLE: int

  GL_REDUCE: int

  GL_REPLICATE_BORDER: int

  GL_SEPARABLE_2D: int

  GL_TABLE_TOO_LARGE: int

  @staticmethod
  def glBlendColor(arg0: float, arg1: float, arg2: float, arg3: float) -> None: ...

  @staticmethod
  def glBlendEquation(arg0: int) -> None: ...

  @staticmethod
  @overload
  def glColorSubTable(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: ByteBuffer) -> None: ...

  @staticmethod
  @overload
  def glColorSubTable(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int) -> None: ...

  @staticmethod
  @overload
  def glColorTable(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: list[float]) -> None: ...

  @staticmethod
  @overload
  def glColorTable(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: list[int]) -> None: ...

  @staticmethod
  @overload
  def glColorTable(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: list[int]) -> None: ...

  @staticmethod
  @overload
  def glColorTable(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: ByteBuffer) -> None: ...

  @staticmethod
  @overload
  def glColorTable(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: FloatBuffer) -> None: ...

  @staticmethod
  @overload
  def glColorTable(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: IntBuffer) -> None: ...

  @staticmethod
  @overload
  def glColorTable(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: ShortBuffer) -> None: ...

  @staticmethod
  @overload
  def glColorTable(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int) -> None: ...

  @staticmethod
  @overload
  def glColorTableParameterfv(arg0: int, arg1: int, arg2: list[float]) -> None: ...

  @staticmethod
  @overload
  def glColorTableParameterfv(arg0: int, arg1: int, arg2: FloatBuffer) -> None: ...

  @staticmethod
  @overload
  def glColorTableParameteriv(arg0: int, arg1: int, arg2: list[int]) -> None: ...

  @staticmethod
  @overload
  def glColorTableParameteriv(arg0: int, arg1: int, arg2: IntBuffer) -> None: ...

  @staticmethod
  @overload
  def glConvolutionFilter1D(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: ByteBuffer) -> None: ...

  @staticmethod
  @overload
  def glConvolutionFilter1D(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int) -> None: ...

  @staticmethod
  @overload
  def glConvolutionFilter2D(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: ByteBuffer) -> None: ...

  @staticmethod
  @overload
  def glConvolutionFilter2D(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int) -> None: ...

  @staticmethod
  def glConvolutionParameterf(arg0: int, arg1: int, arg2: float) -> None: ...

  @staticmethod
  @overload
  def glConvolutionParameterfv(arg0: int, arg1: int, arg2: list[float]) -> None: ...

  @staticmethod
  @overload
  def glConvolutionParameterfv(arg0: int, arg1: int, arg2: FloatBuffer) -> None: ...

  @staticmethod
  def glConvolutionParameteri(arg0: int, arg1: int, arg2: int) -> None: ...

  @staticmethod
  @overload
  def glConvolutionParameteriv(arg0: int, arg1: int, arg2: list[int]) -> None: ...

  @staticmethod
  @overload
  def glConvolutionParameteriv(arg0: int, arg1: int, arg2: IntBuffer) -> None: ...

  @staticmethod
  def glCopyColorSubTable(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int) -> None: ...

  @staticmethod
  def glCopyColorTable(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int) -> None: ...

  @staticmethod
  def glCopyConvolutionFilter1D(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int) -> None: ...

  @staticmethod
  def glCopyConvolutionFilter2D(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int) -> None: ...

  @staticmethod
  @overload
  def glGetColorTable(arg0: int, arg1: int, arg2: int, arg3: list[float]) -> None: ...

  @staticmethod
  @overload
  def glGetColorTable(arg0: int, arg1: int, arg2: int, arg3: list[int]) -> None: ...

  @staticmethod
  @overload
  def glGetColorTable(arg0: int, arg1: int, arg2: int, arg3: list[int]) -> None: ...

  @staticmethod
  @overload
  def glGetColorTable(arg0: int, arg1: int, arg2: int, arg3: ByteBuffer) -> None: ...

  @staticmethod
  @overload
  def glGetColorTable(arg0: int, arg1: int, arg2: int, arg3: FloatBuffer) -> None: ...

  @staticmethod
  @overload
  def glGetColorTable(arg0: int, arg1: int, arg2: int, arg3: IntBuffer) -> None: ...

  @staticmethod
  @overload
  def glGetColorTable(arg0: int, arg1: int, arg2: int, arg3: ShortBuffer) -> None: ...

  @staticmethod
  @overload
  def glGetColorTable(arg0: int, arg1: int, arg2: int, arg3: int) -> None: ...

  @staticmethod
  def glGetColorTableParameterf(arg0: int, arg1: int) -> float: ...

  @staticmethod
  @overload
  def glGetColorTableParameterfv(arg0: int, arg1: int, arg2: list[float]) -> None: ...

  @staticmethod
  @overload
  def glGetColorTableParameterfv(arg0: int, arg1: int, arg2: FloatBuffer) -> None: ...

  @staticmethod
  def glGetColorTableParameteri(arg0: int, arg1: int) -> int: ...

  @staticmethod
  @overload
  def glGetColorTableParameteriv(arg0: int, arg1: int, arg2: list[int]) -> None: ...

  @staticmethod
  @overload
  def glGetColorTableParameteriv(arg0: int, arg1: int, arg2: IntBuffer) -> None: ...

  @staticmethod
  @overload
  def glGetConvolutionFilter(arg0: int, arg1: int, arg2: int, arg3: ByteBuffer) -> None: ...

  @staticmethod
  @overload
  def glGetConvolutionFilter(arg0: int, arg1: int, arg2: int, arg3: int) -> None: ...

  @staticmethod
  def glGetConvolutionParameterf(arg0: int, arg1: int) -> float: ...

  @staticmethod
  @overload
  def glGetConvolutionParameterfv(arg0: int, arg1: int, arg2: list[float]) -> None: ...

  @staticmethod
  @overload
  def glGetConvolutionParameterfv(arg0: int, arg1: int, arg2: FloatBuffer) -> None: ...

  @staticmethod
  def glGetConvolutionParameteri(arg0: int, arg1: int) -> int: ...

  @staticmethod
  @overload
  def glGetConvolutionParameteriv(arg0: int, arg1: int, arg2: list[int]) -> None: ...

  @staticmethod
  @overload
  def glGetConvolutionParameteriv(arg0: int, arg1: int, arg2: IntBuffer) -> None: ...

  @staticmethod
  @overload
  def glGetHistogram(arg0: int, arg1: bool, arg2: int, arg3: int, arg4: ByteBuffer) -> None: ...

  @staticmethod
  @overload
  def glGetHistogram(arg0: int, arg1: bool, arg2: int, arg3: int, arg4: int) -> None: ...

  @staticmethod
  def glGetHistogramParameterf(arg0: int, arg1: int) -> float: ...

  @staticmethod
  @overload
  def glGetHistogramParameterfv(arg0: int, arg1: int, arg2: list[float]) -> None: ...

  @staticmethod
  @overload
  def glGetHistogramParameterfv(arg0: int, arg1: int, arg2: FloatBuffer) -> None: ...

  @staticmethod
  def glGetHistogramParameteri(arg0: int, arg1: int) -> int: ...

  @staticmethod
  @overload
  def glGetHistogramParameteriv(arg0: int, arg1: int, arg2: list[int]) -> None: ...

  @staticmethod
  @overload
  def glGetHistogramParameteriv(arg0: int, arg1: int, arg2: IntBuffer) -> None: ...

  @staticmethod
  @overload
  def glGetMinmax(arg0: int, arg1: bool, arg2: int, arg3: int, arg4: ByteBuffer) -> None: ...

  @staticmethod
  @overload
  def glGetMinmax(arg0: int, arg1: bool, arg2: int, arg3: int, arg4: int) -> None: ...

  @staticmethod
  def glGetMinmaxParameterf(arg0: int, arg1: int) -> float: ...

  @staticmethod
  @overload
  def glGetMinmaxParameterfv(arg0: int, arg1: int, arg2: list[float]) -> None: ...

  @staticmethod
  @overload
  def glGetMinmaxParameterfv(arg0: int, arg1: int, arg2: FloatBuffer) -> None: ...

  @staticmethod
  def glGetMinmaxParameteri(arg0: int, arg1: int) -> int: ...

  @staticmethod
  @overload
  def glGetMinmaxParameteriv(arg0: int, arg1: int, arg2: list[int]) -> None: ...

  @staticmethod
  @overload
  def glGetMinmaxParameteriv(arg0: int, arg1: int, arg2: IntBuffer) -> None: ...

  @staticmethod
  @overload
  def glGetSeparableFilter(arg0: int, arg1: int, arg2: int, arg3: ByteBuffer, arg4: ByteBuffer, arg5: ByteBuffer) -> None: ...

  @staticmethod
  @overload
  def glGetSeparableFilter(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: ByteBuffer) -> None: ...

  @staticmethod
  def glHistogram(arg0: int, arg1: int, arg2: int, arg3: bool) -> None: ...

  @staticmethod
  def glMinmax(arg0: int, arg1: int, arg2: bool) -> None: ...

  @staticmethod
  def glResetHistogram(arg0: int) -> None: ...

  @staticmethod
  def glResetMinmax(arg0: int) -> None: ...

  @staticmethod
  @overload
  def glSeparableFilter2D(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: ByteBuffer, arg7: ByteBuffer) -> None: ...

  @staticmethod
  @overload
  def glSeparableFilter2D(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int, arg7: int) -> None: ...

  @staticmethod
  def nglColorSubTable(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int) -> None: ...

  @staticmethod
  def nglColorTable(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int) -> None: ...

  @staticmethod
  def nglColorTableParameterfv(arg0: int, arg1: int, arg2: int) -> None: ...

  @staticmethod
  def nglColorTableParameteriv(arg0: int, arg1: int, arg2: int) -> None: ...

  @staticmethod
  def nglConvolutionFilter1D(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int) -> None: ...

  @staticmethod
  def nglConvolutionFilter2D(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int) -> None: ...

  @staticmethod
  def nglConvolutionParameterfv(arg0: int, arg1: int, arg2: int) -> None: ...

  @staticmethod
  def nglConvolutionParameteriv(arg0: int, arg1: int, arg2: int) -> None: ...

  @staticmethod
  def nglGetColorTable(arg0: int, arg1: int, arg2: int, arg3: int) -> None: ...

  @staticmethod
  def nglGetColorTableParameterfv(arg0: int, arg1: int, arg2: int) -> None: ...

  @staticmethod
  def nglGetColorTableParameteriv(arg0: int, arg1: int, arg2: int) -> None: ...

  @staticmethod
  def nglGetConvolutionFilter(arg0: int, arg1: int, arg2: int, arg3: int) -> None: ...

  @staticmethod
  def nglGetConvolutionParameterfv(arg0: int, arg1: int, arg2: int) -> None: ...

  @staticmethod
  def nglGetConvolutionParameteriv(arg0: int, arg1: int, arg2: int) -> None: ...

  @staticmethod
  def nglGetHistogram(arg0: int, arg1: bool, arg2: int, arg3: int, arg4: int) -> None: ...

  @staticmethod
  def nglGetHistogramParameterfv(arg0: int, arg1: int, arg2: int) -> None: ...

  @staticmethod
  def nglGetHistogramParameteriv(arg0: int, arg1: int, arg2: int) -> None: ...

  @staticmethod
  def nglGetMinmax(arg0: int, arg1: bool, arg2: int, arg3: int, arg4: int) -> None: ...

  @staticmethod
  def nglGetMinmaxParameterfv(arg0: int, arg1: int, arg2: int) -> None: ...

  @staticmethod
  def nglGetMinmaxParameteriv(arg0: int, arg1: int, arg2: int) -> None: ...

  @staticmethod
  def nglGetSeparableFilter(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int) -> None: ...

  @staticmethod
  def nglSeparableFilter2D(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int, arg7: int) -> None: ...


class ARBIndirectParameters:

  GL_PARAMETER_BUFFER_ARB: int

  GL_PARAMETER_BUFFER_BINDING_ARB: int

  @staticmethod
  @overload
  def glMultiDrawArraysIndirectCountARB(arg0: int, arg1: list[int], arg2: int, arg3: int, arg4: int) -> None: ...

  @staticmethod
  @overload
  def glMultiDrawArraysIndirectCountARB(arg0: int, arg1: ByteBuffer, arg2: int, arg3: int, arg4: int) -> None: ...

  @staticmethod
  @overload
  def glMultiDrawArraysIndirectCountARB(arg0: int, arg1: IntBuffer, arg2: int, arg3: int, arg4: int) -> None: ...

  @staticmethod
  @overload
  def glMultiDrawArraysIndirectCountARB(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int) -> None: ...

  @staticmethod
  @overload
  def glMultiDrawElementsIndirectCountARB(arg0: int, arg1: int, arg2: list[int], arg3: int, arg4: int, arg5: int) -> None: ...

  @staticmethod
  @overload
  def glMultiDrawElementsIndirectCountARB(arg0: int, arg1: int, arg2: ByteBuffer, arg3: int, arg4: int, arg5: int) -> None: ...

  @staticmethod
  @overload
  def glMultiDrawElementsIndirectCountARB(arg0: int, arg1: int, arg2: IntBuffer, arg3: int, arg4: int, arg5: int) -> None: ...

  @staticmethod
  @overload
  def glMultiDrawElementsIndirectCountARB(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int) -> None: ...

  @staticmethod
  def nglMultiDrawArraysIndirectCountARB(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int) -> None: ...

  @staticmethod
  def nglMultiDrawElementsIndirectCountARB(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int) -> None: ...


class ARBInstancedArrays:

  GL_VERTEX_ATTRIB_ARRAY_DIVISOR_ARB: int

  @staticmethod
  def glVertexArrayVertexAttribDivisorEXT(arg0: int, arg1: int, arg2: int) -> None: ...

  @staticmethod
  def glVertexAttribDivisorARB(arg0: int, arg1: int) -> None: ...


class ARBInternalformatQuery:

  GL_NUM_SAMPLE_COUNTS: int

  @staticmethod
  def glGetInternalformati(arg0: int, arg1: int, arg2: int) -> int: ...

  @staticmethod
  @overload
  def glGetInternalformativ(arg0: int, arg1: int, arg2: int, arg3: list[int]) -> None: ...

  @staticmethod
  @overload
  def glGetInternalformativ(arg0: int, arg1: int, arg2: int, arg3: IntBuffer) -> None: ...

  @staticmethod
  def nglGetInternalformativ(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int) -> None: ...


class ARBInternalformatQuery2:

  GL_AUTO_GENERATE_MIPMAP: int

  GL_CAVEAT_SUPPORT: int

  GL_CLEAR_BUFFER: int

  GL_COLOR_COMPONENTS: int

  GL_COLOR_ENCODING: int

  GL_COLOR_RENDERABLE: int

  GL_COMPUTE_TEXTURE: int

  GL_DEPTH_COMPONENTS: int

  GL_DEPTH_RENDERABLE: int

  GL_FILTER: int

  GL_FRAGMENT_TEXTURE: int

  GL_FRAMEBUFFER_BLEND: int

  GL_FRAMEBUFFER_RENDERABLE: int

  GL_FRAMEBUFFER_RENDERABLE_LAYERED: int

  GL_FULL_SUPPORT: int

  GL_GEOMETRY_TEXTURE: int

  GL_GET_TEXTURE_IMAGE_FORMAT: int

  GL_GET_TEXTURE_IMAGE_TYPE: int

  GL_IMAGE_CLASS_10_10_10_2: int

  GL_IMAGE_CLASS_11_11_10: int

  GL_IMAGE_CLASS_1_X_16: int

  GL_IMAGE_CLASS_1_X_32: int

  GL_IMAGE_CLASS_1_X_8: int

  GL_IMAGE_CLASS_2_X_16: int

  GL_IMAGE_CLASS_2_X_32: int

  GL_IMAGE_CLASS_2_X_8: int

  GL_IMAGE_CLASS_4_X_16: int

  GL_IMAGE_CLASS_4_X_32: int

  GL_IMAGE_CLASS_4_X_8: int

  GL_IMAGE_COMPATIBILITY_CLASS: int

  GL_IMAGE_FORMAT_COMPATIBILITY_TYPE: int

  GL_IMAGE_PIXEL_FORMAT: int

  GL_IMAGE_PIXEL_TYPE: int

  GL_IMAGE_TEXEL_SIZE: int

  GL_INTERNALFORMAT_ALPHA_SIZE: int

  GL_INTERNALFORMAT_ALPHA_TYPE: int

  GL_INTERNALFORMAT_BLUE_SIZE: int

  GL_INTERNALFORMAT_BLUE_TYPE: int

  GL_INTERNALFORMAT_DEPTH_SIZE: int

  GL_INTERNALFORMAT_DEPTH_TYPE: int

  GL_INTERNALFORMAT_GREEN_SIZE: int

  GL_INTERNALFORMAT_GREEN_TYPE: int

  GL_INTERNALFORMAT_PREFERRED: int

  GL_INTERNALFORMAT_RED_SIZE: int

  GL_INTERNALFORMAT_RED_TYPE: int

  GL_INTERNALFORMAT_SHARED_SIZE: int

  GL_INTERNALFORMAT_STENCIL_SIZE: int

  GL_INTERNALFORMAT_STENCIL_TYPE: int

  GL_INTERNALFORMAT_SUPPORTED: int

  GL_MANUAL_GENERATE_MIPMAP: int

  GL_MAX_COMBINED_DIMENSIONS: int

  GL_MAX_DEPTH: int

  GL_MAX_HEIGHT: int

  GL_MAX_LAYERS: int

  GL_MAX_WIDTH: int

  GL_MIPMAP: int

  GL_NUM_SAMPLE_COUNTS: int

  GL_READ_PIXELS: int

  GL_READ_PIXELS_FORMAT: int

  GL_READ_PIXELS_TYPE: int

  GL_RENDERBUFFER: int

  GL_SAMPLES: int

  GL_SHADER_IMAGE_ATOMIC: int

  GL_SHADER_IMAGE_LOAD: int

  GL_SHADER_IMAGE_STORE: int

  GL_SIMULTANEOUS_TEXTURE_AND_DEPTH_TEST: int

  GL_SIMULTANEOUS_TEXTURE_AND_DEPTH_WRITE: int

  GL_SIMULTANEOUS_TEXTURE_AND_STENCIL_TEST: int

  GL_SIMULTANEOUS_TEXTURE_AND_STENCIL_WRITE: int

  GL_SRGB_DECODE_ARB: int

  GL_SRGB_READ: int

  GL_SRGB_WRITE: int

  GL_STENCIL_COMPONENTS: int

  GL_STENCIL_RENDERABLE: int

  GL_TESS_CONTROL_TEXTURE: int

  GL_TESS_EVALUATION_TEXTURE: int

  GL_TEXTURE_1D: int

  GL_TEXTURE_1D_ARRAY: int

  GL_TEXTURE_2D: int

  GL_TEXTURE_2D_ARRAY: int

  GL_TEXTURE_2D_MULTISAMPLE: int

  GL_TEXTURE_2D_MULTISAMPLE_ARRAY: int

  GL_TEXTURE_3D: int

  GL_TEXTURE_BUFFER: int

  GL_TEXTURE_COMPRESSED: int

  GL_TEXTURE_COMPRESSED_BLOCK_HEIGHT: int

  GL_TEXTURE_COMPRESSED_BLOCK_SIZE: int

  GL_TEXTURE_COMPRESSED_BLOCK_WIDTH: int

  GL_TEXTURE_CUBE_MAP: int

  GL_TEXTURE_CUBE_MAP_ARRAY: int

  GL_TEXTURE_GATHER: int

  GL_TEXTURE_GATHER_SHADOW: int

  GL_TEXTURE_IMAGE_FORMAT: int

  GL_TEXTURE_IMAGE_TYPE: int

  GL_TEXTURE_RECTANGLE: int

  GL_TEXTURE_SHADOW: int

  GL_TEXTURE_VIEW: int

  GL_VERTEX_TEXTURE: int

  GL_VIEW_CLASS_128_BITS: int

  GL_VIEW_CLASS_16_BITS: int

  GL_VIEW_CLASS_24_BITS: int

  GL_VIEW_CLASS_32_BITS: int

  GL_VIEW_CLASS_48_BITS: int

  GL_VIEW_CLASS_64_BITS: int

  GL_VIEW_CLASS_8_BITS: int

  GL_VIEW_CLASS_96_BITS: int

  GL_VIEW_CLASS_BPTC_FLOAT: int

  GL_VIEW_CLASS_BPTC_UNORM: int

  GL_VIEW_CLASS_RGTC1_RED: int

  GL_VIEW_CLASS_RGTC2_RG: int

  GL_VIEW_CLASS_S3TC_DXT1_RGB: int

  GL_VIEW_CLASS_S3TC_DXT1_RGBA: int

  GL_VIEW_CLASS_S3TC_DXT3_RGBA: int

  GL_VIEW_CLASS_S3TC_DXT5_RGBA: int

  GL_VIEW_COMPATIBILITY_CLASS: int

  @staticmethod
  def glGetInternalformati64(arg0: int, arg1: int, arg2: int) -> int: ...

  @staticmethod
  @overload
  def glGetInternalformati64v(arg0: int, arg1: int, arg2: int, arg3: list[int]) -> None: ...

  @staticmethod
  @overload
  def glGetInternalformati64v(arg0: int, arg1: int, arg2: int, arg3: LongBuffer) -> None: ...

  @staticmethod
  def nglGetInternalformati64v(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int) -> None: ...


class ARBInvalidateSubdata:

  @staticmethod
  def glInvalidateBufferData(arg0: int) -> None: ...

  @staticmethod
  def glInvalidateBufferSubData(arg0: int, arg1: int, arg2: int) -> None: ...

  @staticmethod
  @overload
  def glInvalidateFramebuffer(arg0: int, arg1: list[int]) -> None: ...

  @staticmethod
  @overload
  def glInvalidateFramebuffer(arg0: int, arg1: int) -> None: ...

  @staticmethod
  @overload
  def glInvalidateFramebuffer(arg0: int, arg1: IntBuffer) -> None: ...

  @staticmethod
  @overload
  def glInvalidateSubFramebuffer(arg0: int, arg1: list[int], arg2: int, arg3: int, arg4: int, arg5: int) -> None: ...

  @staticmethod
  @overload
  def glInvalidateSubFramebuffer(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int) -> None: ...

  @staticmethod
  @overload
  def glInvalidateSubFramebuffer(arg0: int, arg1: IntBuffer, arg2: int, arg3: int, arg4: int, arg5: int) -> None: ...

  @staticmethod
  def glInvalidateTexImage(arg0: int, arg1: int) -> None: ...

  @staticmethod
  def glInvalidateTexSubImage(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int, arg7: int) -> None: ...

  @staticmethod
  def nglInvalidateFramebuffer(arg0: int, arg1: int, arg2: int) -> None: ...

  @staticmethod
  def nglInvalidateSubFramebuffer(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int) -> None: ...


class ARBMapBufferAlignment:

  GL_MIN_MAP_BUFFER_ALIGNMENT: int


class ARBMapBufferRange:

  GL_MAP_FLUSH_EXPLICIT_BIT: int

  GL_MAP_INVALIDATE_BUFFER_BIT: int

  GL_MAP_INVALIDATE_RANGE_BIT: int

  GL_MAP_READ_BIT: int

  GL_MAP_UNSYNCHRONIZED_BIT: int

  GL_MAP_WRITE_BIT: int

  @staticmethod
  def glFlushMappedBufferRange(arg0: int, arg1: int, arg2: int) -> None: ...

  @staticmethod
  @overload
  def glMapBufferRange(arg0: int, arg1: int, arg2: int, arg3: int) -> ByteBuffer: ...

  @staticmethod
  @overload
  def glMapBufferRange(arg0: int, arg1: int, arg2: int, arg3: int, arg4: ByteBuffer) -> ByteBuffer: ...

  @staticmethod
  def nglMapBufferRange(arg0: int, arg1: int, arg2: int, arg3: int) -> int: ...


class ARBMatrixPalette:

  GL_CURRENT_MATRIX_INDEX_ARB: int

  GL_CURRENT_PALETTE_MATRIX_ARB: int

  GL_MATRIX_INDEX_ARRAY_ARB: int

  GL_MATRIX_INDEX_ARRAY_POINTER_ARB: int

  GL_MATRIX_INDEX_ARRAY_SIZE_ARB: int

  GL_MATRIX_INDEX_ARRAY_STRIDE_ARB: int

  GL_MATRIX_INDEX_ARRAY_TYPE_ARB: int

  GL_MATRIX_PALETTE_ARB: int

  GL_MAX_MATRIX_PALETTE_STACK_DEPTH_ARB: int

  GL_MAX_PALETTE_MATRICES_ARB: int

  @staticmethod
  def glCurrentPaletteMatrixARB(arg0: int) -> None: ...

  @staticmethod
  @overload
  def glMatrixIndexPointerARB(arg0: int, arg1: int, arg2: ByteBuffer) -> None: ...

  @staticmethod
  @overload
  def glMatrixIndexPointerARB(arg0: int, arg1: int, arg2: IntBuffer) -> None: ...

  @staticmethod
  @overload
  def glMatrixIndexPointerARB(arg0: int, arg1: int, arg2: ShortBuffer) -> None: ...

  @staticmethod
  @overload
  def glMatrixIndexPointerARB(arg0: int, arg1: int, arg2: int, arg3: ByteBuffer) -> None: ...

  @staticmethod
  @overload
  def glMatrixIndexPointerARB(arg0: int, arg1: int, arg2: int, arg3: int) -> None: ...

  @staticmethod
  def glMatrixIndexubvARB(arg0: ByteBuffer) -> None: ...

  @staticmethod
  @overload
  def glMatrixIndexuivARB(arg0: list[int]) -> None: ...

  @staticmethod
  @overload
  def glMatrixIndexuivARB(arg0: IntBuffer) -> None: ...

  @staticmethod
  @overload
  def glMatrixIndexusvARB(arg0: list[int]) -> None: ...

  @staticmethod
  @overload
  def glMatrixIndexusvARB(arg0: ShortBuffer) -> None: ...

  @staticmethod
  def nglMatrixIndexPointerARB(arg0: int, arg1: int, arg2: int, arg3: int) -> None: ...

  @staticmethod
  def nglMatrixIndexubvARB(arg0: int, arg1: int) -> None: ...

  @staticmethod
  def nglMatrixIndexuivARB(arg0: int, arg1: int) -> None: ...

  @staticmethod
  def nglMatrixIndexusvARB(arg0: int, arg1: int) -> None: ...


class ARBMultiBind:

  @staticmethod
  @overload
  def glBindBuffersBase(arg0: int, arg1: int, arg2: list[int]) -> None: ...

  @staticmethod
  @overload
  def glBindBuffersBase(arg0: int, arg1: int, arg2: IntBuffer) -> None: ...

  @staticmethod
  @overload
  def glBindBuffersRange(arg0: int, arg1: int, arg2: list[int], arg3: PointerBuffer, arg4: PointerBuffer) -> None: ...

  @staticmethod
  @overload
  def glBindBuffersRange(arg0: int, arg1: int, arg2: IntBuffer, arg3: PointerBuffer, arg4: PointerBuffer) -> None: ...

  @staticmethod
  @overload
  def glBindImageTextures(arg0: int, arg1: list[int]) -> None: ...

  @staticmethod
  @overload
  def glBindImageTextures(arg0: int, arg1: IntBuffer) -> None: ...

  @staticmethod
  @overload
  def glBindSamplers(arg0: int, arg1: list[int]) -> None: ...

  @staticmethod
  @overload
  def glBindSamplers(arg0: int, arg1: IntBuffer) -> None: ...

  @staticmethod
  @overload
  def glBindTextures(arg0: int, arg1: list[int]) -> None: ...

  @staticmethod
  @overload
  def glBindTextures(arg0: int, arg1: IntBuffer) -> None: ...

  @staticmethod
  @overload
  def glBindVertexBuffers(arg0: int, arg1: list[int], arg2: PointerBuffer, arg3: list[int]) -> None: ...

  @staticmethod
  @overload
  def glBindVertexBuffers(arg0: int, arg1: IntBuffer, arg2: PointerBuffer, arg3: IntBuffer) -> None: ...

  @staticmethod
  def nglBindBuffersBase(arg0: int, arg1: int, arg2: int, arg3: int) -> None: ...

  @staticmethod
  def nglBindBuffersRange(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int) -> None: ...

  @staticmethod
  def nglBindImageTextures(arg0: int, arg1: int, arg2: int) -> None: ...

  @staticmethod
  def nglBindSamplers(arg0: int, arg1: int, arg2: int) -> None: ...

  @staticmethod
  def nglBindTextures(arg0: int, arg1: int, arg2: int) -> None: ...

  @staticmethod
  def nglBindVertexBuffers(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int) -> None: ...


class ARBMultiDrawIndirect:

  @staticmethod
  @overload
  def glMultiDrawArraysIndirect(arg0: int, arg1: list[int], arg2: int, arg3: int) -> None: ...

  @staticmethod
  @overload
  def glMultiDrawArraysIndirect(arg0: int, arg1: ByteBuffer, arg2: int, arg3: int) -> None: ...

  @staticmethod
  @overload
  def glMultiDrawArraysIndirect(arg0: int, arg1: IntBuffer, arg2: int, arg3: int) -> None: ...

  @staticmethod
  @overload
  def glMultiDrawArraysIndirect(arg0: int, arg1: int, arg2: int, arg3: int) -> None: ...

  @staticmethod
  @overload
  def glMultiDrawElementsIndirect(arg0: int, arg1: int, arg2: list[int], arg3: int, arg4: int) -> None: ...

  @staticmethod
  @overload
  def glMultiDrawElementsIndirect(arg0: int, arg1: int, arg2: ByteBuffer, arg3: int, arg4: int) -> None: ...

  @staticmethod
  @overload
  def glMultiDrawElementsIndirect(arg0: int, arg1: int, arg2: IntBuffer, arg3: int, arg4: int) -> None: ...

  @staticmethod
  @overload
  def glMultiDrawElementsIndirect(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int) -> None: ...

  @staticmethod
  def nglMultiDrawArraysIndirect(arg0: int, arg1: int, arg2: int, arg3: int) -> None: ...

  @staticmethod
  def nglMultiDrawElementsIndirect(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int) -> None: ...


class ARBMultisample:

  GL_MULTISAMPLE_ARB: int

  GL_MULTISAMPLE_BIT_ARB: int

  GL_SAMPLE_ALPHA_TO_COVERAGE_ARB: int

  GL_SAMPLE_ALPHA_TO_ONE_ARB: int

  GL_SAMPLE_BUFFERS_ARB: int

  GL_SAMPLE_COVERAGE_ARB: int

  GL_SAMPLE_COVERAGE_INVERT_ARB: int

  GL_SAMPLE_COVERAGE_VALUE_ARB: int

  GL_SAMPLES_ARB: int

  @staticmethod
  def glSampleCoverageARB(arg0: float, arg1: bool) -> None: ...


class ARBMultitexture:

  GL_ACTIVE_TEXTURE_ARB: int

  GL_CLIENT_ACTIVE_TEXTURE_ARB: int

  GL_MAX_TEXTURE_UNITS_ARB: int

  GL_TEXTURE0_ARB: int

  GL_TEXTURE10_ARB: int

  GL_TEXTURE11_ARB: int

  GL_TEXTURE12_ARB: int

  GL_TEXTURE13_ARB: int

  GL_TEXTURE14_ARB: int

  GL_TEXTURE15_ARB: int

  GL_TEXTURE16_ARB: int

  GL_TEXTURE17_ARB: int

  GL_TEXTURE18_ARB: int

  GL_TEXTURE19_ARB: int

  GL_TEXTURE1_ARB: int

  GL_TEXTURE20_ARB: int

  GL_TEXTURE21_ARB: int

  GL_TEXTURE22_ARB: int

  GL_TEXTURE23_ARB: int

  GL_TEXTURE24_ARB: int

  GL_TEXTURE25_ARB: int

  GL_TEXTURE26_ARB: int

  GL_TEXTURE27_ARB: int

  GL_TEXTURE28_ARB: int

  GL_TEXTURE29_ARB: int

  GL_TEXTURE2_ARB: int

  GL_TEXTURE30_ARB: int

  GL_TEXTURE31_ARB: int

  GL_TEXTURE3_ARB: int

  GL_TEXTURE4_ARB: int

  GL_TEXTURE5_ARB: int

  GL_TEXTURE6_ARB: int

  GL_TEXTURE7_ARB: int

  GL_TEXTURE8_ARB: int

  GL_TEXTURE9_ARB: int

  @staticmethod
  def glActiveTextureARB(arg0: int) -> None: ...

  @staticmethod
  def glClientActiveTextureARB(arg0: int) -> None: ...

  @staticmethod
  def glMultiTexCoord1dARB(arg0: int, arg1: float) -> None: ...

  @staticmethod
  @overload
  def glMultiTexCoord1dvARB(arg0: int, arg1: list[float]) -> None: ...

  @staticmethod
  @overload
  def glMultiTexCoord1dvARB(arg0: int, arg1: DoubleBuffer) -> None: ...

  @staticmethod
  def glMultiTexCoord1fARB(arg0: int, arg1: float) -> None: ...

  @staticmethod
  @overload
  def glMultiTexCoord1fvARB(arg0: int, arg1: list[float]) -> None: ...

  @staticmethod
  @overload
  def glMultiTexCoord1fvARB(arg0: int, arg1: FloatBuffer) -> None: ...

  @staticmethod
  def glMultiTexCoord1iARB(arg0: int, arg1: int) -> None: ...

  @staticmethod
  @overload
  def glMultiTexCoord1ivARB(arg0: int, arg1: list[int]) -> None: ...

  @staticmethod
  @overload
  def glMultiTexCoord1ivARB(arg0: int, arg1: IntBuffer) -> None: ...

  @staticmethod
  def glMultiTexCoord1sARB(arg0: int, arg1: int) -> None: ...

  @staticmethod
  @overload
  def glMultiTexCoord1svARB(arg0: int, arg1: list[int]) -> None: ...

  @staticmethod
  @overload
  def glMultiTexCoord1svARB(arg0: int, arg1: ShortBuffer) -> None: ...

  @staticmethod
  def glMultiTexCoord2dARB(arg0: int, arg1: float, arg2: float) -> None: ...

  @staticmethod
  @overload
  def glMultiTexCoord2dvARB(arg0: int, arg1: list[float]) -> None: ...

  @staticmethod
  @overload
  def glMultiTexCoord2dvARB(arg0: int, arg1: DoubleBuffer) -> None: ...

  @staticmethod
  def glMultiTexCoord2fARB(arg0: int, arg1: float, arg2: float) -> None: ...

  @staticmethod
  @overload
  def glMultiTexCoord2fvARB(arg0: int, arg1: list[float]) -> None: ...

  @staticmethod
  @overload
  def glMultiTexCoord2fvARB(arg0: int, arg1: FloatBuffer) -> None: ...

  @staticmethod
  def glMultiTexCoord2iARB(arg0: int, arg1: int, arg2: int) -> None: ...

  @staticmethod
  @overload
  def glMultiTexCoord2ivARB(arg0: int, arg1: list[int]) -> None: ...

  @staticmethod
  @overload
  def glMultiTexCoord2ivARB(arg0: int, arg1: IntBuffer) -> None: ...

  @staticmethod
  def glMultiTexCoord2sARB(arg0: int, arg1: int, arg2: int) -> None: ...

  @staticmethod
  @overload
  def glMultiTexCoord2svARB(arg0: int, arg1: list[int]) -> None: ...

  @staticmethod
  @overload
  def glMultiTexCoord2svARB(arg0: int, arg1: ShortBuffer) -> None: ...

  @staticmethod
  def glMultiTexCoord3dARB(arg0: int, arg1: float, arg2: float, arg3: float) -> None: ...

  @staticmethod
  @overload
  def glMultiTexCoord3dvARB(arg0: int, arg1: list[float]) -> None: ...

  @staticmethod
  @overload
  def glMultiTexCoord3dvARB(arg0: int, arg1: DoubleBuffer) -> None: ...

  @staticmethod
  def glMultiTexCoord3fARB(arg0: int, arg1: float, arg2: float, arg3: float) -> None: ...

  @staticmethod
  @overload
  def glMultiTexCoord3fvARB(arg0: int, arg1: list[float]) -> None: ...

  @staticmethod
  @overload
  def glMultiTexCoord3fvARB(arg0: int, arg1: FloatBuffer) -> None: ...

  @staticmethod
  def glMultiTexCoord3iARB(arg0: int, arg1: int, arg2: int, arg3: int) -> None: ...

  @staticmethod
  @overload
  def glMultiTexCoord3ivARB(arg0: int, arg1: list[int]) -> None: ...

  @staticmethod
  @overload
  def glMultiTexCoord3ivARB(arg0: int, arg1: IntBuffer) -> None: ...

  @staticmethod
  def glMultiTexCoord3sARB(arg0: int, arg1: int, arg2: int, arg3: int) -> None: ...

  @staticmethod
  @overload
  def glMultiTexCoord3svARB(arg0: int, arg1: list[int]) -> None: ...

  @staticmethod
  @overload
  def glMultiTexCoord3svARB(arg0: int, arg1: ShortBuffer) -> None: ...

  @staticmethod
  def glMultiTexCoord4dARB(arg0: int, arg1: float, arg2: float, arg3: float, arg4: float) -> None: ...

  @staticmethod
  @overload
  def glMultiTexCoord4dvARB(arg0: int, arg1: list[float]) -> None: ...

  @staticmethod
  @overload
  def glMultiTexCoord4dvARB(arg0: int, arg1: DoubleBuffer) -> None: ...

  @staticmethod
  def glMultiTexCoord4fARB(arg0: int, arg1: float, arg2: float, arg3: float, arg4: float) -> None: ...

  @staticmethod
  @overload
  def glMultiTexCoord4fvARB(arg0: int, arg1: list[float]) -> None: ...

  @staticmethod
  @overload
  def glMultiTexCoord4fvARB(arg0: int, arg1: FloatBuffer) -> None: ...

  @staticmethod
  def glMultiTexCoord4iARB(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int) -> None: ...

  @staticmethod
  @overload
  def glMultiTexCoord4ivARB(arg0: int, arg1: list[int]) -> None: ...

  @staticmethod
  @overload
  def glMultiTexCoord4ivARB(arg0: int, arg1: IntBuffer) -> None: ...

  @staticmethod
  def glMultiTexCoord4sARB(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int) -> None: ...

  @staticmethod
  @overload
  def glMultiTexCoord4svARB(arg0: int, arg1: list[int]) -> None: ...

  @staticmethod
  @overload
  def glMultiTexCoord4svARB(arg0: int, arg1: ShortBuffer) -> None: ...

  @staticmethod
  def nglMultiTexCoord1dvARB(arg0: int, arg1: int) -> None: ...

  @staticmethod
  def nglMultiTexCoord1fvARB(arg0: int, arg1: int) -> None: ...

  @staticmethod
  def nglMultiTexCoord1ivARB(arg0: int, arg1: int) -> None: ...

  @staticmethod
  def nglMultiTexCoord1svARB(arg0: int, arg1: int) -> None: ...

  @staticmethod
  def nglMultiTexCoord2dvARB(arg0: int, arg1: int) -> None: ...

  @staticmethod
  def nglMultiTexCoord2fvARB(arg0: int, arg1: int) -> None: ...

  @staticmethod
  def nglMultiTexCoord2ivARB(arg0: int, arg1: int) -> None: ...

  @staticmethod
  def nglMultiTexCoord2svARB(arg0: int, arg1: int) -> None: ...

  @staticmethod
  def nglMultiTexCoord3dvARB(arg0: int, arg1: int) -> None: ...

  @staticmethod
  def nglMultiTexCoord3fvARB(arg0: int, arg1: int) -> None: ...

  @staticmethod
  def nglMultiTexCoord3ivARB(arg0: int, arg1: int) -> None: ...

  @staticmethod
  def nglMultiTexCoord3svARB(arg0: int, arg1: int) -> None: ...

  @staticmethod
  def nglMultiTexCoord4dvARB(arg0: int, arg1: int) -> None: ...

  @staticmethod
  def nglMultiTexCoord4fvARB(arg0: int, arg1: int) -> None: ...

  @staticmethod
  def nglMultiTexCoord4ivARB(arg0: int, arg1: int) -> None: ...

  @staticmethod
  def nglMultiTexCoord4svARB(arg0: int, arg1: int) -> None: ...


class ARBOcclusionQuery:

  GL_CURRENT_QUERY_ARB: int

  GL_QUERY_COUNTER_BITS_ARB: int

  GL_QUERY_RESULT_ARB: int

  GL_QUERY_RESULT_AVAILABLE_ARB: int

  GL_SAMPLES_PASSED_ARB: int

  @staticmethod
  def glBeginQueryARB(arg0: int, arg1: int) -> None: ...

  @staticmethod
  @overload
  def glDeleteQueriesARB(arg0: list[int]) -> None: ...

  @staticmethod
  @overload
  def glDeleteQueriesARB(arg0: int) -> None: ...

  @staticmethod
  @overload
  def glDeleteQueriesARB(arg0: IntBuffer) -> None: ...

  @staticmethod
  def glEndQueryARB(arg0: int) -> None: ...

  @staticmethod
  @overload
  def glGenQueriesARB() -> int: ...

  @staticmethod
  @overload
  def glGenQueriesARB(arg0: list[int]) -> None: ...

  @staticmethod
  @overload
  def glGenQueriesARB(arg0: IntBuffer) -> None: ...

  @staticmethod
  def glGetQueryObjectiARB(arg0: int, arg1: int) -> int: ...

  @staticmethod
  @overload
  def glGetQueryObjectivARB(arg0: int, arg1: int, arg2: list[int]) -> None: ...

  @staticmethod
  @overload
  def glGetQueryObjectivARB(arg0: int, arg1: int, arg2: IntBuffer) -> None: ...

  @staticmethod
  def glGetQueryObjectuiARB(arg0: int, arg1: int) -> int: ...

  @staticmethod
  @overload
  def glGetQueryObjectuivARB(arg0: int, arg1: int, arg2: list[int]) -> None: ...

  @staticmethod
  @overload
  def glGetQueryObjectuivARB(arg0: int, arg1: int, arg2: IntBuffer) -> None: ...

  @staticmethod
  def glGetQueryiARB(arg0: int, arg1: int) -> int: ...

  @staticmethod
  @overload
  def glGetQueryivARB(arg0: int, arg1: int, arg2: list[int]) -> None: ...

  @staticmethod
  @overload
  def glGetQueryivARB(arg0: int, arg1: int, arg2: IntBuffer) -> None: ...

  @staticmethod
  def glIsQueryARB(arg0: int) -> bool: ...

  @staticmethod
  def nglDeleteQueriesARB(arg0: int, arg1: int) -> None: ...

  @staticmethod
  def nglGenQueriesARB(arg0: int, arg1: int) -> None: ...

  @staticmethod
  def nglGetQueryObjectivARB(arg0: int, arg1: int, arg2: int) -> None: ...

  @staticmethod
  def nglGetQueryObjectuivARB(arg0: int, arg1: int, arg2: int) -> None: ...

  @staticmethod
  def nglGetQueryivARB(arg0: int, arg1: int, arg2: int) -> None: ...


class ARBOcclusionQuery2:

  GL_ANY_SAMPLES_PASSED: int


class ARBParallelShaderCompile:

  GL_COMPLETION_STATUS_ARB: int

  GL_MAX_SHADER_COMPILER_THREADS_ARB: int

  @staticmethod
  def glMaxShaderCompilerThreadsARB(arg0: int) -> None: ...


class ARBPipelineStatisticsQuery:

  GL_CLIPPING_INPUT_PRIMITIVES_ARB: int

  GL_CLIPPING_OUTPUT_PRIMITIVES_ARB: int

  GL_COMPUTE_SHADER_INVOCATIONS_ARB: int

  GL_FRAGMENT_SHADER_INVOCATIONS_ARB: int

  GL_GEOMETRY_SHADER_INVOCATIONS: int

  GL_GEOMETRY_SHADER_PRIMITIVES_EMITTED_ARB: int

  GL_PRIMITIVES_SUBMITTED_ARB: int

  GL_TESS_CONTROL_SHADER_PATCHES_ARB: int

  GL_TESS_EVALUATION_SHADER_INVOCATIONS_ARB: int

  GL_VERTEX_SHADER_INVOCATIONS_ARB: int

  GL_VERTICES_SUBMITTED_ARB: int


class ARBPixelBufferObject:

  GL_PIXEL_PACK_BUFFER_ARB: int

  GL_PIXEL_PACK_BUFFER_BINDING_ARB: int

  GL_PIXEL_UNPACK_BUFFER_ARB: int

  GL_PIXEL_UNPACK_BUFFER_BINDING_ARB: int


class ARBPointParameters:

  GL_POINT_DISTANCE_ATTENUATION_ARB: int

  GL_POINT_FADE_THRESHOLD_SIZE_ARB: int

  GL_POINT_SIZE_MAX_ARB: int

  GL_POINT_SIZE_MIN_ARB: int

  @staticmethod
  def glPointParameterfARB(arg0: int, arg1: float) -> None: ...

  @staticmethod
  @overload
  def glPointParameterfvARB(arg0: int, arg1: list[float]) -> None: ...

  @staticmethod
  @overload
  def glPointParameterfvARB(arg0: int, arg1: FloatBuffer) -> None: ...

  @staticmethod
  def nglPointParameterfvARB(arg0: int, arg1: int) -> None: ...


class ARBPointSprite:

  GL_COORD_REPLACE_ARB: int

  GL_POINT_SPRITE_ARB: int


class ARBPolygonOffsetClamp:

  GL_POLYGON_OFFSET_CLAMP: int

  @staticmethod
  def glPolygonOffsetClamp(arg0: float, arg1: float, arg2: float) -> None: ...


class ARBProgramInterfaceQuery:

  GL_ACTIVE_RESOURCES: int

  GL_ACTIVE_VARIABLES: int

  GL_ARRAY_SIZE: int

  GL_ARRAY_STRIDE: int

  GL_ATOMIC_COUNTER_BUFFER_INDEX: int

  GL_BLOCK_INDEX: int

  GL_BUFFER_BINDING: int

  GL_BUFFER_DATA_SIZE: int

  GL_BUFFER_VARIABLE: int

  GL_COMPUTE_SUBROUTINE: int

  GL_COMPUTE_SUBROUTINE_UNIFORM: int

  GL_FRAGMENT_SUBROUTINE: int

  GL_FRAGMENT_SUBROUTINE_UNIFORM: int

  GL_GEOMETRY_SUBROUTINE: int

  GL_GEOMETRY_SUBROUTINE_UNIFORM: int

  GL_IS_PER_PATCH: int

  GL_IS_ROW_MAJOR: int

  GL_LOCATION: int

  GL_LOCATION_INDEX: int

  GL_MATRIX_STRIDE: int

  GL_MAX_NAME_LENGTH: int

  GL_MAX_NUM_ACTIVE_VARIABLES: int

  GL_MAX_NUM_COMPATIBLE_SUBROUTINES: int

  GL_NAME_LENGTH: int

  GL_NUM_ACTIVE_VARIABLES: int

  GL_OFFSET: int

  GL_PROGRAM_INPUT: int

  GL_PROGRAM_OUTPUT: int

  GL_REFERENCED_BY_COMPUTE_SHADER: int

  GL_REFERENCED_BY_FRAGMENT_SHADER: int

  GL_REFERENCED_BY_GEOMETRY_SHADER: int

  GL_REFERENCED_BY_TESS_CONTROL_SHADER: int

  GL_REFERENCED_BY_TESS_EVALUATION_SHADER: int

  GL_REFERENCED_BY_VERTEX_SHADER: int

  GL_SHADER_STORAGE_BLOCK: int

  GL_TESS_CONTROL_SUBROUTINE: int

  GL_TESS_CONTROL_SUBROUTINE_UNIFORM: int

  GL_TESS_EVALUATION_SUBROUTINE: int

  GL_TESS_EVALUATION_SUBROUTINE_UNIFORM: int

  GL_TOP_LEVEL_ARRAY_SIZE: int

  GL_TOP_LEVEL_ARRAY_STRIDE: int

  GL_TRANSFORM_FEEDBACK_VARYING: int

  GL_TYPE: int

  GL_UNIFORM: int

  GL_UNIFORM_BLOCK: int

  GL_VERTEX_SUBROUTINE: int

  GL_VERTEX_SUBROUTINE_UNIFORM: int

  @staticmethod
  def glGetProgramInterfacei(arg0: int, arg1: int, arg2: int) -> int: ...

  @staticmethod
  @overload
  def glGetProgramInterfaceiv(arg0: int, arg1: int, arg2: int, arg3: list[int]) -> None: ...

  @staticmethod
  @overload
  def glGetProgramInterfaceiv(arg0: int, arg1: int, arg2: int, arg3: IntBuffer) -> None: ...

  @staticmethod
  @overload
  def glGetProgramResourceIndex(arg0: int, arg1: int, arg2: CharSequence) -> int: ...

  @staticmethod
  @overload
  def glGetProgramResourceIndex(arg0: int, arg1: int, arg2: ByteBuffer) -> int: ...

  @staticmethod
  @overload
  def glGetProgramResourceLocation(arg0: int, arg1: int, arg2: CharSequence) -> int: ...

  @staticmethod
  @overload
  def glGetProgramResourceLocation(arg0: int, arg1: int, arg2: ByteBuffer) -> int: ...

  @staticmethod
  @overload
  def glGetProgramResourceLocationIndex(arg0: int, arg1: int, arg2: CharSequence) -> int: ...

  @staticmethod
  @overload
  def glGetProgramResourceLocationIndex(arg0: int, arg1: int, arg2: ByteBuffer) -> int: ...

  @staticmethod
  @overload
  def glGetProgramResourceName(arg0: int, arg1: int, arg2: int) -> str: ...

  @staticmethod
  @overload
  def glGetProgramResourceName(arg0: int, arg1: int, arg2: int, arg3: int) -> str: ...

  @staticmethod
  @overload
  def glGetProgramResourceName(arg0: int, arg1: int, arg2: int, arg3: list[int], arg4: ByteBuffer) -> None: ...

  @staticmethod
  @overload
  def glGetProgramResourceName(arg0: int, arg1: int, arg2: int, arg3: IntBuffer, arg4: ByteBuffer) -> None: ...

  @staticmethod
  @overload
  def glGetProgramResourceiv(arg0: int, arg1: int, arg2: int, arg3: list[int], arg4: list[int], arg5: list[int]) -> None: ...

  @staticmethod
  @overload
  def glGetProgramResourceiv(arg0: int, arg1: int, arg2: int, arg3: IntBuffer, arg4: IntBuffer, arg5: IntBuffer) -> None: ...

  @staticmethod
  def nglGetProgramInterfaceiv(arg0: int, arg1: int, arg2: int, arg3: int) -> None: ...

  @staticmethod
  def nglGetProgramResourceIndex(arg0: int, arg1: int, arg2: int) -> int: ...

  @staticmethod
  def nglGetProgramResourceLocation(arg0: int, arg1: int, arg2: int) -> int: ...

  @staticmethod
  def nglGetProgramResourceLocationIndex(arg0: int, arg1: int, arg2: int) -> int: ...

  @staticmethod
  def nglGetProgramResourceName(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int) -> None: ...

  @staticmethod
  def nglGetProgramResourceiv(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int, arg7: int) -> None: ...


class ARBProvokingVertex:

  GL_FIRST_VERTEX_CONVENTION: int

  GL_LAST_VERTEX_CONVENTION: int

  GL_PROVOKING_VERTEX: int

  GL_QUADS_FOLLOW_PROVOKING_VERTEX_CONVENTION: int

  @staticmethod
  def glProvokingVertex(arg0: int) -> None: ...


class ARBQueryBufferObject:

  GL_QUERY_BUFFER: int

  GL_QUERY_BUFFER_BARRIER_BIT: int

  GL_QUERY_BUFFER_BINDING: int

  GL_QUERY_RESULT_NO_WAIT: int


class ARBRobustness:

  GL_CONTEXT_FLAG_ROBUST_ACCESS_BIT_ARB: int

  GL_GUILTY_CONTEXT_RESET_ARB: int

  GL_INNOCENT_CONTEXT_RESET_ARB: int

  GL_LOSE_CONTEXT_ON_RESET_ARB: int

  GL_NO_RESET_NOTIFICATION_ARB: int

  GL_RESET_NOTIFICATION_STRATEGY_ARB: int

  GL_UNKNOWN_CONTEXT_RESET_ARB: int

  @staticmethod
  def glGetGraphicsResetStatusARB() -> int: ...

  @staticmethod
  @overload
  def glGetnColorTableARB(arg0: int, arg1: int, arg2: int, arg3: list[float]) -> None: ...

  @staticmethod
  @overload
  def glGetnColorTableARB(arg0: int, arg1: int, arg2: int, arg3: list[int]) -> None: ...

  @staticmethod
  @overload
  def glGetnColorTableARB(arg0: int, arg1: int, arg2: int, arg3: list[int]) -> None: ...

  @staticmethod
  @overload
  def glGetnColorTableARB(arg0: int, arg1: int, arg2: int, arg3: ByteBuffer) -> None: ...

  @staticmethod
  @overload
  def glGetnColorTableARB(arg0: int, arg1: int, arg2: int, arg3: FloatBuffer) -> None: ...

  @staticmethod
  @overload
  def glGetnColorTableARB(arg0: int, arg1: int, arg2: int, arg3: IntBuffer) -> None: ...

  @staticmethod
  @overload
  def glGetnColorTableARB(arg0: int, arg1: int, arg2: int, arg3: ShortBuffer) -> None: ...

  @staticmethod
  @overload
  def glGetnColorTableARB(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int) -> None: ...

  @staticmethod
  @overload
  def glGetnCompressedTexImageARB(arg0: int, arg1: int, arg2: ByteBuffer) -> None: ...

  @staticmethod
  @overload
  def glGetnCompressedTexImageARB(arg0: int, arg1: int, arg2: int, arg3: int) -> None: ...

  @staticmethod
  @overload
  def glGetnConvolutionFilterARB(arg0: int, arg1: int, arg2: int, arg3: ByteBuffer) -> None: ...

  @staticmethod
  @overload
  def glGetnConvolutionFilterARB(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int) -> None: ...

  @staticmethod
  @overload
  def glGetnHistogramARB(arg0: int, arg1: bool, arg2: int, arg3: int, arg4: ByteBuffer) -> None: ...

  @staticmethod
  @overload
  def glGetnHistogramARB(arg0: int, arg1: bool, arg2: int, arg3: int, arg4: int, arg5: int) -> None: ...

  @staticmethod
  def glGetnMapdARB(arg0: int, arg1: int) -> float: ...

  @staticmethod
  @overload
  def glGetnMapdvARB(arg0: int, arg1: int, arg2: list[float]) -> None: ...

  @staticmethod
  @overload
  def glGetnMapdvARB(arg0: int, arg1: int, arg2: DoubleBuffer) -> None: ...

  @staticmethod
  def glGetnMapfARB(arg0: int, arg1: int) -> float: ...

  @staticmethod
  @overload
  def glGetnMapfvARB(arg0: int, arg1: int, arg2: list[float]) -> None: ...

  @staticmethod
  @overload
  def glGetnMapfvARB(arg0: int, arg1: int, arg2: FloatBuffer) -> None: ...

  @staticmethod
  def glGetnMapiARB(arg0: int, arg1: int) -> int: ...

  @staticmethod
  @overload
  def glGetnMapivARB(arg0: int, arg1: int, arg2: list[int]) -> None: ...

  @staticmethod
  @overload
  def glGetnMapivARB(arg0: int, arg1: int, arg2: IntBuffer) -> None: ...

  @staticmethod
  @overload
  def glGetnMinmaxARB(arg0: int, arg1: bool, arg2: int, arg3: int, arg4: ByteBuffer) -> None: ...

  @staticmethod
  @overload
  def glGetnMinmaxARB(arg0: int, arg1: bool, arg2: int, arg3: int, arg4: int, arg5: int) -> None: ...

  @staticmethod
  @overload
  def glGetnPixelMapfvARB(arg0: int, arg1: list[float]) -> None: ...

  @staticmethod
  @overload
  def glGetnPixelMapfvARB(arg0: int, arg1: FloatBuffer) -> None: ...

  @staticmethod
  @overload
  def glGetnPixelMapuivARB(arg0: int, arg1: list[int]) -> None: ...

  @staticmethod
  @overload
  def glGetnPixelMapuivARB(arg0: int, arg1: IntBuffer) -> None: ...

  @staticmethod
  @overload
  def glGetnPixelMapusvARB(arg0: int, arg1: list[int]) -> None: ...

  @staticmethod
  @overload
  def glGetnPixelMapusvARB(arg0: int, arg1: ShortBuffer) -> None: ...

  @staticmethod
  @overload
  def glGetnPolygonStippleARB(arg0: ByteBuffer) -> None: ...

  @staticmethod
  @overload
  def glGetnPolygonStippleARB(arg0: int, arg1: int) -> None: ...

  @staticmethod
  @overload
  def glGetnSeparableFilterARB(arg0: int, arg1: int, arg2: int, arg3: ByteBuffer, arg4: ByteBuffer, arg5: ByteBuffer) -> None: ...

  @staticmethod
  @overload
  def glGetnSeparableFilterARB(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int, arg7: ByteBuffer) -> None: ...

  @staticmethod
  @overload
  def glGetnTexImageARB(arg0: int, arg1: int, arg2: int, arg3: int, arg4: list[float]) -> None: ...

  @staticmethod
  @overload
  def glGetnTexImageARB(arg0: int, arg1: int, arg2: int, arg3: int, arg4: list[float]) -> None: ...

  @staticmethod
  @overload
  def glGetnTexImageARB(arg0: int, arg1: int, arg2: int, arg3: int, arg4: list[int]) -> None: ...

  @staticmethod
  @overload
  def glGetnTexImageARB(arg0: int, arg1: int, arg2: int, arg3: int, arg4: list[int]) -> None: ...

  @staticmethod
  @overload
  def glGetnTexImageARB(arg0: int, arg1: int, arg2: int, arg3: int, arg4: ByteBuffer) -> None: ...

  @staticmethod
  @overload
  def glGetnTexImageARB(arg0: int, arg1: int, arg2: int, arg3: int, arg4: DoubleBuffer) -> None: ...

  @staticmethod
  @overload
  def glGetnTexImageARB(arg0: int, arg1: int, arg2: int, arg3: int, arg4: FloatBuffer) -> None: ...

  @staticmethod
  @overload
  def glGetnTexImageARB(arg0: int, arg1: int, arg2: int, arg3: int, arg4: IntBuffer) -> None: ...

  @staticmethod
  @overload
  def glGetnTexImageARB(arg0: int, arg1: int, arg2: int, arg3: int, arg4: ShortBuffer) -> None: ...

  @staticmethod
  @overload
  def glGetnTexImageARB(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int) -> None: ...

  @staticmethod
  def glGetnUniformdARB(arg0: int, arg1: int) -> float: ...

  @staticmethod
  @overload
  def glGetnUniformdvARB(arg0: int, arg1: int, arg2: list[float]) -> None: ...

  @staticmethod
  @overload
  def glGetnUniformdvARB(arg0: int, arg1: int, arg2: DoubleBuffer) -> None: ...

  @staticmethod
  def glGetnUniformfARB(arg0: int, arg1: int) -> float: ...

  @staticmethod
  @overload
  def glGetnUniformfvARB(arg0: int, arg1: int, arg2: list[float]) -> None: ...

  @staticmethod
  @overload
  def glGetnUniformfvARB(arg0: int, arg1: int, arg2: FloatBuffer) -> None: ...

  @staticmethod
  def glGetnUniformiARB(arg0: int, arg1: int) -> int: ...

  @staticmethod
  @overload
  def glGetnUniformivARB(arg0: int, arg1: int, arg2: list[int]) -> None: ...

  @staticmethod
  @overload
  def glGetnUniformivARB(arg0: int, arg1: int, arg2: IntBuffer) -> None: ...

  @staticmethod
  def glGetnUniformuiARB(arg0: int, arg1: int) -> int: ...

  @staticmethod
  @overload
  def glGetnUniformuivARB(arg0: int, arg1: int, arg2: list[int]) -> None: ...

  @staticmethod
  @overload
  def glGetnUniformuivARB(arg0: int, arg1: int, arg2: IntBuffer) -> None: ...

  @staticmethod
  @overload
  def glReadnPixelsARB(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: list[float]) -> None: ...

  @staticmethod
  @overload
  def glReadnPixelsARB(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: list[int]) -> None: ...

  @staticmethod
  @overload
  def glReadnPixelsARB(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: list[int]) -> None: ...

  @staticmethod
  @overload
  def glReadnPixelsARB(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: ByteBuffer) -> None: ...

  @staticmethod
  @overload
  def glReadnPixelsARB(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: FloatBuffer) -> None: ...

  @staticmethod
  @overload
  def glReadnPixelsARB(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: IntBuffer) -> None: ...

  @staticmethod
  @overload
  def glReadnPixelsARB(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: ShortBuffer) -> None: ...

  @staticmethod
  @overload
  def glReadnPixelsARB(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int, arg7: int) -> None: ...

  @staticmethod
  def nglGetnColorTableARB(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int) -> None: ...

  @staticmethod
  def nglGetnCompressedTexImageARB(arg0: int, arg1: int, arg2: int, arg3: int) -> None: ...

  @staticmethod
  def nglGetnConvolutionFilterARB(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int) -> None: ...

  @staticmethod
  def nglGetnHistogramARB(arg0: int, arg1: bool, arg2: int, arg3: int, arg4: int, arg5: int) -> None: ...

  @staticmethod
  def nglGetnMapdvARB(arg0: int, arg1: int, arg2: int, arg3: int) -> None: ...

  @staticmethod
  def nglGetnMapfvARB(arg0: int, arg1: int, arg2: int, arg3: int) -> None: ...

  @staticmethod
  def nglGetnMapivARB(arg0: int, arg1: int, arg2: int, arg3: int) -> None: ...

  @staticmethod
  def nglGetnMinmaxARB(arg0: int, arg1: bool, arg2: int, arg3: int, arg4: int, arg5: int) -> None: ...

  @staticmethod
  def nglGetnPixelMapfvARB(arg0: int, arg1: int, arg2: int) -> None: ...

  @staticmethod
  def nglGetnPixelMapuivARB(arg0: int, arg1: int, arg2: int) -> None: ...

  @staticmethod
  def nglGetnPixelMapusvARB(arg0: int, arg1: int, arg2: int) -> None: ...

  @staticmethod
  def nglGetnPolygonStippleARB(arg0: int, arg1: int) -> None: ...

  @staticmethod
  def nglGetnSeparableFilterARB(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int, arg7: int) -> None: ...

  @staticmethod
  def nglGetnTexImageARB(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int) -> None: ...

  @staticmethod
  def nglGetnUniformdvARB(arg0: int, arg1: int, arg2: int, arg3: int) -> None: ...

  @staticmethod
  def nglGetnUniformfvARB(arg0: int, arg1: int, arg2: int, arg3: int) -> None: ...

  @staticmethod
  def nglGetnUniformivARB(arg0: int, arg1: int, arg2: int, arg3: int) -> None: ...

  @staticmethod
  def nglGetnUniformuivARB(arg0: int, arg1: int, arg2: int, arg3: int) -> None: ...

  @staticmethod
  def nglReadnPixelsARB(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int, arg7: int) -> None: ...


class ARBSPIRVExtensions:

  GL_NUM_SPIR_V_EXTENSIONS: int

  GL_SPIR_V_EXTENSIONS: int


class ARBSampleLocations:

  GL_FRAMEBUFFER_PROGRAMMABLE_SAMPLE_LOCATIONS_ARB: int

  GL_FRAMEBUFFER_SAMPLE_LOCATION_PIXEL_GRID_ARB: int

  GL_PROGRAMMABLE_SAMPLE_LOCATION_TABLE_SIZE_ARB: int

  GL_SAMPLE_LOCATION_PIXEL_GRID_HEIGHT_ARB: int

  GL_SAMPLE_LOCATION_PIXEL_GRID_WIDTH_ARB: int

  GL_SAMPLE_LOCATION_SUBPIXEL_BITS_ARB: int

  @staticmethod
  def glEvaluateDepthValuesARB() -> None: ...

  @staticmethod
  @overload
  def glFramebufferSampleLocationsfvARB(arg0: int, arg1: int, arg2: list[float]) -> None: ...

  @staticmethod
  @overload
  def glFramebufferSampleLocationsfvARB(arg0: int, arg1: int, arg2: FloatBuffer) -> None: ...

  @staticmethod
  @overload
  def glNamedFramebufferSampleLocationsfvARB(arg0: int, arg1: int, arg2: list[float]) -> None: ...

  @staticmethod
  @overload
  def glNamedFramebufferSampleLocationsfvARB(arg0: int, arg1: int, arg2: FloatBuffer) -> None: ...

  @staticmethod
  def nglFramebufferSampleLocationsfvARB(arg0: int, arg1: int, arg2: int, arg3: int) -> None: ...

  @staticmethod
  def nglNamedFramebufferSampleLocationsfvARB(arg0: int, arg1: int, arg2: int, arg3: int) -> None: ...


class ARBSampleShading:

  GL_MIN_SAMPLE_SHADING_VALUE_ARB: int

  GL_SAMPLE_SHADING_ARB: int

  @staticmethod
  def glMinSampleShadingARB(arg0: float) -> None: ...


class ARBSamplerObjects:

  GL_SAMPLER_BINDING: int

  @staticmethod
  def glBindSampler(arg0: int, arg1: int) -> None: ...

  @staticmethod
  @overload
  def glDeleteSamplers(arg0: list[int]) -> None: ...

  @staticmethod
  @overload
  def glDeleteSamplers(arg0: int) -> None: ...

  @staticmethod
  @overload
  def glDeleteSamplers(arg0: IntBuffer) -> None: ...

  @staticmethod
  @overload
  def glGenSamplers() -> int: ...

  @staticmethod
  @overload
  def glGenSamplers(arg0: list[int]) -> None: ...

  @staticmethod
  @overload
  def glGenSamplers(arg0: IntBuffer) -> None: ...

  @staticmethod
  def glGetSamplerParameterIi(arg0: int, arg1: int) -> int: ...

  @staticmethod
  @overload
  def glGetSamplerParameterIiv(arg0: int, arg1: int, arg2: list[int]) -> None: ...

  @staticmethod
  @overload
  def glGetSamplerParameterIiv(arg0: int, arg1: int, arg2: IntBuffer) -> None: ...

  @staticmethod
  def glGetSamplerParameterIui(arg0: int, arg1: int) -> int: ...

  @staticmethod
  @overload
  def glGetSamplerParameterIuiv(arg0: int, arg1: int, arg2: list[int]) -> None: ...

  @staticmethod
  @overload
  def glGetSamplerParameterIuiv(arg0: int, arg1: int, arg2: IntBuffer) -> None: ...

  @staticmethod
  def glGetSamplerParameterf(arg0: int, arg1: int) -> float: ...

  @staticmethod
  @overload
  def glGetSamplerParameterfv(arg0: int, arg1: int, arg2: list[float]) -> None: ...

  @staticmethod
  @overload
  def glGetSamplerParameterfv(arg0: int, arg1: int, arg2: FloatBuffer) -> None: ...

  @staticmethod
  def glGetSamplerParameteri(arg0: int, arg1: int) -> int: ...

  @staticmethod
  @overload
  def glGetSamplerParameteriv(arg0: int, arg1: int, arg2: list[int]) -> None: ...

  @staticmethod
  @overload
  def glGetSamplerParameteriv(arg0: int, arg1: int, arg2: IntBuffer) -> None: ...

  @staticmethod
  def glIsSampler(arg0: int) -> bool: ...

  @staticmethod
  @overload
  def glSamplerParameterIiv(arg0: int, arg1: int, arg2: list[int]) -> None: ...

  @staticmethod
  @overload
  def glSamplerParameterIiv(arg0: int, arg1: int, arg2: IntBuffer) -> None: ...

  @staticmethod
  @overload
  def glSamplerParameterIuiv(arg0: int, arg1: int, arg2: list[int]) -> None: ...

  @staticmethod
  @overload
  def glSamplerParameterIuiv(arg0: int, arg1: int, arg2: IntBuffer) -> None: ...

  @staticmethod
  def glSamplerParameterf(arg0: int, arg1: int, arg2: float) -> None: ...

  @staticmethod
  @overload
  def glSamplerParameterfv(arg0: int, arg1: int, arg2: list[float]) -> None: ...

  @staticmethod
  @overload
  def glSamplerParameterfv(arg0: int, arg1: int, arg2: FloatBuffer) -> None: ...

  @staticmethod
  def glSamplerParameteri(arg0: int, arg1: int, arg2: int) -> None: ...

  @staticmethod
  @overload
  def glSamplerParameteriv(arg0: int, arg1: int, arg2: list[int]) -> None: ...

  @staticmethod
  @overload
  def glSamplerParameteriv(arg0: int, arg1: int, arg2: IntBuffer) -> None: ...

  @staticmethod
  def nglDeleteSamplers(arg0: int, arg1: int) -> None: ...

  @staticmethod
  def nglGenSamplers(arg0: int, arg1: int) -> None: ...

  @staticmethod
  def nglGetSamplerParameterIiv(arg0: int, arg1: int, arg2: int) -> None: ...

  @staticmethod
  def nglGetSamplerParameterIuiv(arg0: int, arg1: int, arg2: int) -> None: ...

  @staticmethod
  def nglGetSamplerParameterfv(arg0: int, arg1: int, arg2: int) -> None: ...

  @staticmethod
  def nglGetSamplerParameteriv(arg0: int, arg1: int, arg2: int) -> None: ...

  @staticmethod
  def nglSamplerParameterIiv(arg0: int, arg1: int, arg2: int) -> None: ...

  @staticmethod
  def nglSamplerParameterIuiv(arg0: int, arg1: int, arg2: int) -> None: ...

  @staticmethod
  def nglSamplerParameterfv(arg0: int, arg1: int, arg2: int) -> None: ...

  @staticmethod
  def nglSamplerParameteriv(arg0: int, arg1: int, arg2: int) -> None: ...


class ARBSeamlessCubeMap:

  GL_TEXTURE_CUBE_MAP_SEAMLESS: int


class ARBSeamlessCubemapPerTexture:

  GL_TEXTURE_CUBE_MAP_SEAMLESS: int


class ARBSeparateShaderObjects:

  GL_ACTIVE_PROGRAM: int

  GL_ALL_SHADER_BITS: int

  GL_FRAGMENT_SHADER_BIT: int

  GL_GEOMETRY_SHADER_BIT: int

  GL_PROGRAM_PIPELINE_BINDING: int

  GL_PROGRAM_SEPARABLE: int

  GL_TESS_CONTROL_SHADER_BIT: int

  GL_TESS_EVALUATION_SHADER_BIT: int

  GL_VERTEX_SHADER_BIT: int

  @staticmethod
  def glActiveShaderProgram(arg0: int, arg1: int) -> None: ...

  @staticmethod
  def glBindProgramPipeline(arg0: int) -> None: ...

  @staticmethod
  @overload
  def glCreateShaderProgramv(arg0: int, arg1: list[CharSequence]) -> int: ...

  @staticmethod
  @overload
  def glCreateShaderProgramv(arg0: int, arg1: CharSequence) -> int: ...

  @staticmethod
  @overload
  def glCreateShaderProgramv(arg0: int, arg1: PointerBuffer) -> int: ...

  @staticmethod
  @overload
  def glDeleteProgramPipelines(arg0: list[int]) -> None: ...

  @staticmethod
  @overload
  def glDeleteProgramPipelines(arg0: int) -> None: ...

  @staticmethod
  @overload
  def glDeleteProgramPipelines(arg0: IntBuffer) -> None: ...

  @staticmethod
  @overload
  def glGenProgramPipelines() -> int: ...

  @staticmethod
  @overload
  def glGenProgramPipelines(arg0: list[int]) -> None: ...

  @staticmethod
  @overload
  def glGenProgramPipelines(arg0: IntBuffer) -> None: ...

  @staticmethod
  @overload
  def glGetProgramPipelineInfoLog(arg0: int) -> str: ...

  @staticmethod
  @overload
  def glGetProgramPipelineInfoLog(arg0: int, arg1: int) -> str: ...

  @staticmethod
  @overload
  def glGetProgramPipelineInfoLog(arg0: int, arg1: list[int], arg2: ByteBuffer) -> None: ...

  @staticmethod
  @overload
  def glGetProgramPipelineInfoLog(arg0: int, arg1: IntBuffer, arg2: ByteBuffer) -> None: ...

  @staticmethod
  def glGetProgramPipelinei(arg0: int, arg1: int) -> int: ...

  @staticmethod
  @overload
  def glGetProgramPipelineiv(arg0: int, arg1: int, arg2: list[int]) -> None: ...

  @staticmethod
  @overload
  def glGetProgramPipelineiv(arg0: int, arg1: int, arg2: IntBuffer) -> None: ...

  @staticmethod
  def glIsProgramPipeline(arg0: int) -> bool: ...

  @staticmethod
  def glProgramParameteri(arg0: int, arg1: int, arg2: int) -> None: ...

  @staticmethod
  def glProgramUniform1d(arg0: int, arg1: int, arg2: float) -> None: ...

  @staticmethod
  @overload
  def glProgramUniform1dv(arg0: int, arg1: int, arg2: list[float]) -> None: ...

  @staticmethod
  @overload
  def glProgramUniform1dv(arg0: int, arg1: int, arg2: DoubleBuffer) -> None: ...

  @staticmethod
  def glProgramUniform1f(arg0: int, arg1: int, arg2: float) -> None: ...

  @staticmethod
  @overload
  def glProgramUniform1fv(arg0: int, arg1: int, arg2: list[float]) -> None: ...

  @staticmethod
  @overload
  def glProgramUniform1fv(arg0: int, arg1: int, arg2: FloatBuffer) -> None: ...

  @staticmethod
  def glProgramUniform1i(arg0: int, arg1: int, arg2: int) -> None: ...

  @staticmethod
  @overload
  def glProgramUniform1iv(arg0: int, arg1: int, arg2: list[int]) -> None: ...

  @staticmethod
  @overload
  def glProgramUniform1iv(arg0: int, arg1: int, arg2: IntBuffer) -> None: ...

  @staticmethod
  def glProgramUniform1ui(arg0: int, arg1: int, arg2: int) -> None: ...

  @staticmethod
  @overload
  def glProgramUniform1uiv(arg0: int, arg1: int, arg2: list[int]) -> None: ...

  @staticmethod
  @overload
  def glProgramUniform1uiv(arg0: int, arg1: int, arg2: IntBuffer) -> None: ...

  @staticmethod
  def glProgramUniform2d(arg0: int, arg1: int, arg2: float, arg3: float) -> None: ...

  @staticmethod
  @overload
  def glProgramUniform2dv(arg0: int, arg1: int, arg2: list[float]) -> None: ...

  @staticmethod
  @overload
  def glProgramUniform2dv(arg0: int, arg1: int, arg2: DoubleBuffer) -> None: ...

  @staticmethod
  def glProgramUniform2f(arg0: int, arg1: int, arg2: float, arg3: float) -> None: ...

  @staticmethod
  @overload
  def glProgramUniform2fv(arg0: int, arg1: int, arg2: list[float]) -> None: ...

  @staticmethod
  @overload
  def glProgramUniform2fv(arg0: int, arg1: int, arg2: FloatBuffer) -> None: ...

  @staticmethod
  def glProgramUniform2i(arg0: int, arg1: int, arg2: int, arg3: int) -> None: ...

  @staticmethod
  @overload
  def glProgramUniform2iv(arg0: int, arg1: int, arg2: list[int]) -> None: ...

  @staticmethod
  @overload
  def glProgramUniform2iv(arg0: int, arg1: int, arg2: IntBuffer) -> None: ...

  @staticmethod
  def glProgramUniform2ui(arg0: int, arg1: int, arg2: int, arg3: int) -> None: ...

  @staticmethod
  @overload
  def glProgramUniform2uiv(arg0: int, arg1: int, arg2: list[int]) -> None: ...

  @staticmethod
  @overload
  def glProgramUniform2uiv(arg0: int, arg1: int, arg2: IntBuffer) -> None: ...

  @staticmethod
  def glProgramUniform3d(arg0: int, arg1: int, arg2: float, arg3: float, arg4: float) -> None: ...

  @staticmethod
  @overload
  def glProgramUniform3dv(arg0: int, arg1: int, arg2: list[float]) -> None: ...

  @staticmethod
  @overload
  def glProgramUniform3dv(arg0: int, arg1: int, arg2: DoubleBuffer) -> None: ...

  @staticmethod
  def glProgramUniform3f(arg0: int, arg1: int, arg2: float, arg3: float, arg4: float) -> None: ...

  @staticmethod
  @overload
  def glProgramUniform3fv(arg0: int, arg1: int, arg2: list[float]) -> None: ...

  @staticmethod
  @overload
  def glProgramUniform3fv(arg0: int, arg1: int, arg2: FloatBuffer) -> None: ...

  @staticmethod
  def glProgramUniform3i(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int) -> None: ...

  @staticmethod
  @overload
  def glProgramUniform3iv(arg0: int, arg1: int, arg2: list[int]) -> None: ...

  @staticmethod
  @overload
  def glProgramUniform3iv(arg0: int, arg1: int, arg2: IntBuffer) -> None: ...

  @staticmethod
  def glProgramUniform3ui(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int) -> None: ...

  @staticmethod
  @overload
  def glProgramUniform3uiv(arg0: int, arg1: int, arg2: list[int]) -> None: ...

  @staticmethod
  @overload
  def glProgramUniform3uiv(arg0: int, arg1: int, arg2: IntBuffer) -> None: ...

  @staticmethod
  def glProgramUniform4d(arg0: int, arg1: int, arg2: float, arg3: float, arg4: float, arg5: float) -> None: ...

  @staticmethod
  @overload
  def glProgramUniform4dv(arg0: int, arg1: int, arg2: list[float]) -> None: ...

  @staticmethod
  @overload
  def glProgramUniform4dv(arg0: int, arg1: int, arg2: DoubleBuffer) -> None: ...

  @staticmethod
  def glProgramUniform4f(arg0: int, arg1: int, arg2: float, arg3: float, arg4: float, arg5: float) -> None: ...

  @staticmethod
  @overload
  def glProgramUniform4fv(arg0: int, arg1: int, arg2: list[float]) -> None: ...

  @staticmethod
  @overload
  def glProgramUniform4fv(arg0: int, arg1: int, arg2: FloatBuffer) -> None: ...

  @staticmethod
  def glProgramUniform4i(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int) -> None: ...

  @staticmethod
  @overload
  def glProgramUniform4iv(arg0: int, arg1: int, arg2: list[int]) -> None: ...

  @staticmethod
  @overload
  def glProgramUniform4iv(arg0: int, arg1: int, arg2: IntBuffer) -> None: ...

  @staticmethod
  def glProgramUniform4ui(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int) -> None: ...

  @staticmethod
  @overload
  def glProgramUniform4uiv(arg0: int, arg1: int, arg2: list[int]) -> None: ...

  @staticmethod
  @overload
  def glProgramUniform4uiv(arg0: int, arg1: int, arg2: IntBuffer) -> None: ...

  @staticmethod
  @overload
  def glProgramUniformMatrix2dv(arg0: int, arg1: int, arg2: bool, arg3: list[float]) -> None: ...

  @staticmethod
  @overload
  def glProgramUniformMatrix2dv(arg0: int, arg1: int, arg2: bool, arg3: DoubleBuffer) -> None: ...

  @staticmethod
  @overload
  def glProgramUniformMatrix2fv(arg0: int, arg1: int, arg2: bool, arg3: list[float]) -> None: ...

  @staticmethod
  @overload
  def glProgramUniformMatrix2fv(arg0: int, arg1: int, arg2: bool, arg3: FloatBuffer) -> None: ...

  @staticmethod
  @overload
  def glProgramUniformMatrix2x3dv(arg0: int, arg1: int, arg2: bool, arg3: list[float]) -> None: ...

  @staticmethod
  @overload
  def glProgramUniformMatrix2x3dv(arg0: int, arg1: int, arg2: bool, arg3: DoubleBuffer) -> None: ...

  @staticmethod
  @overload
  def glProgramUniformMatrix2x3fv(arg0: int, arg1: int, arg2: bool, arg3: list[float]) -> None: ...

  @staticmethod
  @overload
  def glProgramUniformMatrix2x3fv(arg0: int, arg1: int, arg2: bool, arg3: FloatBuffer) -> None: ...

  @staticmethod
  @overload
  def glProgramUniformMatrix2x4dv(arg0: int, arg1: int, arg2: bool, arg3: list[float]) -> None: ...

  @staticmethod
  @overload
  def glProgramUniformMatrix2x4dv(arg0: int, arg1: int, arg2: bool, arg3: DoubleBuffer) -> None: ...

  @staticmethod
  @overload
  def glProgramUniformMatrix2x4fv(arg0: int, arg1: int, arg2: bool, arg3: list[float]) -> None: ...

  @staticmethod
  @overload
  def glProgramUniformMatrix2x4fv(arg0: int, arg1: int, arg2: bool, arg3: FloatBuffer) -> None: ...

  @staticmethod
  @overload
  def glProgramUniformMatrix3dv(arg0: int, arg1: int, arg2: bool, arg3: list[float]) -> None: ...

  @staticmethod
  @overload
  def glProgramUniformMatrix3dv(arg0: int, arg1: int, arg2: bool, arg3: DoubleBuffer) -> None: ...

  @staticmethod
  @overload
  def glProgramUniformMatrix3fv(arg0: int, arg1: int, arg2: bool, arg3: list[float]) -> None: ...

  @staticmethod
  @overload
  def glProgramUniformMatrix3fv(arg0: int, arg1: int, arg2: bool, arg3: FloatBuffer) -> None: ...

  @staticmethod
  @overload
  def glProgramUniformMatrix3x2dv(arg0: int, arg1: int, arg2: bool, arg3: list[float]) -> None: ...

  @staticmethod
  @overload
  def glProgramUniformMatrix3x2dv(arg0: int, arg1: int, arg2: bool, arg3: DoubleBuffer) -> None: ...

  @staticmethod
  @overload
  def glProgramUniformMatrix3x2fv(arg0: int, arg1: int, arg2: bool, arg3: list[float]) -> None: ...

  @staticmethod
  @overload
  def glProgramUniformMatrix3x2fv(arg0: int, arg1: int, arg2: bool, arg3: FloatBuffer) -> None: ...

  @staticmethod
  @overload
  def glProgramUniformMatrix3x4dv(arg0: int, arg1: int, arg2: bool, arg3: list[float]) -> None: ...

  @staticmethod
  @overload
  def glProgramUniformMatrix3x4dv(arg0: int, arg1: int, arg2: bool, arg3: DoubleBuffer) -> None: ...

  @staticmethod
  @overload
  def glProgramUniformMatrix3x4fv(arg0: int, arg1: int, arg2: bool, arg3: list[float]) -> None: ...

  @staticmethod
  @overload
  def glProgramUniformMatrix3x4fv(arg0: int, arg1: int, arg2: bool, arg3: FloatBuffer) -> None: ...

  @staticmethod
  @overload
  def glProgramUniformMatrix4dv(arg0: int, arg1: int, arg2: bool, arg3: list[float]) -> None: ...

  @staticmethod
  @overload
  def glProgramUniformMatrix4dv(arg0: int, arg1: int, arg2: bool, arg3: DoubleBuffer) -> None: ...

  @staticmethod
  @overload
  def glProgramUniformMatrix4fv(arg0: int, arg1: int, arg2: bool, arg3: list[float]) -> None: ...

  @staticmethod
  @overload
  def glProgramUniformMatrix4fv(arg0: int, arg1: int, arg2: bool, arg3: FloatBuffer) -> None: ...

  @staticmethod
  @overload
  def glProgramUniformMatrix4x2dv(arg0: int, arg1: int, arg2: bool, arg3: list[float]) -> None: ...

  @staticmethod
  @overload
  def glProgramUniformMatrix4x2dv(arg0: int, arg1: int, arg2: bool, arg3: DoubleBuffer) -> None: ...

  @staticmethod
  @overload
  def glProgramUniformMatrix4x2fv(arg0: int, arg1: int, arg2: bool, arg3: list[float]) -> None: ...

  @staticmethod
  @overload
  def glProgramUniformMatrix4x2fv(arg0: int, arg1: int, arg2: bool, arg3: FloatBuffer) -> None: ...

  @staticmethod
  @overload
  def glProgramUniformMatrix4x3dv(arg0: int, arg1: int, arg2: bool, arg3: list[float]) -> None: ...

  @staticmethod
  @overload
  def glProgramUniformMatrix4x3dv(arg0: int, arg1: int, arg2: bool, arg3: DoubleBuffer) -> None: ...

  @staticmethod
  @overload
  def glProgramUniformMatrix4x3fv(arg0: int, arg1: int, arg2: bool, arg3: list[float]) -> None: ...

  @staticmethod
  @overload
  def glProgramUniformMatrix4x3fv(arg0: int, arg1: int, arg2: bool, arg3: FloatBuffer) -> None: ...

  @staticmethod
  def glUseProgramStages(arg0: int, arg1: int, arg2: int) -> None: ...

  @staticmethod
  def glValidateProgramPipeline(arg0: int) -> None: ...

  @staticmethod
  def nglCreateShaderProgramv(arg0: int, arg1: int, arg2: int) -> int: ...

  @staticmethod
  def nglDeleteProgramPipelines(arg0: int, arg1: int) -> None: ...

  @staticmethod
  def nglGenProgramPipelines(arg0: int, arg1: int) -> None: ...

  @staticmethod
  def nglGetProgramPipelineInfoLog(arg0: int, arg1: int, arg2: int, arg3: int) -> None: ...

  @staticmethod
  def nglGetProgramPipelineiv(arg0: int, arg1: int, arg2: int) -> None: ...

  @staticmethod
  def nglProgramUniform1dv(arg0: int, arg1: int, arg2: int, arg3: int) -> None: ...

  @staticmethod
  def nglProgramUniform1fv(arg0: int, arg1: int, arg2: int, arg3: int) -> None: ...

  @staticmethod
  def nglProgramUniform1iv(arg0: int, arg1: int, arg2: int, arg3: int) -> None: ...

  @staticmethod
  def nglProgramUniform1uiv(arg0: int, arg1: int, arg2: int, arg3: int) -> None: ...

  @staticmethod
  def nglProgramUniform2dv(arg0: int, arg1: int, arg2: int, arg3: int) -> None: ...

  @staticmethod
  def nglProgramUniform2fv(arg0: int, arg1: int, arg2: int, arg3: int) -> None: ...

  @staticmethod
  def nglProgramUniform2iv(arg0: int, arg1: int, arg2: int, arg3: int) -> None: ...

  @staticmethod
  def nglProgramUniform2uiv(arg0: int, arg1: int, arg2: int, arg3: int) -> None: ...

  @staticmethod
  def nglProgramUniform3dv(arg0: int, arg1: int, arg2: int, arg3: int) -> None: ...

  @staticmethod
  def nglProgramUniform3fv(arg0: int, arg1: int, arg2: int, arg3: int) -> None: ...

  @staticmethod
  def nglProgramUniform3iv(arg0: int, arg1: int, arg2: int, arg3: int) -> None: ...

  @staticmethod
  def nglProgramUniform3uiv(arg0: int, arg1: int, arg2: int, arg3: int) -> None: ...

  @staticmethod
  def nglProgramUniform4dv(arg0: int, arg1: int, arg2: int, arg3: int) -> None: ...

  @staticmethod
  def nglProgramUniform4fv(arg0: int, arg1: int, arg2: int, arg3: int) -> None: ...

  @staticmethod
  def nglProgramUniform4iv(arg0: int, arg1: int, arg2: int, arg3: int) -> None: ...

  @staticmethod
  def nglProgramUniform4uiv(arg0: int, arg1: int, arg2: int, arg3: int) -> None: ...

  @staticmethod
  def nglProgramUniformMatrix2dv(arg0: int, arg1: int, arg2: int, arg3: bool, arg4: int) -> None: ...

  @staticmethod
  def nglProgramUniformMatrix2fv(arg0: int, arg1: int, arg2: int, arg3: bool, arg4: int) -> None: ...

  @staticmethod
  def nglProgramUniformMatrix2x3dv(arg0: int, arg1: int, arg2: int, arg3: bool, arg4: int) -> None: ...

  @staticmethod
  def nglProgramUniformMatrix2x3fv(arg0: int, arg1: int, arg2: int, arg3: bool, arg4: int) -> None: ...

  @staticmethod
  def nglProgramUniformMatrix2x4dv(arg0: int, arg1: int, arg2: int, arg3: bool, arg4: int) -> None: ...

  @staticmethod
  def nglProgramUniformMatrix2x4fv(arg0: int, arg1: int, arg2: int, arg3: bool, arg4: int) -> None: ...

  @staticmethod
  def nglProgramUniformMatrix3dv(arg0: int, arg1: int, arg2: int, arg3: bool, arg4: int) -> None: ...

  @staticmethod
  def nglProgramUniformMatrix3fv(arg0: int, arg1: int, arg2: int, arg3: bool, arg4: int) -> None: ...

  @staticmethod
  def nglProgramUniformMatrix3x2dv(arg0: int, arg1: int, arg2: int, arg3: bool, arg4: int) -> None: ...

  @staticmethod
  def nglProgramUniformMatrix3x2fv(arg0: int, arg1: int, arg2: int, arg3: bool, arg4: int) -> None: ...

  @staticmethod
  def nglProgramUniformMatrix3x4dv(arg0: int, arg1: int, arg2: int, arg3: bool, arg4: int) -> None: ...

  @staticmethod
  def nglProgramUniformMatrix3x4fv(arg0: int, arg1: int, arg2: int, arg3: bool, arg4: int) -> None: ...

  @staticmethod
  def nglProgramUniformMatrix4dv(arg0: int, arg1: int, arg2: int, arg3: bool, arg4: int) -> None: ...

  @staticmethod
  def nglProgramUniformMatrix4fv(arg0: int, arg1: int, arg2: int, arg3: bool, arg4: int) -> None: ...

  @staticmethod
  def nglProgramUniformMatrix4x2dv(arg0: int, arg1: int, arg2: int, arg3: bool, arg4: int) -> None: ...

  @staticmethod
  def nglProgramUniformMatrix4x2fv(arg0: int, arg1: int, arg2: int, arg3: bool, arg4: int) -> None: ...

  @staticmethod
  def nglProgramUniformMatrix4x3dv(arg0: int, arg1: int, arg2: int, arg3: bool, arg4: int) -> None: ...

  @staticmethod
  def nglProgramUniformMatrix4x3fv(arg0: int, arg1: int, arg2: int, arg3: bool, arg4: int) -> None: ...


class ARBShaderAtomicCounters:

  GL_ACTIVE_ATOMIC_COUNTER_BUFFERS: int

  GL_ATOMIC_COUNTER_BUFFER: int

  GL_ATOMIC_COUNTER_BUFFER_ACTIVE_ATOMIC_COUNTER_INDICES: int

  GL_ATOMIC_COUNTER_BUFFER_ACTIVE_ATOMIC_COUNTERS: int

  GL_ATOMIC_COUNTER_BUFFER_BINDING: int

  GL_ATOMIC_COUNTER_BUFFER_DATA_SIZE: int

  GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_FRAGMENT_SHADER: int

  GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_GEOMETRY_SHADER: int

  GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_TESS_CONTROL_SHADER: int

  GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_TESS_EVALUATION_SHADER: int

  GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_VERTEX_SHADER: int

  GL_ATOMIC_COUNTER_BUFFER_SIZE: int

  GL_ATOMIC_COUNTER_BUFFER_START: int

  GL_MAX_ATOMIC_COUNTER_BUFFER_BINDINGS: int

  GL_MAX_ATOMIC_COUNTER_BUFFER_SIZE: int

  GL_MAX_COMBINED_ATOMIC_COUNTER_BUFFERS: int

  GL_MAX_COMBINED_ATOMIC_COUNTERS: int

  GL_MAX_FRAGMENT_ATOMIC_COUNTER_BUFFERS: int

  GL_MAX_FRAGMENT_ATOMIC_COUNTERS: int

  GL_MAX_GEOMETRY_ATOMIC_COUNTER_BUFFERS: int

  GL_MAX_GEOMETRY_ATOMIC_COUNTERS: int

  GL_MAX_TESS_CONTROL_ATOMIC_COUNTER_BUFFERS: int

  GL_MAX_TESS_CONTROL_ATOMIC_COUNTERS: int

  GL_MAX_TESS_EVALUATION_ATOMIC_COUNTER_BUFFERS: int

  GL_MAX_TESS_EVALUATION_ATOMIC_COUNTERS: int

  GL_MAX_VERTEX_ATOMIC_COUNTER_BUFFERS: int

  GL_MAX_VERTEX_ATOMIC_COUNTERS: int

  GL_UNIFORM_ATOMIC_COUNTER_BUFFER_INDEX: int

  GL_UNSIGNED_INT_ATOMIC_COUNTER: int

  @staticmethod
  def glGetActiveAtomicCounterBufferi(arg0: int, arg1: int, arg2: int) -> int: ...

  @staticmethod
  @overload
  def glGetActiveAtomicCounterBufferiv(arg0: int, arg1: int, arg2: int, arg3: list[int]) -> None: ...

  @staticmethod
  @overload
  def glGetActiveAtomicCounterBufferiv(arg0: int, arg1: int, arg2: int, arg3: IntBuffer) -> None: ...

  @staticmethod
  def nglGetActiveAtomicCounterBufferiv(arg0: int, arg1: int, arg2: int, arg3: int) -> None: ...


class ARBShaderImageLoadStore:

  GL_ALL_BARRIER_BITS: int

  GL_ATOMIC_COUNTER_BARRIER_BIT: int

  GL_BUFFER_UPDATE_BARRIER_BIT: int

  GL_COMMAND_BARRIER_BIT: int

  GL_ELEMENT_ARRAY_BARRIER_BIT: int

  GL_FRAMEBUFFER_BARRIER_BIT: int

  GL_IMAGE_1D: int

  GL_IMAGE_1D_ARRAY: int

  GL_IMAGE_2D: int

  GL_IMAGE_2D_ARRAY: int

  GL_IMAGE_2D_MULTISAMPLE: int

  GL_IMAGE_2D_MULTISAMPLE_ARRAY: int

  GL_IMAGE_2D_RECT: int

  GL_IMAGE_3D: int

  GL_IMAGE_BINDING_ACCESS: int

  GL_IMAGE_BINDING_FORMAT: int

  GL_IMAGE_BINDING_LAYER: int

  GL_IMAGE_BINDING_LAYERED: int

  GL_IMAGE_BINDING_LEVEL: int

  GL_IMAGE_BINDING_NAME: int

  GL_IMAGE_BUFFER: int

  GL_IMAGE_CUBE: int

  GL_IMAGE_CUBE_MAP_ARRAY: int

  GL_IMAGE_FORMAT_COMPATIBILITY_BY_CLASS: int

  GL_IMAGE_FORMAT_COMPATIBILITY_BY_SIZE: int

  GL_IMAGE_FORMAT_COMPATIBILITY_TYPE: int

  GL_INT_IMAGE_1D: int

  GL_INT_IMAGE_1D_ARRAY: int

  GL_INT_IMAGE_2D: int

  GL_INT_IMAGE_2D_ARRAY: int

  GL_INT_IMAGE_2D_MULTISAMPLE: int

  GL_INT_IMAGE_2D_MULTISAMPLE_ARRAY: int

  GL_INT_IMAGE_2D_RECT: int

  GL_INT_IMAGE_3D: int

  GL_INT_IMAGE_BUFFER: int

  GL_INT_IMAGE_CUBE: int

  GL_INT_IMAGE_CUBE_MAP_ARRAY: int

  GL_MAX_COMBINED_IMAGE_UNIFORMS: int

  GL_MAX_COMBINED_IMAGE_UNITS_AND_FRAGMENT_OUTPUTS: int

  GL_MAX_FRAGMENT_IMAGE_UNIFORMS: int

  GL_MAX_GEOMETRY_IMAGE_UNIFORMS: int

  GL_MAX_IMAGE_SAMPLES: int

  GL_MAX_IMAGE_UNITS: int

  GL_MAX_TESS_CONTROL_IMAGE_UNIFORMS: int

  GL_MAX_TESS_EVALUATION_IMAGE_UNIFORMS: int

  GL_MAX_VERTEX_IMAGE_UNIFORMS: int

  GL_PIXEL_BUFFER_BARRIER_BIT: int

  GL_SHADER_IMAGE_ACCESS_BARRIER_BIT: int

  GL_TEXTURE_FETCH_BARRIER_BIT: int

  GL_TEXTURE_UPDATE_BARRIER_BIT: int

  GL_TRANSFORM_FEEDBACK_BARRIER_BIT: int

  GL_UNIFORM_BARRIER_BIT: int

  GL_UNSIGNED_INT_IMAGE_1D: int

  GL_UNSIGNED_INT_IMAGE_1D_ARRAY: int

  GL_UNSIGNED_INT_IMAGE_2D: int

  GL_UNSIGNED_INT_IMAGE_2D_ARRAY: int

  GL_UNSIGNED_INT_IMAGE_2D_MULTISAMPLE: int

  GL_UNSIGNED_INT_IMAGE_2D_MULTISAMPLE_ARRAY: int

  GL_UNSIGNED_INT_IMAGE_2D_RECT: int

  GL_UNSIGNED_INT_IMAGE_3D: int

  GL_UNSIGNED_INT_IMAGE_BUFFER: int

  GL_UNSIGNED_INT_IMAGE_CUBE: int

  GL_UNSIGNED_INT_IMAGE_CUBE_MAP_ARRAY: int

  GL_VERTEX_ATTRIB_ARRAY_BARRIER_BIT: int

  @staticmethod
  def glBindImageTexture(arg0: int, arg1: int, arg2: int, arg3: bool, arg4: int, arg5: int, arg6: int) -> None: ...

  @staticmethod
  def glMemoryBarrier(arg0: int) -> None: ...


class ARBShaderObjects:

  GL_BOOL_ARB: int

  GL_BOOL_VEC2_ARB: int

  GL_BOOL_VEC3_ARB: int

  GL_BOOL_VEC4_ARB: int

  GL_FLOAT_MAT2_ARB: int

  GL_FLOAT_MAT3_ARB: int

  GL_FLOAT_MAT4_ARB: int

  GL_FLOAT_VEC2_ARB: int

  GL_FLOAT_VEC3_ARB: int

  GL_FLOAT_VEC4_ARB: int

  GL_INT_VEC2_ARB: int

  GL_INT_VEC3_ARB: int

  GL_INT_VEC4_ARB: int

  GL_OBJECT_ACTIVE_UNIFORM_MAX_LENGTH_ARB: int

  GL_OBJECT_ACTIVE_UNIFORMS_ARB: int

  GL_OBJECT_ATTACHED_OBJECTS_ARB: int

  GL_OBJECT_COMPILE_STATUS_ARB: int

  GL_OBJECT_DELETE_STATUS_ARB: int

  GL_OBJECT_INFO_LOG_LENGTH_ARB: int

  GL_OBJECT_LINK_STATUS_ARB: int

  GL_OBJECT_SHADER_SOURCE_LENGTH_ARB: int

  GL_OBJECT_SUBTYPE_ARB: int

  GL_OBJECT_TYPE_ARB: int

  GL_OBJECT_VALIDATE_STATUS_ARB: int

  GL_PROGRAM_OBJECT_ARB: int

  GL_SAMPLER_1D_ARB: int

  GL_SAMPLER_1D_SHADOW_ARB: int

  GL_SAMPLER_2D_ARB: int

  GL_SAMPLER_2D_RECT_ARB: int

  GL_SAMPLER_2D_RECT_SHADOW_ARB: int

  GL_SAMPLER_2D_SHADOW_ARB: int

  GL_SAMPLER_3D_ARB: int

  GL_SAMPLER_CUBE_ARB: int

  GL_SHADER_OBJECT_ARB: int

  @staticmethod
  def glAttachObjectARB(arg0: int, arg1: int) -> None: ...

  @staticmethod
  def glCompileShaderARB(arg0: int) -> None: ...

  @staticmethod
  def glCreateProgramObjectARB() -> int: ...

  @staticmethod
  def glCreateShaderObjectARB(arg0: int) -> int: ...

  @staticmethod
  def glDeleteObjectARB(arg0: int) -> None: ...

  @staticmethod
  def glDetachObjectARB(arg0: int, arg1: int) -> None: ...

  @staticmethod
  @overload
  def glGetActiveUniformARB(arg0: int, arg1: int, arg2: IntBuffer, arg3: IntBuffer) -> str: ...

  @staticmethod
  @overload
  def glGetActiveUniformARB(arg0: int, arg1: int, arg2: int, arg3: IntBuffer, arg4: IntBuffer) -> str: ...

  @staticmethod
  @overload
  def glGetActiveUniformARB(arg0: int, arg1: int, arg2: list[int], arg3: list[int], arg4: list[int], arg5: ByteBuffer) -> None: ...

  @staticmethod
  @overload
  def glGetActiveUniformARB(arg0: int, arg1: int, arg2: IntBuffer, arg3: IntBuffer, arg4: IntBuffer, arg5: ByteBuffer) -> None: ...

  @staticmethod
  @overload
  def glGetAttachedObjectsARB(arg0: int, arg1: list[int], arg2: list[int]) -> None: ...

  @staticmethod
  @overload
  def glGetAttachedObjectsARB(arg0: int, arg1: IntBuffer, arg2: IntBuffer) -> None: ...

  @staticmethod
  def glGetHandleARB(arg0: int) -> int: ...

  @staticmethod
  @overload
  def glGetInfoLogARB(arg0: int) -> str: ...

  @staticmethod
  @overload
  def glGetInfoLogARB(arg0: int, arg1: int) -> str: ...

  @staticmethod
  @overload
  def glGetInfoLogARB(arg0: int, arg1: list[int], arg2: ByteBuffer) -> None: ...

  @staticmethod
  @overload
  def glGetInfoLogARB(arg0: int, arg1: IntBuffer, arg2: ByteBuffer) -> None: ...

  @staticmethod
  @overload
  def glGetObjectParameterfvARB(arg0: int, arg1: int, arg2: list[float]) -> None: ...

  @staticmethod
  @overload
  def glGetObjectParameterfvARB(arg0: int, arg1: int, arg2: FloatBuffer) -> None: ...

  @staticmethod
  def glGetObjectParameteriARB(arg0: int, arg1: int) -> int: ...

  @staticmethod
  @overload
  def glGetObjectParameterivARB(arg0: int, arg1: int, arg2: list[int]) -> None: ...

  @staticmethod
  @overload
  def glGetObjectParameterivARB(arg0: int, arg1: int, arg2: IntBuffer) -> None: ...

  @staticmethod
  @overload
  def glGetShaderSourceARB(arg0: int) -> str: ...

  @staticmethod
  @overload
  def glGetShaderSourceARB(arg0: int, arg1: int) -> str: ...

  @staticmethod
  @overload
  def glGetShaderSourceARB(arg0: int, arg1: list[int], arg2: ByteBuffer) -> None: ...

  @staticmethod
  @overload
  def glGetShaderSourceARB(arg0: int, arg1: IntBuffer, arg2: ByteBuffer) -> None: ...

  @staticmethod
  @overload
  def glGetUniformLocationARB(arg0: int, arg1: CharSequence) -> int: ...

  @staticmethod
  @overload
  def glGetUniformLocationARB(arg0: int, arg1: ByteBuffer) -> int: ...

  @staticmethod
  def glGetUniformfARB(arg0: int, arg1: int) -> float: ...

  @staticmethod
  @overload
  def glGetUniformfvARB(arg0: int, arg1: int, arg2: list[float]) -> None: ...

  @staticmethod
  @overload
  def glGetUniformfvARB(arg0: int, arg1: int, arg2: FloatBuffer) -> None: ...

  @staticmethod
  def glGetUniformiARB(arg0: int, arg1: int) -> int: ...

  @staticmethod
  @overload
  def glGetUniformivARB(arg0: int, arg1: int, arg2: list[int]) -> None: ...

  @staticmethod
  @overload
  def glGetUniformivARB(arg0: int, arg1: int, arg2: IntBuffer) -> None: ...

  @staticmethod
  def glLinkProgramARB(arg0: int) -> None: ...

  @staticmethod
  @overload
  def glShaderSourceARB(arg0: int, arg1: list[CharSequence]) -> None: ...

  @staticmethod
  @overload
  def glShaderSourceARB(arg0: int, arg1: CharSequence) -> None: ...

  @staticmethod
  @overload
  def glShaderSourceARB(arg0: int, arg1: PointerBuffer, arg2: list[int]) -> None: ...

  @staticmethod
  @overload
  def glShaderSourceARB(arg0: int, arg1: PointerBuffer, arg2: IntBuffer) -> None: ...

  @staticmethod
  def glUniform1fARB(arg0: int, arg1: float) -> None: ...

  @staticmethod
  @overload
  def glUniform1fvARB(arg0: int, arg1: list[float]) -> None: ...

  @staticmethod
  @overload
  def glUniform1fvARB(arg0: int, arg1: FloatBuffer) -> None: ...

  @staticmethod
  def glUniform1iARB(arg0: int, arg1: int) -> None: ...

  @staticmethod
  @overload
  def glUniform1ivARB(arg0: int, arg1: list[int]) -> None: ...

  @staticmethod
  @overload
  def glUniform1ivARB(arg0: int, arg1: IntBuffer) -> None: ...

  @staticmethod
  def glUniform2fARB(arg0: int, arg1: float, arg2: float) -> None: ...

  @staticmethod
  @overload
  def glUniform2fvARB(arg0: int, arg1: list[float]) -> None: ...

  @staticmethod
  @overload
  def glUniform2fvARB(arg0: int, arg1: FloatBuffer) -> None: ...

  @staticmethod
  def glUniform2iARB(arg0: int, arg1: int, arg2: int) -> None: ...

  @staticmethod
  @overload
  def glUniform2ivARB(arg0: int, arg1: list[int]) -> None: ...

  @staticmethod
  @overload
  def glUniform2ivARB(arg0: int, arg1: IntBuffer) -> None: ...

  @staticmethod
  def glUniform3fARB(arg0: int, arg1: float, arg2: float, arg3: float) -> None: ...

  @staticmethod
  @overload
  def glUniform3fvARB(arg0: int, arg1: list[float]) -> None: ...

  @staticmethod
  @overload
  def glUniform3fvARB(arg0: int, arg1: FloatBuffer) -> None: ...

  @staticmethod
  def glUniform3iARB(arg0: int, arg1: int, arg2: int, arg3: int) -> None: ...

  @staticmethod
  @overload
  def glUniform3ivARB(arg0: int, arg1: list[int]) -> None: ...

  @staticmethod
  @overload
  def glUniform3ivARB(arg0: int, arg1: IntBuffer) -> None: ...

  @staticmethod
  def glUniform4fARB(arg0: int, arg1: float, arg2: float, arg3: float, arg4: float) -> None: ...

  @staticmethod
  @overload
  def glUniform4fvARB(arg0: int, arg1: list[float]) -> None: ...

  @staticmethod
  @overload
  def glUniform4fvARB(arg0: int, arg1: FloatBuffer) -> None: ...

  @staticmethod
  def glUniform4iARB(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int) -> None: ...

  @staticmethod
  @overload
  def glUniform4ivARB(arg0: int, arg1: list[int]) -> None: ...

  @staticmethod
  @overload
  def glUniform4ivARB(arg0: int, arg1: IntBuffer) -> None: ...

  @staticmethod
  @overload
  def glUniformMatrix2fvARB(arg0: int, arg1: bool, arg2: list[float]) -> None: ...

  @staticmethod
  @overload
  def glUniformMatrix2fvARB(arg0: int, arg1: bool, arg2: FloatBuffer) -> None: ...

  @staticmethod
  @overload
  def glUniformMatrix3fvARB(arg0: int, arg1: bool, arg2: list[float]) -> None: ...

  @staticmethod
  @overload
  def glUniformMatrix3fvARB(arg0: int, arg1: bool, arg2: FloatBuffer) -> None: ...

  @staticmethod
  @overload
  def glUniformMatrix4fvARB(arg0: int, arg1: bool, arg2: list[float]) -> None: ...

  @staticmethod
  @overload
  def glUniformMatrix4fvARB(arg0: int, arg1: bool, arg2: FloatBuffer) -> None: ...

  @staticmethod
  def glUseProgramObjectARB(arg0: int) -> None: ...

  @staticmethod
  def glValidateProgramARB(arg0: int) -> None: ...

  @staticmethod
  def nglGetActiveUniformARB(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int) -> None: ...

  @staticmethod
  def nglGetAttachedObjectsARB(arg0: int, arg1: int, arg2: int, arg3: int) -> None: ...

  @staticmethod
  def nglGetInfoLogARB(arg0: int, arg1: int, arg2: int, arg3: int) -> None: ...

  @staticmethod
  def nglGetObjectParameterfvARB(arg0: int, arg1: int, arg2: int) -> None: ...

  @staticmethod
  def nglGetObjectParameterivARB(arg0: int, arg1: int, arg2: int) -> None: ...

  @staticmethod
  def nglGetShaderSourceARB(arg0: int, arg1: int, arg2: int, arg3: int) -> None: ...

  @staticmethod
  def nglGetUniformLocationARB(arg0: int, arg1: int) -> int: ...

  @staticmethod
  def nglGetUniformfvARB(arg0: int, arg1: int, arg2: int) -> None: ...

  @staticmethod
  def nglGetUniformivARB(arg0: int, arg1: int, arg2: int) -> None: ...

  @staticmethod
  def nglShaderSourceARB(arg0: int, arg1: int, arg2: int, arg3: int) -> None: ...

  @staticmethod
  def nglUniform1fvARB(arg0: int, arg1: int, arg2: int) -> None: ...

  @staticmethod
  def nglUniform1ivARB(arg0: int, arg1: int, arg2: int) -> None: ...

  @staticmethod
  def nglUniform2fvARB(arg0: int, arg1: int, arg2: int) -> None: ...

  @staticmethod
  def nglUniform2ivARB(arg0: int, arg1: int, arg2: int) -> None: ...

  @staticmethod
  def nglUniform3fvARB(arg0: int, arg1: int, arg2: int) -> None: ...

  @staticmethod
  def nglUniform3ivARB(arg0: int, arg1: int, arg2: int) -> None: ...

  @staticmethod
  def nglUniform4fvARB(arg0: int, arg1: int, arg2: int) -> None: ...

  @staticmethod
  def nglUniform4ivARB(arg0: int, arg1: int, arg2: int) -> None: ...

  @staticmethod
  def nglUniformMatrix2fvARB(arg0: int, arg1: int, arg2: bool, arg3: int) -> None: ...

  @staticmethod
  def nglUniformMatrix3fvARB(arg0: int, arg1: int, arg2: bool, arg3: int) -> None: ...

  @staticmethod
  def nglUniformMatrix4fvARB(arg0: int, arg1: int, arg2: bool, arg3: int) -> None: ...


class ARBShaderStorageBufferObject:

  GL_MAX_COMBINED_SHADER_OUTPUT_RESOURCES: int

  GL_MAX_COMBINED_SHADER_STORAGE_BLOCKS: int

  GL_MAX_COMPUTE_SHADER_STORAGE_BLOCKS: int

  GL_MAX_FRAGMENT_SHADER_STORAGE_BLOCKS: int

  GL_MAX_GEOMETRY_SHADER_STORAGE_BLOCKS: int

  GL_MAX_SHADER_STORAGE_BLOCK_SIZE: int

  GL_MAX_SHADER_STORAGE_BUFFER_BINDINGS: int

  GL_MAX_TESS_CONTROL_SHADER_STORAGE_BLOCKS: int

  GL_MAX_TESS_EVALUATION_SHADER_STORAGE_BLOCKS: int

  GL_MAX_VERTEX_SHADER_STORAGE_BLOCKS: int

  GL_SHADER_STORAGE_BARRIER_BIT: int

  GL_SHADER_STORAGE_BUFFER: int

  GL_SHADER_STORAGE_BUFFER_BINDING: int

  GL_SHADER_STORAGE_BUFFER_OFFSET_ALIGNMENT: int

  GL_SHADER_STORAGE_BUFFER_SIZE: int

  GL_SHADER_STORAGE_BUFFER_START: int

  @staticmethod
  def glShaderStorageBlockBinding(arg0: int, arg1: int, arg2: int) -> None: ...


class ARBShaderSubroutine:

  GL_ACTIVE_SUBROUTINE_MAX_LENGTH: int

  GL_ACTIVE_SUBROUTINE_UNIFORM_LOCATIONS: int

  GL_ACTIVE_SUBROUTINE_UNIFORM_MAX_LENGTH: int

  GL_ACTIVE_SUBROUTINE_UNIFORMS: int

  GL_ACTIVE_SUBROUTINES: int

  GL_COMPATIBLE_SUBROUTINES: int

  GL_MAX_SUBROUTINE_UNIFORM_LOCATIONS: int

  GL_MAX_SUBROUTINES: int

  GL_NUM_COMPATIBLE_SUBROUTINES: int

  @staticmethod
  @overload
  def glGetActiveSubroutineName(arg0: int, arg1: int, arg2: int) -> str: ...

  @staticmethod
  @overload
  def glGetActiveSubroutineName(arg0: int, arg1: int, arg2: int, arg3: int) -> str: ...

  @staticmethod
  @overload
  def glGetActiveSubroutineName(arg0: int, arg1: int, arg2: int, arg3: list[int], arg4: ByteBuffer) -> None: ...

  @staticmethod
  @overload
  def glGetActiveSubroutineName(arg0: int, arg1: int, arg2: int, arg3: IntBuffer, arg4: ByteBuffer) -> None: ...

  @staticmethod
  @overload
  def glGetActiveSubroutineUniformName(arg0: int, arg1: int, arg2: int) -> str: ...

  @staticmethod
  @overload
  def glGetActiveSubroutineUniformName(arg0: int, arg1: int, arg2: int, arg3: int) -> str: ...

  @staticmethod
  @overload
  def glGetActiveSubroutineUniformName(arg0: int, arg1: int, arg2: int, arg3: list[int], arg4: ByteBuffer) -> None: ...

  @staticmethod
  @overload
  def glGetActiveSubroutineUniformName(arg0: int, arg1: int, arg2: int, arg3: IntBuffer, arg4: ByteBuffer) -> None: ...

  @staticmethod
  def glGetActiveSubroutineUniformi(arg0: int, arg1: int, arg2: int, arg3: int) -> int: ...

  @staticmethod
  @overload
  def glGetActiveSubroutineUniformiv(arg0: int, arg1: int, arg2: int, arg3: int, arg4: list[int]) -> None: ...

  @staticmethod
  @overload
  def glGetActiveSubroutineUniformiv(arg0: int, arg1: int, arg2: int, arg3: int, arg4: IntBuffer) -> None: ...

  @staticmethod
  def glGetProgramStagei(arg0: int, arg1: int, arg2: int) -> int: ...

  @staticmethod
  @overload
  def glGetProgramStageiv(arg0: int, arg1: int, arg2: int, arg3: list[int]) -> None: ...

  @staticmethod
  @overload
  def glGetProgramStageiv(arg0: int, arg1: int, arg2: int, arg3: IntBuffer) -> None: ...

  @staticmethod
  @overload
  def glGetSubroutineIndex(arg0: int, arg1: int, arg2: CharSequence) -> int: ...

  @staticmethod
  @overload
  def glGetSubroutineIndex(arg0: int, arg1: int, arg2: ByteBuffer) -> int: ...

  @staticmethod
  @overload
  def glGetSubroutineUniformLocation(arg0: int, arg1: int, arg2: CharSequence) -> int: ...

  @staticmethod
  @overload
  def glGetSubroutineUniformLocation(arg0: int, arg1: int, arg2: ByteBuffer) -> int: ...

  @staticmethod
  def glGetUniformSubroutineui(arg0: int, arg1: int) -> int: ...

  @staticmethod
  @overload
  def glGetUniformSubroutineuiv(arg0: int, arg1: int, arg2: list[int]) -> None: ...

  @staticmethod
  @overload
  def glGetUniformSubroutineuiv(arg0: int, arg1: int, arg2: IntBuffer) -> None: ...

  @staticmethod
  def glUniformSubroutinesui(arg0: int, arg1: int) -> None: ...

  @staticmethod
  @overload
  def glUniformSubroutinesuiv(arg0: int, arg1: list[int]) -> None: ...

  @staticmethod
  @overload
  def glUniformSubroutinesuiv(arg0: int, arg1: IntBuffer) -> None: ...

  @staticmethod
  def nglGetActiveSubroutineName(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int) -> None: ...

  @staticmethod
  def nglGetActiveSubroutineUniformName(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int) -> None: ...

  @staticmethod
  def nglGetActiveSubroutineUniformiv(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int) -> None: ...

  @staticmethod
  def nglGetProgramStageiv(arg0: int, arg1: int, arg2: int, arg3: int) -> None: ...

  @staticmethod
  def nglGetSubroutineIndex(arg0: int, arg1: int, arg2: int) -> int: ...

  @staticmethod
  def nglGetSubroutineUniformLocation(arg0: int, arg1: int, arg2: int) -> int: ...

  @staticmethod
  def nglGetUniformSubroutineuiv(arg0: int, arg1: int, arg2: int) -> None: ...

  @staticmethod
  def nglUniformSubroutinesuiv(arg0: int, arg1: int, arg2: int) -> None: ...


class ARBShadingLanguage100:

  GL_SHADING_LANGUAGE_VERSION_ARB: int


class ARBShadingLanguageInclude:

  GL_NAMED_STRING_LENGTH_ARB: int

  GL_NAMED_STRING_TYPE_ARB: int

  GL_SHADER_INCLUDE_ARB: int

  @staticmethod
  @overload
  def glCompileShaderIncludeARB(arg0: int, arg1: PointerBuffer, arg2: list[int]) -> None: ...

  @staticmethod
  @overload
  def glCompileShaderIncludeARB(arg0: int, arg1: PointerBuffer, arg2: IntBuffer) -> None: ...

  @staticmethod
  @overload
  def glDeleteNamedStringARB(arg0: CharSequence) -> None: ...

  @staticmethod
  @overload
  def glDeleteNamedStringARB(arg0: ByteBuffer) -> None: ...

  @staticmethod
  @overload
  def glGetNamedStringARB(arg0: CharSequence) -> str: ...

  @staticmethod
  @overload
  def glGetNamedStringARB(arg0: CharSequence, arg1: int) -> str: ...

  @staticmethod
  @overload
  def glGetNamedStringARB(arg0: CharSequence, arg1: list[int], arg2: ByteBuffer) -> None: ...

  @staticmethod
  @overload
  def glGetNamedStringARB(arg0: CharSequence, arg1: IntBuffer, arg2: ByteBuffer) -> None: ...

  @staticmethod
  @overload
  def glGetNamedStringARB(arg0: ByteBuffer, arg1: list[int], arg2: ByteBuffer) -> None: ...

  @staticmethod
  @overload
  def glGetNamedStringARB(arg0: ByteBuffer, arg1: IntBuffer, arg2: ByteBuffer) -> None: ...

  @staticmethod
  def glGetNamedStringiARB(arg0: CharSequence, arg1: int) -> int: ...

  @staticmethod
  @overload
  def glGetNamedStringivARB(arg0: CharSequence, arg1: int, arg2: list[int]) -> None: ...

  @staticmethod
  @overload
  def glGetNamedStringivARB(arg0: CharSequence, arg1: int, arg2: IntBuffer) -> None: ...

  @staticmethod
  @overload
  def glGetNamedStringivARB(arg0: ByteBuffer, arg1: int, arg2: list[int]) -> None: ...

  @staticmethod
  @overload
  def glGetNamedStringivARB(arg0: ByteBuffer, arg1: int, arg2: IntBuffer) -> None: ...

  @staticmethod
  @overload
  def glIsNamedStringARB(arg0: CharSequence) -> bool: ...

  @staticmethod
  @overload
  def glIsNamedStringARB(arg0: ByteBuffer) -> bool: ...

  @staticmethod
  @overload
  def glNamedStringARB(arg0: int, arg1: CharSequence, arg2: CharSequence) -> None: ...

  @staticmethod
  @overload
  def glNamedStringARB(arg0: int, arg1: ByteBuffer, arg2: ByteBuffer) -> None: ...

  @staticmethod
  def nglCompileShaderIncludeARB(arg0: int, arg1: int, arg2: int, arg3: int) -> None: ...

  @staticmethod
  def nglDeleteNamedStringARB(arg0: int, arg1: int) -> None: ...

  @staticmethod
  def nglGetNamedStringARB(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int) -> None: ...

  @staticmethod
  def nglGetNamedStringivARB(arg0: int, arg1: int, arg2: int, arg3: int) -> None: ...

  @staticmethod
  def nglIsNamedStringARB(arg0: int, arg1: int) -> bool: ...

  @staticmethod
  def nglNamedStringARB(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int) -> None: ...


class ARBShadow:

  GL_COMPARE_R_TO_TEXTURE_ARB: int

  GL_TEXTURE_COMPARE_FUNC_ARB: int

  GL_TEXTURE_COMPARE_MODE_ARB: int


class ARBShadowAmbient:

  GL_TEXTURE_COMPARE_FAIL_VALUE_ARB: int


class ARBSparseBuffer:

  GL_SPARSE_BUFFER_PAGE_SIZE_ARB: int

  GL_SPARSE_STORAGE_BIT_ARB: int

  @staticmethod
  def glBufferPageCommitmentARB(arg0: int, arg1: int, arg2: int, arg3: bool) -> None: ...

  @staticmethod
  def glNamedBufferPageCommitmentARB(arg0: int, arg1: int, arg2: int, arg3: bool) -> None: ...

  @staticmethod
  def glNamedBufferPageCommitmentEXT(arg0: int, arg1: int, arg2: int, arg3: bool) -> None: ...


class ARBSparseTexture:

  GL_MAX_SPARSE_3D_TEXTURE_SIZE_ARB: int

  GL_MAX_SPARSE_ARRAY_TEXTURE_LAYERS_ARB: int

  GL_MAX_SPARSE_TEXTURE_SIZE_ARB: int

  GL_NUM_SPARSE_LEVELS_ARB: int

  GL_NUM_VIRTUAL_PAGE_SIZES_ARB: int

  GL_SPARSE_TEXTURE_FULL_ARRAY_CUBE_MIPMAPS_ARB: int

  GL_TEXTURE_SPARSE_ARB: int

  GL_VIRTUAL_PAGE_SIZE_INDEX_ARB: int

  GL_VIRTUAL_PAGE_SIZE_X_ARB: int

  GL_VIRTUAL_PAGE_SIZE_Y_ARB: int

  GL_VIRTUAL_PAGE_SIZE_Z_ARB: int

  @staticmethod
  def glTexPageCommitmentARB(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int, arg7: int, arg8: bool) -> None: ...

  @staticmethod
  def glTexturePageCommitmentEXT(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int, arg7: int, arg8: bool) -> None: ...


class ARBStencilTexturing:

  GL_DEPTH_STENCIL_TEXTURE_MODE: int


class ARBSync:

  GL_ALREADY_SIGNALED: int

  GL_CONDITION_SATISFIED: int

  GL_MAX_SERVER_WAIT_TIMEOUT: int

  GL_OBJECT_TYPE: int

  GL_SIGNALED: int

  GL_SYNC_CONDITION: int

  GL_SYNC_FENCE: int

  GL_SYNC_FLAGS: int

  GL_SYNC_FLUSH_COMMANDS_BIT: int

  GL_SYNC_GPU_COMMANDS_COMPLETE: int

  GL_SYNC_STATUS: int

  GL_TIMEOUT_EXPIRED: int

  GL_TIMEOUT_IGNORED: int

  GL_UNSIGNALED: int

  GL_WAIT_FAILED: int

  @staticmethod
  def glClientWaitSync(arg0: int, arg1: int, arg2: int) -> int: ...

  @staticmethod
  def glDeleteSync(arg0: int) -> None: ...

  @staticmethod
  def glFenceSync(arg0: int, arg1: int) -> int: ...

  @staticmethod
  def glGetInteger64(arg0: int) -> int: ...

  @staticmethod
  @overload
  def glGetInteger64v(arg0: int, arg1: list[int]) -> None: ...

  @staticmethod
  @overload
  def glGetInteger64v(arg0: int, arg1: LongBuffer) -> None: ...

  @staticmethod
  def glGetSynci(arg0: int, arg1: int, arg2: IntBuffer) -> int: ...

  @staticmethod
  @overload
  def glGetSynciv(arg0: int, arg1: int, arg2: list[int], arg3: list[int]) -> None: ...

  @staticmethod
  @overload
  def glGetSynciv(arg0: int, arg1: int, arg2: IntBuffer, arg3: IntBuffer) -> None: ...

  @staticmethod
  def glIsSync(arg0: int) -> bool: ...

  @staticmethod
  def glWaitSync(arg0: int, arg1: int, arg2: int) -> None: ...

  @staticmethod
  def nglClientWaitSync(arg0: int, arg1: int, arg2: int) -> int: ...

  @staticmethod
  def nglDeleteSync(arg0: int) -> None: ...

  @staticmethod
  def nglGetInteger64v(arg0: int, arg1: int) -> None: ...

  @staticmethod
  def nglGetSynciv(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int) -> None: ...

  @staticmethod
  def nglIsSync(arg0: int) -> bool: ...

  @staticmethod
  def nglWaitSync(arg0: int, arg1: int, arg2: int) -> None: ...


class ARBTessellationShader:

  GL_FRACTIONAL_EVEN: int

  GL_FRACTIONAL_ODD: int

  GL_ISOLINES: int

  GL_MAX_COMBINED_TESS_CONTROL_UNIFORM_COMPONENTS: int

  GL_MAX_COMBINED_TESS_EVALUATION_UNIFORM_COMPONENTS: int

  GL_MAX_PATCH_VERTICES: int

  GL_MAX_TESS_CONTROL_INPUT_COMPONENTS: int

  GL_MAX_TESS_CONTROL_OUTPUT_COMPONENTS: int

  GL_MAX_TESS_CONTROL_TEXTURE_IMAGE_UNITS: int

  GL_MAX_TESS_CONTROL_TOTAL_OUTPUT_COMPONENTS: int

  GL_MAX_TESS_CONTROL_UNIFORM_BLOCKS: int

  GL_MAX_TESS_CONTROL_UNIFORM_COMPONENTS: int

  GL_MAX_TESS_EVALUATION_INPUT_COMPONENTS: int

  GL_MAX_TESS_EVALUATION_OUTPUT_COMPONENTS: int

  GL_MAX_TESS_EVALUATION_TEXTURE_IMAGE_UNITS: int

  GL_MAX_TESS_EVALUATION_UNIFORM_BLOCKS: int

  GL_MAX_TESS_EVALUATION_UNIFORM_COMPONENTS: int

  GL_MAX_TESS_GEN_LEVEL: int

  GL_MAX_TESS_PATCH_COMPONENTS: int

  GL_PATCH_DEFAULT_INNER_LEVEL: int

  GL_PATCH_DEFAULT_OUTER_LEVEL: int

  GL_PATCH_VERTICES: int

  GL_PATCHES: int

  GL_TESS_CONTROL_OUTPUT_VERTICES: int

  GL_TESS_CONTROL_SHADER: int

  GL_TESS_EVALUATION_SHADER: int

  GL_TESS_GEN_MODE: int

  GL_TESS_GEN_POINT_MODE: int

  GL_TESS_GEN_SPACING: int

  GL_TESS_GEN_VERTEX_ORDER: int

  GL_UNIFORM_BLOCK_REFERENCED_BY_TESS_CONTROL_SHADER: int

  GL_UNIFORM_BLOCK_REFERENCED_BY_TESS_EVALUATION_SHADER: int

  @staticmethod
  @overload
  def glPatchParameterfv(arg0: int, arg1: list[float]) -> None: ...

  @staticmethod
  @overload
  def glPatchParameterfv(arg0: int, arg1: FloatBuffer) -> None: ...

  @staticmethod
  def glPatchParameteri(arg0: int, arg1: int) -> None: ...

  @staticmethod
  def nglPatchParameterfv(arg0: int, arg1: int) -> None: ...


class ARBTextureBarrier:

  @staticmethod
  def glTextureBarrier() -> None: ...


class ARBTextureBorderClamp:

  GL_CLAMP_TO_BORDER_ARB: int


class ARBTextureBufferObject:

  GL_MAX_TEXTURE_BUFFER_SIZE_ARB: int

  GL_TEXTURE_BINDING_BUFFER_ARB: int

  GL_TEXTURE_BUFFER_ARB: int

  GL_TEXTURE_BUFFER_DATA_STORE_BINDING_ARB: int

  GL_TEXTURE_BUFFER_FORMAT_ARB: int

  @staticmethod
  def glTexBufferARB(arg0: int, arg1: int, arg2: int) -> None: ...


class ARBTextureBufferRange:

  GL_TEXTURE_BUFFER_OFFSET: int

  GL_TEXTURE_BUFFER_OFFSET_ALIGNMENT: int

  GL_TEXTURE_BUFFER_SIZE: int

  @staticmethod
  def glTexBufferRange(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int) -> None: ...

  @staticmethod
  def glTextureBufferRangeEXT(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int) -> None: ...


class ARBTextureCompression:

  GL_COMPRESSED_ALPHA_ARB: int

  GL_COMPRESSED_INTENSITY_ARB: int

  GL_COMPRESSED_LUMINANCE_ALPHA_ARB: int

  GL_COMPRESSED_LUMINANCE_ARB: int

  GL_COMPRESSED_RGB_ARB: int

  GL_COMPRESSED_RGBA_ARB: int

  GL_COMPRESSED_TEXTURE_FORMATS_ARB: int

  GL_NUM_COMPRESSED_TEXTURE_FORMATS_ARB: int

  GL_TEXTURE_COMPRESSED_ARB: int

  GL_TEXTURE_COMPRESSED_IMAGE_SIZE_ARB: int

  GL_TEXTURE_COMPRESSION_HINT_ARB: int

  @staticmethod
  @overload
  def glCompressedTexImage1DARB(arg0: int, arg1: int, arg2: int, arg3: int, arg4: ByteBuffer) -> None: ...

  @staticmethod
  @overload
  def glCompressedTexImage1DARB(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int) -> None: ...

  @staticmethod
  @overload
  def glCompressedTexImage2DARB(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: ByteBuffer) -> None: ...

  @staticmethod
  @overload
  def glCompressedTexImage2DARB(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int, arg7: int) -> None: ...

  @staticmethod
  @overload
  def glCompressedTexImage3DARB(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: ByteBuffer) -> None: ...

  @staticmethod
  @overload
  def glCompressedTexImage3DARB(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int, arg7: int, arg8: int) -> None: ...

  @staticmethod
  @overload
  def glCompressedTexSubImage1DARB(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: ByteBuffer) -> None: ...

  @staticmethod
  @overload
  def glCompressedTexSubImage1DARB(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int) -> None: ...

  @staticmethod
  @overload
  def glCompressedTexSubImage2DARB(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int, arg7: ByteBuffer) -> None: ...

  @staticmethod
  @overload
  def glCompressedTexSubImage2DARB(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int, arg7: int, arg8: int) -> None: ...

  @staticmethod
  @overload
  def glCompressedTexSubImage3DARB(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int, arg7: int, arg8: int, arg9: ByteBuffer) -> None: ...

  @staticmethod
  @overload
  def glCompressedTexSubImage3DARB(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int, arg7: int, arg8: int, arg9: int, arg10: int) -> None: ...

  @staticmethod
  @overload
  def glGetCompressedTexImageARB(arg0: int, arg1: int, arg2: ByteBuffer) -> None: ...

  @staticmethod
  @overload
  def glGetCompressedTexImageARB(arg0: int, arg1: int, arg2: int) -> None: ...

  @staticmethod
  def nglCompressedTexImage1DARB(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int) -> None: ...

  @staticmethod
  def nglCompressedTexImage2DARB(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int, arg7: int) -> None: ...

  @staticmethod
  def nglCompressedTexImage3DARB(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int, arg7: int, arg8: int) -> None: ...

  @staticmethod
  def nglCompressedTexSubImage1DARB(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int) -> None: ...

  @staticmethod
  def nglCompressedTexSubImage2DARB(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int, arg7: int, arg8: int) -> None: ...

  @staticmethod
  def nglCompressedTexSubImage3DARB(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int, arg7: int, arg8: int, arg9: int, arg10: int) -> None: ...

  @staticmethod
  def nglGetCompressedTexImageARB(arg0: int, arg1: int, arg2: int) -> None: ...


class ARBTextureCompressionBPTC:

  GL_COMPRESSED_RGB_BPTC_SIGNED_FLOAT_ARB: int

  GL_COMPRESSED_RGB_BPTC_UNSIGNED_FLOAT_ARB: int

  GL_COMPRESSED_RGBA_BPTC_UNORM_ARB: int

  GL_COMPRESSED_SRGB_ALPHA_BPTC_UNORM_ARB: int


class ARBTextureCompressionRGTC:

  GL_COMPRESSED_RED_RGTC1: int

  GL_COMPRESSED_RG_RGTC2: int

  GL_COMPRESSED_SIGNED_RED_RGTC1: int

  GL_COMPRESSED_SIGNED_RG_RGTC2: int


class ARBTextureCubeMap:

  GL_MAX_CUBE_MAP_TEXTURE_SIZE_ARB: int

  GL_NORMAL_MAP_ARB: int

  GL_PROXY_TEXTURE_CUBE_MAP_ARB: int

  GL_REFLECTION_MAP_ARB: int

  GL_TEXTURE_BINDING_CUBE_MAP_ARB: int

  GL_TEXTURE_CUBE_MAP_ARB: int

  GL_TEXTURE_CUBE_MAP_NEGATIVE_X_ARB: int

  GL_TEXTURE_CUBE_MAP_NEGATIVE_Y_ARB: int

  GL_TEXTURE_CUBE_MAP_NEGATIVE_Z_ARB: int

  GL_TEXTURE_CUBE_MAP_POSITIVE_X_ARB: int

  GL_TEXTURE_CUBE_MAP_POSITIVE_Y_ARB: int

  GL_TEXTURE_CUBE_MAP_POSITIVE_Z_ARB: int


class ARBTextureCubeMapArray:

  GL_INT_SAMPLER_CUBE_MAP_ARRAY_ARB: int

  GL_PROXY_TEXTURE_CUBE_MAP_ARRAY_ARB: int

  GL_SAMPLER_CUBE_MAP_ARRAY_ARB: int

  GL_SAMPLER_CUBE_MAP_ARRAY_SHADOW_ARB: int

  GL_TEXTURE_BINDING_CUBE_MAP_ARRAY_ARB: int

  GL_TEXTURE_CUBE_MAP_ARRAY_ARB: int

  GL_UNSIGNED_INT_SAMPLER_CUBE_MAP_ARRAY_ARB: int


class ARBTextureEnvCombine:

  GL_ADD_SIGNED_ARB: int

  GL_COMBINE_ALPHA_ARB: int

  GL_COMBINE_ARB: int

  GL_COMBINE_RGB_ARB: int

  GL_CONSTANT_ARB: int

  GL_INTERPOLATE_ARB: int

  GL_OPERAND0_ALPHA_ARB: int

  GL_OPERAND0_RGB_ARB: int

  GL_OPERAND1_ALPHA_ARB: int

  GL_OPERAND1_RGB_ARB: int

  GL_OPERAND2_ALPHA_ARB: int

  GL_OPERAND2_RGB_ARB: int

  GL_PREVIOUS_ARB: int

  GL_PRIMARY_COLOR_ARB: int

  GL_RGB_SCALE_ARB: int

  GL_SOURCE0_ALPHA_ARB: int

  GL_SOURCE0_RGB_ARB: int

  GL_SOURCE1_ALPHA_ARB: int

  GL_SOURCE1_RGB_ARB: int

  GL_SOURCE2_ALPHA_ARB: int

  GL_SOURCE2_RGB_ARB: int

  GL_SUBTRACT_ARB: int


class ARBTextureEnvDot3:

  GL_DOT3_RGB_ARB: int

  GL_DOT3_RGBA_ARB: int


class ARBTextureFilterAnisotropic:

  GL_MAX_TEXTURE_MAX_ANISOTROPY: int

  GL_TEXTURE_MAX_ANISOTROPY: int


class ARBTextureFilterMinmax:

  GL_TEXTURE_REDUCTION_MODE_ARB: int

  GL_WEIGHTED_AVERAGE_ARB: int


class ARBTextureFloat:

  GL_ALPHA16F_ARB: int

  GL_ALPHA32F_ARB: int

  GL_INTENSITY16F_ARB: int

  GL_INTENSITY32F_ARB: int

  GL_LUMINANCE16F_ARB: int

  GL_LUMINANCE32F_ARB: int

  GL_LUMINANCE_ALPHA16F_ARB: int

  GL_LUMINANCE_ALPHA32F_ARB: int

  GL_RGB16F_ARB: int

  GL_RGB32F_ARB: int

  GL_RGBA16F_ARB: int

  GL_RGBA32F_ARB: int

  GL_TEXTURE_ALPHA_TYPE_ARB: int

  GL_TEXTURE_BLUE_TYPE_ARB: int

  GL_TEXTURE_DEPTH_TYPE_ARB: int

  GL_TEXTURE_GREEN_TYPE_ARB: int

  GL_TEXTURE_INTENSITY_TYPE_ARB: int

  GL_TEXTURE_LUMINANCE_TYPE_ARB: int

  GL_TEXTURE_RED_TYPE_ARB: int

  GL_UNSIGNED_NORMALIZED_ARB: int


class ARBTextureGather:

  GL_MAX_PROGRAM_TEXTURE_GATHER_COMPONENTS_ARB: int

  GL_MAX_PROGRAM_TEXTURE_GATHER_OFFSET_ARB: int

  GL_MIN_PROGRAM_TEXTURE_GATHER_OFFSET_ARB: int


class ARBTextureMirrorClampToEdge:

  GL_MIRROR_CLAMP_TO_EDGE: int


class ARBTextureMirroredRepeat:

  GL_MIRRORED_REPEAT_ARB: int


class ARBTextureMultisample:

  GL_INT_SAMPLER_2D_MULTISAMPLE: int

  GL_INT_SAMPLER_2D_MULTISAMPLE_ARRAY: int

  GL_MAX_COLOR_TEXTURE_SAMPLES: int

  GL_MAX_DEPTH_TEXTURE_SAMPLES: int

  GL_MAX_INTEGER_SAMPLES: int

  GL_MAX_SAMPLE_MASK_WORDS: int

  GL_PROXY_TEXTURE_2D_MULTISAMPLE: int

  GL_PROXY_TEXTURE_2D_MULTISAMPLE_ARRAY: int

  GL_SAMPLE_MASK: int

  GL_SAMPLE_MASK_VALUE: int

  GL_SAMPLE_POSITION: int

  GL_SAMPLER_2D_MULTISAMPLE: int

  GL_SAMPLER_2D_MULTISAMPLE_ARRAY: int

  GL_TEXTURE_2D_MULTISAMPLE: int

  GL_TEXTURE_2D_MULTISAMPLE_ARRAY: int

  GL_TEXTURE_BINDING_2D_MULTISAMPLE: int

  GL_TEXTURE_BINDING_2D_MULTISAMPLE_ARRAY: int

  GL_TEXTURE_FIXED_SAMPLE_LOCATIONS: int

  GL_TEXTURE_SAMPLES: int

  GL_UNSIGNED_INT_SAMPLER_2D_MULTISAMPLE: int

  GL_UNSIGNED_INT_SAMPLER_2D_MULTISAMPLE_ARRAY: int

  @staticmethod
  def glGetMultisamplef(arg0: int, arg1: int) -> float: ...

  @staticmethod
  @overload
  def glGetMultisamplefv(arg0: int, arg1: int, arg2: list[float]) -> None: ...

  @staticmethod
  @overload
  def glGetMultisamplefv(arg0: int, arg1: int, arg2: FloatBuffer) -> None: ...

  @staticmethod
  def glSampleMaski(arg0: int, arg1: int) -> None: ...

  @staticmethod
  def glTexImage2DMultisample(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: bool) -> None: ...

  @staticmethod
  def glTexImage3DMultisample(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: bool) -> None: ...

  @staticmethod
  def nglGetMultisamplefv(arg0: int, arg1: int, arg2: int) -> None: ...


class ARBTextureRG:

  GL_COMPRESSED_RED: int

  GL_COMPRESSED_RG: int

  GL_R16: int

  GL_R16F: int

  GL_R16I: int

  GL_R16UI: int

  GL_R32F: int

  GL_R32I: int

  GL_R32UI: int

  GL_R8: int

  GL_R8I: int

  GL_R8UI: int

  GL_RG: int

  GL_RG16: int

  GL_RG16F: int

  GL_RG16I: int

  GL_RG16UI: int

  GL_RG32F: int

  GL_RG32I: int

  GL_RG32UI: int

  GL_RG8: int

  GL_RG8I: int

  GL_RG8UI: int

  GL_RG_INTEGER: int


class ARBTextureRGB10_A2UI:

  GL_RGB10_A2UI: int


class ARBTextureRectangle:

  GL_MAX_RECTANGLE_TEXTURE_SIZE_ARB: int

  GL_PROXY_TEXTURE_RECTANGLE_ARB: int

  GL_SAMPLER_2D_RECT_ARB: int

  GL_SAMPLER_2D_RECT_SHADOW_ARB: int

  GL_TEXTURE_BINDING_RECTANGLE_ARB: int

  GL_TEXTURE_RECTANGLE_ARB: int


class ARBTextureStorage:

  GL_TEXTURE_IMMUTABLE_FORMAT: int

  @staticmethod
  def glTexStorage1D(arg0: int, arg1: int, arg2: int, arg3: int) -> None: ...

  @staticmethod
  def glTexStorage2D(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int) -> None: ...

  @staticmethod
  def glTexStorage3D(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int) -> None: ...

  @staticmethod
  def glTextureStorage1DEXT(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int) -> None: ...

  @staticmethod
  def glTextureStorage2DEXT(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int) -> None: ...

  @staticmethod
  def glTextureStorage3DEXT(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int) -> None: ...


class ARBTextureStorageMultisample:

  @staticmethod
  def glTexStorage2DMultisample(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: bool) -> None: ...

  @staticmethod
  def glTexStorage3DMultisample(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: bool) -> None: ...

  @staticmethod
  def glTextureStorage2DMultisampleEXT(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: bool) -> None: ...

  @staticmethod
  def glTextureStorage3DMultisampleEXT(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int, arg7: bool) -> None: ...


class ARBTextureSwizzle:

  GL_TEXTURE_SWIZZLE_A: int

  GL_TEXTURE_SWIZZLE_B: int

  GL_TEXTURE_SWIZZLE_G: int

  GL_TEXTURE_SWIZZLE_R: int

  GL_TEXTURE_SWIZZLE_RGBA: int


class ARBTextureView:

  GL_TEXTURE_IMMUTABLE_LEVELS: int

  GL_TEXTURE_VIEW_MIN_LAYER: int

  GL_TEXTURE_VIEW_MIN_LEVEL: int

  GL_TEXTURE_VIEW_NUM_LAYERS: int

  GL_TEXTURE_VIEW_NUM_LEVELS: int

  @staticmethod
  def glTextureView(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int, arg7: int) -> None: ...


class ARBTimerQuery:

  GL_TIME_ELAPSED: int

  GL_TIMESTAMP: int

  @staticmethod
  def glGetQueryObjecti64(arg0: int, arg1: int) -> int: ...

  @staticmethod
  @overload
  def glGetQueryObjecti64v(arg0: int, arg1: int, arg2: list[int]) -> None: ...

  @staticmethod
  @overload
  def glGetQueryObjecti64v(arg0: int, arg1: int, arg2: LongBuffer) -> None: ...

  @staticmethod
  def glGetQueryObjectui64(arg0: int, arg1: int) -> int: ...

  @staticmethod
  @overload
  def glGetQueryObjectui64v(arg0: int, arg1: int, arg2: list[int]) -> None: ...

  @staticmethod
  @overload
  def glGetQueryObjectui64v(arg0: int, arg1: int, arg2: LongBuffer) -> None: ...

  @staticmethod
  def glQueryCounter(arg0: int, arg1: int) -> None: ...

  @staticmethod
  def nglGetQueryObjecti64v(arg0: int, arg1: int, arg2: int) -> None: ...

  @staticmethod
  def nglGetQueryObjectui64v(arg0: int, arg1: int, arg2: int) -> None: ...


class ARBTransformFeedback2:

  GL_TRANSFORM_FEEDBACK: int

  GL_TRANSFORM_FEEDBACK_BINDING: int

  GL_TRANSFORM_FEEDBACK_BUFFER_ACTIVE: int

  GL_TRANSFORM_FEEDBACK_BUFFER_PAUSED: int

  @staticmethod
  def glBindTransformFeedback(arg0: int, arg1: int) -> None: ...

  @staticmethod
  @overload
  def glDeleteTransformFeedbacks(arg0: list[int]) -> None: ...

  @staticmethod
  @overload
  def glDeleteTransformFeedbacks(arg0: int) -> None: ...

  @staticmethod
  @overload
  def glDeleteTransformFeedbacks(arg0: IntBuffer) -> None: ...

  @staticmethod
  def glDrawTransformFeedback(arg0: int, arg1: int) -> None: ...

  @staticmethod
  @overload
  def glGenTransformFeedbacks() -> int: ...

  @staticmethod
  @overload
  def glGenTransformFeedbacks(arg0: list[int]) -> None: ...

  @staticmethod
  @overload
  def glGenTransformFeedbacks(arg0: IntBuffer) -> None: ...

  @staticmethod
  def glIsTransformFeedback(arg0: int) -> bool: ...

  @staticmethod
  def glPauseTransformFeedback() -> None: ...

  @staticmethod
  def glResumeTransformFeedback() -> None: ...

  @staticmethod
  def nglDeleteTransformFeedbacks(arg0: int, arg1: int) -> None: ...

  @staticmethod
  def nglGenTransformFeedbacks(arg0: int, arg1: int) -> None: ...


class ARBTransformFeedback3:

  GL_MAX_TRANSFORM_FEEDBACK_BUFFERS: int

  GL_MAX_VERTEX_STREAMS: int

  @staticmethod
  def glBeginQueryIndexed(arg0: int, arg1: int, arg2: int) -> None: ...

  @staticmethod
  def glDrawTransformFeedbackStream(arg0: int, arg1: int, arg2: int) -> None: ...

  @staticmethod
  def glEndQueryIndexed(arg0: int, arg1: int) -> None: ...

  @staticmethod
  def glGetQueryIndexedi(arg0: int, arg1: int, arg2: int) -> int: ...

  @staticmethod
  @overload
  def glGetQueryIndexediv(arg0: int, arg1: int, arg2: int, arg3: list[int]) -> None: ...

  @staticmethod
  @overload
  def glGetQueryIndexediv(arg0: int, arg1: int, arg2: int, arg3: IntBuffer) -> None: ...

  @staticmethod
  def nglGetQueryIndexediv(arg0: int, arg1: int, arg2: int, arg3: int) -> None: ...


class ARBTransformFeedbackInstanced:

  @staticmethod
  def glDrawTransformFeedbackInstanced(arg0: int, arg1: int, arg2: int) -> None: ...

  @staticmethod
  def glDrawTransformFeedbackStreamInstanced(arg0: int, arg1: int, arg2: int, arg3: int) -> None: ...


class ARBTransformFeedbackOverflowQuery:

  GL_TRANSFORM_FEEDBACK_OVERFLOW_ARB: int

  GL_TRANSFORM_FEEDBACK_STREAM_OVERFLOW_ARB: int


class ARBTransposeMatrix:

  GL_TRANSPOSE_COLOR_MATRIX_ARB: int

  GL_TRANSPOSE_MODELVIEW_MATRIX_ARB: int

  GL_TRANSPOSE_PROJECTION_MATRIX_ARB: int

  GL_TRANSPOSE_TEXTURE_MATRIX_ARB: int

  @staticmethod
  @overload
  def glLoadTransposeMatrixdARB(arg0: list[float]) -> None: ...

  @staticmethod
  @overload
  def glLoadTransposeMatrixdARB(arg0: DoubleBuffer) -> None: ...

  @staticmethod
  @overload
  def glLoadTransposeMatrixfARB(arg0: list[float]) -> None: ...

  @staticmethod
  @overload
  def glLoadTransposeMatrixfARB(arg0: FloatBuffer) -> None: ...

  @staticmethod
  @overload
  def glMultTransposeMatrixdARB(arg0: list[float]) -> None: ...

  @staticmethod
  @overload
  def glMultTransposeMatrixdARB(arg0: DoubleBuffer) -> None: ...

  @staticmethod
  @overload
  def glMultTransposeMatrixfARB(arg0: list[float]) -> None: ...

  @staticmethod
  @overload
  def glMultTransposeMatrixfARB(arg0: FloatBuffer) -> None: ...

  @staticmethod
  def nglLoadTransposeMatrixdARB(arg0: int) -> None: ...

  @staticmethod
  def nglLoadTransposeMatrixfARB(arg0: int) -> None: ...

  @staticmethod
  def nglMultTransposeMatrixdARB(arg0: int) -> None: ...

  @staticmethod
  def nglMultTransposeMatrixfARB(arg0: int) -> None: ...


class ARBUniformBufferObject:

  GL_ACTIVE_UNIFORM_BLOCK_MAX_NAME_LENGTH: int

  GL_ACTIVE_UNIFORM_BLOCKS: int

  GL_INVALID_INDEX: int

  GL_MAX_COMBINED_FRAGMENT_UNIFORM_COMPONENTS: int

  GL_MAX_COMBINED_GEOMETRY_UNIFORM_COMPONENTS: int

  GL_MAX_COMBINED_UNIFORM_BLOCKS: int

  GL_MAX_COMBINED_VERTEX_UNIFORM_COMPONENTS: int

  GL_MAX_FRAGMENT_UNIFORM_BLOCKS: int

  GL_MAX_GEOMETRY_UNIFORM_BLOCKS: int

  GL_MAX_UNIFORM_BLOCK_SIZE: int

  GL_MAX_UNIFORM_BUFFER_BINDINGS: int

  GL_MAX_VERTEX_UNIFORM_BLOCKS: int

  GL_UNIFORM_ARRAY_STRIDE: int

  GL_UNIFORM_BLOCK_ACTIVE_UNIFORM_INDICES: int

  GL_UNIFORM_BLOCK_ACTIVE_UNIFORMS: int

  GL_UNIFORM_BLOCK_BINDING: int

  GL_UNIFORM_BLOCK_DATA_SIZE: int

  GL_UNIFORM_BLOCK_INDEX: int

  GL_UNIFORM_BLOCK_NAME_LENGTH: int

  GL_UNIFORM_BLOCK_REFERENCED_BY_FRAGMENT_SHADER: int

  GL_UNIFORM_BLOCK_REFERENCED_BY_GEOMETRY_SHADER: int

  GL_UNIFORM_BLOCK_REFERENCED_BY_VERTEX_SHADER: int

  GL_UNIFORM_BUFFER: int

  GL_UNIFORM_BUFFER_BINDING: int

  GL_UNIFORM_BUFFER_OFFSET_ALIGNMENT: int

  GL_UNIFORM_BUFFER_SIZE: int

  GL_UNIFORM_BUFFER_START: int

  GL_UNIFORM_IS_ROW_MAJOR: int

  GL_UNIFORM_MATRIX_STRIDE: int

  GL_UNIFORM_NAME_LENGTH: int

  GL_UNIFORM_OFFSET: int

  GL_UNIFORM_SIZE: int

  GL_UNIFORM_TYPE: int

  @staticmethod
  def glBindBufferBase(arg0: int, arg1: int, arg2: int) -> None: ...

  @staticmethod
  def glBindBufferRange(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int) -> None: ...

  @staticmethod
  @overload
  def glGetActiveUniformBlockName(arg0: int, arg1: int) -> str: ...

  @staticmethod
  @overload
  def glGetActiveUniformBlockName(arg0: int, arg1: int, arg2: int) -> str: ...

  @staticmethod
  @overload
  def glGetActiveUniformBlockName(arg0: int, arg1: int, arg2: list[int], arg3: ByteBuffer) -> None: ...

  @staticmethod
  @overload
  def glGetActiveUniformBlockName(arg0: int, arg1: int, arg2: IntBuffer, arg3: ByteBuffer) -> None: ...

  @staticmethod
  def glGetActiveUniformBlocki(arg0: int, arg1: int, arg2: int) -> int: ...

  @staticmethod
  @overload
  def glGetActiveUniformBlockiv(arg0: int, arg1: int, arg2: int, arg3: list[int]) -> None: ...

  @staticmethod
  @overload
  def glGetActiveUniformBlockiv(arg0: int, arg1: int, arg2: int, arg3: IntBuffer) -> None: ...

  @staticmethod
  @overload
  def glGetActiveUniformName(arg0: int, arg1: int) -> str: ...

  @staticmethod
  @overload
  def glGetActiveUniformName(arg0: int, arg1: int, arg2: int) -> str: ...

  @staticmethod
  @overload
  def glGetActiveUniformName(arg0: int, arg1: int, arg2: list[int], arg3: ByteBuffer) -> None: ...

  @staticmethod
  @overload
  def glGetActiveUniformName(arg0: int, arg1: int, arg2: IntBuffer, arg3: ByteBuffer) -> None: ...

  @staticmethod
  def glGetActiveUniformsi(arg0: int, arg1: int, arg2: int) -> int: ...

  @staticmethod
  @overload
  def glGetActiveUniformsiv(arg0: int, arg1: list[int], arg2: int, arg3: list[int]) -> None: ...

  @staticmethod
  @overload
  def glGetActiveUniformsiv(arg0: int, arg1: IntBuffer, arg2: int, arg3: IntBuffer) -> None: ...

  @staticmethod
  def glGetIntegeri(arg0: int, arg1: int) -> int: ...

  @staticmethod
  @overload
  def glGetIntegeri_v(arg0: int, arg1: int, arg2: list[int]) -> None: ...

  @staticmethod
  @overload
  def glGetIntegeri_v(arg0: int, arg1: int, arg2: IntBuffer) -> None: ...

  @staticmethod
  @overload
  def glGetUniformBlockIndex(arg0: int, arg1: CharSequence) -> int: ...

  @staticmethod
  @overload
  def glGetUniformBlockIndex(arg0: int, arg1: ByteBuffer) -> int: ...

  @staticmethod
  @overload
  def glGetUniformIndices(arg0: int, arg1: CharSequence) -> int: ...

  @staticmethod
  @overload
  def glGetUniformIndices(arg0: int, arg1: list[CharSequence], arg2: IntBuffer) -> None: ...

  @staticmethod
  @overload
  def glGetUniformIndices(arg0: int, arg1: PointerBuffer, arg2: list[int]) -> None: ...

  @staticmethod
  @overload
  def glGetUniformIndices(arg0: int, arg1: PointerBuffer, arg2: IntBuffer) -> None: ...

  @staticmethod
  def glUniformBlockBinding(arg0: int, arg1: int, arg2: int) -> None: ...

  @staticmethod
  def nglGetActiveUniformBlockName(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int) -> None: ...

  @staticmethod
  def nglGetActiveUniformBlockiv(arg0: int, arg1: int, arg2: int, arg3: int) -> None: ...

  @staticmethod
  def nglGetActiveUniformName(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int) -> None: ...

  @staticmethod
  def nglGetActiveUniformsiv(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int) -> None: ...

  @staticmethod
  def nglGetIntegeri_v(arg0: int, arg1: int, arg2: int) -> None: ...

  @staticmethod
  def nglGetUniformBlockIndex(arg0: int, arg1: int) -> int: ...

  @staticmethod
  def nglGetUniformIndices(arg0: int, arg1: int, arg2: int, arg3: int) -> None: ...


class ARBVertexArrayBGRA:

  GL_BGRA: int


class ARBVertexArrayObject:

  GL_VERTEX_ARRAY_BINDING: int

  @staticmethod
  def glBindVertexArray(arg0: int) -> None: ...

  @staticmethod
  @overload
  def glDeleteVertexArrays(arg0: list[int]) -> None: ...

  @staticmethod
  @overload
  def glDeleteVertexArrays(arg0: int) -> None: ...

  @staticmethod
  @overload
  def glDeleteVertexArrays(arg0: IntBuffer) -> None: ...

  @staticmethod
  @overload
  def glGenVertexArrays() -> int: ...

  @staticmethod
  @overload
  def glGenVertexArrays(arg0: list[int]) -> None: ...

  @staticmethod
  @overload
  def glGenVertexArrays(arg0: IntBuffer) -> None: ...

  @staticmethod
  def glIsVertexArray(arg0: int) -> bool: ...

  @staticmethod
  def nglDeleteVertexArrays(arg0: int, arg1: int) -> None: ...

  @staticmethod
  def nglGenVertexArrays(arg0: int, arg1: int) -> None: ...


class ARBVertexAttrib64Bit:

  GL_DOUBLE_MAT2: int

  GL_DOUBLE_MAT2x3: int

  GL_DOUBLE_MAT2x4: int

  GL_DOUBLE_MAT3: int

  GL_DOUBLE_MAT3x2: int

  GL_DOUBLE_MAT3x4: int

  GL_DOUBLE_MAT4: int

  GL_DOUBLE_MAT4x2: int

  GL_DOUBLE_MAT4x3: int

  GL_DOUBLE_VEC2: int

  GL_DOUBLE_VEC3: int

  GL_DOUBLE_VEC4: int

  @staticmethod
  @overload
  def glGetVertexAttribLdv(arg0: int, arg1: int, arg2: list[float]) -> None: ...

  @staticmethod
  @overload
  def glGetVertexAttribLdv(arg0: int, arg1: int, arg2: DoubleBuffer) -> None: ...

  @staticmethod
  def glVertexArrayVertexAttribLOffsetEXT(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int) -> None: ...

  @staticmethod
  def glVertexAttribL1d(arg0: int, arg1: float) -> None: ...

  @staticmethod
  @overload
  def glVertexAttribL1dv(arg0: int, arg1: list[float]) -> None: ...

  @staticmethod
  @overload
  def glVertexAttribL1dv(arg0: int, arg1: DoubleBuffer) -> None: ...

  @staticmethod
  def glVertexAttribL2d(arg0: int, arg1: float, arg2: float) -> None: ...

  @staticmethod
  @overload
  def glVertexAttribL2dv(arg0: int, arg1: list[float]) -> None: ...

  @staticmethod
  @overload
  def glVertexAttribL2dv(arg0: int, arg1: DoubleBuffer) -> None: ...

  @staticmethod
  def glVertexAttribL3d(arg0: int, arg1: float, arg2: float, arg3: float) -> None: ...

  @staticmethod
  @overload
  def glVertexAttribL3dv(arg0: int, arg1: list[float]) -> None: ...

  @staticmethod
  @overload
  def glVertexAttribL3dv(arg0: int, arg1: DoubleBuffer) -> None: ...

  @staticmethod
  def glVertexAttribL4d(arg0: int, arg1: float, arg2: float, arg3: float, arg4: float) -> None: ...

  @staticmethod
  @overload
  def glVertexAttribL4dv(arg0: int, arg1: list[float]) -> None: ...

  @staticmethod
  @overload
  def glVertexAttribL4dv(arg0: int, arg1: DoubleBuffer) -> None: ...

  @staticmethod
  @overload
  def glVertexAttribLPointer(arg0: int, arg1: int, arg2: int, arg3: DoubleBuffer) -> None: ...

  @staticmethod
  @overload
  def glVertexAttribLPointer(arg0: int, arg1: int, arg2: int, arg3: int, arg4: ByteBuffer) -> None: ...

  @staticmethod
  @overload
  def glVertexAttribLPointer(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int) -> None: ...

  @staticmethod
  def nglGetVertexAttribLdv(arg0: int, arg1: int, arg2: int) -> None: ...

  @staticmethod
  def nglVertexAttribL1dv(arg0: int, arg1: int) -> None: ...

  @staticmethod
  def nglVertexAttribL2dv(arg0: int, arg1: int) -> None: ...

  @staticmethod
  def nglVertexAttribL3dv(arg0: int, arg1: int) -> None: ...

  @staticmethod
  def nglVertexAttribL4dv(arg0: int, arg1: int) -> None: ...

  @staticmethod
  def nglVertexAttribLPointer(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int) -> None: ...


class ARBVertexAttribBinding:

  GL_MAX_VERTEX_ATTRIB_BINDINGS: int

  GL_MAX_VERTEX_ATTRIB_RELATIVE_OFFSET: int

  GL_VERTEX_ATTRIB_BINDING: int

  GL_VERTEX_ATTRIB_RELATIVE_OFFSET: int

  GL_VERTEX_BINDING_BUFFER: int

  GL_VERTEX_BINDING_DIVISOR: int

  GL_VERTEX_BINDING_OFFSET: int

  GL_VERTEX_BINDING_STRIDE: int

  @staticmethod
  def glBindVertexBuffer(arg0: int, arg1: int, arg2: int, arg3: int) -> None: ...

  @staticmethod
  def glVertexArrayBindVertexBufferEXT(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int) -> None: ...

  @staticmethod
  def glVertexArrayVertexAttribBindingEXT(arg0: int, arg1: int, arg2: int) -> None: ...

  @staticmethod
  def glVertexArrayVertexAttribFormatEXT(arg0: int, arg1: int, arg2: int, arg3: int, arg4: bool, arg5: int) -> None: ...

  @staticmethod
  def glVertexArrayVertexAttribIFormatEXT(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int) -> None: ...

  @staticmethod
  def glVertexArrayVertexAttribLFormatEXT(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int) -> None: ...

  @staticmethod
  def glVertexArrayVertexBindingDivisorEXT(arg0: int, arg1: int, arg2: int) -> None: ...

  @staticmethod
  def glVertexAttribBinding(arg0: int, arg1: int) -> None: ...

  @staticmethod
  def glVertexAttribFormat(arg0: int, arg1: int, arg2: int, arg3: bool, arg4: int) -> None: ...

  @staticmethod
  def glVertexAttribIFormat(arg0: int, arg1: int, arg2: int, arg3: int) -> None: ...

  @staticmethod
  def glVertexAttribLFormat(arg0: int, arg1: int, arg2: int, arg3: int) -> None: ...

  @staticmethod
  def glVertexBindingDivisor(arg0: int, arg1: int) -> None: ...


class ARBVertexBlend:

  GL_ACTIVE_VERTEX_UNITS_ARB: int

  GL_CURRENT_WEIGHT_ARB: int

  GL_MAX_VERTEX_UNITS_ARB: int

  GL_MODELVIEW0_ARB: int

  GL_MODELVIEW10_ARB: int

  GL_MODELVIEW11_ARB: int

  GL_MODELVIEW12_ARB: int

  GL_MODELVIEW13_ARB: int

  GL_MODELVIEW14_ARB: int

  GL_MODELVIEW15_ARB: int

  GL_MODELVIEW16_ARB: int

  GL_MODELVIEW17_ARB: int

  GL_MODELVIEW18_ARB: int

  GL_MODELVIEW19_ARB: int

  GL_MODELVIEW1_ARB: int

  GL_MODELVIEW20_ARB: int

  GL_MODELVIEW21_ARB: int

  GL_MODELVIEW22_ARB: int

  GL_MODELVIEW23_ARB: int

  GL_MODELVIEW24_ARB: int

  GL_MODELVIEW25_ARB: int

  GL_MODELVIEW26_ARB: int

  GL_MODELVIEW27_ARB: int

  GL_MODELVIEW28_ARB: int

  GL_MODELVIEW29_ARB: int

  GL_MODELVIEW2_ARB: int

  GL_MODELVIEW30_ARB: int

  GL_MODELVIEW31_ARB: int

  GL_MODELVIEW3_ARB: int

  GL_MODELVIEW4_ARB: int

  GL_MODELVIEW5_ARB: int

  GL_MODELVIEW6_ARB: int

  GL_MODELVIEW7_ARB: int

  GL_MODELVIEW8_ARB: int

  GL_MODELVIEW9_ARB: int

  GL_VERTEX_BLEND_ARB: int

  GL_WEIGHT_ARRAY_ARB: int

  GL_WEIGHT_ARRAY_POINTER_ARB: int

  GL_WEIGHT_ARRAY_SIZE_ARB: int

  GL_WEIGHT_ARRAY_STRIDE_ARB: int

  GL_WEIGHT_ARRAY_TYPE_ARB: int

  GL_WEIGHT_SUM_UNITY_ARB: int

  @staticmethod
  def glVertexBlendARB(arg0: int) -> None: ...

  @staticmethod
  @overload
  def glWeightPointerARB(arg0: int, arg1: int, arg2: int, arg3: list[float]) -> None: ...

  @staticmethod
  @overload
  def glWeightPointerARB(arg0: int, arg1: int, arg2: int, arg3: list[int]) -> None: ...

  @staticmethod
  @overload
  def glWeightPointerARB(arg0: int, arg1: int, arg2: int, arg3: list[int]) -> None: ...

  @staticmethod
  @overload
  def glWeightPointerARB(arg0: int, arg1: int, arg2: int, arg3: ByteBuffer) -> None: ...

  @staticmethod
  @overload
  def glWeightPointerARB(arg0: int, arg1: int, arg2: int, arg3: FloatBuffer) -> None: ...

  @staticmethod
  @overload
  def glWeightPointerARB(arg0: int, arg1: int, arg2: int, arg3: IntBuffer) -> None: ...

  @staticmethod
  @overload
  def glWeightPointerARB(arg0: int, arg1: int, arg2: int, arg3: ShortBuffer) -> None: ...

  @staticmethod
  @overload
  def glWeightPointerARB(arg0: int, arg1: int, arg2: int, arg3: int) -> None: ...

  @staticmethod
  def glWeightbvARB(arg0: ByteBuffer) -> None: ...

  @staticmethod
  @overload
  def glWeightdvARB(arg0: list[float]) -> None: ...

  @staticmethod
  @overload
  def glWeightdvARB(arg0: DoubleBuffer) -> None: ...

  @staticmethod
  @overload
  def glWeightfvARB(arg0: list[float]) -> None: ...

  @staticmethod
  @overload
  def glWeightfvARB(arg0: FloatBuffer) -> None: ...

  @staticmethod
  @overload
  def glWeightivARB(arg0: list[int]) -> None: ...

  @staticmethod
  @overload
  def glWeightivARB(arg0: IntBuffer) -> None: ...

  @staticmethod
  @overload
  def glWeightsvARB(arg0: list[int]) -> None: ...

  @staticmethod
  @overload
  def glWeightsvARB(arg0: ShortBuffer) -> None: ...

  @staticmethod
  def glWeightubvARB(arg0: ByteBuffer) -> None: ...

  @staticmethod
  @overload
  def glWeightuivARB(arg0: list[int]) -> None: ...

  @staticmethod
  @overload
  def glWeightuivARB(arg0: IntBuffer) -> None: ...

  @staticmethod
  @overload
  def glWeightusvARB(arg0: list[int]) -> None: ...

  @staticmethod
  @overload
  def glWeightusvARB(arg0: ShortBuffer) -> None: ...

  @staticmethod
  def nglWeightPointerARB(arg0: int, arg1: int, arg2: int, arg3: int) -> None: ...

  @staticmethod
  def nglWeightbvARB(arg0: int, arg1: int) -> None: ...

  @staticmethod
  def nglWeightdvARB(arg0: int, arg1: int) -> None: ...

  @staticmethod
  def nglWeightfvARB(arg0: int, arg1: int) -> None: ...

  @staticmethod
  def nglWeightivARB(arg0: int, arg1: int) -> None: ...

  @staticmethod
  def nglWeightsvARB(arg0: int, arg1: int) -> None: ...

  @staticmethod
  def nglWeightubvARB(arg0: int, arg1: int) -> None: ...

  @staticmethod
  def nglWeightuivARB(arg0: int, arg1: int) -> None: ...

  @staticmethod
  def nglWeightusvARB(arg0: int, arg1: int) -> None: ...


class ARBVertexBufferObject:

  GL_ARRAY_BUFFER_ARB: int

  GL_ARRAY_BUFFER_BINDING_ARB: int

  GL_BUFFER_ACCESS_ARB: int

  GL_BUFFER_MAP_POINTER_ARB: int

  GL_BUFFER_MAPPED_ARB: int

  GL_BUFFER_SIZE_ARB: int

  GL_BUFFER_USAGE_ARB: int

  GL_COLOR_ARRAY_BUFFER_BINDING_ARB: int

  GL_DYNAMIC_COPY_ARB: int

  GL_DYNAMIC_DRAW_ARB: int

  GL_DYNAMIC_READ_ARB: int

  GL_EDGE_FLAG_ARRAY_BUFFER_BINDING_ARB: int

  GL_ELEMENT_ARRAY_BUFFER_ARB: int

  GL_ELEMENT_ARRAY_BUFFER_BINDING_ARB: int

  GL_FOG_COORDINATE_ARRAY_BUFFER_BINDING_ARB: int

  GL_INDEX_ARRAY_BUFFER_BINDING_ARB: int

  GL_NORMAL_ARRAY_BUFFER_BINDING_ARB: int

  GL_READ_ONLY_ARB: int

  GL_READ_WRITE_ARB: int

  GL_SECONDARY_COLOR_ARRAY_BUFFER_BINDING_ARB: int

  GL_STATIC_COPY_ARB: int

  GL_STATIC_DRAW_ARB: int

  GL_STATIC_READ_ARB: int

  GL_STREAM_COPY_ARB: int

  GL_STREAM_DRAW_ARB: int

  GL_STREAM_READ_ARB: int

  GL_TEXTURE_COORD_ARRAY_BUFFER_BINDING_ARB: int

  GL_VERTEX_ARRAY_BUFFER_BINDING_ARB: int

  GL_VERTEX_ATTRIB_ARRAY_BUFFER_BINDING_ARB: int

  GL_WEIGHT_ARRAY_BUFFER_BINDING_ARB: int

  GL_WRITE_ONLY_ARB: int

  @staticmethod
  def glBindBufferARB(arg0: int, arg1: int) -> None: ...

  @staticmethod
  @overload
  def glBufferDataARB(arg0: int, arg1: list[float], arg2: int) -> None: ...

  @staticmethod
  @overload
  def glBufferDataARB(arg0: int, arg1: list[float], arg2: int) -> None: ...

  @staticmethod
  @overload
  def glBufferDataARB(arg0: int, arg1: list[int], arg2: int) -> None: ...

  @staticmethod
  @overload
  def glBufferDataARB(arg0: int, arg1: list[int], arg2: int) -> None: ...

  @staticmethod
  @overload
  def glBufferDataARB(arg0: int, arg1: ByteBuffer, arg2: int) -> None: ...

  @staticmethod
  @overload
  def glBufferDataARB(arg0: int, arg1: DoubleBuffer, arg2: int) -> None: ...

  @staticmethod
  @overload
  def glBufferDataARB(arg0: int, arg1: FloatBuffer, arg2: int) -> None: ...

  @staticmethod
  @overload
  def glBufferDataARB(arg0: int, arg1: IntBuffer, arg2: int) -> None: ...

  @staticmethod
  @overload
  def glBufferDataARB(arg0: int, arg1: ShortBuffer, arg2: int) -> None: ...

  @staticmethod
  @overload
  def glBufferDataARB(arg0: int, arg1: int, arg2: int) -> None: ...

  @staticmethod
  @overload
  def glBufferSubDataARB(arg0: int, arg1: int, arg2: list[float]) -> None: ...

  @staticmethod
  @overload
  def glBufferSubDataARB(arg0: int, arg1: int, arg2: list[float]) -> None: ...

  @staticmethod
  @overload
  def glBufferSubDataARB(arg0: int, arg1: int, arg2: list[int]) -> None: ...

  @staticmethod
  @overload
  def glBufferSubDataARB(arg0: int, arg1: int, arg2: list[int]) -> None: ...

  @staticmethod
  @overload
  def glBufferSubDataARB(arg0: int, arg1: int, arg2: ByteBuffer) -> None: ...

  @staticmethod
  @overload
  def glBufferSubDataARB(arg0: int, arg1: int, arg2: DoubleBuffer) -> None: ...

  @staticmethod
  @overload
  def glBufferSubDataARB(arg0: int, arg1: int, arg2: FloatBuffer) -> None: ...

  @staticmethod
  @overload
  def glBufferSubDataARB(arg0: int, arg1: int, arg2: IntBuffer) -> None: ...

  @staticmethod
  @overload
  def glBufferSubDataARB(arg0: int, arg1: int, arg2: ShortBuffer) -> None: ...

  @staticmethod
  @overload
  def glDeleteBuffersARB(arg0: list[int]) -> None: ...

  @staticmethod
  @overload
  def glDeleteBuffersARB(arg0: int) -> None: ...

  @staticmethod
  @overload
  def glDeleteBuffersARB(arg0: IntBuffer) -> None: ...

  @staticmethod
  @overload
  def glGenBuffersARB() -> int: ...

  @staticmethod
  @overload
  def glGenBuffersARB(arg0: list[int]) -> None: ...

  @staticmethod
  @overload
  def glGenBuffersARB(arg0: IntBuffer) -> None: ...

  @staticmethod
  def glGetBufferParameteriARB(arg0: int, arg1: int) -> int: ...

  @staticmethod
  @overload
  def glGetBufferParameterivARB(arg0: int, arg1: int, arg2: list[int]) -> None: ...

  @staticmethod
  @overload
  def glGetBufferParameterivARB(arg0: int, arg1: int, arg2: IntBuffer) -> None: ...

  @staticmethod
  def glGetBufferPointerARB(arg0: int, arg1: int) -> int: ...

  @staticmethod
  def glGetBufferPointervARB(arg0: int, arg1: int, arg2: PointerBuffer) -> None: ...

  @staticmethod
  @overload
  def glGetBufferSubDataARB(arg0: int, arg1: int, arg2: list[float]) -> None: ...

  @staticmethod
  @overload
  def glGetBufferSubDataARB(arg0: int, arg1: int, arg2: list[float]) -> None: ...

  @staticmethod
  @overload
  def glGetBufferSubDataARB(arg0: int, arg1: int, arg2: list[int]) -> None: ...

  @staticmethod
  @overload
  def glGetBufferSubDataARB(arg0: int, arg1: int, arg2: list[int]) -> None: ...

  @staticmethod
  @overload
  def glGetBufferSubDataARB(arg0: int, arg1: int, arg2: ByteBuffer) -> None: ...

  @staticmethod
  @overload
  def glGetBufferSubDataARB(arg0: int, arg1: int, arg2: DoubleBuffer) -> None: ...

  @staticmethod
  @overload
  def glGetBufferSubDataARB(arg0: int, arg1: int, arg2: FloatBuffer) -> None: ...

  @staticmethod
  @overload
  def glGetBufferSubDataARB(arg0: int, arg1: int, arg2: IntBuffer) -> None: ...

  @staticmethod
  @overload
  def glGetBufferSubDataARB(arg0: int, arg1: int, arg2: ShortBuffer) -> None: ...

  @staticmethod
  def glIsBufferARB(arg0: int) -> bool: ...

  @staticmethod
  @overload
  def glMapBufferARB(arg0: int, arg1: int) -> ByteBuffer: ...

  @staticmethod
  @overload
  def glMapBufferARB(arg0: int, arg1: int, arg2: ByteBuffer) -> ByteBuffer: ...

  @staticmethod
  @overload
  def glMapBufferARB(arg0: int, arg1: int, arg2: int, arg3: ByteBuffer) -> ByteBuffer: ...

  @staticmethod
  def glUnmapBufferARB(arg0: int) -> bool: ...

  @staticmethod
  def nglBufferDataARB(arg0: int, arg1: int, arg2: int, arg3: int) -> None: ...

  @staticmethod
  def nglBufferSubDataARB(arg0: int, arg1: int, arg2: int, arg3: int) -> None: ...

  @staticmethod
  def nglDeleteBuffersARB(arg0: int, arg1: int) -> None: ...

  @staticmethod
  def nglGenBuffersARB(arg0: int, arg1: int) -> None: ...

  @staticmethod
  def nglGetBufferParameterivARB(arg0: int, arg1: int, arg2: int) -> None: ...

  @staticmethod
  def nglGetBufferPointervARB(arg0: int, arg1: int, arg2: int) -> None: ...

  @staticmethod
  def nglGetBufferSubDataARB(arg0: int, arg1: int, arg2: int, arg3: int) -> None: ...

  @staticmethod
  def nglMapBufferARB(arg0: int, arg1: int) -> int: ...


class ARBVertexProgram:

  GL_COLOR_SUM_ARB: int

  GL_CURRENT_MATRIX_ARB: int

  GL_CURRENT_MATRIX_STACK_DEPTH_ARB: int

  GL_CURRENT_VERTEX_ATTRIB_ARB: int

  GL_MATRIX0_ARB: int

  GL_MATRIX10_ARB: int

  GL_MATRIX11_ARB: int

  GL_MATRIX12_ARB: int

  GL_MATRIX13_ARB: int

  GL_MATRIX14_ARB: int

  GL_MATRIX15_ARB: int

  GL_MATRIX16_ARB: int

  GL_MATRIX17_ARB: int

  GL_MATRIX18_ARB: int

  GL_MATRIX19_ARB: int

  GL_MATRIX1_ARB: int

  GL_MATRIX20_ARB: int

  GL_MATRIX21_ARB: int

  GL_MATRIX22_ARB: int

  GL_MATRIX23_ARB: int

  GL_MATRIX24_ARB: int

  GL_MATRIX25_ARB: int

  GL_MATRIX26_ARB: int

  GL_MATRIX27_ARB: int

  GL_MATRIX28_ARB: int

  GL_MATRIX29_ARB: int

  GL_MATRIX2_ARB: int

  GL_MATRIX30_ARB: int

  GL_MATRIX31_ARB: int

  GL_MATRIX3_ARB: int

  GL_MATRIX4_ARB: int

  GL_MATRIX5_ARB: int

  GL_MATRIX6_ARB: int

  GL_MATRIX7_ARB: int

  GL_MATRIX8_ARB: int

  GL_MATRIX9_ARB: int

  GL_MAX_PROGRAM_ADDRESS_REGISTERS_ARB: int

  GL_MAX_PROGRAM_ATTRIBS_ARB: int

  GL_MAX_PROGRAM_ENV_PARAMETERS_ARB: int

  GL_MAX_PROGRAM_INSTRUCTIONS_ARB: int

  GL_MAX_PROGRAM_LOCAL_PARAMETERS_ARB: int

  GL_MAX_PROGRAM_MATRICES_ARB: int

  GL_MAX_PROGRAM_MATRIX_STACK_DEPTH_ARB: int

  GL_MAX_PROGRAM_NATIVE_ADDRESS_REGISTERS_ARB: int

  GL_MAX_PROGRAM_NATIVE_ATTRIBS_ARB: int

  GL_MAX_PROGRAM_NATIVE_INSTRUCTIONS_ARB: int

  GL_MAX_PROGRAM_NATIVE_PARAMETERS_ARB: int

  GL_MAX_PROGRAM_NATIVE_TEMPORARIES_ARB: int

  GL_MAX_PROGRAM_PARAMETERS_ARB: int

  GL_MAX_PROGRAM_TEMPORARIES_ARB: int

  GL_MAX_VERTEX_ATTRIBS_ARB: int

  GL_PROGRAM_ADDRESS_REGISTERS_ARB: int

  GL_PROGRAM_ATTRIBS_ARB: int

  GL_PROGRAM_BINDING_ARB: int

  GL_PROGRAM_ERROR_POSITION_ARB: int

  GL_PROGRAM_ERROR_STRING_ARB: int

  GL_PROGRAM_FORMAT_ARB: int

  GL_PROGRAM_FORMAT_ASCII_ARB: int

  GL_PROGRAM_INSTRUCTIONS_ARB: int

  GL_PROGRAM_LENGTH_ARB: int

  GL_PROGRAM_NATIVE_ADDRESS_REGISTERS_ARB: int

  GL_PROGRAM_NATIVE_ATTRIBS_ARB: int

  GL_PROGRAM_NATIVE_INSTRUCTIONS_ARB: int

  GL_PROGRAM_NATIVE_PARAMETERS_ARB: int

  GL_PROGRAM_NATIVE_TEMPORARIES_ARB: int

  GL_PROGRAM_PARAMETERS_ARB: int

  GL_PROGRAM_STRING_ARB: int

  GL_PROGRAM_TEMPORARIES_ARB: int

  GL_PROGRAM_UNDER_NATIVE_LIMITS_ARB: int

  GL_TRANSPOSE_CURRENT_MATRIX_ARB: int

  GL_VERTEX_ATTRIB_ARRAY_ENABLED_ARB: int

  GL_VERTEX_ATTRIB_ARRAY_NORMALIZED_ARB: int

  GL_VERTEX_ATTRIB_ARRAY_POINTER_ARB: int

  GL_VERTEX_ATTRIB_ARRAY_SIZE_ARB: int

  GL_VERTEX_ATTRIB_ARRAY_STRIDE_ARB: int

  GL_VERTEX_ATTRIB_ARRAY_TYPE_ARB: int

  GL_VERTEX_PROGRAM_ARB: int

  GL_VERTEX_PROGRAM_POINT_SIZE_ARB: int

  GL_VERTEX_PROGRAM_TWO_SIDE_ARB: int

  @staticmethod
  def glBindProgramARB(arg0: int, arg1: int) -> None: ...

  @staticmethod
  @overload
  def glDeleteProgramsARB(arg0: list[int]) -> None: ...

  @staticmethod
  @overload
  def glDeleteProgramsARB(arg0: IntBuffer) -> None: ...

  @staticmethod
  def glDisableVertexAttribArrayARB(arg0: int) -> None: ...

  @staticmethod
  def glEnableVertexAttribArrayARB(arg0: int) -> None: ...

  @staticmethod
  @overload
  def glGenProgramsARB() -> int: ...

  @staticmethod
  @overload
  def glGenProgramsARB(arg0: list[int]) -> None: ...

  @staticmethod
  @overload
  def glGenProgramsARB(arg0: IntBuffer) -> None: ...

  @staticmethod
  @overload
  def glGetProgramEnvParameterdvARB(arg0: int, arg1: int, arg2: list[float]) -> None: ...

  @staticmethod
  @overload
  def glGetProgramEnvParameterdvARB(arg0: int, arg1: int, arg2: DoubleBuffer) -> None: ...

  @staticmethod
  @overload
  def glGetProgramEnvParameterfvARB(arg0: int, arg1: int, arg2: list[float]) -> None: ...

  @staticmethod
  @overload
  def glGetProgramEnvParameterfvARB(arg0: int, arg1: int, arg2: FloatBuffer) -> None: ...

  @staticmethod
  @overload
  def glGetProgramLocalParameterdvARB(arg0: int, arg1: int, arg2: list[float]) -> None: ...

  @staticmethod
  @overload
  def glGetProgramLocalParameterdvARB(arg0: int, arg1: int, arg2: DoubleBuffer) -> None: ...

  @staticmethod
  @overload
  def glGetProgramLocalParameterfvARB(arg0: int, arg1: int, arg2: list[float]) -> None: ...

  @staticmethod
  @overload
  def glGetProgramLocalParameterfvARB(arg0: int, arg1: int, arg2: FloatBuffer) -> None: ...

  @staticmethod
  def glGetProgramStringARB(arg0: int, arg1: int, arg2: ByteBuffer) -> None: ...

  @staticmethod
  def glGetProgramiARB(arg0: int, arg1: int) -> int: ...

  @staticmethod
  @overload
  def glGetProgramivARB(arg0: int, arg1: int, arg2: list[int]) -> None: ...

  @staticmethod
  @overload
  def glGetProgramivARB(arg0: int, arg1: int, arg2: IntBuffer) -> None: ...

  @staticmethod
  def glGetVertexAttribPointerARB(arg0: int, arg1: int) -> int: ...

  @staticmethod
  def glGetVertexAttribPointervARB(arg0: int, arg1: int, arg2: PointerBuffer) -> None: ...

  @staticmethod
  @overload
  def glGetVertexAttribdvARB(arg0: int, arg1: int, arg2: list[float]) -> None: ...

  @staticmethod
  @overload
  def glGetVertexAttribdvARB(arg0: int, arg1: int, arg2: DoubleBuffer) -> None: ...

  @staticmethod
  @overload
  def glGetVertexAttribfvARB(arg0: int, arg1: int, arg2: list[float]) -> None: ...

  @staticmethod
  @overload
  def glGetVertexAttribfvARB(arg0: int, arg1: int, arg2: FloatBuffer) -> None: ...

  @staticmethod
  def glGetVertexAttribiARB(arg0: int, arg1: int) -> int: ...

  @staticmethod
  @overload
  def glGetVertexAttribivARB(arg0: int, arg1: int, arg2: list[int]) -> None: ...

  @staticmethod
  @overload
  def glGetVertexAttribivARB(arg0: int, arg1: int, arg2: IntBuffer) -> None: ...

  @staticmethod
  def glIsProgramARB(arg0: int) -> bool: ...

  @staticmethod
  def glProgramEnvParameter4dARB(arg0: int, arg1: int, arg2: float, arg3: float, arg4: float, arg5: float) -> None: ...

  @staticmethod
  @overload
  def glProgramEnvParameter4dvARB(arg0: int, arg1: int, arg2: list[float]) -> None: ...

  @staticmethod
  @overload
  def glProgramEnvParameter4dvARB(arg0: int, arg1: int, arg2: DoubleBuffer) -> None: ...

  @staticmethod
  def glProgramEnvParameter4fARB(arg0: int, arg1: int, arg2: float, arg3: float, arg4: float, arg5: float) -> None: ...

  @staticmethod
  @overload
  def glProgramEnvParameter4fvARB(arg0: int, arg1: int, arg2: list[float]) -> None: ...

  @staticmethod
  @overload
  def glProgramEnvParameter4fvARB(arg0: int, arg1: int, arg2: FloatBuffer) -> None: ...

  @staticmethod
  def glProgramLocalParameter4dARB(arg0: int, arg1: int, arg2: float, arg3: float, arg4: float, arg5: float) -> None: ...

  @staticmethod
  @overload
  def glProgramLocalParameter4dvARB(arg0: int, arg1: int, arg2: list[float]) -> None: ...

  @staticmethod
  @overload
  def glProgramLocalParameter4dvARB(arg0: int, arg1: int, arg2: DoubleBuffer) -> None: ...

  @staticmethod
  def glProgramLocalParameter4fARB(arg0: int, arg1: int, arg2: float, arg3: float, arg4: float, arg5: float) -> None: ...

  @staticmethod
  @overload
  def glProgramLocalParameter4fvARB(arg0: int, arg1: int, arg2: list[float]) -> None: ...

  @staticmethod
  @overload
  def glProgramLocalParameter4fvARB(arg0: int, arg1: int, arg2: FloatBuffer) -> None: ...

  @staticmethod
  def glProgramStringARB(arg0: int, arg1: int, arg2: ByteBuffer) -> None: ...

  @staticmethod
  def glVertexAttrib1dARB(arg0: int, arg1: float) -> None: ...

  @staticmethod
  @overload
  def glVertexAttrib1dvARB(arg0: int, arg1: list[float]) -> None: ...

  @staticmethod
  @overload
  def glVertexAttrib1dvARB(arg0: int, arg1: DoubleBuffer) -> None: ...

  @staticmethod
  def glVertexAttrib1fARB(arg0: int, arg1: float) -> None: ...

  @staticmethod
  @overload
  def glVertexAttrib1fvARB(arg0: int, arg1: list[float]) -> None: ...

  @staticmethod
  @overload
  def glVertexAttrib1fvARB(arg0: int, arg1: FloatBuffer) -> None: ...

  @staticmethod
  def glVertexAttrib1sARB(arg0: int, arg1: int) -> None: ...

  @staticmethod
  @overload
  def glVertexAttrib1svARB(arg0: int, arg1: list[int]) -> None: ...

  @staticmethod
  @overload
  def glVertexAttrib1svARB(arg0: int, arg1: ShortBuffer) -> None: ...

  @staticmethod
  def glVertexAttrib2dARB(arg0: int, arg1: float, arg2: float) -> None: ...

  @staticmethod
  @overload
  def glVertexAttrib2dvARB(arg0: int, arg1: list[float]) -> None: ...

  @staticmethod
  @overload
  def glVertexAttrib2dvARB(arg0: int, arg1: DoubleBuffer) -> None: ...

  @staticmethod
  def glVertexAttrib2fARB(arg0: int, arg1: float, arg2: float) -> None: ...

  @staticmethod
  @overload
  def glVertexAttrib2fvARB(arg0: int, arg1: list[float]) -> None: ...

  @staticmethod
  @overload
  def glVertexAttrib2fvARB(arg0: int, arg1: FloatBuffer) -> None: ...

  @staticmethod
  def glVertexAttrib2sARB(arg0: int, arg1: int, arg2: int) -> None: ...

  @staticmethod
  @overload
  def glVertexAttrib2svARB(arg0: int, arg1: list[int]) -> None: ...

  @staticmethod
  @overload
  def glVertexAttrib2svARB(arg0: int, arg1: ShortBuffer) -> None: ...

  @staticmethod
  def glVertexAttrib3dARB(arg0: int, arg1: float, arg2: float, arg3: float) -> None: ...

  @staticmethod
  @overload
  def glVertexAttrib3dvARB(arg0: int, arg1: list[float]) -> None: ...

  @staticmethod
  @overload
  def glVertexAttrib3dvARB(arg0: int, arg1: DoubleBuffer) -> None: ...

  @staticmethod
  def glVertexAttrib3fARB(arg0: int, arg1: float, arg2: float, arg3: float) -> None: ...

  @staticmethod
  @overload
  def glVertexAttrib3fvARB(arg0: int, arg1: list[float]) -> None: ...

  @staticmethod
  @overload
  def glVertexAttrib3fvARB(arg0: int, arg1: FloatBuffer) -> None: ...

  @staticmethod
  def glVertexAttrib3sARB(arg0: int, arg1: int, arg2: int, arg3: int) -> None: ...

  @staticmethod
  @overload
  def glVertexAttrib3svARB(arg0: int, arg1: list[int]) -> None: ...

  @staticmethod
  @overload
  def glVertexAttrib3svARB(arg0: int, arg1: ShortBuffer) -> None: ...

  @staticmethod
  def glVertexAttrib4NbvARB(arg0: int, arg1: ByteBuffer) -> None: ...

  @staticmethod
  @overload
  def glVertexAttrib4NivARB(arg0: int, arg1: list[int]) -> None: ...

  @staticmethod
  @overload
  def glVertexAttrib4NivARB(arg0: int, arg1: IntBuffer) -> None: ...

  @staticmethod
  @overload
  def glVertexAttrib4NsvARB(arg0: int, arg1: list[int]) -> None: ...

  @staticmethod
  @overload
  def glVertexAttrib4NsvARB(arg0: int, arg1: ShortBuffer) -> None: ...

  @staticmethod
  def glVertexAttrib4NubARB(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int) -> None: ...

  @staticmethod
  def glVertexAttrib4NubvARB(arg0: int, arg1: ByteBuffer) -> None: ...

  @staticmethod
  @overload
  def glVertexAttrib4NuivARB(arg0: int, arg1: list[int]) -> None: ...

  @staticmethod
  @overload
  def glVertexAttrib4NuivARB(arg0: int, arg1: IntBuffer) -> None: ...

  @staticmethod
  @overload
  def glVertexAttrib4NusvARB(arg0: int, arg1: list[int]) -> None: ...

  @staticmethod
  @overload
  def glVertexAttrib4NusvARB(arg0: int, arg1: ShortBuffer) -> None: ...

  @staticmethod
  def glVertexAttrib4bvARB(arg0: int, arg1: ByteBuffer) -> None: ...

  @staticmethod
  def glVertexAttrib4dARB(arg0: int, arg1: float, arg2: float, arg3: float, arg4: float) -> None: ...

  @staticmethod
  @overload
  def glVertexAttrib4dvARB(arg0: int, arg1: list[float]) -> None: ...

  @staticmethod
  @overload
  def glVertexAttrib4dvARB(arg0: int, arg1: DoubleBuffer) -> None: ...

  @staticmethod
  def glVertexAttrib4fARB(arg0: int, arg1: float, arg2: float, arg3: float, arg4: float) -> None: ...

  @staticmethod
  @overload
  def glVertexAttrib4fvARB(arg0: int, arg1: list[float]) -> None: ...

  @staticmethod
  @overload
  def glVertexAttrib4fvARB(arg0: int, arg1: FloatBuffer) -> None: ...

  @staticmethod
  @overload
  def glVertexAttrib4ivARB(arg0: int, arg1: list[int]) -> None: ...

  @staticmethod
  @overload
  def glVertexAttrib4ivARB(arg0: int, arg1: IntBuffer) -> None: ...

  @staticmethod
  def glVertexAttrib4sARB(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int) -> None: ...

  @staticmethod
  @overload
  def glVertexAttrib4svARB(arg0: int, arg1: list[int]) -> None: ...

  @staticmethod
  @overload
  def glVertexAttrib4svARB(arg0: int, arg1: ShortBuffer) -> None: ...

  @staticmethod
  def glVertexAttrib4ubvARB(arg0: int, arg1: ByteBuffer) -> None: ...

  @staticmethod
  @overload
  def glVertexAttrib4uivARB(arg0: int, arg1: list[int]) -> None: ...

  @staticmethod
  @overload
  def glVertexAttrib4uivARB(arg0: int, arg1: IntBuffer) -> None: ...

  @staticmethod
  @overload
  def glVertexAttrib4usvARB(arg0: int, arg1: list[int]) -> None: ...

  @staticmethod
  @overload
  def glVertexAttrib4usvARB(arg0: int, arg1: ShortBuffer) -> None: ...

  @staticmethod
  @overload
  def glVertexAttribPointerARB(arg0: int, arg1: int, arg2: int, arg3: bool, arg4: int, arg5: list[float]) -> None: ...

  @staticmethod
  @overload
  def glVertexAttribPointerARB(arg0: int, arg1: int, arg2: int, arg3: bool, arg4: int, arg5: list[int]) -> None: ...

  @staticmethod
  @overload
  def glVertexAttribPointerARB(arg0: int, arg1: int, arg2: int, arg3: bool, arg4: int, arg5: list[int]) -> None: ...

  @staticmethod
  @overload
  def glVertexAttribPointerARB(arg0: int, arg1: int, arg2: int, arg3: bool, arg4: int, arg5: ByteBuffer) -> None: ...

  @staticmethod
  @overload
  def glVertexAttribPointerARB(arg0: int, arg1: int, arg2: int, arg3: bool, arg4: int, arg5: FloatBuffer) -> None: ...

  @staticmethod
  @overload
  def glVertexAttribPointerARB(arg0: int, arg1: int, arg2: int, arg3: bool, arg4: int, arg5: IntBuffer) -> None: ...

  @staticmethod
  @overload
  def glVertexAttribPointerARB(arg0: int, arg1: int, arg2: int, arg3: bool, arg4: int, arg5: ShortBuffer) -> None: ...

  @staticmethod
  @overload
  def glVertexAttribPointerARB(arg0: int, arg1: int, arg2: int, arg3: bool, arg4: int, arg5: int) -> None: ...

  @staticmethod
  def nglDeleteProgramsARB(arg0: int, arg1: int) -> None: ...

  @staticmethod
  def nglGenProgramsARB(arg0: int, arg1: int) -> None: ...

  @staticmethod
  def nglGetProgramEnvParameterdvARB(arg0: int, arg1: int, arg2: int) -> None: ...

  @staticmethod
  def nglGetProgramEnvParameterfvARB(arg0: int, arg1: int, arg2: int) -> None: ...

  @staticmethod
  def nglGetProgramLocalParameterdvARB(arg0: int, arg1: int, arg2: int) -> None: ...

  @staticmethod
  def nglGetProgramLocalParameterfvARB(arg0: int, arg1: int, arg2: int) -> None: ...

  @staticmethod
  def nglGetProgramStringARB(arg0: int, arg1: int, arg2: int) -> None: ...

  @staticmethod
  def nglGetProgramivARB(arg0: int, arg1: int, arg2: int) -> None: ...

  @staticmethod
  def nglGetVertexAttribPointervARB(arg0: int, arg1: int, arg2: int) -> None: ...

  @staticmethod
  def nglGetVertexAttribdvARB(arg0: int, arg1: int, arg2: int) -> None: ...

  @staticmethod
  def nglGetVertexAttribfvARB(arg0: int, arg1: int, arg2: int) -> None: ...

  @staticmethod
  def nglGetVertexAttribivARB(arg0: int, arg1: int, arg2: int) -> None: ...

  @staticmethod
  def nglProgramEnvParameter4dvARB(arg0: int, arg1: int, arg2: int) -> None: ...

  @staticmethod
  def nglProgramEnvParameter4fvARB(arg0: int, arg1: int, arg2: int) -> None: ...

  @staticmethod
  def nglProgramLocalParameter4dvARB(arg0: int, arg1: int, arg2: int) -> None: ...

  @staticmethod
  def nglProgramLocalParameter4fvARB(arg0: int, arg1: int, arg2: int) -> None: ...

  @staticmethod
  def nglProgramStringARB(arg0: int, arg1: int, arg2: int, arg3: int) -> None: ...

  @staticmethod
  def nglVertexAttrib1dvARB(arg0: int, arg1: int) -> None: ...

  @staticmethod
  def nglVertexAttrib1fvARB(arg0: int, arg1: int) -> None: ...

  @staticmethod
  def nglVertexAttrib1svARB(arg0: int, arg1: int) -> None: ...

  @staticmethod
  def nglVertexAttrib2dvARB(arg0: int, arg1: int) -> None: ...

  @staticmethod
  def nglVertexAttrib2fvARB(arg0: int, arg1: int) -> None: ...

  @staticmethod
  def nglVertexAttrib2svARB(arg0: int, arg1: int) -> None: ...

  @staticmethod
  def nglVertexAttrib3dvARB(arg0: int, arg1: int) -> None: ...

  @staticmethod
  def nglVertexAttrib3fvARB(arg0: int, arg1: int) -> None: ...

  @staticmethod
  def nglVertexAttrib3svARB(arg0: int, arg1: int) -> None: ...

  @staticmethod
  def nglVertexAttrib4NbvARB(arg0: int, arg1: int) -> None: ...

  @staticmethod
  def nglVertexAttrib4NivARB(arg0: int, arg1: int) -> None: ...

  @staticmethod
  def nglVertexAttrib4NsvARB(arg0: int, arg1: int) -> None: ...

  @staticmethod
  def nglVertexAttrib4NubvARB(arg0: int, arg1: int) -> None: ...

  @staticmethod
  def nglVertexAttrib4NuivARB(arg0: int, arg1: int) -> None: ...

  @staticmethod
  def nglVertexAttrib4NusvARB(arg0: int, arg1: int) -> None: ...

  @staticmethod
  def nglVertexAttrib4bvARB(arg0: int, arg1: int) -> None: ...

  @staticmethod
  def nglVertexAttrib4dvARB(arg0: int, arg1: int) -> None: ...

  @staticmethod
  def nglVertexAttrib4fvARB(arg0: int, arg1: int) -> None: ...

  @staticmethod
  def nglVertexAttrib4ivARB(arg0: int, arg1: int) -> None: ...

  @staticmethod
  def nglVertexAttrib4svARB(arg0: int, arg1: int) -> None: ...

  @staticmethod
  def nglVertexAttrib4ubvARB(arg0: int, arg1: int) -> None: ...

  @staticmethod
  def nglVertexAttrib4uivARB(arg0: int, arg1: int) -> None: ...

  @staticmethod
  def nglVertexAttrib4usvARB(arg0: int, arg1: int) -> None: ...

  @staticmethod
  def nglVertexAttribPointerARB(arg0: int, arg1: int, arg2: int, arg3: bool, arg4: int, arg5: int) -> None: ...


class ARBVertexShader:

  GL_CURRENT_VERTEX_ATTRIB_ARB: int

  GL_FLOAT_MAT2_ARB: int

  GL_FLOAT_MAT3_ARB: int

  GL_FLOAT_MAT4_ARB: int

  GL_FLOAT_VEC2_ARB: int

  GL_FLOAT_VEC3_ARB: int

  GL_FLOAT_VEC4_ARB: int

  GL_MAX_COMBINED_TEXTURE_IMAGE_UNITS_ARB: int

  GL_MAX_TEXTURE_COORDS_ARB: int

  GL_MAX_TEXTURE_IMAGE_UNITS_ARB: int

  GL_MAX_VARYING_FLOATS_ARB: int

  GL_MAX_VERTEX_ATTRIBS_ARB: int

  GL_MAX_VERTEX_TEXTURE_IMAGE_UNITS_ARB: int

  GL_MAX_VERTEX_UNIFORM_COMPONENTS_ARB: int

  GL_OBJECT_ACTIVE_ATTRIBUTE_MAX_LENGTH_ARB: int

  GL_OBJECT_ACTIVE_ATTRIBUTES_ARB: int

  GL_VERTEX_ATTRIB_ARRAY_ENABLED_ARB: int

  GL_VERTEX_ATTRIB_ARRAY_NORMALIZED_ARB: int

  GL_VERTEX_ATTRIB_ARRAY_POINTER_ARB: int

  GL_VERTEX_ATTRIB_ARRAY_SIZE_ARB: int

  GL_VERTEX_ATTRIB_ARRAY_STRIDE_ARB: int

  GL_VERTEX_ATTRIB_ARRAY_TYPE_ARB: int

  GL_VERTEX_PROGRAM_POINT_SIZE_ARB: int

  GL_VERTEX_PROGRAM_TWO_SIDE_ARB: int

  GL_VERTEX_SHADER_ARB: int

  @staticmethod
  @overload
  def glBindAttribLocationARB(arg0: int, arg1: int, arg2: CharSequence) -> None: ...

  @staticmethod
  @overload
  def glBindAttribLocationARB(arg0: int, arg1: int, arg2: ByteBuffer) -> None: ...

  @staticmethod
  def glDisableVertexAttribArrayARB(arg0: int) -> None: ...

  @staticmethod
  def glEnableVertexAttribArrayARB(arg0: int) -> None: ...

  @staticmethod
  @overload
  def glGetActiveAttribARB(arg0: int, arg1: int, arg2: IntBuffer, arg3: IntBuffer) -> str: ...

  @staticmethod
  @overload
  def glGetActiveAttribARB(arg0: int, arg1: int, arg2: int, arg3: IntBuffer, arg4: IntBuffer) -> str: ...

  @staticmethod
  @overload
  def glGetActiveAttribARB(arg0: int, arg1: int, arg2: list[int], arg3: list[int], arg4: list[int], arg5: ByteBuffer) -> None: ...

  @staticmethod
  @overload
  def glGetActiveAttribARB(arg0: int, arg1: int, arg2: IntBuffer, arg3: IntBuffer, arg4: IntBuffer, arg5: ByteBuffer) -> None: ...

  @staticmethod
  @overload
  def glGetAttribLocationARB(arg0: int, arg1: CharSequence) -> int: ...

  @staticmethod
  @overload
  def glGetAttribLocationARB(arg0: int, arg1: ByteBuffer) -> int: ...

  @staticmethod
  def glGetVertexAttribPointerARB(arg0: int, arg1: int) -> int: ...

  @staticmethod
  def glGetVertexAttribPointervARB(arg0: int, arg1: int, arg2: PointerBuffer) -> None: ...

  @staticmethod
  @overload
  def glGetVertexAttribdvARB(arg0: int, arg1: int, arg2: list[float]) -> None: ...

  @staticmethod
  @overload
  def glGetVertexAttribdvARB(arg0: int, arg1: int, arg2: DoubleBuffer) -> None: ...

  @staticmethod
  @overload
  def glGetVertexAttribfvARB(arg0: int, arg1: int, arg2: list[float]) -> None: ...

  @staticmethod
  @overload
  def glGetVertexAttribfvARB(arg0: int, arg1: int, arg2: FloatBuffer) -> None: ...

  @staticmethod
  def glGetVertexAttribiARB(arg0: int, arg1: int) -> int: ...

  @staticmethod
  @overload
  def glGetVertexAttribivARB(arg0: int, arg1: int, arg2: list[int]) -> None: ...

  @staticmethod
  @overload
  def glGetVertexAttribivARB(arg0: int, arg1: int, arg2: IntBuffer) -> None: ...

  @staticmethod
  def glVertexAttrib1dARB(arg0: int, arg1: float) -> None: ...

  @staticmethod
  @overload
  def glVertexAttrib1dvARB(arg0: int, arg1: list[float]) -> None: ...

  @staticmethod
  @overload
  def glVertexAttrib1dvARB(arg0: int, arg1: DoubleBuffer) -> None: ...

  @staticmethod
  def glVertexAttrib1fARB(arg0: int, arg1: float) -> None: ...

  @staticmethod
  @overload
  def glVertexAttrib1fvARB(arg0: int, arg1: list[float]) -> None: ...

  @staticmethod
  @overload
  def glVertexAttrib1fvARB(arg0: int, arg1: FloatBuffer) -> None: ...

  @staticmethod
  def glVertexAttrib1sARB(arg0: int, arg1: int) -> None: ...

  @staticmethod
  @overload
  def glVertexAttrib1svARB(arg0: int, arg1: list[int]) -> None: ...

  @staticmethod
  @overload
  def glVertexAttrib1svARB(arg0: int, arg1: ShortBuffer) -> None: ...

  @staticmethod
  def glVertexAttrib2dARB(arg0: int, arg1: float, arg2: float) -> None: ...

  @staticmethod
  @overload
  def glVertexAttrib2dvARB(arg0: int, arg1: list[float]) -> None: ...

  @staticmethod
  @overload
  def glVertexAttrib2dvARB(arg0: int, arg1: DoubleBuffer) -> None: ...

  @staticmethod
  def glVertexAttrib2fARB(arg0: int, arg1: float, arg2: float) -> None: ...

  @staticmethod
  @overload
  def glVertexAttrib2fvARB(arg0: int, arg1: list[float]) -> None: ...

  @staticmethod
  @overload
  def glVertexAttrib2fvARB(arg0: int, arg1: FloatBuffer) -> None: ...

  @staticmethod
  def glVertexAttrib2sARB(arg0: int, arg1: int, arg2: int) -> None: ...

  @staticmethod
  @overload
  def glVertexAttrib2svARB(arg0: int, arg1: list[int]) -> None: ...

  @staticmethod
  @overload
  def glVertexAttrib2svARB(arg0: int, arg1: ShortBuffer) -> None: ...

  @staticmethod
  def glVertexAttrib3dARB(arg0: int, arg1: float, arg2: float, arg3: float) -> None: ...

  @staticmethod
  @overload
  def glVertexAttrib3dvARB(arg0: int, arg1: list[float]) -> None: ...

  @staticmethod
  @overload
  def glVertexAttrib3dvARB(arg0: int, arg1: DoubleBuffer) -> None: ...

  @staticmethod
  def glVertexAttrib3fARB(arg0: int, arg1: float, arg2: float, arg3: float) -> None: ...

  @staticmethod
  @overload
  def glVertexAttrib3fvARB(arg0: int, arg1: list[float]) -> None: ...

  @staticmethod
  @overload
  def glVertexAttrib3fvARB(arg0: int, arg1: FloatBuffer) -> None: ...

  @staticmethod
  def glVertexAttrib3sARB(arg0: int, arg1: int, arg2: int, arg3: int) -> None: ...

  @staticmethod
  @overload
  def glVertexAttrib3svARB(arg0: int, arg1: list[int]) -> None: ...

  @staticmethod
  @overload
  def glVertexAttrib3svARB(arg0: int, arg1: ShortBuffer) -> None: ...

  @staticmethod
  def glVertexAttrib4NbvARB(arg0: int, arg1: ByteBuffer) -> None: ...

  @staticmethod
  @overload
  def glVertexAttrib4NivARB(arg0: int, arg1: list[int]) -> None: ...

  @staticmethod
  @overload
  def glVertexAttrib4NivARB(arg0: int, arg1: IntBuffer) -> None: ...

  @staticmethod
  @overload
  def glVertexAttrib4NsvARB(arg0: int, arg1: list[int]) -> None: ...

  @staticmethod
  @overload
  def glVertexAttrib4NsvARB(arg0: int, arg1: ShortBuffer) -> None: ...

  @staticmethod
  def glVertexAttrib4NubARB(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int) -> None: ...

  @staticmethod
  def glVertexAttrib4NubvARB(arg0: int, arg1: ByteBuffer) -> None: ...

  @staticmethod
  @overload
  def glVertexAttrib4NuivARB(arg0: int, arg1: list[int]) -> None: ...

  @staticmethod
  @overload
  def glVertexAttrib4NuivARB(arg0: int, arg1: IntBuffer) -> None: ...

  @staticmethod
  @overload
  def glVertexAttrib4NusvARB(arg0: int, arg1: list[int]) -> None: ...

  @staticmethod
  @overload
  def glVertexAttrib4NusvARB(arg0: int, arg1: ShortBuffer) -> None: ...

  @staticmethod
  def glVertexAttrib4bvARB(arg0: int, arg1: ByteBuffer) -> None: ...

  @staticmethod
  def glVertexAttrib4dARB(arg0: int, arg1: float, arg2: float, arg3: float, arg4: float) -> None: ...

  @staticmethod
  @overload
  def glVertexAttrib4dvARB(arg0: int, arg1: list[float]) -> None: ...

  @staticmethod
  @overload
  def glVertexAttrib4dvARB(arg0: int, arg1: DoubleBuffer) -> None: ...

  @staticmethod
  def glVertexAttrib4fARB(arg0: int, arg1: float, arg2: float, arg3: float, arg4: float) -> None: ...

  @staticmethod
  @overload
  def glVertexAttrib4fvARB(arg0: int, arg1: list[float]) -> None: ...

  @staticmethod
  @overload
  def glVertexAttrib4fvARB(arg0: int, arg1: FloatBuffer) -> None: ...

  @staticmethod
  @overload
  def glVertexAttrib4ivARB(arg0: int, arg1: list[int]) -> None: ...

  @staticmethod
  @overload
  def glVertexAttrib4ivARB(arg0: int, arg1: IntBuffer) -> None: ...

  @staticmethod
  def glVertexAttrib4sARB(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int) -> None: ...

  @staticmethod
  @overload
  def glVertexAttrib4svARB(arg0: int, arg1: list[int]) -> None: ...

  @staticmethod
  @overload
  def glVertexAttrib4svARB(arg0: int, arg1: ShortBuffer) -> None: ...

  @staticmethod
  def glVertexAttrib4ubvARB(arg0: int, arg1: ByteBuffer) -> None: ...

  @staticmethod
  @overload
  def glVertexAttrib4uivARB(arg0: int, arg1: list[int]) -> None: ...

  @staticmethod
  @overload
  def glVertexAttrib4uivARB(arg0: int, arg1: IntBuffer) -> None: ...

  @staticmethod
  @overload
  def glVertexAttrib4usvARB(arg0: int, arg1: list[int]) -> None: ...

  @staticmethod
  @overload
  def glVertexAttrib4usvARB(arg0: int, arg1: ShortBuffer) -> None: ...

  @staticmethod
  @overload
  def glVertexAttribPointerARB(arg0: int, arg1: int, arg2: int, arg3: bool, arg4: int, arg5: list[float]) -> None: ...

  @staticmethod
  @overload
  def glVertexAttribPointerARB(arg0: int, arg1: int, arg2: int, arg3: bool, arg4: int, arg5: list[int]) -> None: ...

  @staticmethod
  @overload
  def glVertexAttribPointerARB(arg0: int, arg1: int, arg2: int, arg3: bool, arg4: int, arg5: list[int]) -> None: ...

  @staticmethod
  @overload
  def glVertexAttribPointerARB(arg0: int, arg1: int, arg2: int, arg3: bool, arg4: int, arg5: ByteBuffer) -> None: ...

  @staticmethod
  @overload
  def glVertexAttribPointerARB(arg0: int, arg1: int, arg2: int, arg3: bool, arg4: int, arg5: FloatBuffer) -> None: ...

  @staticmethod
  @overload
  def glVertexAttribPointerARB(arg0: int, arg1: int, arg2: int, arg3: bool, arg4: int, arg5: IntBuffer) -> None: ...

  @staticmethod
  @overload
  def glVertexAttribPointerARB(arg0: int, arg1: int, arg2: int, arg3: bool, arg4: int, arg5: ShortBuffer) -> None: ...

  @staticmethod
  @overload
  def glVertexAttribPointerARB(arg0: int, arg1: int, arg2: int, arg3: bool, arg4: int, arg5: int) -> None: ...

  @staticmethod
  def nglBindAttribLocationARB(arg0: int, arg1: int, arg2: int) -> None: ...

  @staticmethod
  def nglGetActiveAttribARB(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int) -> None: ...

  @staticmethod
  def nglGetAttribLocationARB(arg0: int, arg1: int) -> int: ...

  @staticmethod
  def nglGetVertexAttribPointervARB(arg0: int, arg1: int, arg2: int) -> None: ...

  @staticmethod
  def nglGetVertexAttribdvARB(arg0: int, arg1: int, arg2: int) -> None: ...

  @staticmethod
  def nglGetVertexAttribfvARB(arg0: int, arg1: int, arg2: int) -> None: ...

  @staticmethod
  def nglGetVertexAttribivARB(arg0: int, arg1: int, arg2: int) -> None: ...

  @staticmethod
  def nglVertexAttrib1dvARB(arg0: int, arg1: int) -> None: ...

  @staticmethod
  def nglVertexAttrib1fvARB(arg0: int, arg1: int) -> None: ...

  @staticmethod
  def nglVertexAttrib1svARB(arg0: int, arg1: int) -> None: ...

  @staticmethod
  def nglVertexAttrib2dvARB(arg0: int, arg1: int) -> None: ...

  @staticmethod
  def nglVertexAttrib2fvARB(arg0: int, arg1: int) -> None: ...

  @staticmethod
  def nglVertexAttrib2svARB(arg0: int, arg1: int) -> None: ...

  @staticmethod
  def nglVertexAttrib3dvARB(arg0: int, arg1: int) -> None: ...

  @staticmethod
  def nglVertexAttrib3fvARB(arg0: int, arg1: int) -> None: ...

  @staticmethod
  def nglVertexAttrib3svARB(arg0: int, arg1: int) -> None: ...

  @staticmethod
  def nglVertexAttrib4NbvARB(arg0: int, arg1: int) -> None: ...

  @staticmethod
  def nglVertexAttrib4NivARB(arg0: int, arg1: int) -> None: ...

  @staticmethod
  def nglVertexAttrib4NsvARB(arg0: int, arg1: int) -> None: ...

  @staticmethod
  def nglVertexAttrib4NubvARB(arg0: int, arg1: int) -> None: ...

  @staticmethod
  def nglVertexAttrib4NuivARB(arg0: int, arg1: int) -> None: ...

  @staticmethod
  def nglVertexAttrib4NusvARB(arg0: int, arg1: int) -> None: ...

  @staticmethod
  def nglVertexAttrib4bvARB(arg0: int, arg1: int) -> None: ...

  @staticmethod
  def nglVertexAttrib4dvARB(arg0: int, arg1: int) -> None: ...

  @staticmethod
  def nglVertexAttrib4fvARB(arg0: int, arg1: int) -> None: ...

  @staticmethod
  def nglVertexAttrib4ivARB(arg0: int, arg1: int) -> None: ...

  @staticmethod
  def nglVertexAttrib4svARB(arg0: int, arg1: int) -> None: ...

  @staticmethod
  def nglVertexAttrib4ubvARB(arg0: int, arg1: int) -> None: ...

  @staticmethod
  def nglVertexAttrib4uivARB(arg0: int, arg1: int) -> None: ...

  @staticmethod
  def nglVertexAttrib4usvARB(arg0: int, arg1: int) -> None: ...

  @staticmethod
  def nglVertexAttribPointerARB(arg0: int, arg1: int, arg2: int, arg3: bool, arg4: int, arg5: int) -> None: ...


class ARBVertexType2_10_10_10_REV:

  GL_INT_2_10_10_10_REV: int

  @staticmethod
  def glColorP3ui(arg0: int, arg1: int) -> None: ...

  @staticmethod
  @overload
  def glColorP3uiv(arg0: int, arg1: list[int]) -> None: ...

  @staticmethod
  @overload
  def glColorP3uiv(arg0: int, arg1: IntBuffer) -> None: ...

  @staticmethod
  def glColorP4ui(arg0: int, arg1: int) -> None: ...

  @staticmethod
  @overload
  def glColorP4uiv(arg0: int, arg1: list[int]) -> None: ...

  @staticmethod
  @overload
  def glColorP4uiv(arg0: int, arg1: IntBuffer) -> None: ...

  @staticmethod
  def glMultiTexCoordP1ui(arg0: int, arg1: int, arg2: int) -> None: ...

  @staticmethod
  @overload
  def glMultiTexCoordP1uiv(arg0: int, arg1: int, arg2: list[int]) -> None: ...

  @staticmethod
  @overload
  def glMultiTexCoordP1uiv(arg0: int, arg1: int, arg2: IntBuffer) -> None: ...

  @staticmethod
  def glMultiTexCoordP2ui(arg0: int, arg1: int, arg2: int) -> None: ...

  @staticmethod
  @overload
  def glMultiTexCoordP2uiv(arg0: int, arg1: int, arg2: list[int]) -> None: ...

  @staticmethod
  @overload
  def glMultiTexCoordP2uiv(arg0: int, arg1: int, arg2: IntBuffer) -> None: ...

  @staticmethod
  def glMultiTexCoordP3ui(arg0: int, arg1: int, arg2: int) -> None: ...

  @staticmethod
  @overload
  def glMultiTexCoordP3uiv(arg0: int, arg1: int, arg2: list[int]) -> None: ...

  @staticmethod
  @overload
  def glMultiTexCoordP3uiv(arg0: int, arg1: int, arg2: IntBuffer) -> None: ...

  @staticmethod
  def glMultiTexCoordP4ui(arg0: int, arg1: int, arg2: int) -> None: ...

  @staticmethod
  @overload
  def glMultiTexCoordP4uiv(arg0: int, arg1: int, arg2: list[int]) -> None: ...

  @staticmethod
  @overload
  def glMultiTexCoordP4uiv(arg0: int, arg1: int, arg2: IntBuffer) -> None: ...

  @staticmethod
  def glNormalP3ui(arg0: int, arg1: int) -> None: ...

  @staticmethod
  @overload
  def glNormalP3uiv(arg0: int, arg1: list[int]) -> None: ...

  @staticmethod
  @overload
  def glNormalP3uiv(arg0: int, arg1: IntBuffer) -> None: ...

  @staticmethod
  def glSecondaryColorP3ui(arg0: int, arg1: int) -> None: ...

  @staticmethod
  @overload
  def glSecondaryColorP3uiv(arg0: int, arg1: list[int]) -> None: ...

  @staticmethod
  @overload
  def glSecondaryColorP3uiv(arg0: int, arg1: IntBuffer) -> None: ...

  @staticmethod
  def glTexCoordP1ui(arg0: int, arg1: int) -> None: ...

  @staticmethod
  @overload
  def glTexCoordP1uiv(arg0: int, arg1: list[int]) -> None: ...

  @staticmethod
  @overload
  def glTexCoordP1uiv(arg0: int, arg1: IntBuffer) -> None: ...

  @staticmethod
  def glTexCoordP2ui(arg0: int, arg1: int) -> None: ...

  @staticmethod
  @overload
  def glTexCoordP2uiv(arg0: int, arg1: list[int]) -> None: ...

  @staticmethod
  @overload
  def glTexCoordP2uiv(arg0: int, arg1: IntBuffer) -> None: ...

  @staticmethod
  def glTexCoordP3ui(arg0: int, arg1: int) -> None: ...

  @staticmethod
  @overload
  def glTexCoordP3uiv(arg0: int, arg1: list[int]) -> None: ...

  @staticmethod
  @overload
  def glTexCoordP3uiv(arg0: int, arg1: IntBuffer) -> None: ...

  @staticmethod
  def glTexCoordP4ui(arg0: int, arg1: int) -> None: ...

  @staticmethod
  @overload
  def glTexCoordP4uiv(arg0: int, arg1: list[int]) -> None: ...

  @staticmethod
  @overload
  def glTexCoordP4uiv(arg0: int, arg1: IntBuffer) -> None: ...

  @staticmethod
  def glVertexAttribP1ui(arg0: int, arg1: int, arg2: bool, arg3: int) -> None: ...

  @staticmethod
  @overload
  def glVertexAttribP1uiv(arg0: int, arg1: int, arg2: bool, arg3: list[int]) -> None: ...

  @staticmethod
  @overload
  def glVertexAttribP1uiv(arg0: int, arg1: int, arg2: bool, arg3: IntBuffer) -> None: ...

  @staticmethod
  def glVertexAttribP2ui(arg0: int, arg1: int, arg2: bool, arg3: int) -> None: ...

  @staticmethod
  @overload
  def glVertexAttribP2uiv(arg0: int, arg1: int, arg2: bool, arg3: list[int]) -> None: ...

  @staticmethod
  @overload
  def glVertexAttribP2uiv(arg0: int, arg1: int, arg2: bool, arg3: IntBuffer) -> None: ...

  @staticmethod
  def glVertexAttribP3ui(arg0: int, arg1: int, arg2: bool, arg3: int) -> None: ...

  @staticmethod
  @overload
  def glVertexAttribP3uiv(arg0: int, arg1: int, arg2: bool, arg3: list[int]) -> None: ...

  @staticmethod
  @overload
  def glVertexAttribP3uiv(arg0: int, arg1: int, arg2: bool, arg3: IntBuffer) -> None: ...

  @staticmethod
  def glVertexAttribP4ui(arg0: int, arg1: int, arg2: bool, arg3: int) -> None: ...

  @staticmethod
  @overload
  def glVertexAttribP4uiv(arg0: int, arg1: int, arg2: bool, arg3: list[int]) -> None: ...

  @staticmethod
  @overload
  def glVertexAttribP4uiv(arg0: int, arg1: int, arg2: bool, arg3: IntBuffer) -> None: ...

  @staticmethod
  def glVertexP2ui(arg0: int, arg1: int) -> None: ...

  @staticmethod
  @overload
  def glVertexP2uiv(arg0: int, arg1: list[int]) -> None: ...

  @staticmethod
  @overload
  def glVertexP2uiv(arg0: int, arg1: IntBuffer) -> None: ...

  @staticmethod
  def glVertexP3ui(arg0: int, arg1: int) -> None: ...

  @staticmethod
  @overload
  def glVertexP3uiv(arg0: int, arg1: list[int]) -> None: ...

  @staticmethod
  @overload
  def glVertexP3uiv(arg0: int, arg1: IntBuffer) -> None: ...

  @staticmethod
  def glVertexP4ui(arg0: int, arg1: int) -> None: ...

  @staticmethod
  @overload
  def glVertexP4uiv(arg0: int, arg1: list[int]) -> None: ...

  @staticmethod
  @overload
  def glVertexP4uiv(arg0: int, arg1: IntBuffer) -> None: ...

  @staticmethod
  def nglColorP3uiv(arg0: int, arg1: int) -> None: ...

  @staticmethod
  def nglColorP4uiv(arg0: int, arg1: int) -> None: ...

  @staticmethod
  def nglMultiTexCoordP1uiv(arg0: int, arg1: int, arg2: int) -> None: ...

  @staticmethod
  def nglMultiTexCoordP2uiv(arg0: int, arg1: int, arg2: int) -> None: ...

  @staticmethod
  def nglMultiTexCoordP3uiv(arg0: int, arg1: int, arg2: int) -> None: ...

  @staticmethod
  def nglMultiTexCoordP4uiv(arg0: int, arg1: int, arg2: int) -> None: ...

  @staticmethod
  def nglNormalP3uiv(arg0: int, arg1: int) -> None: ...

  @staticmethod
  def nglSecondaryColorP3uiv(arg0: int, arg1: int) -> None: ...

  @staticmethod
  def nglTexCoordP1uiv(arg0: int, arg1: int) -> None: ...

  @staticmethod
  def nglTexCoordP2uiv(arg0: int, arg1: int) -> None: ...

  @staticmethod
  def nglTexCoordP3uiv(arg0: int, arg1: int) -> None: ...

  @staticmethod
  def nglTexCoordP4uiv(arg0: int, arg1: int) -> None: ...

  @staticmethod
  def nglVertexAttribP1uiv(arg0: int, arg1: int, arg2: bool, arg3: int) -> None: ...

  @staticmethod
  def nglVertexAttribP2uiv(arg0: int, arg1: int, arg2: bool, arg3: int) -> None: ...

  @staticmethod
  def nglVertexAttribP3uiv(arg0: int, arg1: int, arg2: bool, arg3: int) -> None: ...

  @staticmethod
  def nglVertexAttribP4uiv(arg0: int, arg1: int, arg2: bool, arg3: int) -> None: ...

  @staticmethod
  def nglVertexP2uiv(arg0: int, arg1: int) -> None: ...

  @staticmethod
  def nglVertexP3uiv(arg0: int, arg1: int) -> None: ...

  @staticmethod
  def nglVertexP4uiv(arg0: int, arg1: int) -> None: ...


class ARBViewportArray:

  GL_LAYER_PROVOKING_VERTEX: int

  GL_MAX_VIEWPORTS: int

  GL_UNDEFINED_VERTEX: int

  GL_VIEWPORT_BOUNDS_RANGE: int

  GL_VIEWPORT_INDEX_PROVOKING_VERTEX: int

  GL_VIEWPORT_SUBPIXEL_BITS: int

  @staticmethod
  @overload
  def glDepthRangeArrayv(arg0: int, arg1: list[float]) -> None: ...

  @staticmethod
  @overload
  def glDepthRangeArrayv(arg0: int, arg1: DoubleBuffer) -> None: ...

  @staticmethod
  def glDepthRangeIndexed(arg0: int, arg1: float, arg2: float) -> None: ...

  @staticmethod
  def glGetDoublei(arg0: int, arg1: int) -> float: ...

  @staticmethod
  @overload
  def glGetDoublei_v(arg0: int, arg1: int, arg2: list[float]) -> None: ...

  @staticmethod
  @overload
  def glGetDoublei_v(arg0: int, arg1: int, arg2: DoubleBuffer) -> None: ...

  @staticmethod
  def glGetFloati(arg0: int, arg1: int) -> float: ...

  @staticmethod
  @overload
  def glGetFloati_v(arg0: int, arg1: int, arg2: list[float]) -> None: ...

  @staticmethod
  @overload
  def glGetFloati_v(arg0: int, arg1: int, arg2: FloatBuffer) -> None: ...

  @staticmethod
  @overload
  def glScissorArrayv(arg0: int, arg1: list[int]) -> None: ...

  @staticmethod
  @overload
  def glScissorArrayv(arg0: int, arg1: IntBuffer) -> None: ...

  @staticmethod
  def glScissorIndexed(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int) -> None: ...

  @staticmethod
  @overload
  def glScissorIndexedv(arg0: int, arg1: list[int]) -> None: ...

  @staticmethod
  @overload
  def glScissorIndexedv(arg0: int, arg1: IntBuffer) -> None: ...

  @staticmethod
  @overload
  def glViewportArrayv(arg0: int, arg1: list[float]) -> None: ...

  @staticmethod
  @overload
  def glViewportArrayv(arg0: int, arg1: FloatBuffer) -> None: ...

  @staticmethod
  def glViewportIndexedf(arg0: int, arg1: float, arg2: float, arg3: float, arg4: float) -> None: ...

  @staticmethod
  @overload
  def glViewportIndexedfv(arg0: int, arg1: list[float]) -> None: ...

  @staticmethod
  @overload
  def glViewportIndexedfv(arg0: int, arg1: FloatBuffer) -> None: ...

  @staticmethod
  def nglDepthRangeArrayv(arg0: int, arg1: int, arg2: int) -> None: ...

  @staticmethod
  def nglGetDoublei_v(arg0: int, arg1: int, arg2: int) -> None: ...

  @staticmethod
  def nglGetFloati_v(arg0: int, arg1: int, arg2: int) -> None: ...

  @staticmethod
  def nglScissorArrayv(arg0: int, arg1: int, arg2: int) -> None: ...

  @staticmethod
  def nglScissorIndexedv(arg0: int, arg1: int) -> None: ...

  @staticmethod
  def nglViewportArrayv(arg0: int, arg1: int, arg2: int) -> None: ...

  @staticmethod
  def nglViewportIndexedfv(arg0: int, arg1: int) -> None: ...


class ARBWindowPos:

  @staticmethod
  def glWindowPos2dARB(arg0: float, arg1: float) -> None: ...

  @staticmethod
  @overload
  def glWindowPos2dvARB(arg0: list[float]) -> None: ...

  @staticmethod
  @overload
  def glWindowPos2dvARB(arg0: DoubleBuffer) -> None: ...

  @staticmethod
  def glWindowPos2fARB(arg0: float, arg1: float) -> None: ...

  @staticmethod
  @overload
  def glWindowPos2fvARB(arg0: list[float]) -> None: ...

  @staticmethod
  @overload
  def glWindowPos2fvARB(arg0: FloatBuffer) -> None: ...

  @staticmethod
  def glWindowPos2iARB(arg0: int, arg1: int) -> None: ...

  @staticmethod
  @overload
  def glWindowPos2ivARB(arg0: list[int]) -> None: ...

  @staticmethod
  @overload
  def glWindowPos2ivARB(arg0: IntBuffer) -> None: ...

  @staticmethod
  def glWindowPos2sARB(arg0: int, arg1: int) -> None: ...

  @staticmethod
  @overload
  def glWindowPos2svARB(arg0: list[int]) -> None: ...

  @staticmethod
  @overload
  def glWindowPos2svARB(arg0: ShortBuffer) -> None: ...

  @staticmethod
  def glWindowPos3dARB(arg0: float, arg1: float, arg2: float) -> None: ...

  @staticmethod
  @overload
  def glWindowPos3dvARB(arg0: list[float]) -> None: ...

  @staticmethod
  @overload
  def glWindowPos3dvARB(arg0: DoubleBuffer) -> None: ...

  @staticmethod
  def glWindowPos3fARB(arg0: float, arg1: float, arg2: float) -> None: ...

  @staticmethod
  @overload
  def glWindowPos3fvARB(arg0: list[float]) -> None: ...

  @staticmethod
  @overload
  def glWindowPos3fvARB(arg0: FloatBuffer) -> None: ...

  @staticmethod
  def glWindowPos3iARB(arg0: int, arg1: int, arg2: int) -> None: ...

  @staticmethod
  @overload
  def glWindowPos3ivARB(arg0: list[int]) -> None: ...

  @staticmethod
  @overload
  def glWindowPos3ivARB(arg0: IntBuffer) -> None: ...

  @staticmethod
  def glWindowPos3sARB(arg0: int, arg1: int, arg2: int) -> None: ...

  @staticmethod
  @overload
  def glWindowPos3svARB(arg0: list[int]) -> None: ...

  @staticmethod
  @overload
  def glWindowPos3svARB(arg0: ShortBuffer) -> None: ...

  @staticmethod
  def nglWindowPos2dvARB(arg0: int) -> None: ...

  @staticmethod
  def nglWindowPos2fvARB(arg0: int) -> None: ...

  @staticmethod
  def nglWindowPos2ivARB(arg0: int) -> None: ...

  @staticmethod
  def nglWindowPos2svARB(arg0: int) -> None: ...

  @staticmethod
  def nglWindowPos3dvARB(arg0: int) -> None: ...

  @staticmethod
  def nglWindowPos3fvARB(arg0: int) -> None: ...

  @staticmethod
  def nglWindowPos3ivARB(arg0: int) -> None: ...

  @staticmethod
  def nglWindowPos3svARB(arg0: int) -> None: ...


class ATIMeminfo:

  GL_RENDERBUFFER_FREE_MEMORY_ATI: int

  GL_TEXTURE_FREE_MEMORY_ATI: int

  GL_VBO_FREE_MEMORY_ATI: int


class ATITextureCompression3DC:

  GL_COMPRESSED_LUMINANCE_ALPHA_3DC_ATI: int


class CGL:

  kCGL0Bit: int

  kCGL10Bit: int

  kCGL128Bit: int

  kCGL12Bit: int

  kCGL16Bit: int

  kCGL1Bit: int

  kCGL24Bit: int

  kCGL2Bit: int

  kCGL32Bit: int

  kCGL3Bit: int

  kCGL48Bit: int

  kCGL4Bit: int

  kCGL5Bit: int

  kCGL64Bit: int

  kCGL6Bit: int

  kCGL8Bit: int

  kCGL96Bit: int

  kCGLARGB12121212Bit: int

  kCGLARGB1555Bit: int

  kCGLARGB2101010Bit: int

  kCGLARGB4444Bit: int

  kCGLARGB8888Bit: int

  kCGLBadAddress: int

  kCGLBadAlloc: int

  kCGLBadAttribute: int

  kCGLBadCodeModule: int

  kCGLBadConnection: int

  kCGLBadContext: int

  kCGLBadDisplay: int

  kCGLBadDrawable: int

  kCGLBadEnumeration: int

  kCGLBadFullScreen: int

  kCGLBadMatch: int

  kCGLBadOffScreen: int

  kCGLBadPixelFormat: int

  kCGLBadProperty: int

  kCGLBadRendererInfo: int

  kCGLBadState: int

  kCGLBadValue: int

  kCGLBadWindow: int

  kCGLCEDisplayListOptimization: int

  kCGLCEMPEngine: int

  kCGLCERasterization: int

  kCGLCEStateValidation: int

  kCGLCESurfaceBackingSize: int

  kCGLCESwapLimit: int

  kCGLCESwapRectangle: int

  kCGLCPClientStorage: int

  kCGLCPCurrentRendererID: int

  kCGLCPDispatchTableSize: int

  kCGLCPGPUFragmentProcessing: int

  kCGLCPGPUVertexProcessing: int

  kCGLCPHasDrawable: int

  kCGLCPMPSwapsInFlight: int

  kCGLCPReclaimResources: int

  kCGLCPSurfaceBackingSize: int

  kCGLCPSurfaceOpacity: int

  kCGLCPSurfaceOrder: int

  kCGLCPSurfaceSurfaceVolatile: int

  kCGLCPSurfaceTexture: int

  kCGLCPSwapInterval: int

  kCGLCPSwapRectangle: int

  kCGLDoubleBufferBit: int

  kCGLGOClearFormatCache: int

  kCGLGOFormatCacheSize: int

  kCGLGOResetLibrary: int

  kCGLGORetainRenderers: int

  kCGLGOUseBuildCache: int

  kCGLGOUseErrorHandler: int

  kCGLMonoscopicBit: int

  kCGLMultisampleBit: int

  kCGLNoError: int

  kCGLOGLPVersion_3_2_Core: int

  kCGLOGLPVersion_Legacy: int

  kCGLPFAAccelerated: int

  kCGLPFAAcceleratedCompute: int

  kCGLPFAAccumSize: int

  kCGLPFAAllowOfflineRenderers: int

  kCGLPFAAllRenderers: int

  kCGLPFAAlphaSize: int

  kCGLPFAAuxBuffers: int

  kCGLPFAAuxDepthStencil: int

  kCGLPFABackingStore: int

  kCGLPFABackingVolatile: int

  kCGLPFAClosestPolicy: int

  kCGLPFAColorFloat: int

  kCGLPFAColorSize: int

  kCGLPFACompliant: int

  kCGLPFADepthSize: int

  kCGLPFADisplayMask: int

  kCGLPFADoubleBuffer: int

  kCGLPFAFullScreen: int

  kCGLPFAMaximumPolicy: int

  kCGLPFAMinimumPolicy: int

  kCGLPFAMPSafe: int

  kCGLPFAMultisample: int

  kCGLPFAMultiScreen: int

  kCGLPFANoRecovery: int

  kCGLPFAOffScreen: int

  kCGLPFAOpenGLProfile: int

  kCGLPFAPBuffer: int

  kCGLPFARemotePBuffer: int

  kCGLPFARendererID: int

  kCGLPFARobust: int

  kCGLPFASampleAlpha: int

  kCGLPFASampleBuffers: int

  kCGLPFASamples: int

  kCGLPFASingleRenderer: int

  kCGLPFAStencilSize: int

  kCGLPFAStereo: int

  kCGLPFASupersample: int

  kCGLPFASupportsAutomaticGraphicsSwitching: int

  kCGLPFATripleBuffer: int

  kCGLPFAVirtualScreenCount: int

  kCGLPFAWindow: int

  kCGLRGB101010_A8Bit: int

  kCGLRGB101010Bit: int

  kCGLRGB121212Bit: int

  kCGLRGB161616Bit: int

  kCGLRGB444A8Bit: int

  kCGLRGB444Bit: int

  kCGLRGB555A8Bit: int

  kCGLRGB555Bit: int

  kCGLRGB565A8Bit: int

  kCGLRGB565Bit: int

  kCGLRGB888A8Bit: int

  kCGLRGB888Bit: int

  kCGLRGBA16161616Bit: int

  kCGLRGBAFloat128Bit: int

  kCGLRGBAFloat256Bit: int

  kCGLRGBAFloat64Bit: int

  kCGLRGBFloat128Bit: int

  kCGLRGBFloat256Bit: int

  kCGLRGBFloat64Bit: int

  kCGLRPAccelerated: int

  kCGLRPAcceleratedCompute: int

  kCGLRPAccumModes: int

  kCGLRPBackingStore: int

  kCGLRPBufferModes: int

  kCGLRPColorModes: int

  kCGLRPCompliant: int

  kCGLRPDepthModes: int

  kCGLRPDisplayMask: int

  kCGLRPFullScreen: int

  kCGLRPGPUFragProcCapable: int

  kCGLRPGPUVertProcCapable: int

  kCGLRPMaxAuxBuffers: int

  kCGLRPMaxSampleBuffers: int

  kCGLRPMaxSamples: int

  kCGLRPMPSafe: int

  kCGLRPMultiScreen: int

  kCGLRPOffScreen: int

  kCGLRPOnline: int

  kCGLRPRendererCount: int

  kCGLRPRendererID: int

  kCGLRPRobust: int

  kCGLRPSampleAlpha: int

  kCGLRPSampleModes: int

  kCGLRPStencilModes: int

  kCGLRPTextureMemory: int

  kCGLRPTextureMemoryMegabytes: int

  kCGLRPVideoMemory: int

  kCGLRPVideoMemoryMegabytes: int

  kCGLRPWindow: int

  kCGLSingleBufferBit: int

  kCGLStereoscopicBit: int

  kCGLSupersampleBit: int

  kCGLTripleBufferBit: int

  @staticmethod
  @overload
  def CGLChoosePixelFormat(arg0: list[int], arg1: PointerBuffer, arg2: list[int]) -> int: ...

  @staticmethod
  @overload
  def CGLChoosePixelFormat(arg0: IntBuffer, arg1: PointerBuffer, arg2: IntBuffer) -> int: ...

  @staticmethod
  def CGLClearDrawable(arg0: int) -> int: ...

  @staticmethod
  def CGLCopyContext(arg0: int, arg1: int, arg2: int) -> int: ...

  @staticmethod
  def CGLCreateContext(arg0: int, arg1: int, arg2: PointerBuffer) -> int: ...

  @staticmethod
  def CGLCreatePBuffer(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: PointerBuffer) -> int: ...

  @staticmethod
  @overload
  def CGLDescribePBuffer(arg0: int, arg1: list[int], arg2: list[int], arg3: list[int], arg4: list[int], arg5: list[int]) -> int: ...

  @staticmethod
  @overload
  def CGLDescribePBuffer(arg0: int, arg1: IntBuffer, arg2: IntBuffer, arg3: IntBuffer, arg4: IntBuffer, arg5: IntBuffer) -> int: ...

  @staticmethod
  @overload
  def CGLDescribePixelFormat(arg0: int, arg1: int, arg2: int, arg3: list[int]) -> int: ...

  @staticmethod
  @overload
  def CGLDescribePixelFormat(arg0: int, arg1: int, arg2: int, arg3: IntBuffer) -> int: ...

  @staticmethod
  @overload
  def CGLDescribeRenderer(arg0: int, arg1: int, arg2: int, arg3: list[int]) -> int: ...

  @staticmethod
  @overload
  def CGLDescribeRenderer(arg0: int, arg1: int, arg2: int, arg3: IntBuffer) -> int: ...

  @staticmethod
  def CGLDestroyContext(arg0: int) -> int: ...

  @staticmethod
  def CGLDestroyPBuffer(arg0: int) -> int: ...

  @staticmethod
  def CGLDestroyPixelFormat(arg0: int) -> int: ...

  @staticmethod
  def CGLDestroyRendererInfo(arg0: int) -> int: ...

  @staticmethod
  def CGLDisable(arg0: int, arg1: int) -> int: ...

  @staticmethod
  def CGLEnable(arg0: int, arg1: int) -> int: ...

  @staticmethod
  def CGLErrorString(arg0: int) -> str: ...

  @staticmethod
  def CGLFlushDrawable(arg0: int) -> int: ...

  @staticmethod
  def CGLGetContextRetainCount(arg0: int) -> int: ...

  @staticmethod
  def CGLGetCurrentContext() -> int: ...

  @staticmethod
  @overload
  def CGLGetGlobalOption(arg0: int, arg1: list[int]) -> int: ...

  @staticmethod
  @overload
  def CGLGetGlobalOption(arg0: int, arg1: IntBuffer) -> int: ...

  @staticmethod
  @overload
  def CGLGetOffScreen(arg0: int, arg1: list[int], arg2: list[int], arg3: list[int], arg4: PointerBuffer) -> int: ...

  @staticmethod
  @overload
  def CGLGetOffScreen(arg0: int, arg1: IntBuffer, arg2: IntBuffer, arg3: IntBuffer, arg4: PointerBuffer) -> int: ...

  @staticmethod
  @overload
  def CGLGetPBuffer(arg0: int, arg1: PointerBuffer, arg2: list[int], arg3: list[int], arg4: list[int]) -> int: ...

  @staticmethod
  @overload
  def CGLGetPBuffer(arg0: int, arg1: PointerBuffer, arg2: IntBuffer, arg3: IntBuffer, arg4: IntBuffer) -> int: ...

  @staticmethod
  def CGLGetPBufferRetainCount(arg0: int) -> int: ...

  @staticmethod
  @overload
  def CGLGetParameter(arg0: int, arg1: int, arg2: list[int]) -> int: ...

  @staticmethod
  @overload
  def CGLGetParameter(arg0: int, arg1: int, arg2: IntBuffer) -> int: ...

  @staticmethod
  def CGLGetPixelFormat(arg0: int) -> int: ...

  @staticmethod
  def CGLGetPixelFormatRetainCount(arg0: int) -> int: ...

  @staticmethod
  def CGLGetShareGroup(arg0: int) -> int: ...

  @staticmethod
  @overload
  def CGLGetVersion(arg0: list[int], arg1: list[int]) -> None: ...

  @staticmethod
  @overload
  def CGLGetVersion(arg0: IntBuffer, arg1: IntBuffer) -> None: ...

  @staticmethod
  @overload
  def CGLGetVirtualScreen(arg0: int, arg1: list[int]) -> int: ...

  @staticmethod
  @overload
  def CGLGetVirtualScreen(arg0: int, arg1: IntBuffer) -> int: ...

  @staticmethod
  @overload
  def CGLIsEnabled(arg0: int, arg1: int, arg2: list[int]) -> int: ...

  @staticmethod
  @overload
  def CGLIsEnabled(arg0: int, arg1: int, arg2: IntBuffer) -> int: ...

  @staticmethod
  def CGLLockContext(arg0: int) -> int: ...

  @staticmethod
  @overload
  def CGLQueryRendererInfo(arg0: int, arg1: PointerBuffer, arg2: list[int]) -> int: ...

  @staticmethod
  @overload
  def CGLQueryRendererInfo(arg0: int, arg1: PointerBuffer, arg2: IntBuffer) -> int: ...

  @staticmethod
  def CGLReleaseContext(arg0: int) -> None: ...

  @staticmethod
  def CGLReleasePBuffer(arg0: int) -> None: ...

  @staticmethod
  def CGLReleasePixelFormat(arg0: int) -> None: ...

  @staticmethod
  def CGLRetainContext(arg0: int) -> int: ...

  @staticmethod
  def CGLRetainPBuffer(arg0: int) -> int: ...

  @staticmethod
  def CGLRetainPixelFormat(arg0: int) -> int: ...

  @staticmethod
  def CGLSetCurrentContext(arg0: int) -> int: ...

  @staticmethod
  def CGLSetFullScreen(arg0: int) -> int: ...

  @staticmethod
  def CGLSetFullScreenOnDisplay(arg0: int, arg1: int) -> int: ...

  @staticmethod
  @overload
  def CGLSetGlobalOption(arg0: int, arg1: list[int]) -> int: ...

  @staticmethod
  @overload
  def CGLSetGlobalOption(arg0: int, arg1: int) -> int: ...

  @staticmethod
  @overload
  def CGLSetGlobalOption(arg0: int, arg1: IntBuffer) -> int: ...

  @staticmethod
  def CGLSetOffScreen(arg0: int, arg1: int, arg2: int, arg3: int, arg4: ByteBuffer) -> int: ...

  @staticmethod
  def CGLSetPBuffer(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int) -> int: ...

  @staticmethod
  @overload
  def CGLSetParameter(arg0: int, arg1: int, arg2: list[int]) -> int: ...

  @staticmethod
  @overload
  def CGLSetParameter(arg0: int, arg1: int, arg2: int) -> int: ...

  @staticmethod
  @overload
  def CGLSetParameter(arg0: int, arg1: int, arg2: IntBuffer) -> int: ...

  @staticmethod
  def CGLSetVirtualScreen(arg0: int, arg1: int) -> int: ...

  @staticmethod
  def CGLTexImagePBuffer(arg0: int, arg1: int, arg2: int) -> int: ...

  @staticmethod
  def CGLUnlockContext(arg0: int) -> int: ...

  @staticmethod
  def CGLUpdateContext(arg0: int) -> int: ...

  @staticmethod
  def nCGLChoosePixelFormat(arg0: int, arg1: int, arg2: int) -> int: ...

  @staticmethod
  def nCGLCreateContext(arg0: int, arg1: int, arg2: int) -> int: ...

  @staticmethod
  def nCGLCreatePBuffer(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int) -> int: ...

  @staticmethod
  def nCGLDescribePBuffer(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int) -> int: ...

  @staticmethod
  def nCGLDescribePixelFormat(arg0: int, arg1: int, arg2: int, arg3: int) -> int: ...

  @staticmethod
  def nCGLDescribeRenderer(arg0: int, arg1: int, arg2: int, arg3: int) -> int: ...

  @staticmethod
  def nCGLErrorString(arg0: int) -> int: ...

  @staticmethod
  def nCGLGetGlobalOption(arg0: int, arg1: int) -> int: ...

  @staticmethod
  def nCGLGetOffScreen(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int) -> int: ...

  @staticmethod
  def nCGLGetPBuffer(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int) -> int: ...

  @staticmethod
  def nCGLGetParameter(arg0: int, arg1: int, arg2: int) -> int: ...

  @staticmethod
  def nCGLGetVersion(arg0: int, arg1: int) -> None: ...

  @staticmethod
  def nCGLGetVirtualScreen(arg0: int, arg1: int) -> int: ...

  @staticmethod
  def nCGLIsEnabled(arg0: int, arg1: int, arg2: int) -> int: ...

  @staticmethod
  def nCGLQueryRendererInfo(arg0: int, arg1: int, arg2: int) -> int: ...

  @staticmethod
  def nCGLSetGlobalOption(arg0: int, arg1: int) -> int: ...

  @staticmethod
  def nCGLSetOffScreen(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int) -> int: ...

  @staticmethod
  def nCGLSetParameter(arg0: int, arg1: int, arg2: int) -> int: ...

  class Functions:

    ChoosePixelFormat: int

    ClearDrawable: int

    CopyContext: int

    CreateContext: int

    CreatePBuffer: int

    DescribePBuffer: int

    DescribePixelFormat: int

    DescribeRenderer: int

    DestroyContext: int

    DestroyPBuffer: int

    DestroyPixelFormat: int

    DestroyRendererInfo: int

    Disable: int

    Enable: int

    ErrorString: int

    FlushDrawable: int

    GetContextRetainCount: int

    GetCurrentContext: int

    GetGlobalOption: int

    GetOffScreen: int

    GetParameter: int

    GetPBuffer: int

    GetPBufferRetainCount: int

    GetPixelFormat: int

    GetPixelFormatRetainCount: int

    GetShareGroup: int

    GetVersion: int

    GetVirtualScreen: int

    IsEnabled: int

    LockContext: int

    QueryRendererInfo: int

    ReleaseContext: int

    ReleasePBuffer: int

    ReleasePixelFormat: int

    RetainContext: int

    RetainPBuffer: int

    RetainPixelFormat: int

    SetCurrentContext: int

    SetFullScreen: int

    SetFullScreenOnDisplay: int

    SetGlobalOption: int

    SetOffScreen: int

    SetParameter: int

    SetPBuffer: int

    SetVirtualScreen: int

    TexImagePBuffer: int

    UnlockContext: int

    UpdateContext: int


class EXT422Pixels:

  GL_422_AVERAGE_EXT: int

  GL_422_EXT: int

  GL_422_REV_AVERAGE_EXT: int

  GL_422_REV_EXT: int


class EXTABGR:

  GL_ABGR_EXT: int


class EXTBGRA:

  GL_BGR_EXT: int

  GL_BGRA_EXT: int


class EXTBindableUniform:

  GL_MAX_BINDABLE_UNIFORM_SIZE_EXT: int

  GL_MAX_FRAGMENT_BINDABLE_UNIFORMS_EXT: int

  GL_MAX_GEOMETRY_BINDABLE_UNIFORMS_EXT: int

  GL_MAX_VERTEX_BINDABLE_UNIFORMS_EXT: int

  GL_UNIFORM_BUFFER_BINDING_EXT: int

  GL_UNIFORM_BUFFER_EXT: int

  @staticmethod
  def glGetUniformBufferSizeEXT(arg0: int, arg1: int) -> int: ...

  @staticmethod
  def glGetUniformOffsetEXT(arg0: int, arg1: int) -> int: ...

  @staticmethod
  def glUniformBufferEXT(arg0: int, arg1: int, arg2: int) -> None: ...


class EXTBlendColor:

  GL_BLEND_COLOR_EXT: int

  GL_CONSTANT_ALPHA_EXT: int

  GL_CONSTANT_COLOR_EXT: int

  GL_ONE_MINUS_CONSTANT_ALPHA_EXT: int

  GL_ONE_MINUS_CONSTANT_COLOR_EXT: int

  @staticmethod
  def glBlendColorEXT(arg0: float, arg1: float, arg2: float, arg3: float) -> None: ...


class EXTBlendEquationSeparate:

  GL_BLEND_EQUATION_ALPHA_EXT: int

  GL_BLEND_EQUATION_RGB_EXT: int

  @staticmethod
  def glBlendEquationSeparateEXT(arg0: int, arg1: int) -> None: ...


class EXTBlendFuncSeparate:

  GL_BLEND_DST_ALPHA_EXT: int

  GL_BLEND_DST_RGB_EXT: int

  GL_BLEND_SRC_ALPHA_EXT: int

  GL_BLEND_SRC_RGB_EXT: int

  @staticmethod
  def glBlendFuncSeparateEXT(arg0: int, arg1: int, arg2: int, arg3: int) -> None: ...


class EXTBlendMinmax:

  GL_BLEND_EQUATION_EXT: int

  GL_FUNC_ADD_EXT: int

  GL_MAX_EXT: int

  GL_MIN_EXT: int

  @staticmethod
  def glBlendEquationEXT(arg0: int) -> None: ...


class EXTBlendSubtract:

  GL_FUNC_REVERSE_SUBTRACT_EXT: int

  GL_FUNC_SUBTRACT_EXT: int


class EXTClipVolumeHint:

  GL_CLIP_VOLUME_CLIPPING_HINT_EXT: int


class EXTCompiledVertexArray:

  GL_ARRAY_ELEMENT_LOCK_COUNT_EXT: int

  GL_ARRAY_ELEMENT_LOCK_FIRST_EXT: int

  @staticmethod
  def glLockArraysEXT(arg0: int, arg1: int) -> None: ...

  @staticmethod
  def glUnlockArraysEXT() -> None: ...


class EXTDebugLabel:

  GL_BUFFER_OBJECT_EXT: int

  GL_PROGRAM_OBJECT_EXT: int

  GL_PROGRAM_PIPELINE_OBJECT_EXT: int

  GL_QUERY_OBJECT_EXT: int

  GL_SHADER_OBJECT_EXT: int

  GL_VERTEX_ARRAY_OBJECT_EXT: int

  @staticmethod
  @overload
  def glGetObjectLabelEXT(arg0: int, arg1: int, arg2: int) -> str: ...

  @staticmethod
  @overload
  def glGetObjectLabelEXT(arg0: int, arg1: int, arg2: list[int], arg3: ByteBuffer) -> None: ...

  @staticmethod
  @overload
  def glGetObjectLabelEXT(arg0: int, arg1: int, arg2: IntBuffer, arg3: ByteBuffer) -> None: ...

  @staticmethod
  @overload
  def glLabelObjectEXT(arg0: int, arg1: int, arg2: CharSequence) -> None: ...

  @staticmethod
  @overload
  def glLabelObjectEXT(arg0: int, arg1: int, arg2: ByteBuffer) -> None: ...

  @staticmethod
  def nglGetObjectLabelEXT(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int) -> None: ...

  @staticmethod
  def nglLabelObjectEXT(arg0: int, arg1: int, arg2: int, arg3: int) -> None: ...


class EXTDebugMarker:

  @staticmethod
  @overload
  def glInsertEventMarkerEXT(arg0: CharSequence) -> None: ...

  @staticmethod
  @overload
  def glInsertEventMarkerEXT(arg0: ByteBuffer) -> None: ...

  @staticmethod
  def glPopGroupMarkerEXT() -> None: ...

  @staticmethod
  @overload
  def glPushGroupMarkerEXT(arg0: CharSequence) -> None: ...

  @staticmethod
  @overload
  def glPushGroupMarkerEXT(arg0: ByteBuffer) -> None: ...

  @staticmethod
  def nglInsertEventMarkerEXT(arg0: int, arg1: int) -> None: ...

  @staticmethod
  def nglPushGroupMarkerEXT(arg0: int, arg1: int) -> None: ...


class EXTDepthBoundsTest:

  GL_DEPTH_BOUNDS_EXT: int

  GL_DEPTH_BOUNDS_TEST_EXT: int

  @staticmethod
  def glDepthBoundsEXT(arg0: float, arg1: float) -> None: ...


class EXTDirectStateAccess:

  GL_PROGRAM_MATRIX_EXT: int

  GL_PROGRAM_MATRIX_STACK_DEPTH_EXT: int

  GL_TRANSPOSE_PROGRAM_MATRIX_EXT: int

  @staticmethod
  def glBindMultiTextureEXT(arg0: int, arg1: int, arg2: int) -> None: ...

  @staticmethod
  def glCheckNamedFramebufferStatusEXT(arg0: int, arg1: int) -> int: ...

  @staticmethod
  def glClientAttribDefaultEXT(arg0: int) -> None: ...

  @staticmethod
  @overload
  def glCompressedMultiTexImage1DEXT(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: ByteBuffer) -> None: ...

  @staticmethod
  @overload
  def glCompressedMultiTexImage1DEXT(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int, arg7: int) -> None: ...

  @staticmethod
  @overload
  def glCompressedMultiTexImage2DEXT(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int, arg7: ByteBuffer) -> None: ...

  @staticmethod
  @overload
  def glCompressedMultiTexImage2DEXT(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int, arg7: int, arg8: int) -> None: ...

  @staticmethod
  @overload
  def glCompressedMultiTexImage3DEXT(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int, arg7: int, arg8: ByteBuffer) -> None: ...

  @staticmethod
  @overload
  def glCompressedMultiTexImage3DEXT(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int, arg7: int, arg8: int, arg9: int) -> None: ...

  @staticmethod
  @overload
  def glCompressedMultiTexSubImage1DEXT(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: ByteBuffer) -> None: ...

  @staticmethod
  @overload
  def glCompressedMultiTexSubImage1DEXT(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int, arg7: int) -> None: ...

  @staticmethod
  @overload
  def glCompressedMultiTexSubImage2DEXT(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int, arg7: int, arg8: ByteBuffer) -> None: ...

  @staticmethod
  @overload
  def glCompressedMultiTexSubImage2DEXT(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int, arg7: int, arg8: int, arg9: int) -> None: ...

  @staticmethod
  @overload
  def glCompressedMultiTexSubImage3DEXT(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int, arg7: int, arg8: int, arg9: int, arg10: ByteBuffer) -> None: ...

  @staticmethod
  @overload
  def glCompressedMultiTexSubImage3DEXT(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int, arg7: int, arg8: int, arg9: int, arg10: int, arg11: int) -> None: ...

  @staticmethod
  @overload
  def glCompressedTextureImage1DEXT(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: ByteBuffer) -> None: ...

  @staticmethod
  @overload
  def glCompressedTextureImage1DEXT(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int, arg7: int) -> None: ...

  @staticmethod
  @overload
  def glCompressedTextureImage2DEXT(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int, arg7: ByteBuffer) -> None: ...

  @staticmethod
  @overload
  def glCompressedTextureImage2DEXT(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int, arg7: int, arg8: int) -> None: ...

  @staticmethod
  @overload
  def glCompressedTextureImage3DEXT(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int, arg7: int, arg8: ByteBuffer) -> None: ...

  @staticmethod
  @overload
  def glCompressedTextureImage3DEXT(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int, arg7: int, arg8: int, arg9: int) -> None: ...

  @staticmethod
  @overload
  def glCompressedTextureSubImage1DEXT(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: ByteBuffer) -> None: ...

  @staticmethod
  @overload
  def glCompressedTextureSubImage1DEXT(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int, arg7: int) -> None: ...

  @staticmethod
  @overload
  def glCompressedTextureSubImage2DEXT(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int, arg7: int, arg8: ByteBuffer) -> None: ...

  @staticmethod
  @overload
  def glCompressedTextureSubImage2DEXT(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int, arg7: int, arg8: int, arg9: int) -> None: ...

  @staticmethod
  @overload
  def glCompressedTextureSubImage3DEXT(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int, arg7: int, arg8: int, arg9: int, arg10: ByteBuffer) -> None: ...

  @staticmethod
  @overload
  def glCompressedTextureSubImage3DEXT(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int, arg7: int, arg8: int, arg9: int, arg10: int, arg11: int) -> None: ...

  @staticmethod
  def glCopyMultiTexImage1DEXT(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int, arg7: int) -> None: ...

  @staticmethod
  def glCopyMultiTexImage2DEXT(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int, arg7: int, arg8: int) -> None: ...

  @staticmethod
  def glCopyMultiTexSubImage1DEXT(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int) -> None: ...

  @staticmethod
  def glCopyMultiTexSubImage2DEXT(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int, arg7: int, arg8: int) -> None: ...

  @staticmethod
  def glCopyMultiTexSubImage3DEXT(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int, arg7: int, arg8: int, arg9: int) -> None: ...

  @staticmethod
  def glCopyTextureImage1DEXT(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int, arg7: int) -> None: ...

  @staticmethod
  def glCopyTextureImage2DEXT(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int, arg7: int, arg8: int) -> None: ...

  @staticmethod
  def glCopyTextureSubImage1DEXT(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int) -> None: ...

  @staticmethod
  def glCopyTextureSubImage2DEXT(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int, arg7: int, arg8: int) -> None: ...

  @staticmethod
  def glCopyTextureSubImage3DEXT(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int, arg7: int, arg8: int, arg9: int) -> None: ...

  @staticmethod
  def glDisableClientStateIndexedEXT(arg0: int, arg1: int) -> None: ...

  @staticmethod
  def glDisableClientStateiEXT(arg0: int, arg1: int) -> None: ...

  @staticmethod
  def glDisableIndexedEXT(arg0: int, arg1: int) -> None: ...

  @staticmethod
  def glDisableVertexArrayAttribEXT(arg0: int, arg1: int) -> None: ...

  @staticmethod
  def glDisableVertexArrayEXT(arg0: int, arg1: int) -> None: ...

  @staticmethod
  def glEnableClientStateIndexedEXT(arg0: int, arg1: int) -> None: ...

  @staticmethod
  def glEnableClientStateiEXT(arg0: int, arg1: int) -> None: ...

  @staticmethod
  def glEnableIndexedEXT(arg0: int, arg1: int) -> None: ...

  @staticmethod
  def glEnableVertexArrayAttribEXT(arg0: int, arg1: int) -> None: ...

  @staticmethod
  def glEnableVertexArrayEXT(arg0: int, arg1: int) -> None: ...

  @staticmethod
  def glFlushMappedNamedBufferRangeEXT(arg0: int, arg1: int, arg2: int) -> None: ...

  @staticmethod
  def glFramebufferDrawBufferEXT(arg0: int, arg1: int) -> None: ...

  @staticmethod
  @overload
  def glFramebufferDrawBuffersEXT(arg0: int, arg1: list[int]) -> None: ...

  @staticmethod
  @overload
  def glFramebufferDrawBuffersEXT(arg0: int, arg1: IntBuffer) -> None: ...

  @staticmethod
  def glFramebufferReadBufferEXT(arg0: int, arg1: int) -> None: ...

  @staticmethod
  def glGenerateMultiTexMipmapEXT(arg0: int, arg1: int) -> None: ...

  @staticmethod
  def glGenerateTextureMipmapEXT(arg0: int, arg1: int) -> None: ...

  @staticmethod
  def glGetBooleanIndexedEXT(arg0: int, arg1: int) -> bool: ...

  @staticmethod
  def glGetBooleanIndexedvEXT(arg0: int, arg1: int, arg2: ByteBuffer) -> None: ...

  @staticmethod
  @overload
  def glGetCompressedMultiTexImageEXT(arg0: int, arg1: int, arg2: int, arg3: ByteBuffer) -> None: ...

  @staticmethod
  @overload
  def glGetCompressedMultiTexImageEXT(arg0: int, arg1: int, arg2: int, arg3: int) -> None: ...

  @staticmethod
  @overload
  def glGetCompressedTextureImageEXT(arg0: int, arg1: int, arg2: int, arg3: ByteBuffer) -> None: ...

  @staticmethod
  @overload
  def glGetCompressedTextureImageEXT(arg0: int, arg1: int, arg2: int, arg3: int) -> None: ...

  @staticmethod
  def glGetDoubleIndexedEXT(arg0: int, arg1: int) -> float: ...

  @staticmethod
  @overload
  def glGetDoubleIndexedvEXT(arg0: int, arg1: int, arg2: list[float]) -> None: ...

  @staticmethod
  @overload
  def glGetDoubleIndexedvEXT(arg0: int, arg1: int, arg2: DoubleBuffer) -> None: ...

  @staticmethod
  def glGetDoubleiEXT(arg0: int, arg1: int) -> float: ...

  @staticmethod
  @overload
  def glGetDoublei_vEXT(arg0: int, arg1: int, arg2: list[float]) -> None: ...

  @staticmethod
  @overload
  def glGetDoublei_vEXT(arg0: int, arg1: int, arg2: DoubleBuffer) -> None: ...

  @staticmethod
  def glGetFloatIndexedEXT(arg0: int, arg1: int) -> float: ...

  @staticmethod
  @overload
  def glGetFloatIndexedvEXT(arg0: int, arg1: int, arg2: list[float]) -> None: ...

  @staticmethod
  @overload
  def glGetFloatIndexedvEXT(arg0: int, arg1: int, arg2: FloatBuffer) -> None: ...

  @staticmethod
  def glGetFloatiEXT(arg0: int, arg1: int) -> float: ...

  @staticmethod
  @overload
  def glGetFloati_vEXT(arg0: int, arg1: int, arg2: list[float]) -> None: ...

  @staticmethod
  @overload
  def glGetFloati_vEXT(arg0: int, arg1: int, arg2: FloatBuffer) -> None: ...

  @staticmethod
  def glGetFramebufferParameteriEXT(arg0: int, arg1: int) -> int: ...

  @staticmethod
  @overload
  def glGetFramebufferParameterivEXT(arg0: int, arg1: int, arg2: list[int]) -> None: ...

  @staticmethod
  @overload
  def glGetFramebufferParameterivEXT(arg0: int, arg1: int, arg2: IntBuffer) -> None: ...

  @staticmethod
  def glGetIntegerIndexedEXT(arg0: int, arg1: int) -> int: ...

  @staticmethod
  @overload
  def glGetIntegerIndexedvEXT(arg0: int, arg1: int, arg2: list[int]) -> None: ...

  @staticmethod
  @overload
  def glGetIntegerIndexedvEXT(arg0: int, arg1: int, arg2: IntBuffer) -> None: ...

  @staticmethod
  def glGetMultiTexEnvfEXT(arg0: int, arg1: int, arg2: int) -> float: ...

  @staticmethod
  @overload
  def glGetMultiTexEnvfvEXT(arg0: int, arg1: int, arg2: int, arg3: list[float]) -> None: ...

  @staticmethod
  @overload
  def glGetMultiTexEnvfvEXT(arg0: int, arg1: int, arg2: int, arg3: FloatBuffer) -> None: ...

  @staticmethod
  def glGetMultiTexEnviEXT(arg0: int, arg1: int, arg2: int) -> int: ...

  @staticmethod
  @overload
  def glGetMultiTexEnvivEXT(arg0: int, arg1: int, arg2: int, arg3: list[int]) -> None: ...

  @staticmethod
  @overload
  def glGetMultiTexEnvivEXT(arg0: int, arg1: int, arg2: int, arg3: IntBuffer) -> None: ...

  @staticmethod
  def glGetMultiTexGendEXT(arg0: int, arg1: int, arg2: int) -> float: ...

  @staticmethod
  @overload
  def glGetMultiTexGendvEXT(arg0: int, arg1: int, arg2: int, arg3: list[float]) -> None: ...

  @staticmethod
  @overload
  def glGetMultiTexGendvEXT(arg0: int, arg1: int, arg2: int, arg3: DoubleBuffer) -> None: ...

  @staticmethod
  def glGetMultiTexGenfEXT(arg0: int, arg1: int, arg2: int) -> float: ...

  @staticmethod
  @overload
  def glGetMultiTexGenfvEXT(arg0: int, arg1: int, arg2: int, arg3: list[float]) -> None: ...

  @staticmethod
  @overload
  def glGetMultiTexGenfvEXT(arg0: int, arg1: int, arg2: int, arg3: FloatBuffer) -> None: ...

  @staticmethod
  def glGetMultiTexGeniEXT(arg0: int, arg1: int, arg2: int) -> int: ...

  @staticmethod
  @overload
  def glGetMultiTexGenivEXT(arg0: int, arg1: int, arg2: int, arg3: list[int]) -> None: ...

  @staticmethod
  @overload
  def glGetMultiTexGenivEXT(arg0: int, arg1: int, arg2: int, arg3: IntBuffer) -> None: ...

  @staticmethod
  @overload
  def glGetMultiTexImageEXT(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: list[float]) -> None: ...

  @staticmethod
  @overload
  def glGetMultiTexImageEXT(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: list[float]) -> None: ...

  @staticmethod
  @overload
  def glGetMultiTexImageEXT(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: list[int]) -> None: ...

  @staticmethod
  @overload
  def glGetMultiTexImageEXT(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: list[int]) -> None: ...

  @staticmethod
  @overload
  def glGetMultiTexImageEXT(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: ByteBuffer) -> None: ...

  @staticmethod
  @overload
  def glGetMultiTexImageEXT(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: DoubleBuffer) -> None: ...

  @staticmethod
  @overload
  def glGetMultiTexImageEXT(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: FloatBuffer) -> None: ...

  @staticmethod
  @overload
  def glGetMultiTexImageEXT(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: IntBuffer) -> None: ...

  @staticmethod
  @overload
  def glGetMultiTexImageEXT(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: ShortBuffer) -> None: ...

  @staticmethod
  @overload
  def glGetMultiTexImageEXT(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int) -> None: ...

  @staticmethod
  def glGetMultiTexLevelParameterfEXT(arg0: int, arg1: int, arg2: int, arg3: int) -> float: ...

  @staticmethod
  @overload
  def glGetMultiTexLevelParameterfvEXT(arg0: int, arg1: int, arg2: int, arg3: int, arg4: list[float]) -> None: ...

  @staticmethod
  @overload
  def glGetMultiTexLevelParameterfvEXT(arg0: int, arg1: int, arg2: int, arg3: int, arg4: FloatBuffer) -> None: ...

  @staticmethod
  def glGetMultiTexLevelParameteriEXT(arg0: int, arg1: int, arg2: int, arg3: int) -> int: ...

  @staticmethod
  @overload
  def glGetMultiTexLevelParameterivEXT(arg0: int, arg1: int, arg2: int, arg3: int, arg4: list[int]) -> None: ...

  @staticmethod
  @overload
  def glGetMultiTexLevelParameterivEXT(arg0: int, arg1: int, arg2: int, arg3: int, arg4: IntBuffer) -> None: ...

  @staticmethod
  def glGetMultiTexParameterIiEXT(arg0: int, arg1: int, arg2: int) -> int: ...

  @staticmethod
  @overload
  def glGetMultiTexParameterIivEXT(arg0: int, arg1: int, arg2: int, arg3: list[int]) -> None: ...

  @staticmethod
  @overload
  def glGetMultiTexParameterIivEXT(arg0: int, arg1: int, arg2: int, arg3: IntBuffer) -> None: ...

  @staticmethod
  def glGetMultiTexParameterIuiEXT(arg0: int, arg1: int, arg2: int) -> int: ...

  @staticmethod
  @overload
  def glGetMultiTexParameterIuivEXT(arg0: int, arg1: int, arg2: int, arg3: list[int]) -> None: ...

  @staticmethod
  @overload
  def glGetMultiTexParameterIuivEXT(arg0: int, arg1: int, arg2: int, arg3: IntBuffer) -> None: ...

  @staticmethod
  def glGetMultiTexParameterfEXT(arg0: int, arg1: int, arg2: int) -> float: ...

  @staticmethod
  @overload
  def glGetMultiTexParameterfvEXT(arg0: int, arg1: int, arg2: int, arg3: list[float]) -> None: ...

  @staticmethod
  @overload
  def glGetMultiTexParameterfvEXT(arg0: int, arg1: int, arg2: int, arg3: FloatBuffer) -> None: ...

  @staticmethod
  def glGetMultiTexParameteriEXT(arg0: int, arg1: int, arg2: int) -> int: ...

  @staticmethod
  @overload
  def glGetMultiTexParameterivEXT(arg0: int, arg1: int, arg2: int, arg3: list[int]) -> None: ...

  @staticmethod
  @overload
  def glGetMultiTexParameterivEXT(arg0: int, arg1: int, arg2: int, arg3: IntBuffer) -> None: ...

  @staticmethod
  def glGetNamedBufferParameteriEXT(arg0: int, arg1: int) -> int: ...

  @staticmethod
  @overload
  def glGetNamedBufferParameterivEXT(arg0: int, arg1: int, arg2: list[int]) -> None: ...

  @staticmethod
  @overload
  def glGetNamedBufferParameterivEXT(arg0: int, arg1: int, arg2: IntBuffer) -> None: ...

  @staticmethod
  @overload
  def glGetNamedBufferSubDataEXT(arg0: int, arg1: int, arg2: list[float]) -> None: ...

  @staticmethod
  @overload
  def glGetNamedBufferSubDataEXT(arg0: int, arg1: int, arg2: list[float]) -> None: ...

  @staticmethod
  @overload
  def glGetNamedBufferSubDataEXT(arg0: int, arg1: int, arg2: list[int]) -> None: ...

  @staticmethod
  @overload
  def glGetNamedBufferSubDataEXT(arg0: int, arg1: int, arg2: list[int]) -> None: ...

  @staticmethod
  @overload
  def glGetNamedBufferSubDataEXT(arg0: int, arg1: int, arg2: ByteBuffer) -> None: ...

  @staticmethod
  @overload
  def glGetNamedBufferSubDataEXT(arg0: int, arg1: int, arg2: DoubleBuffer) -> None: ...

  @staticmethod
  @overload
  def glGetNamedBufferSubDataEXT(arg0: int, arg1: int, arg2: FloatBuffer) -> None: ...

  @staticmethod
  @overload
  def glGetNamedBufferSubDataEXT(arg0: int, arg1: int, arg2: IntBuffer) -> None: ...

  @staticmethod
  @overload
  def glGetNamedBufferSubDataEXT(arg0: int, arg1: int, arg2: ShortBuffer) -> None: ...

  @staticmethod
  def glGetNamedFramebufferAttachmentParameteriEXT(arg0: int, arg1: int, arg2: int) -> int: ...

  @staticmethod
  @overload
  def glGetNamedFramebufferAttachmentParameterivEXT(arg0: int, arg1: int, arg2: int, arg3: list[int]) -> None: ...

  @staticmethod
  @overload
  def glGetNamedFramebufferAttachmentParameterivEXT(arg0: int, arg1: int, arg2: int, arg3: IntBuffer) -> None: ...

  @staticmethod
  @overload
  def glGetNamedProgramLocalParameterIivEXT(arg0: int, arg1: int, arg2: int, arg3: list[int]) -> None: ...

  @staticmethod
  @overload
  def glGetNamedProgramLocalParameterIivEXT(arg0: int, arg1: int, arg2: int, arg3: IntBuffer) -> None: ...

  @staticmethod
  @overload
  def glGetNamedProgramLocalParameterIuivEXT(arg0: int, arg1: int, arg2: int, arg3: list[int]) -> None: ...

  @staticmethod
  @overload
  def glGetNamedProgramLocalParameterIuivEXT(arg0: int, arg1: int, arg2: int, arg3: IntBuffer) -> None: ...

  @staticmethod
  @overload
  def glGetNamedProgramLocalParameterdvEXT(arg0: int, arg1: int, arg2: int, arg3: list[float]) -> None: ...

  @staticmethod
  @overload
  def glGetNamedProgramLocalParameterdvEXT(arg0: int, arg1: int, arg2: int, arg3: DoubleBuffer) -> None: ...

  @staticmethod
  @overload
  def glGetNamedProgramLocalParameterfvEXT(arg0: int, arg1: int, arg2: int, arg3: list[float]) -> None: ...

  @staticmethod
  @overload
  def glGetNamedProgramLocalParameterfvEXT(arg0: int, arg1: int, arg2: int, arg3: FloatBuffer) -> None: ...

  @staticmethod
  def glGetNamedProgramStringEXT(arg0: int, arg1: int, arg2: int, arg3: ByteBuffer) -> None: ...

  @staticmethod
  def glGetNamedProgramiEXT(arg0: int, arg1: int, arg2: int) -> int: ...

  @staticmethod
  @overload
  def glGetNamedProgramivEXT(arg0: int, arg1: int, arg2: int, arg3: list[int]) -> None: ...

  @staticmethod
  @overload
  def glGetNamedProgramivEXT(arg0: int, arg1: int, arg2: int, arg3: IntBuffer) -> None: ...

  @staticmethod
  def glGetNamedRenderbufferParameteriEXT(arg0: int, arg1: int) -> int: ...

  @staticmethod
  @overload
  def glGetNamedRenderbufferParameterivEXT(arg0: int, arg1: int, arg2: list[int]) -> None: ...

  @staticmethod
  @overload
  def glGetNamedRenderbufferParameterivEXT(arg0: int, arg1: int, arg2: IntBuffer) -> None: ...

  @staticmethod
  def glGetPointerIndexedEXT(arg0: int, arg1: int) -> int: ...

  @staticmethod
  def glGetPointerIndexedvEXT(arg0: int, arg1: int, arg2: PointerBuffer) -> None: ...

  @staticmethod
  def glGetPointeriEXT(arg0: int, arg1: int) -> int: ...

  @staticmethod
  def glGetPointeri_vEXT(arg0: int, arg1: int, arg2: PointerBuffer) -> None: ...

  @staticmethod
  @overload
  def glGetTextureImageEXT(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: list[float]) -> None: ...

  @staticmethod
  @overload
  def glGetTextureImageEXT(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: list[float]) -> None: ...

  @staticmethod
  @overload
  def glGetTextureImageEXT(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: list[int]) -> None: ...

  @staticmethod
  @overload
  def glGetTextureImageEXT(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: list[int]) -> None: ...

  @staticmethod
  @overload
  def glGetTextureImageEXT(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: ByteBuffer) -> None: ...

  @staticmethod
  @overload
  def glGetTextureImageEXT(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: DoubleBuffer) -> None: ...

  @staticmethod
  @overload
  def glGetTextureImageEXT(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: FloatBuffer) -> None: ...

  @staticmethod
  @overload
  def glGetTextureImageEXT(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: IntBuffer) -> None: ...

  @staticmethod
  @overload
  def glGetTextureImageEXT(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: ShortBuffer) -> None: ...

  @staticmethod
  @overload
  def glGetTextureImageEXT(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int) -> None: ...

  @staticmethod
  def glGetTextureLevelParameterfEXT(arg0: int, arg1: int, arg2: int, arg3: int) -> float: ...

  @staticmethod
  @overload
  def glGetTextureLevelParameterfvEXT(arg0: int, arg1: int, arg2: int, arg3: int, arg4: list[float]) -> None: ...

  @staticmethod
  @overload
  def glGetTextureLevelParameterfvEXT(arg0: int, arg1: int, arg2: int, arg3: int, arg4: FloatBuffer) -> None: ...

  @staticmethod
  def glGetTextureLevelParameteriEXT(arg0: int, arg1: int, arg2: int, arg3: int) -> int: ...

  @staticmethod
  @overload
  def glGetTextureLevelParameterivEXT(arg0: int, arg1: int, arg2: int, arg3: int, arg4: list[int]) -> None: ...

  @staticmethod
  @overload
  def glGetTextureLevelParameterivEXT(arg0: int, arg1: int, arg2: int, arg3: int, arg4: IntBuffer) -> None: ...

  @staticmethod
  def glGetTextureParameterIiEXT(arg0: int, arg1: int, arg2: int) -> int: ...

  @staticmethod
  @overload
  def glGetTextureParameterIivEXT(arg0: int, arg1: int, arg2: int, arg3: list[int]) -> None: ...

  @staticmethod
  @overload
  def glGetTextureParameterIivEXT(arg0: int, arg1: int, arg2: int, arg3: IntBuffer) -> None: ...

  @staticmethod
  def glGetTextureParameterIuiEXT(arg0: int, arg1: int, arg2: int) -> int: ...

  @staticmethod
  @overload
  def glGetTextureParameterIuivEXT(arg0: int, arg1: int, arg2: int, arg3: list[int]) -> None: ...

  @staticmethod
  @overload
  def glGetTextureParameterIuivEXT(arg0: int, arg1: int, arg2: int, arg3: IntBuffer) -> None: ...

  @staticmethod
  def glGetTextureParameterfEXT(arg0: int, arg1: int, arg2: int) -> float: ...

  @staticmethod
  @overload
  def glGetTextureParameterfvEXT(arg0: int, arg1: int, arg2: int, arg3: list[float]) -> None: ...

  @staticmethod
  @overload
  def glGetTextureParameterfvEXT(arg0: int, arg1: int, arg2: int, arg3: FloatBuffer) -> None: ...

  @staticmethod
  def glGetTextureParameteriEXT(arg0: int, arg1: int, arg2: int) -> int: ...

  @staticmethod
  @overload
  def glGetTextureParameterivEXT(arg0: int, arg1: int, arg2: int, arg3: list[int]) -> None: ...

  @staticmethod
  @overload
  def glGetTextureParameterivEXT(arg0: int, arg1: int, arg2: int, arg3: IntBuffer) -> None: ...

  @staticmethod
  def glGetVertexArrayIntegerEXT(arg0: int, arg1: int) -> int: ...

  @staticmethod
  def glGetVertexArrayIntegeriEXT(arg0: int, arg1: int, arg2: int) -> int: ...

  @staticmethod
  @overload
  def glGetVertexArrayIntegeri_vEXT(arg0: int, arg1: int, arg2: int, arg3: list[int]) -> None: ...

  @staticmethod
  @overload
  def glGetVertexArrayIntegeri_vEXT(arg0: int, arg1: int, arg2: int, arg3: IntBuffer) -> None: ...

  @staticmethod
  @overload
  def glGetVertexArrayIntegervEXT(arg0: int, arg1: int, arg2: list[int]) -> None: ...

  @staticmethod
  @overload
  def glGetVertexArrayIntegervEXT(arg0: int, arg1: int, arg2: IntBuffer) -> None: ...

  @staticmethod
  def glGetVertexArrayPointerEXT(arg0: int, arg1: int) -> int: ...

  @staticmethod
  def glGetVertexArrayPointeriEXT(arg0: int, arg1: int, arg2: int) -> int: ...

  @staticmethod
  def glGetVertexArrayPointeri_vEXT(arg0: int, arg1: int, arg2: int, arg3: PointerBuffer) -> None: ...

  @staticmethod
  def glGetVertexArrayPointervEXT(arg0: int, arg1: int, arg2: PointerBuffer) -> None: ...

  @staticmethod
  def glIsEnabledIndexedEXT(arg0: int, arg1: int) -> bool: ...

  @staticmethod
  @overload
  def glMapNamedBufferEXT(arg0: int, arg1: int) -> ByteBuffer: ...

  @staticmethod
  @overload
  def glMapNamedBufferEXT(arg0: int, arg1: int, arg2: ByteBuffer) -> ByteBuffer: ...

  @staticmethod
  @overload
  def glMapNamedBufferEXT(arg0: int, arg1: int, arg2: int, arg3: ByteBuffer) -> ByteBuffer: ...

  @staticmethod
  @overload
  def glMapNamedBufferRangeEXT(arg0: int, arg1: int, arg2: int, arg3: int) -> ByteBuffer: ...

  @staticmethod
  @overload
  def glMapNamedBufferRangeEXT(arg0: int, arg1: int, arg2: int, arg3: int, arg4: ByteBuffer) -> ByteBuffer: ...

  @staticmethod
  def glMatrixFrustumEXT(arg0: int, arg1: float, arg2: float, arg3: float, arg4: float, arg5: float, arg6: float) -> None: ...

  @staticmethod
  def glMatrixLoadIdentityEXT(arg0: int) -> None: ...

  @staticmethod
  @overload
  def glMatrixLoadTransposedEXT(arg0: int, arg1: list[float]) -> None: ...

  @staticmethod
  @overload
  def glMatrixLoadTransposedEXT(arg0: int, arg1: DoubleBuffer) -> None: ...

  @staticmethod
  @overload
  def glMatrixLoadTransposefEXT(arg0: int, arg1: list[float]) -> None: ...

  @staticmethod
  @overload
  def glMatrixLoadTransposefEXT(arg0: int, arg1: FloatBuffer) -> None: ...

  @staticmethod
  @overload
  def glMatrixLoaddEXT(arg0: int, arg1: list[float]) -> None: ...

  @staticmethod
  @overload
  def glMatrixLoaddEXT(arg0: int, arg1: DoubleBuffer) -> None: ...

  @staticmethod
  @overload
  def glMatrixLoadfEXT(arg0: int, arg1: list[float]) -> None: ...

  @staticmethod
  @overload
  def glMatrixLoadfEXT(arg0: int, arg1: FloatBuffer) -> None: ...

  @staticmethod
  @overload
  def glMatrixMultTransposedEXT(arg0: int, arg1: list[float]) -> None: ...

  @staticmethod
  @overload
  def glMatrixMultTransposedEXT(arg0: int, arg1: DoubleBuffer) -> None: ...

  @staticmethod
  @overload
  def glMatrixMultTransposefEXT(arg0: int, arg1: list[float]) -> None: ...

  @staticmethod
  @overload
  def glMatrixMultTransposefEXT(arg0: int, arg1: FloatBuffer) -> None: ...

  @staticmethod
  @overload
  def glMatrixMultdEXT(arg0: int, arg1: list[float]) -> None: ...

  @staticmethod
  @overload
  def glMatrixMultdEXT(arg0: int, arg1: DoubleBuffer) -> None: ...

  @staticmethod
  @overload
  def glMatrixMultfEXT(arg0: int, arg1: list[float]) -> None: ...

  @staticmethod
  @overload
  def glMatrixMultfEXT(arg0: int, arg1: FloatBuffer) -> None: ...

  @staticmethod
  def glMatrixOrthoEXT(arg0: int, arg1: float, arg2: float, arg3: float, arg4: float, arg5: float, arg6: float) -> None: ...

  @staticmethod
  def glMatrixPopEXT(arg0: int) -> None: ...

  @staticmethod
  def glMatrixPushEXT(arg0: int) -> None: ...

  @staticmethod
  def glMatrixRotatedEXT(arg0: int, arg1: float, arg2: float, arg3: float, arg4: float) -> None: ...

  @staticmethod
  def glMatrixRotatefEXT(arg0: int, arg1: float, arg2: float, arg3: float, arg4: float) -> None: ...

  @staticmethod
  def glMatrixScaledEXT(arg0: int, arg1: float, arg2: float, arg3: float) -> None: ...

  @staticmethod
  def glMatrixScalefEXT(arg0: int, arg1: float, arg2: float, arg3: float) -> None: ...

  @staticmethod
  def glMatrixTranslatedEXT(arg0: int, arg1: float, arg2: float, arg3: float) -> None: ...

  @staticmethod
  def glMatrixTranslatefEXT(arg0: int, arg1: float, arg2: float, arg3: float) -> None: ...

  @staticmethod
  def glMultiTexBufferEXT(arg0: int, arg1: int, arg2: int, arg3: int) -> None: ...

  @staticmethod
  @overload
  def glMultiTexCoordPointerEXT(arg0: int, arg1: int, arg2: int, arg3: int, arg4: list[float]) -> None: ...

  @staticmethod
  @overload
  def glMultiTexCoordPointerEXT(arg0: int, arg1: int, arg2: int, arg3: int, arg4: list[int]) -> None: ...

  @staticmethod
  @overload
  def glMultiTexCoordPointerEXT(arg0: int, arg1: int, arg2: int, arg3: int, arg4: list[int]) -> None: ...

  @staticmethod
  @overload
  def glMultiTexCoordPointerEXT(arg0: int, arg1: int, arg2: int, arg3: int, arg4: ByteBuffer) -> None: ...

  @staticmethod
  @overload
  def glMultiTexCoordPointerEXT(arg0: int, arg1: int, arg2: int, arg3: int, arg4: FloatBuffer) -> None: ...

  @staticmethod
  @overload
  def glMultiTexCoordPointerEXT(arg0: int, arg1: int, arg2: int, arg3: int, arg4: IntBuffer) -> None: ...

  @staticmethod
  @overload
  def glMultiTexCoordPointerEXT(arg0: int, arg1: int, arg2: int, arg3: int, arg4: ShortBuffer) -> None: ...

  @staticmethod
  @overload
  def glMultiTexCoordPointerEXT(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int) -> None: ...

  @staticmethod
  def glMultiTexEnvfEXT(arg0: int, arg1: int, arg2: int, arg3: float) -> None: ...

  @staticmethod
  @overload
  def glMultiTexEnvfvEXT(arg0: int, arg1: int, arg2: int, arg3: list[float]) -> None: ...

  @staticmethod
  @overload
  def glMultiTexEnvfvEXT(arg0: int, arg1: int, arg2: int, arg3: FloatBuffer) -> None: ...

  @staticmethod
  def glMultiTexEnviEXT(arg0: int, arg1: int, arg2: int, arg3: int) -> None: ...

  @staticmethod
  @overload
  def glMultiTexEnvivEXT(arg0: int, arg1: int, arg2: int, arg3: list[int]) -> None: ...

  @staticmethod
  @overload
  def glMultiTexEnvivEXT(arg0: int, arg1: int, arg2: int, arg3: IntBuffer) -> None: ...

  @staticmethod
  def glMultiTexGendEXT(arg0: int, arg1: int, arg2: int, arg3: float) -> None: ...

  @staticmethod
  @overload
  def glMultiTexGendvEXT(arg0: int, arg1: int, arg2: int, arg3: list[float]) -> None: ...

  @staticmethod
  @overload
  def glMultiTexGendvEXT(arg0: int, arg1: int, arg2: int, arg3: DoubleBuffer) -> None: ...

  @staticmethod
  def glMultiTexGenfEXT(arg0: int, arg1: int, arg2: int, arg3: float) -> None: ...

  @staticmethod
  @overload
  def glMultiTexGenfvEXT(arg0: int, arg1: int, arg2: int, arg3: list[float]) -> None: ...

  @staticmethod
  @overload
  def glMultiTexGenfvEXT(arg0: int, arg1: int, arg2: int, arg3: FloatBuffer) -> None: ...

  @staticmethod
  def glMultiTexGeniEXT(arg0: int, arg1: int, arg2: int, arg3: int) -> None: ...

  @staticmethod
  @overload
  def glMultiTexGenivEXT(arg0: int, arg1: int, arg2: int, arg3: list[int]) -> None: ...

  @staticmethod
  @overload
  def glMultiTexGenivEXT(arg0: int, arg1: int, arg2: int, arg3: IntBuffer) -> None: ...

  @staticmethod
  @overload
  def glMultiTexImage1DEXT(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int, arg7: int, arg8: list[float]) -> None: ...

  @staticmethod
  @overload
  def glMultiTexImage1DEXT(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int, arg7: int, arg8: list[float]) -> None: ...

  @staticmethod
  @overload
  def glMultiTexImage1DEXT(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int, arg7: int, arg8: list[int]) -> None: ...

  @staticmethod
  @overload
  def glMultiTexImage1DEXT(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int, arg7: int, arg8: list[int]) -> None: ...

  @staticmethod
  @overload
  def glMultiTexImage1DEXT(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int, arg7: int, arg8: ByteBuffer) -> None: ...

  @staticmethod
  @overload
  def glMultiTexImage1DEXT(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int, arg7: int, arg8: DoubleBuffer) -> None: ...

  @staticmethod
  @overload
  def glMultiTexImage1DEXT(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int, arg7: int, arg8: FloatBuffer) -> None: ...

  @staticmethod
  @overload
  def glMultiTexImage1DEXT(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int, arg7: int, arg8: IntBuffer) -> None: ...

  @staticmethod
  @overload
  def glMultiTexImage1DEXT(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int, arg7: int, arg8: ShortBuffer) -> None: ...

  @staticmethod
  @overload
  def glMultiTexImage1DEXT(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int, arg7: int, arg8: int) -> None: ...

  @staticmethod
  @overload
  def glMultiTexImage2DEXT(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int, arg7: int, arg8: int, arg9: list[float]) -> None: ...

  @staticmethod
  @overload
  def glMultiTexImage2DEXT(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int, arg7: int, arg8: int, arg9: list[float]) -> None: ...

  @staticmethod
  @overload
  def glMultiTexImage2DEXT(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int, arg7: int, arg8: int, arg9: list[int]) -> None: ...

  @staticmethod
  @overload
  def glMultiTexImage2DEXT(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int, arg7: int, arg8: int, arg9: list[int]) -> None: ...

  @staticmethod
  @overload
  def glMultiTexImage2DEXT(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int, arg7: int, arg8: int, arg9: ByteBuffer) -> None: ...

  @staticmethod
  @overload
  def glMultiTexImage2DEXT(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int, arg7: int, arg8: int, arg9: DoubleBuffer) -> None: ...

  @staticmethod
  @overload
  def glMultiTexImage2DEXT(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int, arg7: int, arg8: int, arg9: FloatBuffer) -> None: ...

  @staticmethod
  @overload
  def glMultiTexImage2DEXT(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int, arg7: int, arg8: int, arg9: IntBuffer) -> None: ...

  @staticmethod
  @overload
  def glMultiTexImage2DEXT(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int, arg7: int, arg8: int, arg9: ShortBuffer) -> None: ...

  @staticmethod
  @overload
  def glMultiTexImage2DEXT(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int, arg7: int, arg8: int, arg9: int) -> None: ...

  @staticmethod
  @overload
  def glMultiTexImage3DEXT(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int, arg7: int, arg8: int, arg9: int, arg10: list[float]) -> None: ...

  @staticmethod
  @overload
  def glMultiTexImage3DEXT(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int, arg7: int, arg8: int, arg9: int, arg10: list[float]) -> None: ...

  @staticmethod
  @overload
  def glMultiTexImage3DEXT(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int, arg7: int, arg8: int, arg9: int, arg10: list[int]) -> None: ...

  @staticmethod
  @overload
  def glMultiTexImage3DEXT(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int, arg7: int, arg8: int, arg9: int, arg10: list[int]) -> None: ...

  @staticmethod
  @overload
  def glMultiTexImage3DEXT(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int, arg7: int, arg8: int, arg9: int, arg10: ByteBuffer) -> None: ...

  @staticmethod
  @overload
  def glMultiTexImage3DEXT(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int, arg7: int, arg8: int, arg9: int, arg10: DoubleBuffer) -> None: ...

  @staticmethod
  @overload
  def glMultiTexImage3DEXT(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int, arg7: int, arg8: int, arg9: int, arg10: FloatBuffer) -> None: ...

  @staticmethod
  @overload
  def glMultiTexImage3DEXT(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int, arg7: int, arg8: int, arg9: int, arg10: IntBuffer) -> None: ...

  @staticmethod
  @overload
  def glMultiTexImage3DEXT(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int, arg7: int, arg8: int, arg9: int, arg10: ShortBuffer) -> None: ...

  @staticmethod
  @overload
  def glMultiTexImage3DEXT(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int, arg7: int, arg8: int, arg9: int, arg10: int) -> None: ...

  @staticmethod
  @overload
  def glMultiTexParameterIivEXT(arg0: int, arg1: int, arg2: int, arg3: list[int]) -> None: ...

  @staticmethod
  @overload
  def glMultiTexParameterIivEXT(arg0: int, arg1: int, arg2: int, arg3: IntBuffer) -> None: ...

  @staticmethod
  @overload
  def glMultiTexParameterIuivEXT(arg0: int, arg1: int, arg2: int, arg3: list[int]) -> None: ...

  @staticmethod
  @overload
  def glMultiTexParameterIuivEXT(arg0: int, arg1: int, arg2: int, arg3: IntBuffer) -> None: ...

  @staticmethod
  def glMultiTexParameterfEXT(arg0: int, arg1: int, arg2: int, arg3: float) -> None: ...

  @staticmethod
  @overload
  def glMultiTexParameterfvEXT(arg0: int, arg1: int, arg2: int, arg3: list[float]) -> None: ...

  @staticmethod
  @overload
  def glMultiTexParameterfvEXT(arg0: int, arg1: int, arg2: int, arg3: FloatBuffer) -> None: ...

  @staticmethod
  def glMultiTexParameteriEXT(arg0: int, arg1: int, arg2: int, arg3: int) -> None: ...

  @staticmethod
  @overload
  def glMultiTexParameterivEXT(arg0: int, arg1: int, arg2: int, arg3: list[int]) -> None: ...

  @staticmethod
  @overload
  def glMultiTexParameterivEXT(arg0: int, arg1: int, arg2: int, arg3: IntBuffer) -> None: ...

  @staticmethod
  def glMultiTexRenderbufferEXT(arg0: int, arg1: int, arg2: int) -> None: ...

  @staticmethod
  @overload
  def glMultiTexSubImage1DEXT(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int, arg7: list[float]) -> None: ...

  @staticmethod
  @overload
  def glMultiTexSubImage1DEXT(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int, arg7: list[float]) -> None: ...

  @staticmethod
  @overload
  def glMultiTexSubImage1DEXT(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int, arg7: list[int]) -> None: ...

  @staticmethod
  @overload
  def glMultiTexSubImage1DEXT(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int, arg7: list[int]) -> None: ...

  @staticmethod
  @overload
  def glMultiTexSubImage1DEXT(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int, arg7: ByteBuffer) -> None: ...

  @staticmethod
  @overload
  def glMultiTexSubImage1DEXT(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int, arg7: DoubleBuffer) -> None: ...

  @staticmethod
  @overload
  def glMultiTexSubImage1DEXT(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int, arg7: FloatBuffer) -> None: ...

  @staticmethod
  @overload
  def glMultiTexSubImage1DEXT(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int, arg7: IntBuffer) -> None: ...

  @staticmethod
  @overload
  def glMultiTexSubImage1DEXT(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int, arg7: ShortBuffer) -> None: ...

  @staticmethod
  @overload
  def glMultiTexSubImage1DEXT(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int, arg7: int) -> None: ...

  @staticmethod
  @overload
  def glMultiTexSubImage2DEXT(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int, arg7: int, arg8: int, arg9: list[float]) -> None: ...

  @staticmethod
  @overload
  def glMultiTexSubImage2DEXT(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int, arg7: int, arg8: int, arg9: list[float]) -> None: ...

  @staticmethod
  @overload
  def glMultiTexSubImage2DEXT(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int, arg7: int, arg8: int, arg9: list[int]) -> None: ...

  @staticmethod
  @overload
  def glMultiTexSubImage2DEXT(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int, arg7: int, arg8: int, arg9: list[int]) -> None: ...

  @staticmethod
  @overload
  def glMultiTexSubImage2DEXT(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int, arg7: int, arg8: int, arg9: ByteBuffer) -> None: ...

  @staticmethod
  @overload
  def glMultiTexSubImage2DEXT(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int, arg7: int, arg8: int, arg9: DoubleBuffer) -> None: ...

  @staticmethod
  @overload
  def glMultiTexSubImage2DEXT(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int, arg7: int, arg8: int, arg9: FloatBuffer) -> None: ...

  @staticmethod
  @overload
  def glMultiTexSubImage2DEXT(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int, arg7: int, arg8: int, arg9: IntBuffer) -> None: ...

  @staticmethod
  @overload
  def glMultiTexSubImage2DEXT(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int, arg7: int, arg8: int, arg9: ShortBuffer) -> None: ...

  @staticmethod
  @overload
  def glMultiTexSubImage2DEXT(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int, arg7: int, arg8: int, arg9: int) -> None: ...

  @staticmethod
  @overload
  def glMultiTexSubImage3DEXT(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int, arg7: int, arg8: int, arg9: int, arg10: int, arg11: list[float]) -> None: ...

  @staticmethod
  @overload
  def glMultiTexSubImage3DEXT(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int, arg7: int, arg8: int, arg9: int, arg10: int, arg11: list[float]) -> None: ...

  @staticmethod
  @overload
  def glMultiTexSubImage3DEXT(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int, arg7: int, arg8: int, arg9: int, arg10: int, arg11: list[int]) -> None: ...

  @staticmethod
  @overload
  def glMultiTexSubImage3DEXT(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int, arg7: int, arg8: int, arg9: int, arg10: int, arg11: list[int]) -> None: ...

  @staticmethod
  @overload
  def glMultiTexSubImage3DEXT(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int, arg7: int, arg8: int, arg9: int, arg10: int, arg11: ByteBuffer) -> None: ...

  @staticmethod
  @overload
  def glMultiTexSubImage3DEXT(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int, arg7: int, arg8: int, arg9: int, arg10: int, arg11: DoubleBuffer) -> None: ...

  @staticmethod
  @overload
  def glMultiTexSubImage3DEXT(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int, arg7: int, arg8: int, arg9: int, arg10: int, arg11: FloatBuffer) -> None: ...

  @staticmethod
  @overload
  def glMultiTexSubImage3DEXT(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int, arg7: int, arg8: int, arg9: int, arg10: int, arg11: IntBuffer) -> None: ...

  @staticmethod
  @overload
  def glMultiTexSubImage3DEXT(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int, arg7: int, arg8: int, arg9: int, arg10: int, arg11: ShortBuffer) -> None: ...

  @staticmethod
  @overload
  def glMultiTexSubImage3DEXT(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int, arg7: int, arg8: int, arg9: int, arg10: int, arg11: int) -> None: ...

  @staticmethod
  @overload
  def glNamedBufferDataEXT(arg0: int, arg1: list[float], arg2: int) -> None: ...

  @staticmethod
  @overload
  def glNamedBufferDataEXT(arg0: int, arg1: list[float], arg2: int) -> None: ...

  @staticmethod
  @overload
  def glNamedBufferDataEXT(arg0: int, arg1: list[int], arg2: int) -> None: ...

  @staticmethod
  @overload
  def glNamedBufferDataEXT(arg0: int, arg1: list[int], arg2: int) -> None: ...

  @staticmethod
  @overload
  def glNamedBufferDataEXT(arg0: int, arg1: ByteBuffer, arg2: int) -> None: ...

  @staticmethod
  @overload
  def glNamedBufferDataEXT(arg0: int, arg1: DoubleBuffer, arg2: int) -> None: ...

  @staticmethod
  @overload
  def glNamedBufferDataEXT(arg0: int, arg1: FloatBuffer, arg2: int) -> None: ...

  @staticmethod
  @overload
  def glNamedBufferDataEXT(arg0: int, arg1: IntBuffer, arg2: int) -> None: ...

  @staticmethod
  @overload
  def glNamedBufferDataEXT(arg0: int, arg1: ShortBuffer, arg2: int) -> None: ...

  @staticmethod
  @overload
  def glNamedBufferDataEXT(arg0: int, arg1: int, arg2: int) -> None: ...

  @staticmethod
  @overload
  def glNamedBufferSubDataEXT(arg0: int, arg1: int, arg2: list[float]) -> None: ...

  @staticmethod
  @overload
  def glNamedBufferSubDataEXT(arg0: int, arg1: int, arg2: list[float]) -> None: ...

  @staticmethod
  @overload
  def glNamedBufferSubDataEXT(arg0: int, arg1: int, arg2: list[int]) -> None: ...

  @staticmethod
  @overload
  def glNamedBufferSubDataEXT(arg0: int, arg1: int, arg2: list[int]) -> None: ...

  @staticmethod
  @overload
  def glNamedBufferSubDataEXT(arg0: int, arg1: int, arg2: ByteBuffer) -> None: ...

  @staticmethod
  @overload
  def glNamedBufferSubDataEXT(arg0: int, arg1: int, arg2: DoubleBuffer) -> None: ...

  @staticmethod
  @overload
  def glNamedBufferSubDataEXT(arg0: int, arg1: int, arg2: FloatBuffer) -> None: ...

  @staticmethod
  @overload
  def glNamedBufferSubDataEXT(arg0: int, arg1: int, arg2: IntBuffer) -> None: ...

  @staticmethod
  @overload
  def glNamedBufferSubDataEXT(arg0: int, arg1: int, arg2: ShortBuffer) -> None: ...

  @staticmethod
  def glNamedCopyBufferSubDataEXT(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int) -> None: ...

  @staticmethod
  def glNamedFramebufferRenderbufferEXT(arg0: int, arg1: int, arg2: int, arg3: int) -> None: ...

  @staticmethod
  def glNamedFramebufferTexture1DEXT(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int) -> None: ...

  @staticmethod
  def glNamedFramebufferTexture2DEXT(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int) -> None: ...

  @staticmethod
  def glNamedFramebufferTexture3DEXT(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int) -> None: ...

  @staticmethod
  def glNamedFramebufferTextureEXT(arg0: int, arg1: int, arg2: int, arg3: int) -> None: ...

  @staticmethod
  def glNamedFramebufferTextureFaceEXT(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int) -> None: ...

  @staticmethod
  def glNamedFramebufferTextureLayerEXT(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int) -> None: ...

  @staticmethod
  def glNamedProgramLocalParameter4dEXT(arg0: int, arg1: int, arg2: int, arg3: float, arg4: float, arg5: float, arg6: float) -> None: ...

  @staticmethod
  @overload
  def glNamedProgramLocalParameter4dvEXT(arg0: int, arg1: int, arg2: int, arg3: list[float]) -> None: ...

  @staticmethod
  @overload
  def glNamedProgramLocalParameter4dvEXT(arg0: int, arg1: int, arg2: int, arg3: DoubleBuffer) -> None: ...

  @staticmethod
  def glNamedProgramLocalParameter4fEXT(arg0: int, arg1: int, arg2: int, arg3: float, arg4: float, arg5: float, arg6: float) -> None: ...

  @staticmethod
  @overload
  def glNamedProgramLocalParameter4fvEXT(arg0: int, arg1: int, arg2: int, arg3: list[float]) -> None: ...

  @staticmethod
  @overload
  def glNamedProgramLocalParameter4fvEXT(arg0: int, arg1: int, arg2: int, arg3: FloatBuffer) -> None: ...

  @staticmethod
  def glNamedProgramLocalParameterI4iEXT(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int) -> None: ...

  @staticmethod
  @overload
  def glNamedProgramLocalParameterI4ivEXT(arg0: int, arg1: int, arg2: int, arg3: list[int]) -> None: ...

  @staticmethod
  @overload
  def glNamedProgramLocalParameterI4ivEXT(arg0: int, arg1: int, arg2: int, arg3: IntBuffer) -> None: ...

  @staticmethod
  def glNamedProgramLocalParameterI4uiEXT(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int) -> None: ...

  @staticmethod
  @overload
  def glNamedProgramLocalParameterI4uivEXT(arg0: int, arg1: int, arg2: int, arg3: list[int]) -> None: ...

  @staticmethod
  @overload
  def glNamedProgramLocalParameterI4uivEXT(arg0: int, arg1: int, arg2: int, arg3: IntBuffer) -> None: ...

  @staticmethod
  @overload
  def glNamedProgramLocalParameters4fvEXT(arg0: int, arg1: int, arg2: int, arg3: list[float]) -> None: ...

  @staticmethod
  @overload
  def glNamedProgramLocalParameters4fvEXT(arg0: int, arg1: int, arg2: int, arg3: FloatBuffer) -> None: ...

  @staticmethod
  @overload
  def glNamedProgramLocalParametersI4ivEXT(arg0: int, arg1: int, arg2: int, arg3: list[int]) -> None: ...

  @staticmethod
  @overload
  def glNamedProgramLocalParametersI4ivEXT(arg0: int, arg1: int, arg2: int, arg3: IntBuffer) -> None: ...

  @staticmethod
  @overload
  def glNamedProgramLocalParametersI4uivEXT(arg0: int, arg1: int, arg2: int, arg3: list[int]) -> None: ...

  @staticmethod
  @overload
  def glNamedProgramLocalParametersI4uivEXT(arg0: int, arg1: int, arg2: int, arg3: IntBuffer) -> None: ...

  @staticmethod
  def glNamedProgramStringEXT(arg0: int, arg1: int, arg2: int, arg3: ByteBuffer) -> None: ...

  @staticmethod
  def glNamedRenderbufferStorageEXT(arg0: int, arg1: int, arg2: int, arg3: int) -> None: ...

  @staticmethod
  def glNamedRenderbufferStorageMultisampleCoverageEXT(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int) -> None: ...

  @staticmethod
  def glNamedRenderbufferStorageMultisampleEXT(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int) -> None: ...

  @staticmethod
  def glProgramUniform1fEXT(arg0: int, arg1: int, arg2: float) -> None: ...

  @staticmethod
  @overload
  def glProgramUniform1fvEXT(arg0: int, arg1: int, arg2: list[float]) -> None: ...

  @staticmethod
  @overload
  def glProgramUniform1fvEXT(arg0: int, arg1: int, arg2: FloatBuffer) -> None: ...

  @staticmethod
  def glProgramUniform1iEXT(arg0: int, arg1: int, arg2: int) -> None: ...

  @staticmethod
  @overload
  def glProgramUniform1ivEXT(arg0: int, arg1: int, arg2: list[int]) -> None: ...

  @staticmethod
  @overload
  def glProgramUniform1ivEXT(arg0: int, arg1: int, arg2: IntBuffer) -> None: ...

  @staticmethod
  def glProgramUniform1uiEXT(arg0: int, arg1: int, arg2: int) -> None: ...

  @staticmethod
  @overload
  def glProgramUniform1uivEXT(arg0: int, arg1: int, arg2: list[int]) -> None: ...

  @staticmethod
  @overload
  def glProgramUniform1uivEXT(arg0: int, arg1: int, arg2: IntBuffer) -> None: ...

  @staticmethod
  def glProgramUniform2fEXT(arg0: int, arg1: int, arg2: float, arg3: float) -> None: ...

  @staticmethod
  @overload
  def glProgramUniform2fvEXT(arg0: int, arg1: int, arg2: list[float]) -> None: ...

  @staticmethod
  @overload
  def glProgramUniform2fvEXT(arg0: int, arg1: int, arg2: FloatBuffer) -> None: ...

  @staticmethod
  def glProgramUniform2iEXT(arg0: int, arg1: int, arg2: int, arg3: int) -> None: ...

  @staticmethod
  @overload
  def glProgramUniform2ivEXT(arg0: int, arg1: int, arg2: list[int]) -> None: ...

  @staticmethod
  @overload
  def glProgramUniform2ivEXT(arg0: int, arg1: int, arg2: IntBuffer) -> None: ...

  @staticmethod
  def glProgramUniform2uiEXT(arg0: int, arg1: int, arg2: int, arg3: int) -> None: ...

  @staticmethod
  @overload
  def glProgramUniform2uivEXT(arg0: int, arg1: int, arg2: list[int]) -> None: ...

  @staticmethod
  @overload
  def glProgramUniform2uivEXT(arg0: int, arg1: int, arg2: IntBuffer) -> None: ...

  @staticmethod
  def glProgramUniform3fEXT(arg0: int, arg1: int, arg2: float, arg3: float, arg4: float) -> None: ...

  @staticmethod
  @overload
  def glProgramUniform3fvEXT(arg0: int, arg1: int, arg2: list[float]) -> None: ...

  @staticmethod
  @overload
  def glProgramUniform3fvEXT(arg0: int, arg1: int, arg2: FloatBuffer) -> None: ...

  @staticmethod
  def glProgramUniform3iEXT(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int) -> None: ...

  @staticmethod
  @overload
  def glProgramUniform3ivEXT(arg0: int, arg1: int, arg2: list[int]) -> None: ...

  @staticmethod
  @overload
  def glProgramUniform3ivEXT(arg0: int, arg1: int, arg2: IntBuffer) -> None: ...

  @staticmethod
  def glProgramUniform3uiEXT(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int) -> None: ...

  @staticmethod
  @overload
  def glProgramUniform3uivEXT(arg0: int, arg1: int, arg2: list[int]) -> None: ...

  @staticmethod
  @overload
  def glProgramUniform3uivEXT(arg0: int, arg1: int, arg2: IntBuffer) -> None: ...

  @staticmethod
  def glProgramUniform4fEXT(arg0: int, arg1: int, arg2: float, arg3: float, arg4: float, arg5: float) -> None: ...

  @staticmethod
  @overload
  def glProgramUniform4fvEXT(arg0: int, arg1: int, arg2: list[float]) -> None: ...

  @staticmethod
  @overload
  def glProgramUniform4fvEXT(arg0: int, arg1: int, arg2: FloatBuffer) -> None: ...

  @staticmethod
  def glProgramUniform4iEXT(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int) -> None: ...

  @staticmethod
  @overload
  def glProgramUniform4ivEXT(arg0: int, arg1: int, arg2: list[int]) -> None: ...

  @staticmethod
  @overload
  def glProgramUniform4ivEXT(arg0: int, arg1: int, arg2: IntBuffer) -> None: ...

  @staticmethod
  def glProgramUniform4uiEXT(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int) -> None: ...

  @staticmethod
  @overload
  def glProgramUniform4uivEXT(arg0: int, arg1: int, arg2: list[int]) -> None: ...

  @staticmethod
  @overload
  def glProgramUniform4uivEXT(arg0: int, arg1: int, arg2: IntBuffer) -> None: ...

  @staticmethod
  @overload
  def glProgramUniformMatrix2fvEXT(arg0: int, arg1: int, arg2: bool, arg3: list[float]) -> None: ...

  @staticmethod
  @overload
  def glProgramUniformMatrix2fvEXT(arg0: int, arg1: int, arg2: bool, arg3: FloatBuffer) -> None: ...

  @staticmethod
  @overload
  def glProgramUniformMatrix2x3fvEXT(arg0: int, arg1: int, arg2: bool, arg3: list[float]) -> None: ...

  @staticmethod
  @overload
  def glProgramUniformMatrix2x3fvEXT(arg0: int, arg1: int, arg2: bool, arg3: FloatBuffer) -> None: ...

  @staticmethod
  @overload
  def glProgramUniformMatrix2x4fvEXT(arg0: int, arg1: int, arg2: bool, arg3: list[float]) -> None: ...

  @staticmethod
  @overload
  def glProgramUniformMatrix2x4fvEXT(arg0: int, arg1: int, arg2: bool, arg3: FloatBuffer) -> None: ...

  @staticmethod
  @overload
  def glProgramUniformMatrix3fvEXT(arg0: int, arg1: int, arg2: bool, arg3: list[float]) -> None: ...

  @staticmethod
  @overload
  def glProgramUniformMatrix3fvEXT(arg0: int, arg1: int, arg2: bool, arg3: FloatBuffer) -> None: ...

  @staticmethod
  @overload
  def glProgramUniformMatrix3x2fvEXT(arg0: int, arg1: int, arg2: bool, arg3: list[float]) -> None: ...

  @staticmethod
  @overload
  def glProgramUniformMatrix3x2fvEXT(arg0: int, arg1: int, arg2: bool, arg3: FloatBuffer) -> None: ...

  @staticmethod
  @overload
  def glProgramUniformMatrix3x4fvEXT(arg0: int, arg1: int, arg2: bool, arg3: list[float]) -> None: ...

  @staticmethod
  @overload
  def glProgramUniformMatrix3x4fvEXT(arg0: int, arg1: int, arg2: bool, arg3: FloatBuffer) -> None: ...

  @staticmethod
  @overload
  def glProgramUniformMatrix4fvEXT(arg0: int, arg1: int, arg2: bool, arg3: list[float]) -> None: ...

  @staticmethod
  @overload
  def glProgramUniformMatrix4fvEXT(arg0: int, arg1: int, arg2: bool, arg3: FloatBuffer) -> None: ...

  @staticmethod
  @overload
  def glProgramUniformMatrix4x2fvEXT(arg0: int, arg1: int, arg2: bool, arg3: list[float]) -> None: ...

  @staticmethod
  @overload
  def glProgramUniformMatrix4x2fvEXT(arg0: int, arg1: int, arg2: bool, arg3: FloatBuffer) -> None: ...

  @staticmethod
  @overload
  def glProgramUniformMatrix4x3fvEXT(arg0: int, arg1: int, arg2: bool, arg3: list[float]) -> None: ...

  @staticmethod
  @overload
  def glProgramUniformMatrix4x3fvEXT(arg0: int, arg1: int, arg2: bool, arg3: FloatBuffer) -> None: ...

  @staticmethod
  def glPushClientAttribDefaultEXT(arg0: int) -> None: ...

  @staticmethod
  def glTextureBufferEXT(arg0: int, arg1: int, arg2: int, arg3: int) -> None: ...

  @staticmethod
  @overload
  def glTextureImage1DEXT(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int, arg7: int, arg8: list[float]) -> None: ...

  @staticmethod
  @overload
  def glTextureImage1DEXT(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int, arg7: int, arg8: list[float]) -> None: ...

  @staticmethod
  @overload
  def glTextureImage1DEXT(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int, arg7: int, arg8: list[int]) -> None: ...

  @staticmethod
  @overload
  def glTextureImage1DEXT(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int, arg7: int, arg8: list[int]) -> None: ...

  @staticmethod
  @overload
  def glTextureImage1DEXT(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int, arg7: int, arg8: ByteBuffer) -> None: ...

  @staticmethod
  @overload
  def glTextureImage1DEXT(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int, arg7: int, arg8: DoubleBuffer) -> None: ...

  @staticmethod
  @overload
  def glTextureImage1DEXT(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int, arg7: int, arg8: FloatBuffer) -> None: ...

  @staticmethod
  @overload
  def glTextureImage1DEXT(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int, arg7: int, arg8: IntBuffer) -> None: ...

  @staticmethod
  @overload
  def glTextureImage1DEXT(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int, arg7: int, arg8: ShortBuffer) -> None: ...

  @staticmethod
  @overload
  def glTextureImage1DEXT(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int, arg7: int, arg8: int) -> None: ...

  @staticmethod
  @overload
  def glTextureImage2DEXT(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int, arg7: int, arg8: int, arg9: list[float]) -> None: ...

  @staticmethod
  @overload
  def glTextureImage2DEXT(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int, arg7: int, arg8: int, arg9: list[float]) -> None: ...

  @staticmethod
  @overload
  def glTextureImage2DEXT(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int, arg7: int, arg8: int, arg9: list[int]) -> None: ...

  @staticmethod
  @overload
  def glTextureImage2DEXT(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int, arg7: int, arg8: int, arg9: list[int]) -> None: ...

  @staticmethod
  @overload
  def glTextureImage2DEXT(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int, arg7: int, arg8: int, arg9: ByteBuffer) -> None: ...

  @staticmethod
  @overload
  def glTextureImage2DEXT(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int, arg7: int, arg8: int, arg9: DoubleBuffer) -> None: ...

  @staticmethod
  @overload
  def glTextureImage2DEXT(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int, arg7: int, arg8: int, arg9: FloatBuffer) -> None: ...

  @staticmethod
  @overload
  def glTextureImage2DEXT(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int, arg7: int, arg8: int, arg9: IntBuffer) -> None: ...

  @staticmethod
  @overload
  def glTextureImage2DEXT(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int, arg7: int, arg8: int, arg9: ShortBuffer) -> None: ...

  @staticmethod
  @overload
  def glTextureImage2DEXT(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int, arg7: int, arg8: int, arg9: int) -> None: ...

  @staticmethod
  @overload
  def glTextureImage3DEXT(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int, arg7: int, arg8: int, arg9: int, arg10: list[float]) -> None: ...

  @staticmethod
  @overload
  def glTextureImage3DEXT(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int, arg7: int, arg8: int, arg9: int, arg10: list[float]) -> None: ...

  @staticmethod
  @overload
  def glTextureImage3DEXT(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int, arg7: int, arg8: int, arg9: int, arg10: list[int]) -> None: ...

  @staticmethod
  @overload
  def glTextureImage3DEXT(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int, arg7: int, arg8: int, arg9: int, arg10: list[int]) -> None: ...

  @staticmethod
  @overload
  def glTextureImage3DEXT(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int, arg7: int, arg8: int, arg9: int, arg10: ByteBuffer) -> None: ...

  @staticmethod
  @overload
  def glTextureImage3DEXT(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int, arg7: int, arg8: int, arg9: int, arg10: DoubleBuffer) -> None: ...

  @staticmethod
  @overload
  def glTextureImage3DEXT(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int, arg7: int, arg8: int, arg9: int, arg10: FloatBuffer) -> None: ...

  @staticmethod
  @overload
  def glTextureImage3DEXT(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int, arg7: int, arg8: int, arg9: int, arg10: IntBuffer) -> None: ...

  @staticmethod
  @overload
  def glTextureImage3DEXT(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int, arg7: int, arg8: int, arg9: int, arg10: ShortBuffer) -> None: ...

  @staticmethod
  @overload
  def glTextureImage3DEXT(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int, arg7: int, arg8: int, arg9: int, arg10: int) -> None: ...

  @staticmethod
  @overload
  def glTextureParameterIivEXT(arg0: int, arg1: int, arg2: int, arg3: list[int]) -> None: ...

  @staticmethod
  @overload
  def glTextureParameterIivEXT(arg0: int, arg1: int, arg2: int, arg3: IntBuffer) -> None: ...

  @staticmethod
  @overload
  def glTextureParameterIuivEXT(arg0: int, arg1: int, arg2: int, arg3: list[int]) -> None: ...

  @staticmethod
  @overload
  def glTextureParameterIuivEXT(arg0: int, arg1: int, arg2: int, arg3: IntBuffer) -> None: ...

  @staticmethod
  def glTextureParameterfEXT(arg0: int, arg1: int, arg2: int, arg3: float) -> None: ...

  @staticmethod
  @overload
  def glTextureParameterfvEXT(arg0: int, arg1: int, arg2: int, arg3: list[float]) -> None: ...

  @staticmethod
  @overload
  def glTextureParameterfvEXT(arg0: int, arg1: int, arg2: int, arg3: FloatBuffer) -> None: ...

  @staticmethod
  def glTextureParameteriEXT(arg0: int, arg1: int, arg2: int, arg3: int) -> None: ...

  @staticmethod
  @overload
  def glTextureParameterivEXT(arg0: int, arg1: int, arg2: int, arg3: list[int]) -> None: ...

  @staticmethod
  @overload
  def glTextureParameterivEXT(arg0: int, arg1: int, arg2: int, arg3: IntBuffer) -> None: ...

  @staticmethod
  def glTextureRenderbufferEXT(arg0: int, arg1: int, arg2: int) -> None: ...

  @staticmethod
  @overload
  def glTextureSubImage1DEXT(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int, arg7: list[float]) -> None: ...

  @staticmethod
  @overload
  def glTextureSubImage1DEXT(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int, arg7: list[float]) -> None: ...

  @staticmethod
  @overload
  def glTextureSubImage1DEXT(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int, arg7: list[int]) -> None: ...

  @staticmethod
  @overload
  def glTextureSubImage1DEXT(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int, arg7: list[int]) -> None: ...

  @staticmethod
  @overload
  def glTextureSubImage1DEXT(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int, arg7: ByteBuffer) -> None: ...

  @staticmethod
  @overload
  def glTextureSubImage1DEXT(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int, arg7: DoubleBuffer) -> None: ...

  @staticmethod
  @overload
  def glTextureSubImage1DEXT(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int, arg7: FloatBuffer) -> None: ...

  @staticmethod
  @overload
  def glTextureSubImage1DEXT(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int, arg7: IntBuffer) -> None: ...

  @staticmethod
  @overload
  def glTextureSubImage1DEXT(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int, arg7: ShortBuffer) -> None: ...

  @staticmethod
  @overload
  def glTextureSubImage1DEXT(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int, arg7: int) -> None: ...

  @staticmethod
  @overload
  def glTextureSubImage2DEXT(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int, arg7: int, arg8: int, arg9: list[float]) -> None: ...

  @staticmethod
  @overload
  def glTextureSubImage2DEXT(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int, arg7: int, arg8: int, arg9: list[float]) -> None: ...

  @staticmethod
  @overload
  def glTextureSubImage2DEXT(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int, arg7: int, arg8: int, arg9: list[int]) -> None: ...

  @staticmethod
  @overload
  def glTextureSubImage2DEXT(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int, arg7: int, arg8: int, arg9: list[int]) -> None: ...

  @staticmethod
  @overload
  def glTextureSubImage2DEXT(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int, arg7: int, arg8: int, arg9: ByteBuffer) -> None: ...

  @staticmethod
  @overload
  def glTextureSubImage2DEXT(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int, arg7: int, arg8: int, arg9: DoubleBuffer) -> None: ...

  @staticmethod
  @overload
  def glTextureSubImage2DEXT(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int, arg7: int, arg8: int, arg9: FloatBuffer) -> None: ...

  @staticmethod
  @overload
  def glTextureSubImage2DEXT(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int, arg7: int, arg8: int, arg9: IntBuffer) -> None: ...

  @staticmethod
  @overload
  def glTextureSubImage2DEXT(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int, arg7: int, arg8: int, arg9: ShortBuffer) -> None: ...

  @staticmethod
  @overload
  def glTextureSubImage2DEXT(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int, arg7: int, arg8: int, arg9: int) -> None: ...

  @staticmethod
  @overload
  def glTextureSubImage3DEXT(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int, arg7: int, arg8: int, arg9: int, arg10: int, arg11: list[float]) -> None: ...

  @staticmethod
  @overload
  def glTextureSubImage3DEXT(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int, arg7: int, arg8: int, arg9: int, arg10: int, arg11: list[float]) -> None: ...

  @staticmethod
  @overload
  def glTextureSubImage3DEXT(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int, arg7: int, arg8: int, arg9: int, arg10: int, arg11: list[int]) -> None: ...

  @staticmethod
  @overload
  def glTextureSubImage3DEXT(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int, arg7: int, arg8: int, arg9: int, arg10: int, arg11: list[int]) -> None: ...

  @staticmethod
  @overload
  def glTextureSubImage3DEXT(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int, arg7: int, arg8: int, arg9: int, arg10: int, arg11: ByteBuffer) -> None: ...

  @staticmethod
  @overload
  def glTextureSubImage3DEXT(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int, arg7: int, arg8: int, arg9: int, arg10: int, arg11: DoubleBuffer) -> None: ...

  @staticmethod
  @overload
  def glTextureSubImage3DEXT(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int, arg7: int, arg8: int, arg9: int, arg10: int, arg11: FloatBuffer) -> None: ...

  @staticmethod
  @overload
  def glTextureSubImage3DEXT(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int, arg7: int, arg8: int, arg9: int, arg10: int, arg11: IntBuffer) -> None: ...

  @staticmethod
  @overload
  def glTextureSubImage3DEXT(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int, arg7: int, arg8: int, arg9: int, arg10: int, arg11: ShortBuffer) -> None: ...

  @staticmethod
  @overload
  def glTextureSubImage3DEXT(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int, arg7: int, arg8: int, arg9: int, arg10: int, arg11: int) -> None: ...

  @staticmethod
  def glUnmapNamedBufferEXT(arg0: int) -> bool: ...

  @staticmethod
  def glVertexArrayColorOffsetEXT(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int) -> None: ...

  @staticmethod
  def glVertexArrayEdgeFlagOffsetEXT(arg0: int, arg1: int, arg2: int, arg3: int) -> None: ...

  @staticmethod
  def glVertexArrayFogCoordOffsetEXT(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int) -> None: ...

  @staticmethod
  def glVertexArrayIndexOffsetEXT(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int) -> None: ...

  @staticmethod
  def glVertexArrayMultiTexCoordOffsetEXT(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int) -> None: ...

  @staticmethod
  def glVertexArrayNormalOffsetEXT(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int) -> None: ...

  @staticmethod
  def glVertexArraySecondaryColorOffsetEXT(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int) -> None: ...

  @staticmethod
  def glVertexArrayTexCoordOffsetEXT(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int) -> None: ...

  @staticmethod
  def glVertexArrayVertexAttribIOffsetEXT(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int) -> None: ...

  @staticmethod
  def glVertexArrayVertexAttribOffsetEXT(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: bool, arg6: int, arg7: int) -> None: ...

  @staticmethod
  def glVertexArrayVertexOffsetEXT(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int) -> None: ...

  @staticmethod
  def nglCompressedMultiTexImage1DEXT(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int, arg7: int) -> None: ...

  @staticmethod
  def nglCompressedMultiTexImage2DEXT(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int, arg7: int, arg8: int) -> None: ...

  @staticmethod
  def nglCompressedMultiTexImage3DEXT(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int, arg7: int, arg8: int, arg9: int) -> None: ...

  @staticmethod
  def nglCompressedMultiTexSubImage1DEXT(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int, arg7: int) -> None: ...

  @staticmethod
  def nglCompressedMultiTexSubImage2DEXT(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int, arg7: int, arg8: int, arg9: int) -> None: ...

  @staticmethod
  def nglCompressedMultiTexSubImage3DEXT(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int, arg7: int, arg8: int, arg9: int, arg10: int, arg11: int) -> None: ...

  @staticmethod
  def nglCompressedTextureImage1DEXT(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int, arg7: int) -> None: ...

  @staticmethod
  def nglCompressedTextureImage2DEXT(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int, arg7: int, arg8: int) -> None: ...

  @staticmethod
  def nglCompressedTextureImage3DEXT(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int, arg7: int, arg8: int, arg9: int) -> None: ...

  @staticmethod
  def nglCompressedTextureSubImage1DEXT(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int, arg7: int) -> None: ...

  @staticmethod
  def nglCompressedTextureSubImage2DEXT(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int, arg7: int, arg8: int, arg9: int) -> None: ...

  @staticmethod
  def nglCompressedTextureSubImage3DEXT(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int, arg7: int, arg8: int, arg9: int, arg10: int, arg11: int) -> None: ...

  @staticmethod
  def nglFramebufferDrawBuffersEXT(arg0: int, arg1: int, arg2: int) -> None: ...

  @staticmethod
  def nglGetBooleanIndexedvEXT(arg0: int, arg1: int, arg2: int) -> None: ...

  @staticmethod
  def nglGetCompressedMultiTexImageEXT(arg0: int, arg1: int, arg2: int, arg3: int) -> None: ...

  @staticmethod
  def nglGetCompressedTextureImageEXT(arg0: int, arg1: int, arg2: int, arg3: int) -> None: ...

  @staticmethod
  def nglGetDoubleIndexedvEXT(arg0: int, arg1: int, arg2: int) -> None: ...

  @staticmethod
  def nglGetDoublei_vEXT(arg0: int, arg1: int, arg2: int) -> None: ...

  @staticmethod
  def nglGetFloatIndexedvEXT(arg0: int, arg1: int, arg2: int) -> None: ...

  @staticmethod
  def nglGetFloati_vEXT(arg0: int, arg1: int, arg2: int) -> None: ...

  @staticmethod
  def nglGetFramebufferParameterivEXT(arg0: int, arg1: int, arg2: int) -> None: ...

  @staticmethod
  def nglGetIntegerIndexedvEXT(arg0: int, arg1: int, arg2: int) -> None: ...

  @staticmethod
  def nglGetMultiTexEnvfvEXT(arg0: int, arg1: int, arg2: int, arg3: int) -> None: ...

  @staticmethod
  def nglGetMultiTexEnvivEXT(arg0: int, arg1: int, arg2: int, arg3: int) -> None: ...

  @staticmethod
  def nglGetMultiTexGendvEXT(arg0: int, arg1: int, arg2: int, arg3: int) -> None: ...

  @staticmethod
  def nglGetMultiTexGenfvEXT(arg0: int, arg1: int, arg2: int, arg3: int) -> None: ...

  @staticmethod
  def nglGetMultiTexGenivEXT(arg0: int, arg1: int, arg2: int, arg3: int) -> None: ...

  @staticmethod
  def nglGetMultiTexImageEXT(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int) -> None: ...

  @staticmethod
  def nglGetMultiTexLevelParameterfvEXT(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int) -> None: ...

  @staticmethod
  def nglGetMultiTexLevelParameterivEXT(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int) -> None: ...

  @staticmethod
  def nglGetMultiTexParameterIivEXT(arg0: int, arg1: int, arg2: int, arg3: int) -> None: ...

  @staticmethod
  def nglGetMultiTexParameterIuivEXT(arg0: int, arg1: int, arg2: int, arg3: int) -> None: ...

  @staticmethod
  def nglGetMultiTexParameterfvEXT(arg0: int, arg1: int, arg2: int, arg3: int) -> None: ...

  @staticmethod
  def nglGetMultiTexParameterivEXT(arg0: int, arg1: int, arg2: int, arg3: int) -> None: ...

  @staticmethod
  def nglGetNamedBufferParameterivEXT(arg0: int, arg1: int, arg2: int) -> None: ...

  @staticmethod
  def nglGetNamedBufferSubDataEXT(arg0: int, arg1: int, arg2: int, arg3: int) -> None: ...

  @staticmethod
  def nglGetNamedFramebufferAttachmentParameterivEXT(arg0: int, arg1: int, arg2: int, arg3: int) -> None: ...

  @staticmethod
  def nglGetNamedProgramLocalParameterIivEXT(arg0: int, arg1: int, arg2: int, arg3: int) -> None: ...

  @staticmethod
  def nglGetNamedProgramLocalParameterIuivEXT(arg0: int, arg1: int, arg2: int, arg3: int) -> None: ...

  @staticmethod
  def nglGetNamedProgramLocalParameterdvEXT(arg0: int, arg1: int, arg2: int, arg3: int) -> None: ...

  @staticmethod
  def nglGetNamedProgramLocalParameterfvEXT(arg0: int, arg1: int, arg2: int, arg3: int) -> None: ...

  @staticmethod
  def nglGetNamedProgramStringEXT(arg0: int, arg1: int, arg2: int, arg3: int) -> None: ...

  @staticmethod
  def nglGetNamedProgramivEXT(arg0: int, arg1: int, arg2: int, arg3: int) -> None: ...

  @staticmethod
  def nglGetNamedRenderbufferParameterivEXT(arg0: int, arg1: int, arg2: int) -> None: ...

  @staticmethod
  def nglGetPointerIndexedvEXT(arg0: int, arg1: int, arg2: int) -> None: ...

  @staticmethod
  def nglGetPointeri_vEXT(arg0: int, arg1: int, arg2: int) -> None: ...

  @staticmethod
  def nglGetTextureImageEXT(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int) -> None: ...

  @staticmethod
  def nglGetTextureLevelParameterfvEXT(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int) -> None: ...

  @staticmethod
  def nglGetTextureLevelParameterivEXT(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int) -> None: ...

  @staticmethod
  def nglGetTextureParameterIivEXT(arg0: int, arg1: int, arg2: int, arg3: int) -> None: ...

  @staticmethod
  def nglGetTextureParameterIuivEXT(arg0: int, arg1: int, arg2: int, arg3: int) -> None: ...

  @staticmethod
  def nglGetTextureParameterfvEXT(arg0: int, arg1: int, arg2: int, arg3: int) -> None: ...

  @staticmethod
  def nglGetTextureParameterivEXT(arg0: int, arg1: int, arg2: int, arg3: int) -> None: ...

  @staticmethod
  def nglGetVertexArrayIntegeri_vEXT(arg0: int, arg1: int, arg2: int, arg3: int) -> None: ...

  @staticmethod
  def nglGetVertexArrayIntegervEXT(arg0: int, arg1: int, arg2: int) -> None: ...

  @staticmethod
  def nglGetVertexArrayPointeri_vEXT(arg0: int, arg1: int, arg2: int, arg3: int) -> None: ...

  @staticmethod
  def nglGetVertexArrayPointervEXT(arg0: int, arg1: int, arg2: int) -> None: ...

  @staticmethod
  def nglMapNamedBufferEXT(arg0: int, arg1: int) -> int: ...

  @staticmethod
  def nglMapNamedBufferRangeEXT(arg0: int, arg1: int, arg2: int, arg3: int) -> int: ...

  @staticmethod
  def nglMatrixLoadTransposedEXT(arg0: int, arg1: int) -> None: ...

  @staticmethod
  def nglMatrixLoadTransposefEXT(arg0: int, arg1: int) -> None: ...

  @staticmethod
  def nglMatrixLoaddEXT(arg0: int, arg1: int) -> None: ...

  @staticmethod
  def nglMatrixLoadfEXT(arg0: int, arg1: int) -> None: ...

  @staticmethod
  def nglMatrixMultTransposedEXT(arg0: int, arg1: int) -> None: ...

  @staticmethod
  def nglMatrixMultTransposefEXT(arg0: int, arg1: int) -> None: ...

  @staticmethod
  def nglMatrixMultdEXT(arg0: int, arg1: int) -> None: ...

  @staticmethod
  def nglMatrixMultfEXT(arg0: int, arg1: int) -> None: ...

  @staticmethod
  def nglMultiTexCoordPointerEXT(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int) -> None: ...

  @staticmethod
  def nglMultiTexEnvfvEXT(arg0: int, arg1: int, arg2: int, arg3: int) -> None: ...

  @staticmethod
  def nglMultiTexEnvivEXT(arg0: int, arg1: int, arg2: int, arg3: int) -> None: ...

  @staticmethod
  def nglMultiTexGendvEXT(arg0: int, arg1: int, arg2: int, arg3: int) -> None: ...

  @staticmethod
  def nglMultiTexGenfvEXT(arg0: int, arg1: int, arg2: int, arg3: int) -> None: ...

  @staticmethod
  def nglMultiTexGenivEXT(arg0: int, arg1: int, arg2: int, arg3: int) -> None: ...

  @staticmethod
  def nglMultiTexImage1DEXT(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int, arg7: int, arg8: int) -> None: ...

  @staticmethod
  def nglMultiTexImage2DEXT(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int, arg7: int, arg8: int, arg9: int) -> None: ...

  @staticmethod
  def nglMultiTexImage3DEXT(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int, arg7: int, arg8: int, arg9: int, arg10: int) -> None: ...

  @staticmethod
  def nglMultiTexParameterIivEXT(arg0: int, arg1: int, arg2: int, arg3: int) -> None: ...

  @staticmethod
  def nglMultiTexParameterIuivEXT(arg0: int, arg1: int, arg2: int, arg3: int) -> None: ...

  @staticmethod
  def nglMultiTexParameterfvEXT(arg0: int, arg1: int, arg2: int, arg3: int) -> None: ...

  @staticmethod
  def nglMultiTexParameterivEXT(arg0: int, arg1: int, arg2: int, arg3: int) -> None: ...

  @staticmethod
  def nglMultiTexSubImage1DEXT(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int, arg7: int) -> None: ...

  @staticmethod
  def nglMultiTexSubImage2DEXT(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int, arg7: int, arg8: int, arg9: int) -> None: ...

  @staticmethod
  def nglMultiTexSubImage3DEXT(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int, arg7: int, arg8: int, arg9: int, arg10: int, arg11: int) -> None: ...

  @staticmethod
  def nglNamedBufferDataEXT(arg0: int, arg1: int, arg2: int, arg3: int) -> None: ...

  @staticmethod
  def nglNamedBufferSubDataEXT(arg0: int, arg1: int, arg2: int, arg3: int) -> None: ...

  @staticmethod
  def nglNamedProgramLocalParameter4dvEXT(arg0: int, arg1: int, arg2: int, arg3: int) -> None: ...

  @staticmethod
  def nglNamedProgramLocalParameter4fvEXT(arg0: int, arg1: int, arg2: int, arg3: int) -> None: ...

  @staticmethod
  def nglNamedProgramLocalParameterI4ivEXT(arg0: int, arg1: int, arg2: int, arg3: int) -> None: ...

  @staticmethod
  def nglNamedProgramLocalParameterI4uivEXT(arg0: int, arg1: int, arg2: int, arg3: int) -> None: ...

  @staticmethod
  def nglNamedProgramLocalParameters4fvEXT(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int) -> None: ...

  @staticmethod
  def nglNamedProgramLocalParametersI4ivEXT(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int) -> None: ...

  @staticmethod
  def nglNamedProgramLocalParametersI4uivEXT(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int) -> None: ...

  @staticmethod
  def nglNamedProgramStringEXT(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int) -> None: ...

  @staticmethod
  def nglProgramUniform1fvEXT(arg0: int, arg1: int, arg2: int, arg3: int) -> None: ...

  @staticmethod
  def nglProgramUniform1ivEXT(arg0: int, arg1: int, arg2: int, arg3: int) -> None: ...

  @staticmethod
  def nglProgramUniform1uivEXT(arg0: int, arg1: int, arg2: int, arg3: int) -> None: ...

  @staticmethod
  def nglProgramUniform2fvEXT(arg0: int, arg1: int, arg2: int, arg3: int) -> None: ...

  @staticmethod
  def nglProgramUniform2ivEXT(arg0: int, arg1: int, arg2: int, arg3: int) -> None: ...

  @staticmethod
  def nglProgramUniform2uivEXT(arg0: int, arg1: int, arg2: int, arg3: int) -> None: ...

  @staticmethod
  def nglProgramUniform3fvEXT(arg0: int, arg1: int, arg2: int, arg3: int) -> None: ...

  @staticmethod
  def nglProgramUniform3ivEXT(arg0: int, arg1: int, arg2: int, arg3: int) -> None: ...

  @staticmethod
  def nglProgramUniform3uivEXT(arg0: int, arg1: int, arg2: int, arg3: int) -> None: ...

  @staticmethod
  def nglProgramUniform4fvEXT(arg0: int, arg1: int, arg2: int, arg3: int) -> None: ...

  @staticmethod
  def nglProgramUniform4ivEXT(arg0: int, arg1: int, arg2: int, arg3: int) -> None: ...

  @staticmethod
  def nglProgramUniform4uivEXT(arg0: int, arg1: int, arg2: int, arg3: int) -> None: ...

  @staticmethod
  def nglProgramUniformMatrix2fvEXT(arg0: int, arg1: int, arg2: int, arg3: bool, arg4: int) -> None: ...

  @staticmethod
  def nglProgramUniformMatrix2x3fvEXT(arg0: int, arg1: int, arg2: int, arg3: bool, arg4: int) -> None: ...

  @staticmethod
  def nglProgramUniformMatrix2x4fvEXT(arg0: int, arg1: int, arg2: int, arg3: bool, arg4: int) -> None: ...

  @staticmethod
  def nglProgramUniformMatrix3fvEXT(arg0: int, arg1: int, arg2: int, arg3: bool, arg4: int) -> None: ...

  @staticmethod
  def nglProgramUniformMatrix3x2fvEXT(arg0: int, arg1: int, arg2: int, arg3: bool, arg4: int) -> None: ...

  @staticmethod
  def nglProgramUniformMatrix3x4fvEXT(arg0: int, arg1: int, arg2: int, arg3: bool, arg4: int) -> None: ...

  @staticmethod
  def nglProgramUniformMatrix4fvEXT(arg0: int, arg1: int, arg2: int, arg3: bool, arg4: int) -> None: ...

  @staticmethod
  def nglProgramUniformMatrix4x2fvEXT(arg0: int, arg1: int, arg2: int, arg3: bool, arg4: int) -> None: ...

  @staticmethod
  def nglProgramUniformMatrix4x3fvEXT(arg0: int, arg1: int, arg2: int, arg3: bool, arg4: int) -> None: ...

  @staticmethod
  def nglTextureImage1DEXT(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int, arg7: int, arg8: int) -> None: ...

  @staticmethod
  def nglTextureImage2DEXT(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int, arg7: int, arg8: int, arg9: int) -> None: ...

  @staticmethod
  def nglTextureImage3DEXT(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int, arg7: int, arg8: int, arg9: int, arg10: int) -> None: ...

  @staticmethod
  def nglTextureParameterIivEXT(arg0: int, arg1: int, arg2: int, arg3: int) -> None: ...

  @staticmethod
  def nglTextureParameterIuivEXT(arg0: int, arg1: int, arg2: int, arg3: int) -> None: ...

  @staticmethod
  def nglTextureParameterfvEXT(arg0: int, arg1: int, arg2: int, arg3: int) -> None: ...

  @staticmethod
  def nglTextureParameterivEXT(arg0: int, arg1: int, arg2: int, arg3: int) -> None: ...

  @staticmethod
  def nglTextureSubImage1DEXT(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int, arg7: int) -> None: ...

  @staticmethod
  def nglTextureSubImage2DEXT(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int, arg7: int, arg8: int, arg9: int) -> None: ...

  @staticmethod
  def nglTextureSubImage3DEXT(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int, arg7: int, arg8: int, arg9: int, arg10: int, arg11: int) -> None: ...


class EXTDrawBuffers2:

  @staticmethod
  def glColorMaskIndexedEXT(arg0: int, arg1: bool, arg2: bool, arg3: bool, arg4: bool) -> None: ...

  @staticmethod
  def glDisableIndexedEXT(arg0: int, arg1: int) -> None: ...

  @staticmethod
  def glEnableIndexedEXT(arg0: int, arg1: int) -> None: ...

  @staticmethod
  def glGetBooleanIndexedEXT(arg0: int, arg1: int) -> bool: ...

  @staticmethod
  def glGetBooleanIndexedvEXT(arg0: int, arg1: int, arg2: ByteBuffer) -> None: ...

  @staticmethod
  def glGetIntegerIndexedEXT(arg0: int, arg1: int) -> int: ...

  @staticmethod
  @overload
  def glGetIntegerIndexedvEXT(arg0: int, arg1: int, arg2: list[int]) -> None: ...

  @staticmethod
  @overload
  def glGetIntegerIndexedvEXT(arg0: int, arg1: int, arg2: IntBuffer) -> None: ...

  @staticmethod
  def glIsEnabledIndexedEXT(arg0: int, arg1: int) -> bool: ...

  @staticmethod
  def nglGetBooleanIndexedvEXT(arg0: int, arg1: int, arg2: int) -> None: ...

  @staticmethod
  def nglGetIntegerIndexedvEXT(arg0: int, arg1: int, arg2: int) -> None: ...


class EXTDrawInstanced:

  @staticmethod
  def glDrawArraysInstancedEXT(arg0: int, arg1: int, arg2: int, arg3: int) -> None: ...

  @staticmethod
  @overload
  def glDrawElementsInstancedEXT(arg0: int, arg1: ByteBuffer, arg2: int) -> None: ...

  @staticmethod
  @overload
  def glDrawElementsInstancedEXT(arg0: int, arg1: IntBuffer, arg2: int) -> None: ...

  @staticmethod
  @overload
  def glDrawElementsInstancedEXT(arg0: int, arg1: ShortBuffer, arg2: int) -> None: ...

  @staticmethod
  @overload
  def glDrawElementsInstancedEXT(arg0: int, arg1: int, arg2: ByteBuffer, arg3: int) -> None: ...

  @staticmethod
  @overload
  def glDrawElementsInstancedEXT(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int) -> None: ...

  @staticmethod
  def nglDrawElementsInstancedEXT(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int) -> None: ...


class EXTEGLImageStorage:

  @staticmethod
  @overload
  def glEGLImageTargetTexStorageEXT(arg0: int, arg1: int, arg2: list[int]) -> None: ...

  @staticmethod
  @overload
  def glEGLImageTargetTexStorageEXT(arg0: int, arg1: int, arg2: IntBuffer) -> None: ...

  @staticmethod
  @overload
  def glEGLImageTargetTextureStorageEXT(arg0: int, arg1: int, arg2: list[int]) -> None: ...

  @staticmethod
  @overload
  def glEGLImageTargetTextureStorageEXT(arg0: int, arg1: int, arg2: IntBuffer) -> None: ...

  @staticmethod
  def nglEGLImageTargetTexStorageEXT(arg0: int, arg1: int, arg2: int) -> None: ...

  @staticmethod
  def nglEGLImageTargetTextureStorageEXT(arg0: int, arg1: int, arg2: int) -> None: ...


class EXTExternalBuffer:

  @staticmethod
  def glBufferStorageExternalEXT(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int) -> None: ...

  @staticmethod
  def glNamedBufferStorageExternalEXT(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int) -> None: ...

  @staticmethod
  def nglBufferStorageExternalEXT(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int) -> None: ...

  @staticmethod
  def nglNamedBufferStorageExternalEXT(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int) -> None: ...


class EXTFramebufferBlit:

  GL_DRAW_FRAMEBUFFER_BINDING_EXT: int

  GL_DRAW_FRAMEBUFFER_EXT: int

  GL_READ_FRAMEBUFFER_BINDING_EXT: int

  GL_READ_FRAMEBUFFER_EXT: int

  @staticmethod
  def glBlitFramebufferEXT(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int, arg7: int, arg8: int, arg9: int) -> None: ...


class EXTFramebufferMultisample:

  GL_FRAMEBUFFER_INCOMPLETE_MULTISAMPLE_EXT: int

  GL_MAX_SAMPLES_EXT: int

  GL_RENDERBUFFER_SAMPLES_EXT: int

  @staticmethod
  def glRenderbufferStorageMultisampleEXT(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int) -> None: ...


class EXTFramebufferMultisampleBlitScaled:

  GL_SCALED_RESOLVE_FASTEST_EXT: int

  GL_SCALED_RESOLVE_NICEST_EXT: int


class EXTFramebufferObject:

  GL_COLOR_ATTACHMENT0_EXT: int

  GL_COLOR_ATTACHMENT10_EXT: int

  GL_COLOR_ATTACHMENT11_EXT: int

  GL_COLOR_ATTACHMENT12_EXT: int

  GL_COLOR_ATTACHMENT13_EXT: int

  GL_COLOR_ATTACHMENT14_EXT: int

  GL_COLOR_ATTACHMENT15_EXT: int

  GL_COLOR_ATTACHMENT1_EXT: int

  GL_COLOR_ATTACHMENT2_EXT: int

  GL_COLOR_ATTACHMENT3_EXT: int

  GL_COLOR_ATTACHMENT4_EXT: int

  GL_COLOR_ATTACHMENT5_EXT: int

  GL_COLOR_ATTACHMENT6_EXT: int

  GL_COLOR_ATTACHMENT7_EXT: int

  GL_COLOR_ATTACHMENT8_EXT: int

  GL_COLOR_ATTACHMENT9_EXT: int

  GL_DEPTH_ATTACHMENT_EXT: int

  GL_FRAMEBUFFER_ATTACHMENT_OBJECT_NAME_EXT: int

  GL_FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE_EXT: int

  GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_3D_ZOFFSET_EXT: int

  GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE_EXT: int

  GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL_EXT: int

  GL_FRAMEBUFFER_BINDING_EXT: int

  GL_FRAMEBUFFER_COMPLETE_EXT: int

  GL_FRAMEBUFFER_EXT: int

  GL_FRAMEBUFFER_INCOMPLETE_ATTACHMENT_EXT: int

  GL_FRAMEBUFFER_INCOMPLETE_DIMENSIONS_EXT: int

  GL_FRAMEBUFFER_INCOMPLETE_DRAW_BUFFER_EXT: int

  GL_FRAMEBUFFER_INCOMPLETE_FORMATS_EXT: int

  GL_FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT_EXT: int

  GL_FRAMEBUFFER_INCOMPLETE_READ_BUFFER_EXT: int

  GL_FRAMEBUFFER_UNSUPPORTED_EXT: int

  GL_INVALID_FRAMEBUFFER_OPERATION_EXT: int

  GL_MAX_COLOR_ATTACHMENTS_EXT: int

  GL_MAX_RENDERBUFFER_SIZE_EXT: int

  GL_RENDERBUFFER_ALPHA_SIZE_EXT: int

  GL_RENDERBUFFER_BINDING_EXT: int

  GL_RENDERBUFFER_BLUE_SIZE_EXT: int

  GL_RENDERBUFFER_DEPTH_SIZE_EXT: int

  GL_RENDERBUFFER_EXT: int

  GL_RENDERBUFFER_GREEN_SIZE_EXT: int

  GL_RENDERBUFFER_HEIGHT_EXT: int

  GL_RENDERBUFFER_INTERNAL_FORMAT_EXT: int

  GL_RENDERBUFFER_RED_SIZE_EXT: int

  GL_RENDERBUFFER_STENCIL_SIZE_EXT: int

  GL_RENDERBUFFER_WIDTH_EXT: int

  GL_STENCIL_ATTACHMENT_EXT: int

  GL_STENCIL_INDEX16_EXT: int

  GL_STENCIL_INDEX1_EXT: int

  GL_STENCIL_INDEX4_EXT: int

  GL_STENCIL_INDEX8_EXT: int

  @staticmethod
  def glBindFramebufferEXT(arg0: int, arg1: int) -> None: ...

  @staticmethod
  def glBindRenderbufferEXT(arg0: int, arg1: int) -> None: ...

  @staticmethod
  def glCheckFramebufferStatusEXT(arg0: int) -> int: ...

  @staticmethod
  @overload
  def glDeleteFramebuffersEXT(arg0: list[int]) -> None: ...

  @staticmethod
  @overload
  def glDeleteFramebuffersEXT(arg0: int) -> None: ...

  @staticmethod
  @overload
  def glDeleteFramebuffersEXT(arg0: IntBuffer) -> None: ...

  @staticmethod
  @overload
  def glDeleteRenderbuffersEXT(arg0: list[int]) -> None: ...

  @staticmethod
  @overload
  def glDeleteRenderbuffersEXT(arg0: int) -> None: ...

  @staticmethod
  @overload
  def glDeleteRenderbuffersEXT(arg0: IntBuffer) -> None: ...

  @staticmethod
  def glFramebufferRenderbufferEXT(arg0: int, arg1: int, arg2: int, arg3: int) -> None: ...

  @staticmethod
  def glFramebufferTexture1DEXT(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int) -> None: ...

  @staticmethod
  def glFramebufferTexture2DEXT(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int) -> None: ...

  @staticmethod
  def glFramebufferTexture3DEXT(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int) -> None: ...

  @staticmethod
  @overload
  def glGenFramebuffersEXT() -> int: ...

  @staticmethod
  @overload
  def glGenFramebuffersEXT(arg0: list[int]) -> None: ...

  @staticmethod
  @overload
  def glGenFramebuffersEXT(arg0: IntBuffer) -> None: ...

  @staticmethod
  @overload
  def glGenRenderbuffersEXT() -> int: ...

  @staticmethod
  @overload
  def glGenRenderbuffersEXT(arg0: list[int]) -> None: ...

  @staticmethod
  @overload
  def glGenRenderbuffersEXT(arg0: IntBuffer) -> None: ...

  @staticmethod
  def glGenerateMipmapEXT(arg0: int) -> None: ...

  @staticmethod
  def glGetFramebufferAttachmentParameteriEXT(arg0: int, arg1: int, arg2: int) -> int: ...

  @staticmethod
  @overload
  def glGetFramebufferAttachmentParameterivEXT(arg0: int, arg1: int, arg2: int, arg3: list[int]) -> None: ...

  @staticmethod
  @overload
  def glGetFramebufferAttachmentParameterivEXT(arg0: int, arg1: int, arg2: int, arg3: IntBuffer) -> None: ...

  @staticmethod
  def glGetRenderbufferParameteriEXT(arg0: int, arg1: int) -> int: ...

  @staticmethod
  @overload
  def glGetRenderbufferParameterivEXT(arg0: int, arg1: int, arg2: list[int]) -> None: ...

  @staticmethod
  @overload
  def glGetRenderbufferParameterivEXT(arg0: int, arg1: int, arg2: IntBuffer) -> None: ...

  @staticmethod
  def glIsFramebufferEXT(arg0: int) -> bool: ...

  @staticmethod
  def glIsRenderbufferEXT(arg0: int) -> bool: ...

  @staticmethod
  def glRenderbufferStorageEXT(arg0: int, arg1: int, arg2: int, arg3: int) -> None: ...

  @staticmethod
  def nglDeleteFramebuffersEXT(arg0: int, arg1: int) -> None: ...

  @staticmethod
  def nglDeleteRenderbuffersEXT(arg0: int, arg1: int) -> None: ...

  @staticmethod
  def nglGenFramebuffersEXT(arg0: int, arg1: int) -> None: ...

  @staticmethod
  def nglGenRenderbuffersEXT(arg0: int, arg1: int) -> None: ...

  @staticmethod
  def nglGetFramebufferAttachmentParameterivEXT(arg0: int, arg1: int, arg2: int, arg3: int) -> None: ...

  @staticmethod
  def nglGetRenderbufferParameterivEXT(arg0: int, arg1: int, arg2: int) -> None: ...


class EXTFramebufferSRGB:

  GL_FRAMEBUFFER_SRGB_CAPABLE_EXT: int

  GL_FRAMEBUFFER_SRGB_EXT: int


class EXTGPUProgramParameters:

  @staticmethod
  @overload
  def glProgramEnvParameters4fvEXT(arg0: int, arg1: int, arg2: list[float]) -> None: ...

  @staticmethod
  @overload
  def glProgramEnvParameters4fvEXT(arg0: int, arg1: int, arg2: FloatBuffer) -> None: ...

  @staticmethod
  @overload
  def glProgramLocalParameters4fvEXT(arg0: int, arg1: int, arg2: list[float]) -> None: ...

  @staticmethod
  @overload
  def glProgramLocalParameters4fvEXT(arg0: int, arg1: int, arg2: FloatBuffer) -> None: ...

  @staticmethod
  def nglProgramEnvParameters4fvEXT(arg0: int, arg1: int, arg2: int, arg3: int) -> None: ...

  @staticmethod
  def nglProgramLocalParameters4fvEXT(arg0: int, arg1: int, arg2: int, arg3: int) -> None: ...


class EXTGPUShader4:

  GL_INT_SAMPLER_1D_ARRAY_EXT: int

  GL_INT_SAMPLER_1D_EXT: int

  GL_INT_SAMPLER_2D_ARRAY_EXT: int

  GL_INT_SAMPLER_2D_EXT: int

  GL_INT_SAMPLER_2D_RECT_EXT: int

  GL_INT_SAMPLER_3D_EXT: int

  GL_INT_SAMPLER_BUFFER_EXT: int

  GL_INT_SAMPLER_CUBE_EXT: int

  GL_MAX_PROGRAM_TEXEL_OFFSET_EXT: int

  GL_MIN_PROGRAM_TEXEL_OFFSET_EXT: int

  GL_SAMPLER_1D_ARRAY_EXT: int

  GL_SAMPLER_1D_ARRAY_SHADOW_EXT: int

  GL_SAMPLER_2D_ARRAY_EXT: int

  GL_SAMPLER_2D_ARRAY_SHADOW_EXT: int

  GL_SAMPLER_BUFFER_EXT: int

  GL_SAMPLER_CUBE_SHADOW_EXT: int

  GL_UNSIGNED_INT_SAMPLER_1D_ARRAY_EXT: int

  GL_UNSIGNED_INT_SAMPLER_1D_EXT: int

  GL_UNSIGNED_INT_SAMPLER_2D_ARRAY_EXT: int

  GL_UNSIGNED_INT_SAMPLER_2D_EXT: int

  GL_UNSIGNED_INT_SAMPLER_2D_RECT_EXT: int

  GL_UNSIGNED_INT_SAMPLER_3D_EXT: int

  GL_UNSIGNED_INT_SAMPLER_BUFFER_EXT: int

  GL_UNSIGNED_INT_SAMPLER_CUBE_EXT: int

  GL_UNSIGNED_INT_VEC2_EXT: int

  GL_UNSIGNED_INT_VEC3_EXT: int

  GL_UNSIGNED_INT_VEC4_EXT: int

  GL_VERTEX_ATTRIB_ARRAY_INTEGER_EXT: int

  @staticmethod
  @overload
  def glBindFragDataLocationEXT(arg0: int, arg1: int, arg2: CharSequence) -> None: ...

  @staticmethod
  @overload
  def glBindFragDataLocationEXT(arg0: int, arg1: int, arg2: ByteBuffer) -> None: ...

  @staticmethod
  @overload
  def glGetFragDataLocationEXT(arg0: int, arg1: CharSequence) -> int: ...

  @staticmethod
  @overload
  def glGetFragDataLocationEXT(arg0: int, arg1: ByteBuffer) -> int: ...

  @staticmethod
  def glGetUniformuiEXT(arg0: int, arg1: int) -> int: ...

  @staticmethod
  @overload
  def glGetUniformuivEXT(arg0: int, arg1: int, arg2: list[int]) -> None: ...

  @staticmethod
  @overload
  def glGetUniformuivEXT(arg0: int, arg1: int, arg2: IntBuffer) -> None: ...

  @staticmethod
  def glGetVertexAttribIiEXT(arg0: int, arg1: int) -> int: ...

  @staticmethod
  @overload
  def glGetVertexAttribIivEXT(arg0: int, arg1: int, arg2: list[int]) -> None: ...

  @staticmethod
  @overload
  def glGetVertexAttribIivEXT(arg0: int, arg1: int, arg2: IntBuffer) -> None: ...

  @staticmethod
  def glGetVertexAttribIuiEXT(arg0: int, arg1: int) -> int: ...

  @staticmethod
  @overload
  def glGetVertexAttribIuivEXT(arg0: int, arg1: int, arg2: list[int]) -> None: ...

  @staticmethod
  @overload
  def glGetVertexAttribIuivEXT(arg0: int, arg1: int, arg2: IntBuffer) -> None: ...

  @staticmethod
  def glUniform1uiEXT(arg0: int, arg1: int) -> None: ...

  @staticmethod
  @overload
  def glUniform1uivEXT(arg0: int, arg1: list[int]) -> None: ...

  @staticmethod
  @overload
  def glUniform1uivEXT(arg0: int, arg1: IntBuffer) -> None: ...

  @staticmethod
  def glUniform2uiEXT(arg0: int, arg1: int, arg2: int) -> None: ...

  @staticmethod
  @overload
  def glUniform2uivEXT(arg0: int, arg1: list[int]) -> None: ...

  @staticmethod
  @overload
  def glUniform2uivEXT(arg0: int, arg1: IntBuffer) -> None: ...

  @staticmethod
  def glUniform3uiEXT(arg0: int, arg1: int, arg2: int, arg3: int) -> None: ...

  @staticmethod
  @overload
  def glUniform3uivEXT(arg0: int, arg1: list[int]) -> None: ...

  @staticmethod
  @overload
  def glUniform3uivEXT(arg0: int, arg1: IntBuffer) -> None: ...

  @staticmethod
  def glUniform4uiEXT(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int) -> None: ...

  @staticmethod
  @overload
  def glUniform4uivEXT(arg0: int, arg1: list[int]) -> None: ...

  @staticmethod
  @overload
  def glUniform4uivEXT(arg0: int, arg1: IntBuffer) -> None: ...

  @staticmethod
  def glVertexAttribI1iEXT(arg0: int, arg1: int) -> None: ...

  @staticmethod
  @overload
  def glVertexAttribI1ivEXT(arg0: int, arg1: list[int]) -> None: ...

  @staticmethod
  @overload
  def glVertexAttribI1ivEXT(arg0: int, arg1: IntBuffer) -> None: ...

  @staticmethod
  def glVertexAttribI1uiEXT(arg0: int, arg1: int) -> None: ...

  @staticmethod
  @overload
  def glVertexAttribI1uivEXT(arg0: int, arg1: list[int]) -> None: ...

  @staticmethod
  @overload
  def glVertexAttribI1uivEXT(arg0: int, arg1: IntBuffer) -> None: ...

  @staticmethod
  def glVertexAttribI2iEXT(arg0: int, arg1: int, arg2: int) -> None: ...

  @staticmethod
  @overload
  def glVertexAttribI2ivEXT(arg0: int, arg1: list[int]) -> None: ...

  @staticmethod
  @overload
  def glVertexAttribI2ivEXT(arg0: int, arg1: IntBuffer) -> None: ...

  @staticmethod
  def glVertexAttribI2uiEXT(arg0: int, arg1: int, arg2: int) -> None: ...

  @staticmethod
  @overload
  def glVertexAttribI2uivEXT(arg0: int, arg1: list[int]) -> None: ...

  @staticmethod
  @overload
  def glVertexAttribI2uivEXT(arg0: int, arg1: IntBuffer) -> None: ...

  @staticmethod
  def glVertexAttribI3iEXT(arg0: int, arg1: int, arg2: int, arg3: int) -> None: ...

  @staticmethod
  @overload
  def glVertexAttribI3ivEXT(arg0: int, arg1: list[int]) -> None: ...

  @staticmethod
  @overload
  def glVertexAttribI3ivEXT(arg0: int, arg1: IntBuffer) -> None: ...

  @staticmethod
  def glVertexAttribI3uiEXT(arg0: int, arg1: int, arg2: int, arg3: int) -> None: ...

  @staticmethod
  @overload
  def glVertexAttribI3uivEXT(arg0: int, arg1: list[int]) -> None: ...

  @staticmethod
  @overload
  def glVertexAttribI3uivEXT(arg0: int, arg1: IntBuffer) -> None: ...

  @staticmethod
  def glVertexAttribI4bvEXT(arg0: int, arg1: ByteBuffer) -> None: ...

  @staticmethod
  def glVertexAttribI4iEXT(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int) -> None: ...

  @staticmethod
  @overload
  def glVertexAttribI4ivEXT(arg0: int, arg1: list[int]) -> None: ...

  @staticmethod
  @overload
  def glVertexAttribI4ivEXT(arg0: int, arg1: IntBuffer) -> None: ...

  @staticmethod
  @overload
  def glVertexAttribI4svEXT(arg0: int, arg1: list[int]) -> None: ...

  @staticmethod
  @overload
  def glVertexAttribI4svEXT(arg0: int, arg1: ShortBuffer) -> None: ...

  @staticmethod
  def glVertexAttribI4ubvEXT(arg0: int, arg1: ByteBuffer) -> None: ...

  @staticmethod
  def glVertexAttribI4uiEXT(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int) -> None: ...

  @staticmethod
  @overload
  def glVertexAttribI4uivEXT(arg0: int, arg1: list[int]) -> None: ...

  @staticmethod
  @overload
  def glVertexAttribI4uivEXT(arg0: int, arg1: IntBuffer) -> None: ...

  @staticmethod
  @overload
  def glVertexAttribI4usvEXT(arg0: int, arg1: list[int]) -> None: ...

  @staticmethod
  @overload
  def glVertexAttribI4usvEXT(arg0: int, arg1: ShortBuffer) -> None: ...

  @staticmethod
  @overload
  def glVertexAttribIPointerEXT(arg0: int, arg1: int, arg2: int, arg3: int, arg4: list[int]) -> None: ...

  @staticmethod
  @overload
  def glVertexAttribIPointerEXT(arg0: int, arg1: int, arg2: int, arg3: int, arg4: list[int]) -> None: ...

  @staticmethod
  @overload
  def glVertexAttribIPointerEXT(arg0: int, arg1: int, arg2: int, arg3: int, arg4: ByteBuffer) -> None: ...

  @staticmethod
  @overload
  def glVertexAttribIPointerEXT(arg0: int, arg1: int, arg2: int, arg3: int, arg4: IntBuffer) -> None: ...

  @staticmethod
  @overload
  def glVertexAttribIPointerEXT(arg0: int, arg1: int, arg2: int, arg3: int, arg4: ShortBuffer) -> None: ...

  @staticmethod
  @overload
  def glVertexAttribIPointerEXT(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int) -> None: ...

  @staticmethod
  def nglBindFragDataLocationEXT(arg0: int, arg1: int, arg2: int) -> None: ...

  @staticmethod
  def nglGetFragDataLocationEXT(arg0: int, arg1: int) -> int: ...

  @staticmethod
  def nglGetUniformuivEXT(arg0: int, arg1: int, arg2: int) -> None: ...

  @staticmethod
  def nglGetVertexAttribIivEXT(arg0: int, arg1: int, arg2: int) -> None: ...

  @staticmethod
  def nglGetVertexAttribIuivEXT(arg0: int, arg1: int, arg2: int) -> None: ...

  @staticmethod
  def nglUniform1uivEXT(arg0: int, arg1: int, arg2: int) -> None: ...

  @staticmethod
  def nglUniform2uivEXT(arg0: int, arg1: int, arg2: int) -> None: ...

  @staticmethod
  def nglUniform3uivEXT(arg0: int, arg1: int, arg2: int) -> None: ...

  @staticmethod
  def nglUniform4uivEXT(arg0: int, arg1: int, arg2: int) -> None: ...

  @staticmethod
  def nglVertexAttribI1ivEXT(arg0: int, arg1: int) -> None: ...

  @staticmethod
  def nglVertexAttribI1uivEXT(arg0: int, arg1: int) -> None: ...

  @staticmethod
  def nglVertexAttribI2ivEXT(arg0: int, arg1: int) -> None: ...

  @staticmethod
  def nglVertexAttribI2uivEXT(arg0: int, arg1: int) -> None: ...

  @staticmethod
  def nglVertexAttribI3ivEXT(arg0: int, arg1: int) -> None: ...

  @staticmethod
  def nglVertexAttribI3uivEXT(arg0: int, arg1: int) -> None: ...

  @staticmethod
  def nglVertexAttribI4bvEXT(arg0: int, arg1: int) -> None: ...

  @staticmethod
  def nglVertexAttribI4ivEXT(arg0: int, arg1: int) -> None: ...

  @staticmethod
  def nglVertexAttribI4svEXT(arg0: int, arg1: int) -> None: ...

  @staticmethod
  def nglVertexAttribI4ubvEXT(arg0: int, arg1: int) -> None: ...

  @staticmethod
  def nglVertexAttribI4uivEXT(arg0: int, arg1: int) -> None: ...

  @staticmethod
  def nglVertexAttribI4usvEXT(arg0: int, arg1: int) -> None: ...

  @staticmethod
  def nglVertexAttribIPointerEXT(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int) -> None: ...


class EXTGeometryShader4:

  GL_FRAMEBUFFER_ATTACHMENT_LAYERED_EXT: int

  GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LAYER_EXT: int

  GL_FRAMEBUFFER_INCOMPLETE_LAYER_COUNT_EXT: int

  GL_FRAMEBUFFER_INCOMPLETE_LAYER_TARGETS_EXT: int

  GL_GEOMETRY_INPUT_TYPE_EXT: int

  GL_GEOMETRY_OUTPUT_TYPE_EXT: int

  GL_GEOMETRY_SHADER_EXT: int

  GL_GEOMETRY_VERTICES_OUT_EXT: int

  GL_LINE_STRIP_ADJACENCY_EXT: int

  GL_LINES_ADJACENCY_EXT: int

  GL_MAX_GEOMETRY_OUTPUT_VERTICES_EXT: int

  GL_MAX_GEOMETRY_TEXTURE_IMAGE_UNITS_EXT: int

  GL_MAX_GEOMETRY_TOTAL_OUTPUT_COMPONENTS_EXT: int

  GL_MAX_GEOMETRY_UNIFORM_COMPONENTS_EXT: int

  GL_MAX_GEOMETRY_VARYING_COMPONENTS_EXT: int

  GL_MAX_VARYING_COMPONENTS_EXT: int

  GL_MAX_VERTEX_VARYING_COMPONENTS_EXT: int

  GL_PROGRAM_POINT_SIZE_EXT: int

  GL_TRIANGLE_STRIP_ADJACENCY_EXT: int

  GL_TRIANGLES_ADJACENCY_EXT: int

  @staticmethod
  def glFramebufferTextureEXT(arg0: int, arg1: int, arg2: int, arg3: int) -> None: ...

  @staticmethod
  def glFramebufferTextureFaceEXT(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int) -> None: ...

  @staticmethod
  def glFramebufferTextureLayerEXT(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int) -> None: ...

  @staticmethod
  def glProgramParameteriEXT(arg0: int, arg1: int, arg2: int) -> None: ...


class EXTMemoryObject:

  GL_DEDICATED_MEMORY_OBJECT_EXT: int

  GL_DEVICE_UUID_EXT: int

  GL_DRIVER_UUID_EXT: int

  GL_LINEAR_TILING_EXT: int

  GL_NUM_DEVICE_UUIDS_EXT: int

  GL_NUM_TILING_TYPES_EXT: int

  GL_OPTIMAL_TILING_EXT: int

  GL_TEXTURE_TILING_EXT: int

  GL_TILING_TYPES_EXT: int

  GL_UUID_SIZE_EXT: int

  @staticmethod
  def glBufferStorageMemEXT(arg0: int, arg1: int, arg2: int, arg3: int) -> None: ...

  @staticmethod
  @overload
  def glCreateMemoryObjectsEXT() -> int: ...

  @staticmethod
  @overload
  def glCreateMemoryObjectsEXT(arg0: list[int]) -> None: ...

  @staticmethod
  @overload
  def glCreateMemoryObjectsEXT(arg0: IntBuffer) -> None: ...

  @staticmethod
  @overload
  def glDeleteMemoryObjectsEXT(arg0: list[int]) -> None: ...

  @staticmethod
  @overload
  def glDeleteMemoryObjectsEXT(arg0: int) -> None: ...

  @staticmethod
  @overload
  def glDeleteMemoryObjectsEXT(arg0: IntBuffer) -> None: ...

  @staticmethod
  def glGetMemoryObjectParameteriEXT(arg0: int, arg1: int) -> int: ...

  @staticmethod
  @overload
  def glGetMemoryObjectParameterivEXT(arg0: int, arg1: int, arg2: list[int]) -> None: ...

  @staticmethod
  @overload
  def glGetMemoryObjectParameterivEXT(arg0: int, arg1: int, arg2: IntBuffer) -> None: ...

  @staticmethod
  def glGetUnsignedBytei_vEXT(arg0: int, arg1: int, arg2: ByteBuffer) -> None: ...

  @staticmethod
  def glGetUnsignedBytevEXT(arg0: int, arg1: ByteBuffer) -> None: ...

  @staticmethod
  def glIsMemoryObjectEXT(arg0: int) -> bool: ...

  @staticmethod
  def glMemoryObjectParameteriEXT(arg0: int, arg1: int, arg2: int) -> None: ...

  @staticmethod
  @overload
  def glMemoryObjectParameterivEXT(arg0: int, arg1: int, arg2: list[int]) -> None: ...

  @staticmethod
  @overload
  def glMemoryObjectParameterivEXT(arg0: int, arg1: int, arg2: IntBuffer) -> None: ...

  @staticmethod
  def glNamedBufferStorageMemEXT(arg0: int, arg1: int, arg2: int, arg3: int) -> None: ...

  @staticmethod
  def glTexStorageMem1DEXT(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int) -> None: ...

  @staticmethod
  def glTexStorageMem2DEXT(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int) -> None: ...

  @staticmethod
  def glTexStorageMem2DMultisampleEXT(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: bool, arg6: int, arg7: int) -> None: ...

  @staticmethod
  def glTexStorageMem3DEXT(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int, arg7: int) -> None: ...

  @staticmethod
  def glTexStorageMem3DMultisampleEXT(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: bool, arg7: int, arg8: int) -> None: ...

  @staticmethod
  def glTextureStorageMem1DEXT(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int) -> None: ...

  @staticmethod
  def glTextureStorageMem2DEXT(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int) -> None: ...

  @staticmethod
  def glTextureStorageMem2DMultisampleEXT(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: bool, arg6: int, arg7: int) -> None: ...

  @staticmethod
  def glTextureStorageMem3DEXT(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int, arg7: int) -> None: ...

  @staticmethod
  def glTextureStorageMem3DMultisampleEXT(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: bool, arg7: int, arg8: int) -> None: ...

  @staticmethod
  def nglCreateMemoryObjectsEXT(arg0: int, arg1: int) -> None: ...

  @staticmethod
  def nglDeleteMemoryObjectsEXT(arg0: int, arg1: int) -> None: ...

  @staticmethod
  def nglGetMemoryObjectParameterivEXT(arg0: int, arg1: int, arg2: int) -> None: ...

  @staticmethod
  def nglGetUnsignedBytei_vEXT(arg0: int, arg1: int, arg2: int) -> None: ...

  @staticmethod
  def nglGetUnsignedBytevEXT(arg0: int, arg1: int) -> None: ...

  @staticmethod
  def nglMemoryObjectParameterivEXT(arg0: int, arg1: int, arg2: int) -> None: ...


class EXTMemoryObjectFD:

  GL_HANDLE_TYPE_OPAQUE_FD_EXT: int

  @staticmethod
  def glImportMemoryFdEXT(arg0: int, arg1: int, arg2: int, arg3: int) -> None: ...


class EXTMemoryObjectWin32:

  GL_DEVICE_LUID_EXT: int

  GL_DEVICE_NODE_MASK_EXT: int

  GL_HANDLE_TYPE_D3D11_IMAGE_EXT: int

  GL_HANDLE_TYPE_D3D11_IMAGE_KMT_EXT: int

  GL_HANDLE_TYPE_D3D12_RESOURCE_EXT: int

  GL_HANDLE_TYPE_D3D12_TILEPOOL_EXT: int

  GL_HANDLE_TYPE_OPAQUE_WIN32_EXT: int

  GL_HANDLE_TYPE_OPAQUE_WIN32_KMT_EXT: int

  GL_LUID_SIZE_EXT: int

  @staticmethod
  def glImportMemoryWin32HandleEXT(arg0: int, arg1: int, arg2: int, arg3: int) -> None: ...

  @staticmethod
  def glImportMemoryWin32NameEXT(arg0: int, arg1: int, arg2: int, arg3: int) -> None: ...

  @staticmethod
  def nglImportMemoryWin32HandleEXT(arg0: int, arg1: int, arg2: int, arg3: int) -> None: ...

  @staticmethod
  def nglImportMemoryWin32NameEXT(arg0: int, arg1: int, arg2: int, arg3: int) -> None: ...


class EXTPackedDepthStencil:

  GL_DEPTH24_STENCIL8_EXT: int

  GL_DEPTH_STENCIL_EXT: int

  GL_TEXTURE_STENCIL_SIZE_EXT: int

  GL_UNSIGNED_INT_24_8_EXT: int


class EXTPackedFloat:

  GL_R11F_G11F_B10F_EXT: int

  GL_RGBA_SIGNED_COMPONENTS_EXT: int

  GL_UNSIGNED_INT_10F_11F_11F_REV_EXT: int


class EXTPixelBufferObject:

  GL_PIXEL_PACK_BUFFER_BINDING_EXT: int

  GL_PIXEL_PACK_BUFFER_EXT: int

  GL_PIXEL_UNPACK_BUFFER_BINDING_EXT: int

  GL_PIXEL_UNPACK_BUFFER_EXT: int


class EXTPointParameters:

  GL_DISTANCE_ATTENUATION_EXT: int

  GL_POINT_FADE_THRESHOLD_SIZE_EXT: int

  GL_POINT_SIZE_MAX_EXT: int

  GL_POINT_SIZE_MIN_EXT: int

  @staticmethod
  def glPointParameterfEXT(arg0: int, arg1: float) -> None: ...

  @staticmethod
  @overload
  def glPointParameterfvEXT(arg0: int, arg1: list[float]) -> None: ...

  @staticmethod
  @overload
  def glPointParameterfvEXT(arg0: int, arg1: FloatBuffer) -> None: ...

  @staticmethod
  def nglPointParameterfvEXT(arg0: int, arg1: int) -> None: ...


class EXTPolygonOffsetClamp:

  GL_POLYGON_OFFSET_CLAMP_EXT: int

  @staticmethod
  def glPolygonOffsetClampEXT(arg0: float, arg1: float, arg2: float) -> None: ...


class EXTProvokingVertex:

  GL_FIRST_VERTEX_CONVENTION_EXT: int

  GL_LAST_VERTEX_CONVENTION_EXT: int

  GL_PROVOKING_VERTEX_EXT: int

  GL_QUADS_FOLLOW_PROVOKING_VERTEX_CONVENTION_EXT: int

  @staticmethod
  def glProvokingVertexEXT(arg0: int) -> None: ...


class EXTRasterMultisample:

  GL_EFFECTIVE_RASTER_SAMPLES_EXT: int

  GL_MAX_RASTER_SAMPLES_EXT: int

  GL_MULTISAMPLE_RASTERIZATION_ALLOWED_EXT: int

  GL_RASTER_FIXED_SAMPLE_LOCATIONS_EXT: int

  GL_RASTER_MULTISAMPLE_EXT: int

  GL_RASTER_SAMPLES_EXT: int

  @staticmethod
  def glRasterSamplesEXT(arg0: int, arg1: bool) -> None: ...


class EXTSecondaryColor:

  GL_COLOR_SUM_EXT: int

  GL_CURRENT_SECONDARY_COLOR_EXT: int

  GL_SECONDARY_COLOR_ARRAY_EXT: int

  GL_SECONDARY_COLOR_ARRAY_POINTER_EXT: int

  GL_SECONDARY_COLOR_ARRAY_SIZE_EXT: int

  GL_SECONDARY_COLOR_ARRAY_STRIDE_EXT: int

  GL_SECONDARY_COLOR_ARRAY_TYPE_EXT: int

  @staticmethod
  def glSecondaryColor3bEXT(arg0: int, arg1: int, arg2: int) -> None: ...

  @staticmethod
  def glSecondaryColor3bvEXT(arg0: ByteBuffer) -> None: ...

  @staticmethod
  def glSecondaryColor3dEXT(arg0: float, arg1: float, arg2: float) -> None: ...

  @staticmethod
  @overload
  def glSecondaryColor3dvEXT(arg0: list[float]) -> None: ...

  @staticmethod
  @overload
  def glSecondaryColor3dvEXT(arg0: DoubleBuffer) -> None: ...

  @staticmethod
  def glSecondaryColor3fEXT(arg0: float, arg1: float, arg2: float) -> None: ...

  @staticmethod
  @overload
  def glSecondaryColor3fvEXT(arg0: list[float]) -> None: ...

  @staticmethod
  @overload
  def glSecondaryColor3fvEXT(arg0: FloatBuffer) -> None: ...

  @staticmethod
  def glSecondaryColor3iEXT(arg0: int, arg1: int, arg2: int) -> None: ...

  @staticmethod
  @overload
  def glSecondaryColor3ivEXT(arg0: list[int]) -> None: ...

  @staticmethod
  @overload
  def glSecondaryColor3ivEXT(arg0: IntBuffer) -> None: ...

  @staticmethod
  def glSecondaryColor3sEXT(arg0: int, arg1: int, arg2: int) -> None: ...

  @staticmethod
  @overload
  def glSecondaryColor3svEXT(arg0: list[int]) -> None: ...

  @staticmethod
  @overload
  def glSecondaryColor3svEXT(arg0: ShortBuffer) -> None: ...

  @staticmethod
  def glSecondaryColor3ubEXT(arg0: int, arg1: int, arg2: int) -> None: ...

  @staticmethod
  def glSecondaryColor3ubvEXT(arg0: ByteBuffer) -> None: ...

  @staticmethod
  def glSecondaryColor3uiEXT(arg0: int, arg1: int, arg2: int) -> None: ...

  @staticmethod
  @overload
  def glSecondaryColor3uivEXT(arg0: list[int]) -> None: ...

  @staticmethod
  @overload
  def glSecondaryColor3uivEXT(arg0: IntBuffer) -> None: ...

  @staticmethod
  def glSecondaryColor3usEXT(arg0: int, arg1: int, arg2: int) -> None: ...

  @staticmethod
  @overload
  def glSecondaryColor3usvEXT(arg0: list[int]) -> None: ...

  @staticmethod
  @overload
  def glSecondaryColor3usvEXT(arg0: ShortBuffer) -> None: ...

  @staticmethod
  @overload
  def glSecondaryColorPointerEXT(arg0: int, arg1: int, arg2: int, arg3: list[float]) -> None: ...

  @staticmethod
  @overload
  def glSecondaryColorPointerEXT(arg0: int, arg1: int, arg2: int, arg3: list[int]) -> None: ...

  @staticmethod
  @overload
  def glSecondaryColorPointerEXT(arg0: int, arg1: int, arg2: int, arg3: list[int]) -> None: ...

  @staticmethod
  @overload
  def glSecondaryColorPointerEXT(arg0: int, arg1: int, arg2: int, arg3: ByteBuffer) -> None: ...

  @staticmethod
  @overload
  def glSecondaryColorPointerEXT(arg0: int, arg1: int, arg2: int, arg3: FloatBuffer) -> None: ...

  @staticmethod
  @overload
  def glSecondaryColorPointerEXT(arg0: int, arg1: int, arg2: int, arg3: IntBuffer) -> None: ...

  @staticmethod
  @overload
  def glSecondaryColorPointerEXT(arg0: int, arg1: int, arg2: int, arg3: ShortBuffer) -> None: ...

  @staticmethod
  @overload
  def glSecondaryColorPointerEXT(arg0: int, arg1: int, arg2: int, arg3: int) -> None: ...

  @staticmethod
  def nglSecondaryColor3bvEXT(arg0: int) -> None: ...

  @staticmethod
  def nglSecondaryColor3dvEXT(arg0: int) -> None: ...

  @staticmethod
  def nglSecondaryColor3fvEXT(arg0: int) -> None: ...

  @staticmethod
  def nglSecondaryColor3ivEXT(arg0: int) -> None: ...

  @staticmethod
  def nglSecondaryColor3svEXT(arg0: int) -> None: ...

  @staticmethod
  def nglSecondaryColor3ubvEXT(arg0: int) -> None: ...

  @staticmethod
  def nglSecondaryColor3uivEXT(arg0: int) -> None: ...

  @staticmethod
  def nglSecondaryColor3usvEXT(arg0: int) -> None: ...

  @staticmethod
  def nglSecondaryColorPointerEXT(arg0: int, arg1: int, arg2: int, arg3: int) -> None: ...


class EXTSemaphore:

  GL_DEVICE_UUID_EXT: int

  GL_DRIVER_UUID_EXT: int

  GL_LAYOUT_COLOR_ATTACHMENT_EXT: int

  GL_LAYOUT_DEPTH_ATTACHMENT_STENCIL_READ_ONLY_EXT: int

  GL_LAYOUT_DEPTH_READ_ONLY_STENCIL_ATTACHMENT_EXT: int

  GL_LAYOUT_DEPTH_STENCIL_ATTACHMENT_EXT: int

  GL_LAYOUT_DEPTH_STENCIL_READ_ONLY_EXT: int

  GL_LAYOUT_GENERAL_EXT: int

  GL_LAYOUT_SHADER_READ_ONLY_EXT: int

  GL_LAYOUT_TRANSFER_DST_EXT: int

  GL_LAYOUT_TRANSFER_SRC_EXT: int

  GL_NUM_DEVICE_UUIDS_EXT: int

  GL_UUID_SIZE_EXT: int

  @staticmethod
  @overload
  def glDeleteSemaphoresEXT(arg0: list[int]) -> None: ...

  @staticmethod
  @overload
  def glDeleteSemaphoresEXT(arg0: int) -> None: ...

  @staticmethod
  @overload
  def glDeleteSemaphoresEXT(arg0: IntBuffer) -> None: ...

  @staticmethod
  @overload
  def glGenSemaphoresEXT() -> int: ...

  @staticmethod
  @overload
  def glGenSemaphoresEXT(arg0: list[int]) -> None: ...

  @staticmethod
  @overload
  def glGenSemaphoresEXT(arg0: IntBuffer) -> None: ...

  @staticmethod
  def glGetSemaphoreParameterui64EXT(arg0: int, arg1: int) -> int: ...

  @staticmethod
  @overload
  def glGetSemaphoreParameterui64vEXT(arg0: int, arg1: int, arg2: list[int]) -> None: ...

  @staticmethod
  @overload
  def glGetSemaphoreParameterui64vEXT(arg0: int, arg1: int, arg2: LongBuffer) -> None: ...

  @staticmethod
  def glGetUnsignedBytei_vEXT(arg0: int, arg1: int, arg2: ByteBuffer) -> None: ...

  @staticmethod
  def glGetUnsignedBytevEXT(arg0: int, arg1: ByteBuffer) -> None: ...

  @staticmethod
  def glIsSemaphoreEXT(arg0: int) -> bool: ...

  @staticmethod
  def glSemaphoreParameterui64EXT(arg0: int, arg1: int, arg2: int) -> None: ...

  @staticmethod
  @overload
  def glSemaphoreParameterui64vEXT(arg0: int, arg1: int, arg2: list[int]) -> None: ...

  @staticmethod
  @overload
  def glSemaphoreParameterui64vEXT(arg0: int, arg1: int, arg2: LongBuffer) -> None: ...

  @staticmethod
  @overload
  def glSignalSemaphoreEXT(arg0: int, arg1: list[int], arg2: list[int], arg3: list[int]) -> None: ...

  @staticmethod
  @overload
  def glSignalSemaphoreEXT(arg0: int, arg1: IntBuffer, arg2: IntBuffer, arg3: IntBuffer) -> None: ...

  @staticmethod
  @overload
  def glWaitSemaphoreEXT(arg0: int, arg1: list[int], arg2: list[int], arg3: list[int]) -> None: ...

  @staticmethod
  @overload
  def glWaitSemaphoreEXT(arg0: int, arg1: IntBuffer, arg2: IntBuffer, arg3: IntBuffer) -> None: ...

  @staticmethod
  def nglDeleteSemaphoresEXT(arg0: int, arg1: int) -> None: ...

  @staticmethod
  def nglGenSemaphoresEXT(arg0: int, arg1: int) -> None: ...

  @staticmethod
  def nglGetSemaphoreParameterui64vEXT(arg0: int, arg1: int, arg2: int) -> None: ...

  @staticmethod
  def nglGetUnsignedBytei_vEXT(arg0: int, arg1: int, arg2: int) -> None: ...

  @staticmethod
  def nglGetUnsignedBytevEXT(arg0: int, arg1: int) -> None: ...

  @staticmethod
  def nglSemaphoreParameterui64vEXT(arg0: int, arg1: int, arg2: int) -> None: ...

  @staticmethod
  def nglSignalSemaphoreEXT(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int) -> None: ...

  @staticmethod
  def nglWaitSemaphoreEXT(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int) -> None: ...


class EXTSemaphoreFD:

  GL_HANDLE_TYPE_OPAQUE_FD_EXT: int

  @staticmethod
  def glImportSemaphoreFdEXT(arg0: int, arg1: int, arg2: int) -> None: ...


class EXTSemaphoreWin32:

  GL_D3D12_FENCE_VALUE_EXT: int

  GL_DEVICE_LUID_EXT: int

  GL_DEVICE_NODE_MASK_EXT: int

  GL_HANDLE_TYPE_D3D12_FENCE_EXT: int

  GL_HANDLE_TYPE_OPAQUE_WIN32_EXT: int

  GL_HANDLE_TYPE_OPAQUE_WIN32_KMT_EXT: int

  GL_LUID_SIZE_EXT: int

  @staticmethod
  def glImportSemaphoreWin32HandleEXT(arg0: int, arg1: int, arg2: int) -> None: ...

  @staticmethod
  def glImportSemaphoreWin32NameEXT(arg0: int, arg1: int, arg2: int) -> None: ...

  @staticmethod
  def nglImportSemaphoreWin32HandleEXT(arg0: int, arg1: int, arg2: int) -> None: ...

  @staticmethod
  def nglImportSemaphoreWin32NameEXT(arg0: int, arg1: int, arg2: int) -> None: ...


class EXTSeparateShaderObjects:

  GL_ACTIVE_PROGRAM_EXT: int

  @staticmethod
  def glActiveProgramEXT(arg0: int) -> None: ...

  @staticmethod
  @overload
  def glCreateShaderProgramEXT(arg0: int, arg1: CharSequence) -> int: ...

  @staticmethod
  @overload
  def glCreateShaderProgramEXT(arg0: int, arg1: ByteBuffer) -> int: ...

  @staticmethod
  def glUseShaderProgramEXT(arg0: int, arg1: int) -> None: ...

  @staticmethod
  def nglCreateShaderProgramEXT(arg0: int, arg1: int) -> int: ...


class EXTShaderFramebufferFetch:

  GL_FRAGMENT_SHADER_DISCARDS_SAMPLES_EXT: int


class EXTShaderFramebufferFetchNonCoherent:

  @staticmethod
  def glFramebufferFetchBarrierEXT() -> None: ...


class EXTShaderImageLoadStore:

  GL_ALL_BARRIER_BITS_EXT: int

  GL_ATOMIC_COUNTER_BARRIER_BIT_EXT: int

  GL_BUFFER_UPDATE_BARRIER_BIT_EXT: int

  GL_COMMAND_BARRIER_BIT_EXT: int

  GL_ELEMENT_ARRAY_BARRIER_BIT_EXT: int

  GL_FRAMEBUFFER_BARRIER_BIT_EXT: int

  GL_IMAGE_1D_ARRAY_EXT: int

  GL_IMAGE_1D_EXT: int

  GL_IMAGE_2D_ARRAY_EXT: int

  GL_IMAGE_2D_EXT: int

  GL_IMAGE_2D_MULTISAMPLE_ARRAY_EXT: int

  GL_IMAGE_2D_MULTISAMPLE_EXT: int

  GL_IMAGE_2D_RECT_EXT: int

  GL_IMAGE_3D_EXT: int

  GL_IMAGE_BINDING_ACCESS_EXT: int

  GL_IMAGE_BINDING_FORMAT_EXT: int

  GL_IMAGE_BINDING_LAYER_EXT: int

  GL_IMAGE_BINDING_LAYERED_EXT: int

  GL_IMAGE_BINDING_LEVEL_EXT: int

  GL_IMAGE_BINDING_NAME_EXT: int

  GL_IMAGE_BUFFER_EXT: int

  GL_IMAGE_CUBE_EXT: int

  GL_IMAGE_CUBE_MAP_ARRAY_EXT: int

  GL_INT_IMAGE_1D_ARRAY_EXT: int

  GL_INT_IMAGE_1D_EXT: int

  GL_INT_IMAGE_2D_ARRAY_EXT: int

  GL_INT_IMAGE_2D_EXT: int

  GL_INT_IMAGE_2D_MULTISAMPLE_ARRAY_EXT: int

  GL_INT_IMAGE_2D_MULTISAMPLE_EXT: int

  GL_INT_IMAGE_2D_RECT_EXT: int

  GL_INT_IMAGE_3D_EXT: int

  GL_INT_IMAGE_BUFFER_EXT: int

  GL_INT_IMAGE_CUBE_EXT: int

  GL_INT_IMAGE_CUBE_MAP_ARRAY_EXT: int

  GL_MAX_COMBINED_IMAGE_UNITS_AND_FRAGMENT_OUTPUTS_EXT: int

  GL_MAX_IMAGE_SAMPLES_EXT: int

  GL_MAX_IMAGE_UNITS_EXT: int

  GL_PIXEL_BUFFER_BARRIER_BIT_EXT: int

  GL_SHADER_IMAGE_ACCESS_BARRIER_BIT_EXT: int

  GL_TEXTURE_FETCH_BARRIER_BIT_EXT: int

  GL_TEXTURE_UPDATE_BARRIER_BIT_EXT: int

  GL_TRANSFORM_FEEDBACK_BARRIER_BIT_EXT: int

  GL_UNIFORM_BARRIER_BIT_EXT: int

  GL_UNSIGNED_INT_IMAGE_1D_ARRAY_EXT: int

  GL_UNSIGNED_INT_IMAGE_1D_EXT: int

  GL_UNSIGNED_INT_IMAGE_2D_ARRAY_EXT: int

  GL_UNSIGNED_INT_IMAGE_2D_EXT: int

  GL_UNSIGNED_INT_IMAGE_2D_MULTISAMPLE_ARRAY_EXT: int

  GL_UNSIGNED_INT_IMAGE_2D_MULTISAMPLE_EXT: int

  GL_UNSIGNED_INT_IMAGE_2D_RECT_EXT: int

  GL_UNSIGNED_INT_IMAGE_3D_EXT: int

  GL_UNSIGNED_INT_IMAGE_BUFFER_EXT: int

  GL_UNSIGNED_INT_IMAGE_CUBE_EXT: int

  GL_UNSIGNED_INT_IMAGE_CUBE_MAP_ARRAY_EXT: int

  GL_VERTEX_ATTRIB_ARRAY_BARRIER_BIT_EXT: int

  @staticmethod
  def glBindImageTextureEXT(arg0: int, arg1: int, arg2: int, arg3: bool, arg4: int, arg5: int, arg6: int) -> None: ...

  @staticmethod
  def glMemoryBarrierEXT(arg0: int) -> None: ...


class EXTSharedTexturePalette:

  GL_SHARED_TEXTURE_PALETTE_EXT: int


class EXTStencilClearTag:

  GL_STENCIL_CLEAR_TAG_VALUE_EXT: int

  GL_STENCIL_TAG_BITS_EXT: int

  @staticmethod
  def glStencilClearTagEXT(arg0: int, arg1: int) -> None: ...


class EXTStencilTwoSide:

  GL_ACTIVE_STENCIL_FACE_EXT: int

  GL_STENCIL_TEST_TWO_SIDE_EXT: int

  @staticmethod
  def glActiveStencilFaceEXT(arg0: int) -> None: ...


class EXTStencilWrap:

  GL_DECR_WRAP_EXT: int

  GL_INCR_WRAP_EXT: int


class EXTTextureArray:

  GL_COMPARE_REF_DEPTH_TO_TEXTURE_EXT: int

  GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LAYER_EXT: int

  GL_MAX_ARRAY_TEXTURE_LAYERS_EXT: int

  GL_PROXY_TEXTURE_1D_ARRAY_EXT: int

  GL_PROXY_TEXTURE_2D_ARRAY_EXT: int

  GL_SAMPLER_1D_ARRAY_EXT: int

  GL_SAMPLER_1D_ARRAY_SHADOW_EXT: int

  GL_SAMPLER_2D_ARRAY_EXT: int

  GL_SAMPLER_2D_ARRAY_SHADOW_EXT: int

  GL_TEXTURE_1D_ARRAY_EXT: int

  GL_TEXTURE_2D_ARRAY_EXT: int

  GL_TEXTURE_BINDING_1D_ARRAY_EXT: int

  GL_TEXTURE_BINDING_2D_ARRAY_EXT: int

  @staticmethod
  def glFramebufferTextureLayerEXT(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int) -> None: ...


class EXTTextureBufferObject:

  GL_MAX_TEXTURE_BUFFER_SIZE_EXT: int

  GL_TEXTURE_BINDING_BUFFER_EXT: int

  GL_TEXTURE_BUFFER_DATA_STORE_BINDING_EXT: int

  GL_TEXTURE_BUFFER_EXT: int

  GL_TEXTURE_BUFFER_FORMAT_EXT: int

  @staticmethod
  def glTexBufferEXT(arg0: int, arg1: int, arg2: int) -> None: ...


class EXTTextureCompressionLATC:

  GL_COMPRESSED_LUMINANCE_ALPHA_LATC2_EXT: int

  GL_COMPRESSED_LUMINANCE_LATC1_EXT: int

  GL_COMPRESSED_SIGNED_LUMINANCE_ALPHA_LATC2_EXT: int

  GL_COMPRESSED_SIGNED_LUMINANCE_LATC1_EXT: int


class EXTTextureCompressionRGTC:

  GL_COMPRESSED_RED_GREEN_RGTC2_EXT: int

  GL_COMPRESSED_RED_RGTC1_EXT: int

  GL_COMPRESSED_SIGNED_RED_GREEN_RGTC2_EXT: int

  GL_COMPRESSED_SIGNED_RED_RGTC1_EXT: int


class EXTTextureCompressionS3TC:

  GL_COMPRESSED_RGB_S3TC_DXT1_EXT: int

  GL_COMPRESSED_RGBA_S3TC_DXT1_EXT: int

  GL_COMPRESSED_RGBA_S3TC_DXT3_EXT: int

  GL_COMPRESSED_RGBA_S3TC_DXT5_EXT: int


class EXTTextureFilterAnisotropic:

  GL_MAX_TEXTURE_MAX_ANISOTROPY_EXT: int

  GL_TEXTURE_MAX_ANISOTROPY_EXT: int


class EXTTextureFilterMinmax:

  GL_TEXTURE_REDUCTION_MODE_EXT: int

  GL_WEIGHTED_AVERAGE_EXT: int


class EXTTextureInteger:

  GL_ALPHA16I_EXT: int

  GL_ALPHA16UI_EXT: int

  GL_ALPHA32I_EXT: int

  GL_ALPHA32UI_EXT: int

  GL_ALPHA8I_EXT: int

  GL_ALPHA8UI_EXT: int

  GL_ALPHA_INTEGER_EXT: int

  GL_BGR_INTEGER_EXT: int

  GL_BGRA_INTEGER_EXT: int

  GL_BLUE_INTEGER_EXT: int

  GL_GREEN_INTEGER_EXT: int

  GL_INTENSITY16I_EXT: int

  GL_INTENSITY16UI_EXT: int

  GL_INTENSITY32I_EXT: int

  GL_INTENSITY32UI_EXT: int

  GL_INTENSITY8I_EXT: int

  GL_INTENSITY8UI_EXT: int

  GL_LUMINANCE16I_EXT: int

  GL_LUMINANCE16UI_EXT: int

  GL_LUMINANCE32I_EXT: int

  GL_LUMINANCE32UI_EXT: int

  GL_LUMINANCE8I_EXT: int

  GL_LUMINANCE8UI_EXT: int

  GL_LUMINANCE_ALPHA16I_EXT: int

  GL_LUMINANCE_ALPHA16UI_EXT: int

  GL_LUMINANCE_ALPHA32I_EXT: int

  GL_LUMINANCE_ALPHA32UI_EXT: int

  GL_LUMINANCE_ALPHA8I_EXT: int

  GL_LUMINANCE_ALPHA8UI_EXT: int

  GL_LUMINANCE_ALPHA_INTEGER_EXT: int

  GL_LUMINANCE_INTEGER_EXT: int

  GL_RED_INTEGER_EXT: int

  GL_RGB16I_EXT: int

  GL_RGB16UI_EXT: int

  GL_RGB32I_EXT: int

  GL_RGB32UI_EXT: int

  GL_RGB8I_EXT: int

  GL_RGB8UI_EXT: int

  GL_RGB_INTEGER_EXT: int

  GL_RGBA16I_EXT: int

  GL_RGBA16UI_EXT: int

  GL_RGBA32I_EXT: int

  GL_RGBA32UI_EXT: int

  GL_RGBA8I_EXT: int

  GL_RGBA8UI_EXT: int

  GL_RGBA_INTEGER_EXT: int

  GL_RGBA_INTEGER_MODE_EXT: int

  @staticmethod
  def glClearColorIiEXT(arg0: int, arg1: int, arg2: int, arg3: int) -> None: ...

  @staticmethod
  def glClearColorIuiEXT(arg0: int, arg1: int, arg2: int, arg3: int) -> None: ...

  @staticmethod
  def glGetTexParameterIiEXT(arg0: int, arg1: int) -> int: ...

  @staticmethod
  @overload
  def glGetTexParameterIivEXT(arg0: int, arg1: int, arg2: list[int]) -> None: ...

  @staticmethod
  @overload
  def glGetTexParameterIivEXT(arg0: int, arg1: int, arg2: IntBuffer) -> None: ...

  @staticmethod
  def glGetTexParameterIuiEXT(arg0: int, arg1: int) -> int: ...

  @staticmethod
  @overload
  def glGetTexParameterIuivEXT(arg0: int, arg1: int, arg2: list[int]) -> None: ...

  @staticmethod
  @overload
  def glGetTexParameterIuivEXT(arg0: int, arg1: int, arg2: IntBuffer) -> None: ...

  @staticmethod
  def glTexParameterIiEXT(arg0: int, arg1: int, arg2: int) -> None: ...

  @staticmethod
  @overload
  def glTexParameterIivEXT(arg0: int, arg1: int, arg2: list[int]) -> None: ...

  @staticmethod
  @overload
  def glTexParameterIivEXT(arg0: int, arg1: int, arg2: IntBuffer) -> None: ...

  @staticmethod
  def glTexParameterIuiEXT(arg0: int, arg1: int, arg2: int) -> None: ...

  @staticmethod
  @overload
  def glTexParameterIuivEXT(arg0: int, arg1: int, arg2: list[int]) -> None: ...

  @staticmethod
  @overload
  def glTexParameterIuivEXT(arg0: int, arg1: int, arg2: IntBuffer) -> None: ...

  @staticmethod
  def nglGetTexParameterIivEXT(arg0: int, arg1: int, arg2: int) -> None: ...

  @staticmethod
  def nglGetTexParameterIuivEXT(arg0: int, arg1: int, arg2: int) -> None: ...

  @staticmethod
  def nglTexParameterIivEXT(arg0: int, arg1: int, arg2: int) -> None: ...

  @staticmethod
  def nglTexParameterIuivEXT(arg0: int, arg1: int, arg2: int) -> None: ...


class EXTTextureMirrorClamp:

  GL_MIRROR_CLAMP_EXT: int

  GL_MIRROR_CLAMP_TO_BORDER_EXT: int

  GL_MIRROR_CLAMP_TO_EDGE_EXT: int


class EXTTextureSRGB:

  GL_COMPRESSED_SLUMINANCE_ALPHA_EXT: int

  GL_COMPRESSED_SLUMINANCE_EXT: int

  GL_COMPRESSED_SRGB_ALPHA_EXT: int

  GL_COMPRESSED_SRGB_ALPHA_S3TC_DXT1_EXT: int

  GL_COMPRESSED_SRGB_ALPHA_S3TC_DXT3_EXT: int

  GL_COMPRESSED_SRGB_ALPHA_S3TC_DXT5_EXT: int

  GL_COMPRESSED_SRGB_EXT: int

  GL_COMPRESSED_SRGB_S3TC_DXT1_EXT: int

  GL_SLUMINANCE8_ALPHA8_EXT: int

  GL_SLUMINANCE8_EXT: int

  GL_SLUMINANCE_ALPHA_EXT: int

  GL_SLUMINANCE_EXT: int

  GL_SRGB8_ALPHA8_EXT: int

  GL_SRGB8_EXT: int

  GL_SRGB_ALPHA_EXT: int

  GL_SRGB_EXT: int


class EXTTextureSRGBDecode:

  GL_DECODE_EXT: int

  GL_SKIP_DECODE_EXT: int

  GL_TEXTURE_SRGB_DECODE_EXT: int


class EXTTextureSRGBR8:

  GL_SR8_EXT: int


class EXTTextureSharedExponent:

  GL_RGB9_E5_EXT: int

  GL_TEXTURE_SHARED_SIZE_EXT: int

  GL_UNSIGNED_INT_5_9_9_9_REV_EXT: int


class EXTTextureSnorm:

  GL_ALPHA16_SNORM: int

  GL_ALPHA8_SNORM: int

  GL_ALPHA_SNORM: int

  GL_INTENSITY16_SNORM: int

  GL_INTENSITY8_SNORM: int

  GL_INTENSITY_SNORM: int

  GL_LUMINANCE16_ALPHA16_SNORM: int

  GL_LUMINANCE16_SNORM: int

  GL_LUMINANCE8_ALPHA8_SNORM: int

  GL_LUMINANCE8_SNORM: int

  GL_LUMINANCE_ALPHA_SNORM: int

  GL_LUMINANCE_SNORM: int

  GL_R16_SNORM: int

  GL_R8_SNORM: int

  GL_RED_SNORM: int

  GL_RG16_SNORM: int

  GL_RG8_SNORM: int

  GL_RG_SNORM: int

  GL_RGB16_SNORM: int

  GL_RGB8_SNORM: int

  GL_RGB_SNORM: int

  GL_RGBA16_SNORM: int

  GL_RGBA8_SNORM: int

  GL_RGBA_SNORM: int

  GL_SIGNED_NORMALIZED: int


class EXTTextureSwizzle:

  GL_TEXTURE_SWIZZLE_A_EXT: int

  GL_TEXTURE_SWIZZLE_B_EXT: int

  GL_TEXTURE_SWIZZLE_G_EXT: int

  GL_TEXTURE_SWIZZLE_R_EXT: int

  GL_TEXTURE_SWIZZLE_RGBA_EXT: int


class EXTTimerQuery:

  GL_TIME_ELAPSED_EXT: int

  @staticmethod
  def glGetQueryObjecti64EXT(arg0: int, arg1: int) -> int: ...

  @staticmethod
  @overload
  def glGetQueryObjecti64vEXT(arg0: int, arg1: int, arg2: list[int]) -> None: ...

  @staticmethod
  @overload
  def glGetQueryObjecti64vEXT(arg0: int, arg1: int, arg2: LongBuffer) -> None: ...

  @staticmethod
  def glGetQueryObjectui64EXT(arg0: int, arg1: int) -> int: ...

  @staticmethod
  @overload
  def glGetQueryObjectui64vEXT(arg0: int, arg1: int, arg2: list[int]) -> None: ...

  @staticmethod
  @overload
  def glGetQueryObjectui64vEXT(arg0: int, arg1: int, arg2: LongBuffer) -> None: ...

  @staticmethod
  def nglGetQueryObjecti64vEXT(arg0: int, arg1: int, arg2: int) -> None: ...

  @staticmethod
  def nglGetQueryObjectui64vEXT(arg0: int, arg1: int, arg2: int) -> None: ...


class EXTTransformFeedback:

  GL_INTERLEAVED_ATTRIBS_EXT: int

  GL_MAX_TRANSFORM_FEEDBACK_INTERLEAVED_COMPONENTS_EXT: int

  GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS_EXT: int

  GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_COMPONENTS_EXT: int

  GL_PRIMITIVES_GENERATED_EXT: int

  GL_RASTERIZER_DISCARD_EXT: int

  GL_SEPARATE_ATTRIBS_EXT: int

  GL_TRANSFORM_FEEDBACK_BUFFER_BINDING_EXT: int

  GL_TRANSFORM_FEEDBACK_BUFFER_EXT: int

  GL_TRANSFORM_FEEDBACK_BUFFER_MODE_EXT: int

  GL_TRANSFORM_FEEDBACK_BUFFER_SIZE_EXT: int

  GL_TRANSFORM_FEEDBACK_BUFFER_START_EXT: int

  GL_TRANSFORM_FEEDBACK_PRIMITIVES_WRITTEN_EXT: int

  GL_TRANSFORM_FEEDBACK_VARYING_MAX_LENGTH_EXT: int

  GL_TRANSFORM_FEEDBACK_VARYINGS_EXT: int

  @staticmethod
  def glBeginTransformFeedbackEXT(arg0: int) -> None: ...

  @staticmethod
  def glBindBufferBaseEXT(arg0: int, arg1: int, arg2: int) -> None: ...

  @staticmethod
  def glBindBufferOffsetEXT(arg0: int, arg1: int, arg2: int, arg3: int) -> None: ...

  @staticmethod
  def glBindBufferRangeEXT(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int) -> None: ...

  @staticmethod
  def glEndTransformFeedbackEXT() -> None: ...

  @staticmethod
  def glGetBooleanIndexedEXT(arg0: int, arg1: int) -> bool: ...

  @staticmethod
  def glGetBooleanIndexedvEXT(arg0: int, arg1: int, arg2: ByteBuffer) -> None: ...

  @staticmethod
  def glGetIntegerIndexedEXT(arg0: int, arg1: int) -> int: ...

  @staticmethod
  @overload
  def glGetIntegerIndexedvEXT(arg0: int, arg1: int, arg2: list[int]) -> None: ...

  @staticmethod
  @overload
  def glGetIntegerIndexedvEXT(arg0: int, arg1: int, arg2: IntBuffer) -> None: ...

  @staticmethod
  @overload
  def glGetTransformFeedbackVaryingEXT(arg0: int, arg1: int, arg2: IntBuffer, arg3: IntBuffer) -> str: ...

  @staticmethod
  @overload
  def glGetTransformFeedbackVaryingEXT(arg0: int, arg1: int, arg2: int, arg3: IntBuffer, arg4: IntBuffer) -> str: ...

  @staticmethod
  @overload
  def glGetTransformFeedbackVaryingEXT(arg0: int, arg1: int, arg2: list[int], arg3: list[int], arg4: list[int], arg5: ByteBuffer) -> None: ...

  @staticmethod
  @overload
  def glGetTransformFeedbackVaryingEXT(arg0: int, arg1: int, arg2: IntBuffer, arg3: IntBuffer, arg4: IntBuffer, arg5: ByteBuffer) -> None: ...

  @staticmethod
  @overload
  def glTransformFeedbackVaryingsEXT(arg0: int, arg1: list[CharSequence], arg2: int) -> None: ...

  @staticmethod
  @overload
  def glTransformFeedbackVaryingsEXT(arg0: int, arg1: CharSequence, arg2: int) -> None: ...

  @staticmethod
  @overload
  def glTransformFeedbackVaryingsEXT(arg0: int, arg1: PointerBuffer, arg2: int) -> None: ...

  @staticmethod
  def nglGetBooleanIndexedvEXT(arg0: int, arg1: int, arg2: int) -> None: ...

  @staticmethod
  def nglGetIntegerIndexedvEXT(arg0: int, arg1: int, arg2: int) -> None: ...

  @staticmethod
  def nglGetTransformFeedbackVaryingEXT(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int) -> None: ...

  @staticmethod
  def nglTransformFeedbackVaryingsEXT(arg0: int, arg1: int, arg2: int, arg3: int) -> None: ...


class EXTVertexAttrib64bit:

  GL_DOUBLE_MAT2_EXT: int

  GL_DOUBLE_MAT2x3_EXT: int

  GL_DOUBLE_MAT2x4_EXT: int

  GL_DOUBLE_MAT3_EXT: int

  GL_DOUBLE_MAT3x2_EXT: int

  GL_DOUBLE_MAT3x4_EXT: int

  GL_DOUBLE_MAT4_EXT: int

  GL_DOUBLE_MAT4x2_EXT: int

  GL_DOUBLE_MAT4x3_EXT: int

  GL_DOUBLE_VEC2_EXT: int

  GL_DOUBLE_VEC3_EXT: int

  GL_DOUBLE_VEC4_EXT: int

  @staticmethod
  @overload
  def glGetVertexAttribLdvEXT(arg0: int, arg1: int, arg2: list[float]) -> None: ...

  @staticmethod
  @overload
  def glGetVertexAttribLdvEXT(arg0: int, arg1: int, arg2: DoubleBuffer) -> None: ...

  @staticmethod
  def glVertexArrayVertexAttribLOffsetEXT(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int) -> None: ...

  @staticmethod
  def glVertexAttribL1dEXT(arg0: int, arg1: float) -> None: ...

  @staticmethod
  @overload
  def glVertexAttribL1dvEXT(arg0: int, arg1: list[float]) -> None: ...

  @staticmethod
  @overload
  def glVertexAttribL1dvEXT(arg0: int, arg1: DoubleBuffer) -> None: ...

  @staticmethod
  def glVertexAttribL2dEXT(arg0: int, arg1: float, arg2: float) -> None: ...

  @staticmethod
  @overload
  def glVertexAttribL2dvEXT(arg0: int, arg1: list[float]) -> None: ...

  @staticmethod
  @overload
  def glVertexAttribL2dvEXT(arg0: int, arg1: DoubleBuffer) -> None: ...

  @staticmethod
  def glVertexAttribL3dEXT(arg0: int, arg1: float, arg2: float, arg3: float) -> None: ...

  @staticmethod
  @overload
  def glVertexAttribL3dvEXT(arg0: int, arg1: list[float]) -> None: ...

  @staticmethod
  @overload
  def glVertexAttribL3dvEXT(arg0: int, arg1: DoubleBuffer) -> None: ...

  @staticmethod
  def glVertexAttribL4dEXT(arg0: int, arg1: float, arg2: float, arg3: float, arg4: float) -> None: ...

  @staticmethod
  @overload
  def glVertexAttribL4dvEXT(arg0: int, arg1: list[float]) -> None: ...

  @staticmethod
  @overload
  def glVertexAttribL4dvEXT(arg0: int, arg1: DoubleBuffer) -> None: ...

  @staticmethod
  @overload
  def glVertexAttribLPointerEXT(arg0: int, arg1: int, arg2: int, arg3: DoubleBuffer) -> None: ...

  @staticmethod
  @overload
  def glVertexAttribLPointerEXT(arg0: int, arg1: int, arg2: int, arg3: int, arg4: ByteBuffer) -> None: ...

  @staticmethod
  @overload
  def glVertexAttribLPointerEXT(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int) -> None: ...

  @staticmethod
  def nglGetVertexAttribLdvEXT(arg0: int, arg1: int, arg2: int) -> None: ...

  @staticmethod
  def nglVertexAttribL1dvEXT(arg0: int, arg1: int) -> None: ...

  @staticmethod
  def nglVertexAttribL2dvEXT(arg0: int, arg1: int) -> None: ...

  @staticmethod
  def nglVertexAttribL3dvEXT(arg0: int, arg1: int) -> None: ...

  @staticmethod
  def nglVertexAttribL4dvEXT(arg0: int, arg1: int) -> None: ...

  @staticmethod
  def nglVertexAttribLPointerEXT(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int) -> None: ...


class EXTWin32KeyedMutex:

  @staticmethod
  def glAcquireKeyedMutexWin32EXT(arg0: int, arg1: int, arg2: int) -> bool: ...

  @staticmethod
  def glReleaseKeyedMutexWin32EXT(arg0: int, arg1: int) -> bool: ...


class EXTWindowRectangles:

  GL_EXCLUSIVE_EXT: int

  GL_INCLUSIVE_EXT: int

  GL_MAX_WINDOW_RECTANGLES_EXT: int

  GL_NUM_WINDOW_RECTANGLES_EXT: int

  GL_WINDOW_RECTANGLE_EXT: int

  GL_WINDOW_RECTANGLE_MODE_EXT: int

  @staticmethod
  @overload
  def glWindowRectanglesEXT(arg0: int, arg1: list[int]) -> None: ...

  @staticmethod
  @overload
  def glWindowRectanglesEXT(arg0: int, arg1: IntBuffer) -> None: ...

  @staticmethod
  def nglWindowRectanglesEXT(arg0: int, arg1: int, arg2: int) -> None: ...


class EXTX11SyncObject:

  GL_SYNC_X11_FENCE_EXT: int

  @staticmethod
  def glImportSyncEXT(arg0: int, arg1: int, arg2: int) -> int: ...


class GL:

  @staticmethod
  @overload
  def create() -> None: ...

  @staticmethod
  @overload
  def create(arg0: str) -> None: ...

  @staticmethod
  @overload
  def create(arg0: FunctionProvider) -> None: ...

  @staticmethod
  @overload
  def createCapabilities() -> GLCapabilities: ...

  @staticmethod
  @overload
  def createCapabilities(arg0: bool) -> GLCapabilities: ...

  @staticmethod
  @overload
  def createCapabilitiesGLX(arg0: int) -> GLXCapabilities: ...

  @staticmethod
  @overload
  def createCapabilitiesGLX(arg0: int, arg1: int) -> GLXCapabilities: ...

  @staticmethod
  def createCapabilitiesWGL() -> WGLCapabilities: ...

  @staticmethod
  def destroy() -> None: ...

  @staticmethod
  def getCapabilities() -> GLCapabilities: ...

  @staticmethod
  def getCapabilitiesGLX() -> GLXCapabilities: ...

  @staticmethod
  def getCapabilitiesWGL() -> WGLCapabilities: ...

  @staticmethod
  def getFunctionProvider() -> FunctionProvider: ...

  @staticmethod
  def setCapabilities(arg0: GLCapabilities) -> None: ...

  class ICDStatic:

    @overload
    def get(self) -> GLCapabilities: ...

    @overload
    def get(self) -> GLCapabilities: ...

    @overload
    def set(self, arg0: GLCapabilities) -> None: ...

    @overload
    def set(self, arg0: GLCapabilities) -> None: ...

    class WriteOnce: ...

  class ICD:

    def get(self) -> GLCapabilities: ...

    def set(self, arg0: GLCapabilities) -> None: ...

  class SharedLibraryGL(SharedLibrary.Delegate):

    def getFunctionAddress(self, arg0: ByteBuffer) -> int: ...


class GL11:

  GL_2_BYTES: int

  GL_2D: int

  GL_3_BYTES: int

  GL_3D: int

  GL_3D_COLOR: int

  GL_3D_COLOR_TEXTURE: int

  GL_4_BYTES: int

  GL_4D_COLOR_TEXTURE: int

  GL_ACCUM: int

  GL_ACCUM_ALPHA_BITS: int

  GL_ACCUM_BLUE_BITS: int

  GL_ACCUM_BUFFER_BIT: int

  GL_ACCUM_CLEAR_VALUE: int

  GL_ACCUM_GREEN_BITS: int

  GL_ACCUM_RED_BITS: int

  GL_ADD: int

  GL_ALL_ATTRIB_BITS: int

  GL_ALPHA: int

  GL_ALPHA12: int

  GL_ALPHA16: int

  GL_ALPHA4: int

  GL_ALPHA8: int

  GL_ALPHA_BIAS: int

  GL_ALPHA_BITS: int

  GL_ALPHA_SCALE: int

  GL_ALPHA_TEST: int

  GL_ALPHA_TEST_FUNC: int

  GL_ALPHA_TEST_REF: int

  GL_ALWAYS: int

  GL_AMBIENT: int

  GL_AMBIENT_AND_DIFFUSE: int

  GL_AND: int

  GL_AND_INVERTED: int

  GL_AND_REVERSE: int

  GL_ATTRIB_STACK_DEPTH: int

  GL_AUTO_NORMAL: int

  GL_AUX0: int

  GL_AUX1: int

  GL_AUX2: int

  GL_AUX3: int

  GL_AUX_BUFFERS: int

  GL_BACK: int

  GL_BACK_LEFT: int

  GL_BACK_RIGHT: int

  GL_BITMAP: int

  GL_BITMAP_TOKEN: int

  GL_BLEND: int

  GL_BLEND_DST: int

  GL_BLEND_SRC: int

  GL_BLUE: int

  GL_BLUE_BIAS: int

  GL_BLUE_BITS: int

  GL_BLUE_SCALE: int

  GL_BYTE: int

  GL_C3F_V3F: int

  GL_C4F_N3F_V3F: int

  GL_C4UB_V2F: int

  GL_C4UB_V3F: int

  GL_CCW: int

  GL_CLAMP: int

  GL_CLEAR: int

  GL_CLIENT_ALL_ATTRIB_BITS: int

  GL_CLIENT_ATTRIB_STACK_DEPTH: int

  GL_CLIENT_PIXEL_STORE_BIT: int

  GL_CLIENT_VERTEX_ARRAY_BIT: int

  GL_CLIP_PLANE0: int

  GL_CLIP_PLANE1: int

  GL_CLIP_PLANE2: int

  GL_CLIP_PLANE3: int

  GL_CLIP_PLANE4: int

  GL_CLIP_PLANE5: int

  GL_COEFF: int

  GL_COLOR: int

  GL_COLOR_ARRAY: int

  GL_COLOR_ARRAY_POINTER: int

  GL_COLOR_ARRAY_SIZE: int

  GL_COLOR_ARRAY_STRIDE: int

  GL_COLOR_ARRAY_TYPE: int

  GL_COLOR_BUFFER_BIT: int

  GL_COLOR_CLEAR_VALUE: int

  GL_COLOR_INDEX: int

  GL_COLOR_INDEXES: int

  GL_COLOR_LOGIC_OP: int

  GL_COLOR_MATERIAL: int

  GL_COLOR_MATERIAL_FACE: int

  GL_COLOR_MATERIAL_PARAMETER: int

  GL_COLOR_WRITEMASK: int

  GL_COMPILE: int

  GL_COMPILE_AND_EXECUTE: int

  GL_CONSTANT_ATTENUATION: int

  GL_COPY: int

  GL_COPY_INVERTED: int

  GL_COPY_PIXEL_TOKEN: int

  GL_CULL_FACE: int

  GL_CULL_FACE_MODE: int

  GL_CURRENT_BIT: int

  GL_CURRENT_COLOR: int

  GL_CURRENT_INDEX: int

  GL_CURRENT_NORMAL: int

  GL_CURRENT_RASTER_COLOR: int

  GL_CURRENT_RASTER_DISTANCE: int

  GL_CURRENT_RASTER_INDEX: int

  GL_CURRENT_RASTER_POSITION: int

  GL_CURRENT_RASTER_POSITION_VALID: int

  GL_CURRENT_RASTER_TEXTURE_COORDS: int

  GL_CURRENT_TEXTURE_COORDS: int

  GL_CW: int

  GL_DECAL: int

  GL_DECR: int

  GL_DEPTH: int

  GL_DEPTH_BIAS: int

  GL_DEPTH_BITS: int

  GL_DEPTH_BUFFER_BIT: int

  GL_DEPTH_CLEAR_VALUE: int

  GL_DEPTH_COMPONENT: int

  GL_DEPTH_FUNC: int

  GL_DEPTH_RANGE: int

  GL_DEPTH_SCALE: int

  GL_DEPTH_TEST: int

  GL_DEPTH_WRITEMASK: int

  GL_DIFFUSE: int

  GL_DITHER: int

  GL_DOMAIN: int

  GL_DONT_CARE: int

  GL_DOUBLE: int

  GL_DOUBLEBUFFER: int

  GL_DRAW_BUFFER: int

  GL_DRAW_PIXEL_TOKEN: int

  GL_DST_ALPHA: int

  GL_DST_COLOR: int

  GL_EDGE_FLAG: int

  GL_EDGE_FLAG_ARRAY: int

  GL_EDGE_FLAG_ARRAY_POINTER: int

  GL_EDGE_FLAG_ARRAY_STRIDE: int

  GL_EMISSION: int

  GL_ENABLE_BIT: int

  GL_EQUAL: int

  GL_EQUIV: int

  GL_EVAL_BIT: int

  GL_EXP: int

  GL_EXP2: int

  GL_EXTENSIONS: int

  GL_EYE_LINEAR: int

  GL_EYE_PLANE: int

  GL_FALSE: int

  GL_FASTEST: int

  GL_FEEDBACK: int

  GL_FEEDBACK_BUFFER_POINTER: int

  GL_FEEDBACK_BUFFER_SIZE: int

  GL_FEEDBACK_BUFFER_TYPE: int

  GL_FILL: int

  GL_FLAT: int

  GL_FLOAT: int

  GL_FOG: int

  GL_FOG_BIT: int

  GL_FOG_COLOR: int

  GL_FOG_DENSITY: int

  GL_FOG_END: int

  GL_FOG_HINT: int

  GL_FOG_INDEX: int

  GL_FOG_MODE: int

  GL_FOG_START: int

  GL_FRONT: int

  GL_FRONT_AND_BACK: int

  GL_FRONT_FACE: int

  GL_FRONT_LEFT: int

  GL_FRONT_RIGHT: int

  GL_GEQUAL: int

  GL_GREATER: int

  GL_GREEN: int

  GL_GREEN_BIAS: int

  GL_GREEN_BITS: int

  GL_GREEN_SCALE: int

  GL_HINT_BIT: int

  GL_INCR: int

  GL_INDEX_ARRAY: int

  GL_INDEX_ARRAY_POINTER: int

  GL_INDEX_ARRAY_STRIDE: int

  GL_INDEX_ARRAY_TYPE: int

  GL_INDEX_BITS: int

  GL_INDEX_CLEAR_VALUE: int

  GL_INDEX_LOGIC_OP: int

  GL_INDEX_MODE: int

  GL_INDEX_OFFSET: int

  GL_INDEX_SHIFT: int

  GL_INDEX_WRITEMASK: int

  GL_INT: int

  GL_INTENSITY: int

  GL_INTENSITY12: int

  GL_INTENSITY16: int

  GL_INTENSITY4: int

  GL_INTENSITY8: int

  GL_INVALID_ENUM: int

  GL_INVALID_OPERATION: int

  GL_INVALID_VALUE: int

  GL_INVERT: int

  GL_KEEP: int

  GL_LEFT: int

  GL_LEQUAL: int

  GL_LESS: int

  GL_LIGHT0: int

  GL_LIGHT1: int

  GL_LIGHT2: int

  GL_LIGHT3: int

  GL_LIGHT4: int

  GL_LIGHT5: int

  GL_LIGHT6: int

  GL_LIGHT7: int

  GL_LIGHT_MODEL_AMBIENT: int

  GL_LIGHT_MODEL_LOCAL_VIEWER: int

  GL_LIGHT_MODEL_TWO_SIDE: int

  GL_LIGHTING: int

  GL_LIGHTING_BIT: int

  GL_LINE: int

  GL_LINE_BIT: int

  GL_LINE_LOOP: int

  GL_LINE_RESET_TOKEN: int

  GL_LINE_SMOOTH: int

  GL_LINE_SMOOTH_HINT: int

  GL_LINE_STIPPLE: int

  GL_LINE_STIPPLE_PATTERN: int

  GL_LINE_STIPPLE_REPEAT: int

  GL_LINE_STRIP: int

  GL_LINE_TOKEN: int

  GL_LINE_WIDTH: int

  GL_LINE_WIDTH_GRANULARITY: int

  GL_LINE_WIDTH_RANGE: int

  GL_LINEAR: int

  GL_LINEAR_ATTENUATION: int

  GL_LINEAR_MIPMAP_LINEAR: int

  GL_LINEAR_MIPMAP_NEAREST: int

  GL_LINES: int

  GL_LIST_BASE: int

  GL_LIST_BIT: int

  GL_LIST_INDEX: int

  GL_LIST_MODE: int

  GL_LOAD: int

  GL_LOGIC_OP: int

  GL_LOGIC_OP_MODE: int

  GL_LUMINANCE: int

  GL_LUMINANCE12: int

  GL_LUMINANCE12_ALPHA12: int

  GL_LUMINANCE12_ALPHA4: int

  GL_LUMINANCE16: int

  GL_LUMINANCE16_ALPHA16: int

  GL_LUMINANCE4: int

  GL_LUMINANCE4_ALPHA4: int

  GL_LUMINANCE6_ALPHA2: int

  GL_LUMINANCE8: int

  GL_LUMINANCE8_ALPHA8: int

  GL_LUMINANCE_ALPHA: int

  GL_MAP1_COLOR_4: int

  GL_MAP1_GRID_DOMAIN: int

  GL_MAP1_GRID_SEGMENTS: int

  GL_MAP1_INDEX: int

  GL_MAP1_NORMAL: int

  GL_MAP1_TEXTURE_COORD_1: int

  GL_MAP1_TEXTURE_COORD_2: int

  GL_MAP1_TEXTURE_COORD_3: int

  GL_MAP1_TEXTURE_COORD_4: int

  GL_MAP1_VERTEX_3: int

  GL_MAP1_VERTEX_4: int

  GL_MAP2_COLOR_4: int

  GL_MAP2_GRID_DOMAIN: int

  GL_MAP2_GRID_SEGMENTS: int

  GL_MAP2_INDEX: int

  GL_MAP2_NORMAL: int

  GL_MAP2_TEXTURE_COORD_1: int

  GL_MAP2_TEXTURE_COORD_2: int

  GL_MAP2_TEXTURE_COORD_3: int

  GL_MAP2_TEXTURE_COORD_4: int

  GL_MAP2_VERTEX_3: int

  GL_MAP2_VERTEX_4: int

  GL_MAP_COLOR: int

  GL_MAP_STENCIL: int

  GL_MATRIX_MODE: int

  GL_MAX_ATTRIB_STACK_DEPTH: int

  GL_MAX_CLIENT_ATTRIB_STACK_DEPTH: int

  GL_MAX_CLIP_PLANES: int

  GL_MAX_EVAL_ORDER: int

  GL_MAX_LIGHTS: int

  GL_MAX_LIST_NESTING: int

  GL_MAX_MODELVIEW_STACK_DEPTH: int

  GL_MAX_NAME_STACK_DEPTH: int

  GL_MAX_PIXEL_MAP_TABLE: int

  GL_MAX_PROJECTION_STACK_DEPTH: int

  GL_MAX_TEXTURE_SIZE: int

  GL_MAX_TEXTURE_STACK_DEPTH: int

  GL_MAX_VIEWPORT_DIMS: int

  GL_MODELVIEW: int

  GL_MODELVIEW_MATRIX: int

  GL_MODELVIEW_STACK_DEPTH: int

  GL_MODULATE: int

  GL_MULT: int

  GL_N3F_V3F: int

  GL_NAME_STACK_DEPTH: int

  GL_NAND: int

  GL_NEAREST: int

  GL_NEAREST_MIPMAP_LINEAR: int

  GL_NEAREST_MIPMAP_NEAREST: int

  GL_NEVER: int

  GL_NICEST: int

  GL_NO_ERROR: int

  GL_NONE: int

  GL_NOOP: int

  GL_NOR: int

  GL_NORMAL_ARRAY: int

  GL_NORMAL_ARRAY_POINTER: int

  GL_NORMAL_ARRAY_STRIDE: int

  GL_NORMAL_ARRAY_TYPE: int

  GL_NORMALIZE: int

  GL_NOTEQUAL: int

  GL_OBJECT_LINEAR: int

  GL_OBJECT_PLANE: int

  GL_ONE: int

  GL_ONE_MINUS_DST_ALPHA: int

  GL_ONE_MINUS_DST_COLOR: int

  GL_ONE_MINUS_SRC_ALPHA: int

  GL_ONE_MINUS_SRC_COLOR: int

  GL_OR: int

  GL_OR_INVERTED: int

  GL_OR_REVERSE: int

  GL_ORDER: int

  GL_OUT_OF_MEMORY: int

  GL_PACK_ALIGNMENT: int

  GL_PACK_LSB_FIRST: int

  GL_PACK_ROW_LENGTH: int

  GL_PACK_SKIP_PIXELS: int

  GL_PACK_SKIP_ROWS: int

  GL_PACK_SWAP_BYTES: int

  GL_PASS_THROUGH_TOKEN: int

  GL_PERSPECTIVE_CORRECTION_HINT: int

  GL_PIXEL_MAP_A_TO_A: int

  GL_PIXEL_MAP_A_TO_A_SIZE: int

  GL_PIXEL_MAP_B_TO_B: int

  GL_PIXEL_MAP_B_TO_B_SIZE: int

  GL_PIXEL_MAP_G_TO_G: int

  GL_PIXEL_MAP_G_TO_G_SIZE: int

  GL_PIXEL_MAP_I_TO_A: int

  GL_PIXEL_MAP_I_TO_A_SIZE: int

  GL_PIXEL_MAP_I_TO_B: int

  GL_PIXEL_MAP_I_TO_B_SIZE: int

  GL_PIXEL_MAP_I_TO_G: int

  GL_PIXEL_MAP_I_TO_G_SIZE: int

  GL_PIXEL_MAP_I_TO_I: int

  GL_PIXEL_MAP_I_TO_I_SIZE: int

  GL_PIXEL_MAP_I_TO_R: int

  GL_PIXEL_MAP_I_TO_R_SIZE: int

  GL_PIXEL_MAP_R_TO_R: int

  GL_PIXEL_MAP_R_TO_R_SIZE: int

  GL_PIXEL_MAP_S_TO_S: int

  GL_PIXEL_MAP_S_TO_S_SIZE: int

  GL_PIXEL_MODE_BIT: int

  GL_POINT: int

  GL_POINT_BIT: int

  GL_POINT_SIZE: int

  GL_POINT_SIZE_GRANULARITY: int

  GL_POINT_SIZE_RANGE: int

  GL_POINT_SMOOTH: int

  GL_POINT_SMOOTH_HINT: int

  GL_POINT_TOKEN: int

  GL_POINTS: int

  GL_POLYGON: int

  GL_POLYGON_BIT: int

  GL_POLYGON_MODE: int

  GL_POLYGON_OFFSET_FACTOR: int

  GL_POLYGON_OFFSET_FILL: int

  GL_POLYGON_OFFSET_LINE: int

  GL_POLYGON_OFFSET_POINT: int

  GL_POLYGON_OFFSET_UNITS: int

  GL_POLYGON_SMOOTH: int

  GL_POLYGON_SMOOTH_HINT: int

  GL_POLYGON_STIPPLE: int

  GL_POLYGON_STIPPLE_BIT: int

  GL_POLYGON_TOKEN: int

  GL_POSITION: int

  GL_PROJECTION: int

  GL_PROJECTION_MATRIX: int

  GL_PROJECTION_STACK_DEPTH: int

  GL_PROXY_TEXTURE_1D: int

  GL_PROXY_TEXTURE_2D: int

  GL_Q: int

  GL_QUAD_STRIP: int

  GL_QUADRATIC_ATTENUATION: int

  GL_QUADS: int

  GL_R: int

  GL_R3_G3_B2: int

  GL_READ_BUFFER: int

  GL_RED: int

  GL_RED_BIAS: int

  GL_RED_BITS: int

  GL_RED_SCALE: int

  GL_RENDER: int

  GL_RENDER_MODE: int

  GL_RENDERER: int

  GL_REPEAT: int

  GL_REPLACE: int

  GL_RETURN: int

  GL_RGB: int

  GL_RGB10: int

  GL_RGB10_A2: int

  GL_RGB12: int

  GL_RGB16: int

  GL_RGB4: int

  GL_RGB5: int

  GL_RGB5_A1: int

  GL_RGB8: int

  GL_RGBA: int

  GL_RGBA12: int

  GL_RGBA16: int

  GL_RGBA2: int

  GL_RGBA4: int

  GL_RGBA8: int

  GL_RGBA_MODE: int

  GL_RIGHT: int

  GL_S: int

  GL_SCISSOR_BIT: int

  GL_SCISSOR_BOX: int

  GL_SCISSOR_TEST: int

  GL_SELECT: int

  GL_SELECTION_BUFFER_POINTER: int

  GL_SELECTION_BUFFER_SIZE: int

  GL_SET: int

  GL_SHADE_MODEL: int

  GL_SHININESS: int

  GL_SHORT: int

  GL_SMOOTH: int

  GL_SPECULAR: int

  GL_SPHERE_MAP: int

  GL_SPOT_CUTOFF: int

  GL_SPOT_DIRECTION: int

  GL_SPOT_EXPONENT: int

  GL_SRC_ALPHA: int

  GL_SRC_ALPHA_SATURATE: int

  GL_SRC_COLOR: int

  GL_STACK_OVERFLOW: int

  GL_STACK_UNDERFLOW: int

  GL_STENCIL: int

  GL_STENCIL_BITS: int

  GL_STENCIL_BUFFER_BIT: int

  GL_STENCIL_CLEAR_VALUE: int

  GL_STENCIL_FAIL: int

  GL_STENCIL_FUNC: int

  GL_STENCIL_INDEX: int

  GL_STENCIL_PASS_DEPTH_FAIL: int

  GL_STENCIL_PASS_DEPTH_PASS: int

  GL_STENCIL_REF: int

  GL_STENCIL_TEST: int

  GL_STENCIL_VALUE_MASK: int

  GL_STENCIL_WRITEMASK: int

  GL_STEREO: int

  GL_SUBPIXEL_BITS: int

  GL_T: int

  GL_T2F_C3F_V3F: int

  GL_T2F_C4F_N3F_V3F: int

  GL_T2F_C4UB_V3F: int

  GL_T2F_N3F_V3F: int

  GL_T2F_V3F: int

  GL_T4F_C4F_N3F_V4F: int

  GL_T4F_V4F: int

  GL_TEXTURE: int

  GL_TEXTURE_1D: int

  GL_TEXTURE_2D: int

  GL_TEXTURE_ALPHA_SIZE: int

  GL_TEXTURE_BINDING_1D: int

  GL_TEXTURE_BINDING_2D: int

  GL_TEXTURE_BIT: int

  GL_TEXTURE_BLUE_SIZE: int

  GL_TEXTURE_BORDER: int

  GL_TEXTURE_BORDER_COLOR: int

  GL_TEXTURE_COMPONENTS: int

  GL_TEXTURE_COORD_ARRAY: int

  GL_TEXTURE_COORD_ARRAY_POINTER: int

  GL_TEXTURE_COORD_ARRAY_SIZE: int

  GL_TEXTURE_COORD_ARRAY_STRIDE: int

  GL_TEXTURE_COORD_ARRAY_TYPE: int

  GL_TEXTURE_ENV: int

  GL_TEXTURE_ENV_COLOR: int

  GL_TEXTURE_ENV_MODE: int

  GL_TEXTURE_GEN_MODE: int

  GL_TEXTURE_GEN_Q: int

  GL_TEXTURE_GEN_R: int

  GL_TEXTURE_GEN_S: int

  GL_TEXTURE_GEN_T: int

  GL_TEXTURE_GREEN_SIZE: int

  GL_TEXTURE_HEIGHT: int

  GL_TEXTURE_INTENSITY_SIZE: int

  GL_TEXTURE_INTERNAL_FORMAT: int

  GL_TEXTURE_LUMINANCE_SIZE: int

  GL_TEXTURE_MAG_FILTER: int

  GL_TEXTURE_MATRIX: int

  GL_TEXTURE_MIN_FILTER: int

  GL_TEXTURE_PRIORITY: int

  GL_TEXTURE_RED_SIZE: int

  GL_TEXTURE_RESIDENT: int

  GL_TEXTURE_STACK_DEPTH: int

  GL_TEXTURE_WIDTH: int

  GL_TEXTURE_WRAP_S: int

  GL_TEXTURE_WRAP_T: int

  GL_TRANSFORM_BIT: int

  GL_TRIANGLE_FAN: int

  GL_TRIANGLE_STRIP: int

  GL_TRIANGLES: int

  GL_TRUE: int

  GL_UNPACK_ALIGNMENT: int

  GL_UNPACK_LSB_FIRST: int

  GL_UNPACK_ROW_LENGTH: int

  GL_UNPACK_SKIP_PIXELS: int

  GL_UNPACK_SKIP_ROWS: int

  GL_UNPACK_SWAP_BYTES: int

  GL_UNSIGNED_BYTE: int

  GL_UNSIGNED_INT: int

  GL_UNSIGNED_SHORT: int

  GL_V2F: int

  GL_V3F: int

  GL_VENDOR: int

  GL_VERSION: int

  GL_VERTEX_ARRAY: int

  GL_VERTEX_ARRAY_POINTER: int

  GL_VERTEX_ARRAY_SIZE: int

  GL_VERTEX_ARRAY_STRIDE: int

  GL_VERTEX_ARRAY_TYPE: int

  GL_VIEWPORT: int

  GL_VIEWPORT_BIT: int

  GL_XOR: int

  GL_ZERO: int

  GL_ZOOM_X: int

  GL_ZOOM_Y: int

  @staticmethod
  def glAccum(arg0: int, arg1: float) -> None: ...

  @staticmethod
  def glAlphaFunc(arg0: int, arg1: float) -> None: ...

  @staticmethod
  @overload
  def glAreTexturesResident(arg0: list[int], arg1: ByteBuffer) -> bool: ...

  @staticmethod
  @overload
  def glAreTexturesResident(arg0: int, arg1: ByteBuffer) -> bool: ...

  @staticmethod
  @overload
  def glAreTexturesResident(arg0: IntBuffer, arg1: ByteBuffer) -> bool: ...

  @staticmethod
  def glArrayElement(arg0: int) -> None: ...

  @staticmethod
  def glBegin(arg0: int) -> None: ...

  @staticmethod
  def glBindTexture(arg0: int, arg1: int) -> None: ...

  @staticmethod
  @overload
  def glBitmap(arg0: int, arg1: int, arg2: float, arg3: float, arg4: float, arg5: float, arg6: ByteBuffer) -> None: ...

  @staticmethod
  @overload
  def glBitmap(arg0: int, arg1: int, arg2: float, arg3: float, arg4: float, arg5: float, arg6: int) -> None: ...

  @staticmethod
  def glBlendFunc(arg0: int, arg1: int) -> None: ...

  @staticmethod
  def glCallList(arg0: int) -> None: ...

  @staticmethod
  @overload
  def glCallLists(arg0: ByteBuffer) -> None: ...

  @staticmethod
  @overload
  def glCallLists(arg0: IntBuffer) -> None: ...

  @staticmethod
  @overload
  def glCallLists(arg0: ShortBuffer) -> None: ...

  @staticmethod
  @overload
  def glCallLists(arg0: int, arg1: ByteBuffer) -> None: ...

  @staticmethod
  def glClear(arg0: int) -> None: ...

  @staticmethod
  def glClearAccum(arg0: float, arg1: float, arg2: float, arg3: float) -> None: ...

  @staticmethod
  def glClearColor(arg0: float, arg1: float, arg2: float, arg3: float) -> None: ...

  @staticmethod
  def glClearDepth(arg0: float) -> None: ...

  @staticmethod
  def glClearIndex(arg0: float) -> None: ...

  @staticmethod
  def glClearStencil(arg0: int) -> None: ...

  @staticmethod
  @overload
  def glClipPlane(arg0: int, arg1: list[float]) -> None: ...

  @staticmethod
  @overload
  def glClipPlane(arg0: int, arg1: DoubleBuffer) -> None: ...

  @staticmethod
  def glColor3b(arg0: int, arg1: int, arg2: int) -> None: ...

  @staticmethod
  def glColor3bv(arg0: ByteBuffer) -> None: ...

  @staticmethod
  def glColor3d(arg0: float, arg1: float, arg2: float) -> None: ...

  @staticmethod
  @overload
  def glColor3dv(arg0: list[float]) -> None: ...

  @staticmethod
  @overload
  def glColor3dv(arg0: DoubleBuffer) -> None: ...

  @staticmethod
  def glColor3f(arg0: float, arg1: float, arg2: float) -> None: ...

  @staticmethod
  @overload
  def glColor3fv(arg0: list[float]) -> None: ...

  @staticmethod
  @overload
  def glColor3fv(arg0: FloatBuffer) -> None: ...

  @staticmethod
  def glColor3i(arg0: int, arg1: int, arg2: int) -> None: ...

  @staticmethod
  @overload
  def glColor3iv(arg0: list[int]) -> None: ...

  @staticmethod
  @overload
  def glColor3iv(arg0: IntBuffer) -> None: ...

  @staticmethod
  def glColor3s(arg0: int, arg1: int, arg2: int) -> None: ...

  @staticmethod
  @overload
  def glColor3sv(arg0: list[int]) -> None: ...

  @staticmethod
  @overload
  def glColor3sv(arg0: ShortBuffer) -> None: ...

  @staticmethod
  def glColor3ub(arg0: int, arg1: int, arg2: int) -> None: ...

  @staticmethod
  def glColor3ubv(arg0: ByteBuffer) -> None: ...

  @staticmethod
  def glColor3ui(arg0: int, arg1: int, arg2: int) -> None: ...

  @staticmethod
  @overload
  def glColor3uiv(arg0: list[int]) -> None: ...

  @staticmethod
  @overload
  def glColor3uiv(arg0: IntBuffer) -> None: ...

  @staticmethod
  def glColor3us(arg0: int, arg1: int, arg2: int) -> None: ...

  @staticmethod
  @overload
  def glColor3usv(arg0: list[int]) -> None: ...

  @staticmethod
  @overload
  def glColor3usv(arg0: ShortBuffer) -> None: ...

  @staticmethod
  def glColor4b(arg0: int, arg1: int, arg2: int, arg3: int) -> None: ...

  @staticmethod
  def glColor4bv(arg0: ByteBuffer) -> None: ...

  @staticmethod
  def glColor4d(arg0: float, arg1: float, arg2: float, arg3: float) -> None: ...

  @staticmethod
  @overload
  def glColor4dv(arg0: list[float]) -> None: ...

  @staticmethod
  @overload
  def glColor4dv(arg0: DoubleBuffer) -> None: ...

  @staticmethod
  def glColor4f(arg0: float, arg1: float, arg2: float, arg3: float) -> None: ...

  @staticmethod
  @overload
  def glColor4fv(arg0: list[float]) -> None: ...

  @staticmethod
  @overload
  def glColor4fv(arg0: FloatBuffer) -> None: ...

  @staticmethod
  def glColor4i(arg0: int, arg1: int, arg2: int, arg3: int) -> None: ...

  @staticmethod
  @overload
  def glColor4iv(arg0: list[int]) -> None: ...

  @staticmethod
  @overload
  def glColor4iv(arg0: IntBuffer) -> None: ...

  @staticmethod
  def glColor4s(arg0: int, arg1: int, arg2: int, arg3: int) -> None: ...

  @staticmethod
  @overload
  def glColor4sv(arg0: list[int]) -> None: ...

  @staticmethod
  @overload
  def glColor4sv(arg0: ShortBuffer) -> None: ...

  @staticmethod
  def glColor4ub(arg0: int, arg1: int, arg2: int, arg3: int) -> None: ...

  @staticmethod
  def glColor4ubv(arg0: ByteBuffer) -> None: ...

  @staticmethod
  def glColor4ui(arg0: int, arg1: int, arg2: int, arg3: int) -> None: ...

  @staticmethod
  @overload
  def glColor4uiv(arg0: list[int]) -> None: ...

  @staticmethod
  @overload
  def glColor4uiv(arg0: IntBuffer) -> None: ...

  @staticmethod
  def glColor4us(arg0: int, arg1: int, arg2: int, arg3: int) -> None: ...

  @staticmethod
  @overload
  def glColor4usv(arg0: list[int]) -> None: ...

  @staticmethod
  @overload
  def glColor4usv(arg0: ShortBuffer) -> None: ...

  @staticmethod
  def glColorMask(arg0: bool, arg1: bool, arg2: bool, arg3: bool) -> None: ...

  @staticmethod
  def glColorMaterial(arg0: int, arg1: int) -> None: ...

  @staticmethod
  @overload
  def glColorPointer(arg0: int, arg1: int, arg2: int, arg3: ByteBuffer) -> None: ...

  @staticmethod
  @overload
  def glColorPointer(arg0: int, arg1: int, arg2: int, arg3: FloatBuffer) -> None: ...

  @staticmethod
  @overload
  def glColorPointer(arg0: int, arg1: int, arg2: int, arg3: IntBuffer) -> None: ...

  @staticmethod
  @overload
  def glColorPointer(arg0: int, arg1: int, arg2: int, arg3: ShortBuffer) -> None: ...

  @staticmethod
  @overload
  def glColorPointer(arg0: int, arg1: int, arg2: int, arg3: int) -> None: ...

  @staticmethod
  def glCopyPixels(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int) -> None: ...

  @staticmethod
  def glCopyTexImage1D(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int) -> None: ...

  @staticmethod
  def glCopyTexImage2D(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int, arg7: int) -> None: ...

  @staticmethod
  def glCopyTexSubImage1D(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int) -> None: ...

  @staticmethod
  def glCopyTexSubImage2D(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int, arg7: int) -> None: ...

  @staticmethod
  def glCullFace(arg0: int) -> None: ...

  @staticmethod
  def glDeleteLists(arg0: int, arg1: int) -> None: ...

  @staticmethod
  @overload
  def glDeleteTextures(arg0: list[int]) -> None: ...

  @staticmethod
  @overload
  def glDeleteTextures(arg0: int) -> None: ...

  @staticmethod
  @overload
  def glDeleteTextures(arg0: IntBuffer) -> None: ...

  @staticmethod
  def glDepthFunc(arg0: int) -> None: ...

  @staticmethod
  def glDepthMask(arg0: bool) -> None: ...

  @staticmethod
  def glDepthRange(arg0: float, arg1: float) -> None: ...

  @staticmethod
  def glDisable(arg0: int) -> None: ...

  @staticmethod
  def glDisableClientState(arg0: int) -> None: ...

  @staticmethod
  def glDrawArrays(arg0: int, arg1: int, arg2: int) -> None: ...

  @staticmethod
  def glDrawBuffer(arg0: int) -> None: ...

  @staticmethod
  @overload
  def glDrawElements(arg0: int, arg1: ByteBuffer) -> None: ...

  @staticmethod
  @overload
  def glDrawElements(arg0: int, arg1: IntBuffer) -> None: ...

  @staticmethod
  @overload
  def glDrawElements(arg0: int, arg1: ShortBuffer) -> None: ...

  @staticmethod
  @overload
  def glDrawElements(arg0: int, arg1: int, arg2: ByteBuffer) -> None: ...

  @staticmethod
  @overload
  def glDrawElements(arg0: int, arg1: int, arg2: int, arg3: int) -> None: ...

  @staticmethod
  @overload
  def glDrawPixels(arg0: int, arg1: int, arg2: int, arg3: int, arg4: list[float]) -> None: ...

  @staticmethod
  @overload
  def glDrawPixels(arg0: int, arg1: int, arg2: int, arg3: int, arg4: list[int]) -> None: ...

  @staticmethod
  @overload
  def glDrawPixels(arg0: int, arg1: int, arg2: int, arg3: int, arg4: list[int]) -> None: ...

  @staticmethod
  @overload
  def glDrawPixels(arg0: int, arg1: int, arg2: int, arg3: int, arg4: ByteBuffer) -> None: ...

  @staticmethod
  @overload
  def glDrawPixels(arg0: int, arg1: int, arg2: int, arg3: int, arg4: FloatBuffer) -> None: ...

  @staticmethod
  @overload
  def glDrawPixels(arg0: int, arg1: int, arg2: int, arg3: int, arg4: IntBuffer) -> None: ...

  @staticmethod
  @overload
  def glDrawPixels(arg0: int, arg1: int, arg2: int, arg3: int, arg4: ShortBuffer) -> None: ...

  @staticmethod
  @overload
  def glDrawPixels(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int) -> None: ...

  @staticmethod
  def glEdgeFlag(arg0: bool) -> None: ...

  @staticmethod
  @overload
  def glEdgeFlagPointer(arg0: int, arg1: ByteBuffer) -> None: ...

  @staticmethod
  @overload
  def glEdgeFlagPointer(arg0: int, arg1: int) -> None: ...

  @staticmethod
  def glEdgeFlagv(arg0: ByteBuffer) -> None: ...

  @staticmethod
  def glEnable(arg0: int) -> None: ...

  @staticmethod
  def glEnableClientState(arg0: int) -> None: ...

  @staticmethod
  def glEnd() -> None: ...

  @staticmethod
  def glEndList() -> None: ...

  @staticmethod
  def glEvalCoord1d(arg0: float) -> None: ...

  @staticmethod
  @overload
  def glEvalCoord1dv(arg0: list[float]) -> None: ...

  @staticmethod
  @overload
  def glEvalCoord1dv(arg0: DoubleBuffer) -> None: ...

  @staticmethod
  def glEvalCoord1f(arg0: float) -> None: ...

  @staticmethod
  @overload
  def glEvalCoord1fv(arg0: list[float]) -> None: ...

  @staticmethod
  @overload
  def glEvalCoord1fv(arg0: FloatBuffer) -> None: ...

  @staticmethod
  def glEvalCoord2d(arg0: float, arg1: float) -> None: ...

  @staticmethod
  @overload
  def glEvalCoord2dv(arg0: list[float]) -> None: ...

  @staticmethod
  @overload
  def glEvalCoord2dv(arg0: DoubleBuffer) -> None: ...

  @staticmethod
  def glEvalCoord2f(arg0: float, arg1: float) -> None: ...

  @staticmethod
  @overload
  def glEvalCoord2fv(arg0: list[float]) -> None: ...

  @staticmethod
  @overload
  def glEvalCoord2fv(arg0: FloatBuffer) -> None: ...

  @staticmethod
  def glEvalMesh1(arg0: int, arg1: int, arg2: int) -> None: ...

  @staticmethod
  def glEvalMesh2(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int) -> None: ...

  @staticmethod
  def glEvalPoint1(arg0: int) -> None: ...

  @staticmethod
  def glEvalPoint2(arg0: int, arg1: int) -> None: ...

  @staticmethod
  @overload
  def glFeedbackBuffer(arg0: int, arg1: list[float]) -> None: ...

  @staticmethod
  @overload
  def glFeedbackBuffer(arg0: int, arg1: FloatBuffer) -> None: ...

  @staticmethod
  def glFinish() -> None: ...

  @staticmethod
  def glFlush() -> None: ...

  @staticmethod
  def glFogf(arg0: int, arg1: float) -> None: ...

  @staticmethod
  @overload
  def glFogfv(arg0: int, arg1: list[float]) -> None: ...

  @staticmethod
  @overload
  def glFogfv(arg0: int, arg1: FloatBuffer) -> None: ...

  @staticmethod
  def glFogi(arg0: int, arg1: int) -> None: ...

  @staticmethod
  @overload
  def glFogiv(arg0: int, arg1: list[int]) -> None: ...

  @staticmethod
  @overload
  def glFogiv(arg0: int, arg1: IntBuffer) -> None: ...

  @staticmethod
  def glFrontFace(arg0: int) -> None: ...

  @staticmethod
  def glFrustum(arg0: float, arg1: float, arg2: float, arg3: float, arg4: float, arg5: float) -> None: ...

  @staticmethod
  def glGenLists(arg0: int) -> int: ...

  @staticmethod
  @overload
  def glGenTextures() -> int: ...

  @staticmethod
  @overload
  def glGenTextures(arg0: list[int]) -> None: ...

  @staticmethod
  @overload
  def glGenTextures(arg0: IntBuffer) -> None: ...

  @staticmethod
  def glGetBoolean(arg0: int) -> bool: ...

  @staticmethod
  def glGetBooleanv(arg0: int, arg1: ByteBuffer) -> None: ...

  @staticmethod
  @overload
  def glGetClipPlane(arg0: int, arg1: list[float]) -> None: ...

  @staticmethod
  @overload
  def glGetClipPlane(arg0: int, arg1: DoubleBuffer) -> None: ...

  @staticmethod
  def glGetDouble(arg0: int) -> float: ...

  @staticmethod
  @overload
  def glGetDoublev(arg0: int, arg1: list[float]) -> None: ...

  @staticmethod
  @overload
  def glGetDoublev(arg0: int, arg1: DoubleBuffer) -> None: ...

  @staticmethod
  def glGetError() -> int: ...

  @staticmethod
  def glGetFloat(arg0: int) -> float: ...

  @staticmethod
  @overload
  def glGetFloatv(arg0: int, arg1: list[float]) -> None: ...

  @staticmethod
  @overload
  def glGetFloatv(arg0: int, arg1: FloatBuffer) -> None: ...

  @staticmethod
  def glGetInteger(arg0: int) -> int: ...

  @staticmethod
  @overload
  def glGetIntegerv(arg0: int, arg1: list[int]) -> None: ...

  @staticmethod
  @overload
  def glGetIntegerv(arg0: int, arg1: IntBuffer) -> None: ...

  @staticmethod
  def glGetLightf(arg0: int, arg1: int) -> float: ...

  @staticmethod
  @overload
  def glGetLightfv(arg0: int, arg1: int, arg2: list[float]) -> None: ...

  @staticmethod
  @overload
  def glGetLightfv(arg0: int, arg1: int, arg2: FloatBuffer) -> None: ...

  @staticmethod
  def glGetLighti(arg0: int, arg1: int) -> int: ...

  @staticmethod
  @overload
  def glGetLightiv(arg0: int, arg1: int, arg2: list[int]) -> None: ...

  @staticmethod
  @overload
  def glGetLightiv(arg0: int, arg1: int, arg2: IntBuffer) -> None: ...

  @staticmethod
  def glGetMapd(arg0: int, arg1: int) -> float: ...

  @staticmethod
  @overload
  def glGetMapdv(arg0: int, arg1: int, arg2: list[float]) -> None: ...

  @staticmethod
  @overload
  def glGetMapdv(arg0: int, arg1: int, arg2: DoubleBuffer) -> None: ...

  @staticmethod
  def glGetMapf(arg0: int, arg1: int) -> float: ...

  @staticmethod
  @overload
  def glGetMapfv(arg0: int, arg1: int, arg2: list[float]) -> None: ...

  @staticmethod
  @overload
  def glGetMapfv(arg0: int, arg1: int, arg2: FloatBuffer) -> None: ...

  @staticmethod
  def glGetMapi(arg0: int, arg1: int) -> int: ...

  @staticmethod
  @overload
  def glGetMapiv(arg0: int, arg1: int, arg2: list[int]) -> None: ...

  @staticmethod
  @overload
  def glGetMapiv(arg0: int, arg1: int, arg2: IntBuffer) -> None: ...

  @staticmethod
  @overload
  def glGetMaterialfv(arg0: int, arg1: int, arg2: list[float]) -> None: ...

  @staticmethod
  @overload
  def glGetMaterialfv(arg0: int, arg1: int, arg2: FloatBuffer) -> None: ...

  @staticmethod
  @overload
  def glGetMaterialiv(arg0: int, arg1: int, arg2: list[int]) -> None: ...

  @staticmethod
  @overload
  def glGetMaterialiv(arg0: int, arg1: int, arg2: IntBuffer) -> None: ...

  @staticmethod
  @overload
  def glGetPixelMapfv(arg0: int, arg1: list[float]) -> None: ...

  @staticmethod
  @overload
  def glGetPixelMapfv(arg0: int, arg1: FloatBuffer) -> None: ...

  @staticmethod
  @overload
  def glGetPixelMapfv(arg0: int, arg1: int) -> None: ...

  @staticmethod
  @overload
  def glGetPixelMapuiv(arg0: int, arg1: list[int]) -> None: ...

  @staticmethod
  @overload
  def glGetPixelMapuiv(arg0: int, arg1: IntBuffer) -> None: ...

  @staticmethod
  @overload
  def glGetPixelMapuiv(arg0: int, arg1: int) -> None: ...

  @staticmethod
  @overload
  def glGetPixelMapusv(arg0: int, arg1: list[int]) -> None: ...

  @staticmethod
  @overload
  def glGetPixelMapusv(arg0: int, arg1: ShortBuffer) -> None: ...

  @staticmethod
  @overload
  def glGetPixelMapusv(arg0: int, arg1: int) -> None: ...

  @staticmethod
  def glGetPointer(arg0: int) -> int: ...

  @staticmethod
  def glGetPointerv(arg0: int, arg1: PointerBuffer) -> None: ...

  @staticmethod
  @overload
  def glGetPolygonStipple(arg0: ByteBuffer) -> None: ...

  @staticmethod
  @overload
  def glGetPolygonStipple(arg0: int) -> None: ...

  @staticmethod
  def glGetString(arg0: int) -> str: ...

  @staticmethod
  def glGetTexEnvf(arg0: int, arg1: int) -> float: ...

  @staticmethod
  @overload
  def glGetTexEnvfv(arg0: int, arg1: int, arg2: list[float]) -> None: ...

  @staticmethod
  @overload
  def glGetTexEnvfv(arg0: int, arg1: int, arg2: FloatBuffer) -> None: ...

  @staticmethod
  def glGetTexEnvi(arg0: int, arg1: int) -> int: ...

  @staticmethod
  @overload
  def glGetTexEnviv(arg0: int, arg1: int, arg2: list[int]) -> None: ...

  @staticmethod
  @overload
  def glGetTexEnviv(arg0: int, arg1: int, arg2: IntBuffer) -> None: ...

  @staticmethod
  def glGetTexGend(arg0: int, arg1: int) -> float: ...

  @staticmethod
  @overload
  def glGetTexGendv(arg0: int, arg1: int, arg2: list[float]) -> None: ...

  @staticmethod
  @overload
  def glGetTexGendv(arg0: int, arg1: int, arg2: DoubleBuffer) -> None: ...

  @staticmethod
  def glGetTexGenf(arg0: int, arg1: int) -> float: ...

  @staticmethod
  @overload
  def glGetTexGenfv(arg0: int, arg1: int, arg2: list[float]) -> None: ...

  @staticmethod
  @overload
  def glGetTexGenfv(arg0: int, arg1: int, arg2: FloatBuffer) -> None: ...

  @staticmethod
  def glGetTexGeni(arg0: int, arg1: int) -> int: ...

  @staticmethod
  @overload
  def glGetTexGeniv(arg0: int, arg1: int, arg2: list[int]) -> None: ...

  @staticmethod
  @overload
  def glGetTexGeniv(arg0: int, arg1: int, arg2: IntBuffer) -> None: ...

  @staticmethod
  @overload
  def glGetTexImage(arg0: int, arg1: int, arg2: int, arg3: int, arg4: list[float]) -> None: ...

  @staticmethod
  @overload
  def glGetTexImage(arg0: int, arg1: int, arg2: int, arg3: int, arg4: list[float]) -> None: ...

  @staticmethod
  @overload
  def glGetTexImage(arg0: int, arg1: int, arg2: int, arg3: int, arg4: list[int]) -> None: ...

  @staticmethod
  @overload
  def glGetTexImage(arg0: int, arg1: int, arg2: int, arg3: int, arg4: list[int]) -> None: ...

  @staticmethod
  @overload
  def glGetTexImage(arg0: int, arg1: int, arg2: int, arg3: int, arg4: ByteBuffer) -> None: ...

  @staticmethod
  @overload
  def glGetTexImage(arg0: int, arg1: int, arg2: int, arg3: int, arg4: DoubleBuffer) -> None: ...

  @staticmethod
  @overload
  def glGetTexImage(arg0: int, arg1: int, arg2: int, arg3: int, arg4: FloatBuffer) -> None: ...

  @staticmethod
  @overload
  def glGetTexImage(arg0: int, arg1: int, arg2: int, arg3: int, arg4: IntBuffer) -> None: ...

  @staticmethod
  @overload
  def glGetTexImage(arg0: int, arg1: int, arg2: int, arg3: int, arg4: ShortBuffer) -> None: ...

  @staticmethod
  @overload
  def glGetTexImage(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int) -> None: ...

  @staticmethod
  def glGetTexLevelParameterf(arg0: int, arg1: int, arg2: int) -> float: ...

  @staticmethod
  @overload
  def glGetTexLevelParameterfv(arg0: int, arg1: int, arg2: int, arg3: list[float]) -> None: ...

  @staticmethod
  @overload
  def glGetTexLevelParameterfv(arg0: int, arg1: int, arg2: int, arg3: FloatBuffer) -> None: ...

  @staticmethod
  def glGetTexLevelParameteri(arg0: int, arg1: int, arg2: int) -> int: ...

  @staticmethod
  @overload
  def glGetTexLevelParameteriv(arg0: int, arg1: int, arg2: int, arg3: list[int]) -> None: ...

  @staticmethod
  @overload
  def glGetTexLevelParameteriv(arg0: int, arg1: int, arg2: int, arg3: IntBuffer) -> None: ...

  @staticmethod
  def glGetTexParameterf(arg0: int, arg1: int) -> float: ...

  @staticmethod
  @overload
  def glGetTexParameterfv(arg0: int, arg1: int, arg2: list[float]) -> None: ...

  @staticmethod
  @overload
  def glGetTexParameterfv(arg0: int, arg1: int, arg2: FloatBuffer) -> None: ...

  @staticmethod
  def glGetTexParameteri(arg0: int, arg1: int) -> int: ...

  @staticmethod
  @overload
  def glGetTexParameteriv(arg0: int, arg1: int, arg2: list[int]) -> None: ...

  @staticmethod
  @overload
  def glGetTexParameteriv(arg0: int, arg1: int, arg2: IntBuffer) -> None: ...

  @staticmethod
  def glHint(arg0: int, arg1: int) -> None: ...

  @staticmethod
  def glIndexMask(arg0: int) -> None: ...

  @staticmethod
  @overload
  def glIndexPointer(arg0: int, arg1: ByteBuffer) -> None: ...

  @staticmethod
  @overload
  def glIndexPointer(arg0: int, arg1: IntBuffer) -> None: ...

  @staticmethod
  @overload
  def glIndexPointer(arg0: int, arg1: ShortBuffer) -> None: ...

  @staticmethod
  @overload
  def glIndexPointer(arg0: int, arg1: int, arg2: ByteBuffer) -> None: ...

  @staticmethod
  @overload
  def glIndexPointer(arg0: int, arg1: int, arg2: int) -> None: ...

  @staticmethod
  def glIndexd(arg0: float) -> None: ...

  @staticmethod
  @overload
  def glIndexdv(arg0: list[float]) -> None: ...

  @staticmethod
  @overload
  def glIndexdv(arg0: DoubleBuffer) -> None: ...

  @staticmethod
  def glIndexf(arg0: float) -> None: ...

  @staticmethod
  @overload
  def glIndexfv(arg0: list[float]) -> None: ...

  @staticmethod
  @overload
  def glIndexfv(arg0: FloatBuffer) -> None: ...

  @staticmethod
  def glIndexi(arg0: int) -> None: ...

  @staticmethod
  @overload
  def glIndexiv(arg0: list[int]) -> None: ...

  @staticmethod
  @overload
  def glIndexiv(arg0: IntBuffer) -> None: ...

  @staticmethod
  def glIndexs(arg0: int) -> None: ...

  @staticmethod
  @overload
  def glIndexsv(arg0: list[int]) -> None: ...

  @staticmethod
  @overload
  def glIndexsv(arg0: ShortBuffer) -> None: ...

  @staticmethod
  def glIndexub(arg0: int) -> None: ...

  @staticmethod
  def glIndexubv(arg0: ByteBuffer) -> None: ...

  @staticmethod
  def glInitNames() -> None: ...

  @staticmethod
  @overload
  def glInterleavedArrays(arg0: int, arg1: int, arg2: list[float]) -> None: ...

  @staticmethod
  @overload
  def glInterleavedArrays(arg0: int, arg1: int, arg2: list[float]) -> None: ...

  @staticmethod
  @overload
  def glInterleavedArrays(arg0: int, arg1: int, arg2: list[int]) -> None: ...

  @staticmethod
  @overload
  def glInterleavedArrays(arg0: int, arg1: int, arg2: list[int]) -> None: ...

  @staticmethod
  @overload
  def glInterleavedArrays(arg0: int, arg1: int, arg2: ByteBuffer) -> None: ...

  @staticmethod
  @overload
  def glInterleavedArrays(arg0: int, arg1: int, arg2: DoubleBuffer) -> None: ...

  @staticmethod
  @overload
  def glInterleavedArrays(arg0: int, arg1: int, arg2: FloatBuffer) -> None: ...

  @staticmethod
  @overload
  def glInterleavedArrays(arg0: int, arg1: int, arg2: IntBuffer) -> None: ...

  @staticmethod
  @overload
  def glInterleavedArrays(arg0: int, arg1: int, arg2: ShortBuffer) -> None: ...

  @staticmethod
  @overload
  def glInterleavedArrays(arg0: int, arg1: int, arg2: int) -> None: ...

  @staticmethod
  def glIsEnabled(arg0: int) -> bool: ...

  @staticmethod
  def glIsList(arg0: int) -> bool: ...

  @staticmethod
  def glIsTexture(arg0: int) -> bool: ...

  @staticmethod
  def glLightModelf(arg0: int, arg1: float) -> None: ...

  @staticmethod
  @overload
  def glLightModelfv(arg0: int, arg1: list[float]) -> None: ...

  @staticmethod
  @overload
  def glLightModelfv(arg0: int, arg1: FloatBuffer) -> None: ...

  @staticmethod
  def glLightModeli(arg0: int, arg1: int) -> None: ...

  @staticmethod
  @overload
  def glLightModeliv(arg0: int, arg1: list[int]) -> None: ...

  @staticmethod
  @overload
  def glLightModeliv(arg0: int, arg1: IntBuffer) -> None: ...

  @staticmethod
  def glLightf(arg0: int, arg1: int, arg2: float) -> None: ...

  @staticmethod
  @overload
  def glLightfv(arg0: int, arg1: int, arg2: list[float]) -> None: ...

  @staticmethod
  @overload
  def glLightfv(arg0: int, arg1: int, arg2: FloatBuffer) -> None: ...

  @staticmethod
  def glLighti(arg0: int, arg1: int, arg2: int) -> None: ...

  @staticmethod
  @overload
  def glLightiv(arg0: int, arg1: int, arg2: list[int]) -> None: ...

  @staticmethod
  @overload
  def glLightiv(arg0: int, arg1: int, arg2: IntBuffer) -> None: ...

  @staticmethod
  def glLineStipple(arg0: int, arg1: int) -> None: ...

  @staticmethod
  def glLineWidth(arg0: float) -> None: ...

  @staticmethod
  def glListBase(arg0: int) -> None: ...

  @staticmethod
  def glLoadIdentity() -> None: ...

  @staticmethod
  @overload
  def glLoadMatrixd(arg0: list[float]) -> None: ...

  @staticmethod
  @overload
  def glLoadMatrixd(arg0: DoubleBuffer) -> None: ...

  @staticmethod
  @overload
  def glLoadMatrixf(arg0: list[float]) -> None: ...

  @staticmethod
  @overload
  def glLoadMatrixf(arg0: FloatBuffer) -> None: ...

  @staticmethod
  def glLoadName(arg0: int) -> None: ...

  @staticmethod
  def glLogicOp(arg0: int) -> None: ...

  @staticmethod
  @overload
  def glMap1d(arg0: int, arg1: float, arg2: float, arg3: int, arg4: int, arg5: list[float]) -> None: ...

  @staticmethod
  @overload
  def glMap1d(arg0: int, arg1: float, arg2: float, arg3: int, arg4: int, arg5: DoubleBuffer) -> None: ...

  @staticmethod
  @overload
  def glMap1f(arg0: int, arg1: float, arg2: float, arg3: int, arg4: int, arg5: list[float]) -> None: ...

  @staticmethod
  @overload
  def glMap1f(arg0: int, arg1: float, arg2: float, arg3: int, arg4: int, arg5: FloatBuffer) -> None: ...

  @staticmethod
  @overload
  def glMap2d(arg0: int, arg1: float, arg2: float, arg3: int, arg4: int, arg5: float, arg6: float, arg7: int, arg8: int, arg9: list[float]) -> None: ...

  @staticmethod
  @overload
  def glMap2d(arg0: int, arg1: float, arg2: float, arg3: int, arg4: int, arg5: float, arg6: float, arg7: int, arg8: int, arg9: DoubleBuffer) -> None: ...

  @staticmethod
  @overload
  def glMap2f(arg0: int, arg1: float, arg2: float, arg3: int, arg4: int, arg5: float, arg6: float, arg7: int, arg8: int, arg9: list[float]) -> None: ...

  @staticmethod
  @overload
  def glMap2f(arg0: int, arg1: float, arg2: float, arg3: int, arg4: int, arg5: float, arg6: float, arg7: int, arg8: int, arg9: FloatBuffer) -> None: ...

  @staticmethod
  def glMapGrid1d(arg0: int, arg1: float, arg2: float) -> None: ...

  @staticmethod
  def glMapGrid1f(arg0: int, arg1: float, arg2: float) -> None: ...

  @staticmethod
  def glMapGrid2d(arg0: int, arg1: float, arg2: float, arg3: int, arg4: float, arg5: float) -> None: ...

  @staticmethod
  def glMapGrid2f(arg0: int, arg1: float, arg2: float, arg3: int, arg4: float, arg5: float) -> None: ...

  @staticmethod
  def glMaterialf(arg0: int, arg1: int, arg2: float) -> None: ...

  @staticmethod
  @overload
  def glMaterialfv(arg0: int, arg1: int, arg2: list[float]) -> None: ...

  @staticmethod
  @overload
  def glMaterialfv(arg0: int, arg1: int, arg2: FloatBuffer) -> None: ...

  @staticmethod
  def glMateriali(arg0: int, arg1: int, arg2: int) -> None: ...

  @staticmethod
  @overload
  def glMaterialiv(arg0: int, arg1: int, arg2: list[int]) -> None: ...

  @staticmethod
  @overload
  def glMaterialiv(arg0: int, arg1: int, arg2: IntBuffer) -> None: ...

  @staticmethod
  def glMatrixMode(arg0: int) -> None: ...

  @staticmethod
  @overload
  def glMultMatrixd(arg0: list[float]) -> None: ...

  @staticmethod
  @overload
  def glMultMatrixd(arg0: DoubleBuffer) -> None: ...

  @staticmethod
  @overload
  def glMultMatrixf(arg0: list[float]) -> None: ...

  @staticmethod
  @overload
  def glMultMatrixf(arg0: FloatBuffer) -> None: ...

  @staticmethod
  def glNewList(arg0: int, arg1: int) -> None: ...

  @staticmethod
  def glNormal3b(arg0: int, arg1: int, arg2: int) -> None: ...

  @staticmethod
  def glNormal3bv(arg0: ByteBuffer) -> None: ...

  @staticmethod
  def glNormal3d(arg0: float, arg1: float, arg2: float) -> None: ...

  @staticmethod
  @overload
  def glNormal3dv(arg0: list[float]) -> None: ...

  @staticmethod
  @overload
  def glNormal3dv(arg0: DoubleBuffer) -> None: ...

  @staticmethod
  def glNormal3f(arg0: float, arg1: float, arg2: float) -> None: ...

  @staticmethod
  @overload
  def glNormal3fv(arg0: list[float]) -> None: ...

  @staticmethod
  @overload
  def glNormal3fv(arg0: FloatBuffer) -> None: ...

  @staticmethod
  def glNormal3i(arg0: int, arg1: int, arg2: int) -> None: ...

  @staticmethod
  @overload
  def glNormal3iv(arg0: list[int]) -> None: ...

  @staticmethod
  @overload
  def glNormal3iv(arg0: IntBuffer) -> None: ...

  @staticmethod
  def glNormal3s(arg0: int, arg1: int, arg2: int) -> None: ...

  @staticmethod
  @overload
  def glNormal3sv(arg0: list[int]) -> None: ...

  @staticmethod
  @overload
  def glNormal3sv(arg0: ShortBuffer) -> None: ...

  @staticmethod
  @overload
  def glNormalPointer(arg0: int, arg1: int, arg2: ByteBuffer) -> None: ...

  @staticmethod
  @overload
  def glNormalPointer(arg0: int, arg1: int, arg2: FloatBuffer) -> None: ...

  @staticmethod
  @overload
  def glNormalPointer(arg0: int, arg1: int, arg2: IntBuffer) -> None: ...

  @staticmethod
  @overload
  def glNormalPointer(arg0: int, arg1: int, arg2: ShortBuffer) -> None: ...

  @staticmethod
  @overload
  def glNormalPointer(arg0: int, arg1: int, arg2: int) -> None: ...

  @staticmethod
  def glOrtho(arg0: float, arg1: float, arg2: float, arg3: float, arg4: float, arg5: float) -> None: ...

  @staticmethod
  def glPassThrough(arg0: float) -> None: ...

  @staticmethod
  @overload
  def glPixelMapfv(arg0: int, arg1: list[float]) -> None: ...

  @staticmethod
  @overload
  def glPixelMapfv(arg0: int, arg1: FloatBuffer) -> None: ...

  @staticmethod
  @overload
  def glPixelMapfv(arg0: int, arg1: int, arg2: int) -> None: ...

  @staticmethod
  @overload
  def glPixelMapuiv(arg0: int, arg1: list[int]) -> None: ...

  @staticmethod
  @overload
  def glPixelMapuiv(arg0: int, arg1: IntBuffer) -> None: ...

  @staticmethod
  @overload
  def glPixelMapuiv(arg0: int, arg1: int, arg2: int) -> None: ...

  @staticmethod
  @overload
  def glPixelMapusv(arg0: int, arg1: list[int]) -> None: ...

  @staticmethod
  @overload
  def glPixelMapusv(arg0: int, arg1: ShortBuffer) -> None: ...

  @staticmethod
  @overload
  def glPixelMapusv(arg0: int, arg1: int, arg2: int) -> None: ...

  @staticmethod
  def glPixelStoref(arg0: int, arg1: float) -> None: ...

  @staticmethod
  def glPixelStorei(arg0: int, arg1: int) -> None: ...

  @staticmethod
  def glPixelTransferf(arg0: int, arg1: float) -> None: ...

  @staticmethod
  def glPixelTransferi(arg0: int, arg1: int) -> None: ...

  @staticmethod
  def glPixelZoom(arg0: float, arg1: float) -> None: ...

  @staticmethod
  def glPointSize(arg0: float) -> None: ...

  @staticmethod
  def glPolygonMode(arg0: int, arg1: int) -> None: ...

  @staticmethod
  def glPolygonOffset(arg0: float, arg1: float) -> None: ...

  @staticmethod
  @overload
  def glPolygonStipple(arg0: ByteBuffer) -> None: ...

  @staticmethod
  @overload
  def glPolygonStipple(arg0: int) -> None: ...

  @staticmethod
  def glPopAttrib() -> None: ...

  @staticmethod
  def glPopClientAttrib() -> None: ...

  @staticmethod
  def glPopMatrix() -> None: ...

  @staticmethod
  def glPopName() -> None: ...

  @staticmethod
  @overload
  def glPrioritizeTextures(arg0: list[int], arg1: list[float]) -> None: ...

  @staticmethod
  @overload
  def glPrioritizeTextures(arg0: IntBuffer, arg1: FloatBuffer) -> None: ...

  @staticmethod
  def glPushAttrib(arg0: int) -> None: ...

  @staticmethod
  def glPushClientAttrib(arg0: int) -> None: ...

  @staticmethod
  def glPushMatrix() -> None: ...

  @staticmethod
  def glPushName(arg0: int) -> None: ...

  @staticmethod
  def glRasterPos2d(arg0: float, arg1: float) -> None: ...

  @staticmethod
  @overload
  def glRasterPos2dv(arg0: list[float]) -> None: ...

  @staticmethod
  @overload
  def glRasterPos2dv(arg0: DoubleBuffer) -> None: ...

  @staticmethod
  def glRasterPos2f(arg0: float, arg1: float) -> None: ...

  @staticmethod
  @overload
  def glRasterPos2fv(arg0: list[float]) -> None: ...

  @staticmethod
  @overload
  def glRasterPos2fv(arg0: FloatBuffer) -> None: ...

  @staticmethod
  def glRasterPos2i(arg0: int, arg1: int) -> None: ...

  @staticmethod
  @overload
  def glRasterPos2iv(arg0: list[int]) -> None: ...

  @staticmethod
  @overload
  def glRasterPos2iv(arg0: IntBuffer) -> None: ...

  @staticmethod
  def glRasterPos2s(arg0: int, arg1: int) -> None: ...

  @staticmethod
  @overload
  def glRasterPos2sv(arg0: list[int]) -> None: ...

  @staticmethod
  @overload
  def glRasterPos2sv(arg0: ShortBuffer) -> None: ...

  @staticmethod
  def glRasterPos3d(arg0: float, arg1: float, arg2: float) -> None: ...

  @staticmethod
  @overload
  def glRasterPos3dv(arg0: list[float]) -> None: ...

  @staticmethod
  @overload
  def glRasterPos3dv(arg0: DoubleBuffer) -> None: ...

  @staticmethod
  def glRasterPos3f(arg0: float, arg1: float, arg2: float) -> None: ...

  @staticmethod
  @overload
  def glRasterPos3fv(arg0: list[float]) -> None: ...

  @staticmethod
  @overload
  def glRasterPos3fv(arg0: FloatBuffer) -> None: ...

  @staticmethod
  def glRasterPos3i(arg0: int, arg1: int, arg2: int) -> None: ...

  @staticmethod
  @overload
  def glRasterPos3iv(arg0: list[int]) -> None: ...

  @staticmethod
  @overload
  def glRasterPos3iv(arg0: IntBuffer) -> None: ...

  @staticmethod
  def glRasterPos3s(arg0: int, arg1: int, arg2: int) -> None: ...

  @staticmethod
  @overload
  def glRasterPos3sv(arg0: list[int]) -> None: ...

  @staticmethod
  @overload
  def glRasterPos3sv(arg0: ShortBuffer) -> None: ...

  @staticmethod
  def glRasterPos4d(arg0: float, arg1: float, arg2: float, arg3: float) -> None: ...

  @staticmethod
  @overload
  def glRasterPos4dv(arg0: list[float]) -> None: ...

  @staticmethod
  @overload
  def glRasterPos4dv(arg0: DoubleBuffer) -> None: ...

  @staticmethod
  def glRasterPos4f(arg0: float, arg1: float, arg2: float, arg3: float) -> None: ...

  @staticmethod
  @overload
  def glRasterPos4fv(arg0: list[float]) -> None: ...

  @staticmethod
  @overload
  def glRasterPos4fv(arg0: FloatBuffer) -> None: ...

  @staticmethod
  def glRasterPos4i(arg0: int, arg1: int, arg2: int, arg3: int) -> None: ...

  @staticmethod
  @overload
  def glRasterPos4iv(arg0: list[int]) -> None: ...

  @staticmethod
  @overload
  def glRasterPos4iv(arg0: IntBuffer) -> None: ...

  @staticmethod
  def glRasterPos4s(arg0: int, arg1: int, arg2: int, arg3: int) -> None: ...

  @staticmethod
  @overload
  def glRasterPos4sv(arg0: list[int]) -> None: ...

  @staticmethod
  @overload
  def glRasterPos4sv(arg0: ShortBuffer) -> None: ...

  @staticmethod
  def glReadBuffer(arg0: int) -> None: ...

  @staticmethod
  @overload
  def glReadPixels(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: list[float]) -> None: ...

  @staticmethod
  @overload
  def glReadPixels(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: list[int]) -> None: ...

  @staticmethod
  @overload
  def glReadPixels(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: list[int]) -> None: ...

  @staticmethod
  @overload
  def glReadPixels(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: ByteBuffer) -> None: ...

  @staticmethod
  @overload
  def glReadPixels(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: FloatBuffer) -> None: ...

  @staticmethod
  @overload
  def glReadPixels(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: IntBuffer) -> None: ...

  @staticmethod
  @overload
  def glReadPixels(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: ShortBuffer) -> None: ...

  @staticmethod
  @overload
  def glReadPixels(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int) -> None: ...

  @staticmethod
  def glRectd(arg0: float, arg1: float, arg2: float, arg3: float) -> None: ...

  @staticmethod
  @overload
  def glRectdv(arg0: list[float], arg1: list[float]) -> None: ...

  @staticmethod
  @overload
  def glRectdv(arg0: DoubleBuffer, arg1: DoubleBuffer) -> None: ...

  @staticmethod
  def glRectf(arg0: float, arg1: float, arg2: float, arg3: float) -> None: ...

  @staticmethod
  @overload
  def glRectfv(arg0: list[float], arg1: list[float]) -> None: ...

  @staticmethod
  @overload
  def glRectfv(arg0: FloatBuffer, arg1: FloatBuffer) -> None: ...

  @staticmethod
  def glRecti(arg0: int, arg1: int, arg2: int, arg3: int) -> None: ...

  @staticmethod
  @overload
  def glRectiv(arg0: list[int], arg1: list[int]) -> None: ...

  @staticmethod
  @overload
  def glRectiv(arg0: IntBuffer, arg1: IntBuffer) -> None: ...

  @staticmethod
  def glRects(arg0: int, arg1: int, arg2: int, arg3: int) -> None: ...

  @staticmethod
  @overload
  def glRectsv(arg0: list[int], arg1: list[int]) -> None: ...

  @staticmethod
  @overload
  def glRectsv(arg0: ShortBuffer, arg1: ShortBuffer) -> None: ...

  @staticmethod
  def glRenderMode(arg0: int) -> int: ...

  @staticmethod
  def glRotated(arg0: float, arg1: float, arg2: float, arg3: float) -> None: ...

  @staticmethod
  def glRotatef(arg0: float, arg1: float, arg2: float, arg3: float) -> None: ...

  @staticmethod
  def glScaled(arg0: float, arg1: float, arg2: float) -> None: ...

  @staticmethod
  def glScalef(arg0: float, arg1: float, arg2: float) -> None: ...

  @staticmethod
  def glScissor(arg0: int, arg1: int, arg2: int, arg3: int) -> None: ...

  @staticmethod
  @overload
  def glSelectBuffer(arg0: list[int]) -> None: ...

  @staticmethod
  @overload
  def glSelectBuffer(arg0: IntBuffer) -> None: ...

  @staticmethod
  def glShadeModel(arg0: int) -> None: ...

  @staticmethod
  def glStencilFunc(arg0: int, arg1: int, arg2: int) -> None: ...

  @staticmethod
  def glStencilMask(arg0: int) -> None: ...

  @staticmethod
  def glStencilOp(arg0: int, arg1: int, arg2: int) -> None: ...

  @staticmethod
  def glTexCoord1d(arg0: float) -> None: ...

  @staticmethod
  @overload
  def glTexCoord1dv(arg0: list[float]) -> None: ...

  @staticmethod
  @overload
  def glTexCoord1dv(arg0: DoubleBuffer) -> None: ...

  @staticmethod
  def glTexCoord1f(arg0: float) -> None: ...

  @staticmethod
  @overload
  def glTexCoord1fv(arg0: list[float]) -> None: ...

  @staticmethod
  @overload
  def glTexCoord1fv(arg0: FloatBuffer) -> None: ...

  @staticmethod
  def glTexCoord1i(arg0: int) -> None: ...

  @staticmethod
  @overload
  def glTexCoord1iv(arg0: list[int]) -> None: ...

  @staticmethod
  @overload
  def glTexCoord1iv(arg0: IntBuffer) -> None: ...

  @staticmethod
  def glTexCoord1s(arg0: int) -> None: ...

  @staticmethod
  @overload
  def glTexCoord1sv(arg0: list[int]) -> None: ...

  @staticmethod
  @overload
  def glTexCoord1sv(arg0: ShortBuffer) -> None: ...

  @staticmethod
  def glTexCoord2d(arg0: float, arg1: float) -> None: ...

  @staticmethod
  @overload
  def glTexCoord2dv(arg0: list[float]) -> None: ...

  @staticmethod
  @overload
  def glTexCoord2dv(arg0: DoubleBuffer) -> None: ...

  @staticmethod
  def glTexCoord2f(arg0: float, arg1: float) -> None: ...

  @staticmethod
  @overload
  def glTexCoord2fv(arg0: list[float]) -> None: ...

  @staticmethod
  @overload
  def glTexCoord2fv(arg0: FloatBuffer) -> None: ...

  @staticmethod
  def glTexCoord2i(arg0: int, arg1: int) -> None: ...

  @staticmethod
  @overload
  def glTexCoord2iv(arg0: list[int]) -> None: ...

  @staticmethod
  @overload
  def glTexCoord2iv(arg0: IntBuffer) -> None: ...

  @staticmethod
  def glTexCoord2s(arg0: int, arg1: int) -> None: ...

  @staticmethod
  @overload
  def glTexCoord2sv(arg0: list[int]) -> None: ...

  @staticmethod
  @overload
  def glTexCoord2sv(arg0: ShortBuffer) -> None: ...

  @staticmethod
  def glTexCoord3d(arg0: float, arg1: float, arg2: float) -> None: ...

  @staticmethod
  @overload
  def glTexCoord3dv(arg0: list[float]) -> None: ...

  @staticmethod
  @overload
  def glTexCoord3dv(arg0: DoubleBuffer) -> None: ...

  @staticmethod
  def glTexCoord3f(arg0: float, arg1: float, arg2: float) -> None: ...

  @staticmethod
  @overload
  def glTexCoord3fv(arg0: list[float]) -> None: ...

  @staticmethod
  @overload
  def glTexCoord3fv(arg0: FloatBuffer) -> None: ...

  @staticmethod
  def glTexCoord3i(arg0: int, arg1: int, arg2: int) -> None: ...

  @staticmethod
  @overload
  def glTexCoord3iv(arg0: list[int]) -> None: ...

  @staticmethod
  @overload
  def glTexCoord3iv(arg0: IntBuffer) -> None: ...

  @staticmethod
  def glTexCoord3s(arg0: int, arg1: int, arg2: int) -> None: ...

  @staticmethod
  @overload
  def glTexCoord3sv(arg0: list[int]) -> None: ...

  @staticmethod
  @overload
  def glTexCoord3sv(arg0: ShortBuffer) -> None: ...

  @staticmethod
  def glTexCoord4d(arg0: float, arg1: float, arg2: float, arg3: float) -> None: ...

  @staticmethod
  @overload
  def glTexCoord4dv(arg0: list[float]) -> None: ...

  @staticmethod
  @overload
  def glTexCoord4dv(arg0: DoubleBuffer) -> None: ...

  @staticmethod
  def glTexCoord4f(arg0: float, arg1: float, arg2: float, arg3: float) -> None: ...

  @staticmethod
  @overload
  def glTexCoord4fv(arg0: list[float]) -> None: ...

  @staticmethod
  @overload
  def glTexCoord4fv(arg0: FloatBuffer) -> None: ...

  @staticmethod
  def glTexCoord4i(arg0: int, arg1: int, arg2: int, arg3: int) -> None: ...

  @staticmethod
  @overload
  def glTexCoord4iv(arg0: list[int]) -> None: ...

  @staticmethod
  @overload
  def glTexCoord4iv(arg0: IntBuffer) -> None: ...

  @staticmethod
  def glTexCoord4s(arg0: int, arg1: int, arg2: int, arg3: int) -> None: ...

  @staticmethod
  @overload
  def glTexCoord4sv(arg0: list[int]) -> None: ...

  @staticmethod
  @overload
  def glTexCoord4sv(arg0: ShortBuffer) -> None: ...

  @staticmethod
  @overload
  def glTexCoordPointer(arg0: int, arg1: int, arg2: int, arg3: ByteBuffer) -> None: ...

  @staticmethod
  @overload
  def glTexCoordPointer(arg0: int, arg1: int, arg2: int, arg3: FloatBuffer) -> None: ...

  @staticmethod
  @overload
  def glTexCoordPointer(arg0: int, arg1: int, arg2: int, arg3: IntBuffer) -> None: ...

  @staticmethod
  @overload
  def glTexCoordPointer(arg0: int, arg1: int, arg2: int, arg3: ShortBuffer) -> None: ...

  @staticmethod
  @overload
  def glTexCoordPointer(arg0: int, arg1: int, arg2: int, arg3: int) -> None: ...

  @staticmethod
  def glTexEnvf(arg0: int, arg1: int, arg2: float) -> None: ...

  @staticmethod
  @overload
  def glTexEnvfv(arg0: int, arg1: int, arg2: list[float]) -> None: ...

  @staticmethod
  @overload
  def glTexEnvfv(arg0: int, arg1: int, arg2: FloatBuffer) -> None: ...

  @staticmethod
  def glTexEnvi(arg0: int, arg1: int, arg2: int) -> None: ...

  @staticmethod
  @overload
  def glTexEnviv(arg0: int, arg1: int, arg2: list[int]) -> None: ...

  @staticmethod
  @overload
  def glTexEnviv(arg0: int, arg1: int, arg2: IntBuffer) -> None: ...

  @staticmethod
  def glTexGend(arg0: int, arg1: int, arg2: float) -> None: ...

  @staticmethod
  @overload
  def glTexGendv(arg0: int, arg1: int, arg2: list[float]) -> None: ...

  @staticmethod
  @overload
  def glTexGendv(arg0: int, arg1: int, arg2: DoubleBuffer) -> None: ...

  @staticmethod
  def glTexGenf(arg0: int, arg1: int, arg2: float) -> None: ...

  @staticmethod
  @overload
  def glTexGenfv(arg0: int, arg1: int, arg2: list[float]) -> None: ...

  @staticmethod
  @overload
  def glTexGenfv(arg0: int, arg1: int, arg2: FloatBuffer) -> None: ...

  @staticmethod
  def glTexGeni(arg0: int, arg1: int, arg2: int) -> None: ...

  @staticmethod
  @overload
  def glTexGeniv(arg0: int, arg1: int, arg2: list[int]) -> None: ...

  @staticmethod
  @overload
  def glTexGeniv(arg0: int, arg1: int, arg2: IntBuffer) -> None: ...

  @staticmethod
  @overload
  def glTexImage1D(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int, arg7: list[float]) -> None: ...

  @staticmethod
  @overload
  def glTexImage1D(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int, arg7: list[float]) -> None: ...

  @staticmethod
  @overload
  def glTexImage1D(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int, arg7: list[int]) -> None: ...

  @staticmethod
  @overload
  def glTexImage1D(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int, arg7: list[int]) -> None: ...

  @staticmethod
  @overload
  def glTexImage1D(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int, arg7: ByteBuffer) -> None: ...

  @staticmethod
  @overload
  def glTexImage1D(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int, arg7: DoubleBuffer) -> None: ...

  @staticmethod
  @overload
  def glTexImage1D(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int, arg7: FloatBuffer) -> None: ...

  @staticmethod
  @overload
  def glTexImage1D(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int, arg7: IntBuffer) -> None: ...

  @staticmethod
  @overload
  def glTexImage1D(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int, arg7: ShortBuffer) -> None: ...

  @staticmethod
  @overload
  def glTexImage1D(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int, arg7: int) -> None: ...

  @staticmethod
  @overload
  def glTexImage2D(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int, arg7: int, arg8: list[float]) -> None: ...

  @staticmethod
  @overload
  def glTexImage2D(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int, arg7: int, arg8: list[float]) -> None: ...

  @staticmethod
  @overload
  def glTexImage2D(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int, arg7: int, arg8: list[int]) -> None: ...

  @staticmethod
  @overload
  def glTexImage2D(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int, arg7: int, arg8: list[int]) -> None: ...

  @staticmethod
  @overload
  def glTexImage2D(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int, arg7: int, arg8: ByteBuffer) -> None: ...

  @staticmethod
  @overload
  def glTexImage2D(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int, arg7: int, arg8: DoubleBuffer) -> None: ...

  @staticmethod
  @overload
  def glTexImage2D(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int, arg7: int, arg8: FloatBuffer) -> None: ...

  @staticmethod
  @overload
  def glTexImage2D(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int, arg7: int, arg8: IntBuffer) -> None: ...

  @staticmethod
  @overload
  def glTexImage2D(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int, arg7: int, arg8: ShortBuffer) -> None: ...

  @staticmethod
  @overload
  def glTexImage2D(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int, arg7: int, arg8: int) -> None: ...

  @staticmethod
  def glTexParameterf(arg0: int, arg1: int, arg2: float) -> None: ...

  @staticmethod
  @overload
  def glTexParameterfv(arg0: int, arg1: int, arg2: list[float]) -> None: ...

  @staticmethod
  @overload
  def glTexParameterfv(arg0: int, arg1: int, arg2: FloatBuffer) -> None: ...

  @staticmethod
  def glTexParameteri(arg0: int, arg1: int, arg2: int) -> None: ...

  @staticmethod
  @overload
  def glTexParameteriv(arg0: int, arg1: int, arg2: list[int]) -> None: ...

  @staticmethod
  @overload
  def glTexParameteriv(arg0: int, arg1: int, arg2: IntBuffer) -> None: ...

  @staticmethod
  @overload
  def glTexSubImage1D(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: list[float]) -> None: ...

  @staticmethod
  @overload
  def glTexSubImage1D(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: list[float]) -> None: ...

  @staticmethod
  @overload
  def glTexSubImage1D(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: list[int]) -> None: ...

  @staticmethod
  @overload
  def glTexSubImage1D(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: list[int]) -> None: ...

  @staticmethod
  @overload
  def glTexSubImage1D(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: ByteBuffer) -> None: ...

  @staticmethod
  @overload
  def glTexSubImage1D(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: DoubleBuffer) -> None: ...

  @staticmethod
  @overload
  def glTexSubImage1D(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: FloatBuffer) -> None: ...

  @staticmethod
  @overload
  def glTexSubImage1D(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: IntBuffer) -> None: ...

  @staticmethod
  @overload
  def glTexSubImage1D(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: ShortBuffer) -> None: ...

  @staticmethod
  @overload
  def glTexSubImage1D(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int) -> None: ...

  @staticmethod
  @overload
  def glTexSubImage2D(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int, arg7: int, arg8: list[float]) -> None: ...

  @staticmethod
  @overload
  def glTexSubImage2D(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int, arg7: int, arg8: list[float]) -> None: ...

  @staticmethod
  @overload
  def glTexSubImage2D(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int, arg7: int, arg8: list[int]) -> None: ...

  @staticmethod
  @overload
  def glTexSubImage2D(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int, arg7: int, arg8: list[int]) -> None: ...

  @staticmethod
  @overload
  def glTexSubImage2D(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int, arg7: int, arg8: ByteBuffer) -> None: ...

  @staticmethod
  @overload
  def glTexSubImage2D(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int, arg7: int, arg8: DoubleBuffer) -> None: ...

  @staticmethod
  @overload
  def glTexSubImage2D(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int, arg7: int, arg8: FloatBuffer) -> None: ...

  @staticmethod
  @overload
  def glTexSubImage2D(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int, arg7: int, arg8: IntBuffer) -> None: ...

  @staticmethod
  @overload
  def glTexSubImage2D(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int, arg7: int, arg8: ShortBuffer) -> None: ...

  @staticmethod
  @overload
  def glTexSubImage2D(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int, arg7: int, arg8: int) -> None: ...

  @staticmethod
  def glTranslated(arg0: float, arg1: float, arg2: float) -> None: ...

  @staticmethod
  def glTranslatef(arg0: float, arg1: float, arg2: float) -> None: ...

  @staticmethod
  def glVertex2d(arg0: float, arg1: float) -> None: ...

  @staticmethod
  @overload
  def glVertex2dv(arg0: list[float]) -> None: ...

  @staticmethod
  @overload
  def glVertex2dv(arg0: DoubleBuffer) -> None: ...

  @staticmethod
  def glVertex2f(arg0: float, arg1: float) -> None: ...

  @staticmethod
  @overload
  def glVertex2fv(arg0: list[float]) -> None: ...

  @staticmethod
  @overload
  def glVertex2fv(arg0: FloatBuffer) -> None: ...

  @staticmethod
  def glVertex2i(arg0: int, arg1: int) -> None: ...

  @staticmethod
  @overload
  def glVertex2iv(arg0: list[int]) -> None: ...

  @staticmethod
  @overload
  def glVertex2iv(arg0: IntBuffer) -> None: ...

  @staticmethod
  def glVertex2s(arg0: int, arg1: int) -> None: ...

  @staticmethod
  @overload
  def glVertex2sv(arg0: list[int]) -> None: ...

  @staticmethod
  @overload
  def glVertex2sv(arg0: ShortBuffer) -> None: ...

  @staticmethod
  def glVertex3d(arg0: float, arg1: float, arg2: float) -> None: ...

  @staticmethod
  @overload
  def glVertex3dv(arg0: list[float]) -> None: ...

  @staticmethod
  @overload
  def glVertex3dv(arg0: DoubleBuffer) -> None: ...

  @staticmethod
  def glVertex3f(arg0: float, arg1: float, arg2: float) -> None: ...

  @staticmethod
  @overload
  def glVertex3fv(arg0: list[float]) -> None: ...

  @staticmethod
  @overload
  def glVertex3fv(arg0: FloatBuffer) -> None: ...

  @staticmethod
  def glVertex3i(arg0: int, arg1: int, arg2: int) -> None: ...

  @staticmethod
  @overload
  def glVertex3iv(arg0: list[int]) -> None: ...

  @staticmethod
  @overload
  def glVertex3iv(arg0: IntBuffer) -> None: ...

  @staticmethod
  def glVertex3s(arg0: int, arg1: int, arg2: int) -> None: ...

  @staticmethod
  @overload
  def glVertex3sv(arg0: list[int]) -> None: ...

  @staticmethod
  @overload
  def glVertex3sv(arg0: ShortBuffer) -> None: ...

  @staticmethod
  def glVertex4d(arg0: float, arg1: float, arg2: float, arg3: float) -> None: ...

  @staticmethod
  @overload
  def glVertex4dv(arg0: list[float]) -> None: ...

  @staticmethod
  @overload
  def glVertex4dv(arg0: DoubleBuffer) -> None: ...

  @staticmethod
  def glVertex4f(arg0: float, arg1: float, arg2: float, arg3: float) -> None: ...

  @staticmethod
  @overload
  def glVertex4fv(arg0: list[float]) -> None: ...

  @staticmethod
  @overload
  def glVertex4fv(arg0: FloatBuffer) -> None: ...

  @staticmethod
  def glVertex4i(arg0: int, arg1: int, arg2: int, arg3: int) -> None: ...

  @staticmethod
  @overload
  def glVertex4iv(arg0: list[int]) -> None: ...

  @staticmethod
  @overload
  def glVertex4iv(arg0: IntBuffer) -> None: ...

  @staticmethod
  def glVertex4s(arg0: int, arg1: int, arg2: int, arg3: int) -> None: ...

  @staticmethod
  @overload
  def glVertex4sv(arg0: list[int]) -> None: ...

  @staticmethod
  @overload
  def glVertex4sv(arg0: ShortBuffer) -> None: ...

  @staticmethod
  @overload
  def glVertexPointer(arg0: int, arg1: int, arg2: int, arg3: ByteBuffer) -> None: ...

  @staticmethod
  @overload
  def glVertexPointer(arg0: int, arg1: int, arg2: int, arg3: FloatBuffer) -> None: ...

  @staticmethod
  @overload
  def glVertexPointer(arg0: int, arg1: int, arg2: int, arg3: IntBuffer) -> None: ...

  @staticmethod
  @overload
  def glVertexPointer(arg0: int, arg1: int, arg2: int, arg3: ShortBuffer) -> None: ...

  @staticmethod
  @overload
  def glVertexPointer(arg0: int, arg1: int, arg2: int, arg3: int) -> None: ...

  @staticmethod
  def glViewport(arg0: int, arg1: int, arg2: int, arg3: int) -> None: ...

  @staticmethod
  def nglAreTexturesResident(arg0: int, arg1: int, arg2: int) -> bool: ...

  @staticmethod
  def nglBitmap(arg0: int, arg1: int, arg2: float, arg3: float, arg4: float, arg5: float, arg6: int) -> None: ...

  @staticmethod
  def nglCallLists(arg0: int, arg1: int, arg2: int) -> None: ...

  @staticmethod
  def nglClipPlane(arg0: int, arg1: int) -> None: ...

  @staticmethod
  def nglColor3bv(arg0: int) -> None: ...

  @staticmethod
  def nglColor3dv(arg0: int) -> None: ...

  @staticmethod
  def nglColor3fv(arg0: int) -> None: ...

  @staticmethod
  def nglColor3iv(arg0: int) -> None: ...

  @staticmethod
  def nglColor3sv(arg0: int) -> None: ...

  @staticmethod
  def nglColor3ubv(arg0: int) -> None: ...

  @staticmethod
  def nglColor3uiv(arg0: int) -> None: ...

  @staticmethod
  def nglColor3usv(arg0: int) -> None: ...

  @staticmethod
  def nglColor4bv(arg0: int) -> None: ...

  @staticmethod
  def nglColor4dv(arg0: int) -> None: ...

  @staticmethod
  def nglColor4fv(arg0: int) -> None: ...

  @staticmethod
  def nglColor4iv(arg0: int) -> None: ...

  @staticmethod
  def nglColor4sv(arg0: int) -> None: ...

  @staticmethod
  def nglColor4ubv(arg0: int) -> None: ...

  @staticmethod
  def nglColor4uiv(arg0: int) -> None: ...

  @staticmethod
  def nglColor4usv(arg0: int) -> None: ...

  @staticmethod
  def nglColorPointer(arg0: int, arg1: int, arg2: int, arg3: int) -> None: ...

  @staticmethod
  def nglDeleteTextures(arg0: int, arg1: int) -> None: ...

  @staticmethod
  def nglDrawElements(arg0: int, arg1: int, arg2: int, arg3: int) -> None: ...

  @staticmethod
  def nglDrawPixels(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int) -> None: ...

  @staticmethod
  def nglEdgeFlagPointer(arg0: int, arg1: int) -> None: ...

  @staticmethod
  def nglEdgeFlagv(arg0: int) -> None: ...

  @staticmethod
  def nglEvalCoord1dv(arg0: int) -> None: ...

  @staticmethod
  def nglEvalCoord1fv(arg0: int) -> None: ...

  @staticmethod
  def nglEvalCoord2dv(arg0: int) -> None: ...

  @staticmethod
  def nglEvalCoord2fv(arg0: int) -> None: ...

  @staticmethod
  def nglFeedbackBuffer(arg0: int, arg1: int, arg2: int) -> None: ...

  @staticmethod
  def nglFogfv(arg0: int, arg1: int) -> None: ...

  @staticmethod
  def nglFogiv(arg0: int, arg1: int) -> None: ...

  @staticmethod
  def nglGenTextures(arg0: int, arg1: int) -> None: ...

  @staticmethod
  def nglGetBooleanv(arg0: int, arg1: int) -> None: ...

  @staticmethod
  def nglGetClipPlane(arg0: int, arg1: int) -> None: ...

  @staticmethod
  def nglGetDoublev(arg0: int, arg1: int) -> None: ...

  @staticmethod
  def nglGetFloatv(arg0: int, arg1: int) -> None: ...

  @staticmethod
  def nglGetIntegerv(arg0: int, arg1: int) -> None: ...

  @staticmethod
  def nglGetLightfv(arg0: int, arg1: int, arg2: int) -> None: ...

  @staticmethod
  def nglGetLightiv(arg0: int, arg1: int, arg2: int) -> None: ...

  @staticmethod
  def nglGetMapdv(arg0: int, arg1: int, arg2: int) -> None: ...

  @staticmethod
  def nglGetMapfv(arg0: int, arg1: int, arg2: int) -> None: ...

  @staticmethod
  def nglGetMapiv(arg0: int, arg1: int, arg2: int) -> None: ...

  @staticmethod
  def nglGetMaterialfv(arg0: int, arg1: int, arg2: int) -> None: ...

  @staticmethod
  def nglGetMaterialiv(arg0: int, arg1: int, arg2: int) -> None: ...

  @staticmethod
  def nglGetPixelMapfv(arg0: int, arg1: int) -> None: ...

  @staticmethod
  def nglGetPixelMapuiv(arg0: int, arg1: int) -> None: ...

  @staticmethod
  def nglGetPixelMapusv(arg0: int, arg1: int) -> None: ...

  @staticmethod
  def nglGetPointerv(arg0: int, arg1: int) -> None: ...

  @staticmethod
  def nglGetPolygonStipple(arg0: int) -> None: ...

  @staticmethod
  def nglGetString(arg0: int) -> int: ...

  @staticmethod
  def nglGetTexEnvfv(arg0: int, arg1: int, arg2: int) -> None: ...

  @staticmethod
  def nglGetTexEnviv(arg0: int, arg1: int, arg2: int) -> None: ...

  @staticmethod
  def nglGetTexGendv(arg0: int, arg1: int, arg2: int) -> None: ...

  @staticmethod
  def nglGetTexGenfv(arg0: int, arg1: int, arg2: int) -> None: ...

  @staticmethod
  def nglGetTexGeniv(arg0: int, arg1: int, arg2: int) -> None: ...

  @staticmethod
  def nglGetTexImage(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int) -> None: ...

  @staticmethod
  def nglGetTexLevelParameterfv(arg0: int, arg1: int, arg2: int, arg3: int) -> None: ...

  @staticmethod
  def nglGetTexLevelParameteriv(arg0: int, arg1: int, arg2: int, arg3: int) -> None: ...

  @staticmethod
  def nglGetTexParameterfv(arg0: int, arg1: int, arg2: int) -> None: ...

  @staticmethod
  def nglGetTexParameteriv(arg0: int, arg1: int, arg2: int) -> None: ...

  @staticmethod
  def nglIndexPointer(arg0: int, arg1: int, arg2: int) -> None: ...

  @staticmethod
  def nglIndexdv(arg0: int) -> None: ...

  @staticmethod
  def nglIndexfv(arg0: int) -> None: ...

  @staticmethod
  def nglIndexiv(arg0: int) -> None: ...

  @staticmethod
  def nglIndexsv(arg0: int) -> None: ...

  @staticmethod
  def nglIndexubv(arg0: int) -> None: ...

  @staticmethod
  def nglInterleavedArrays(arg0: int, arg1: int, arg2: int) -> None: ...

  @staticmethod
  def nglLightModelfv(arg0: int, arg1: int) -> None: ...

  @staticmethod
  def nglLightModeliv(arg0: int, arg1: int) -> None: ...

  @staticmethod
  def nglLightfv(arg0: int, arg1: int, arg2: int) -> None: ...

  @staticmethod
  def nglLightiv(arg0: int, arg1: int, arg2: int) -> None: ...

  @staticmethod
  def nglLoadMatrixd(arg0: int) -> None: ...

  @staticmethod
  def nglLoadMatrixf(arg0: int) -> None: ...

  @staticmethod
  def nglMap1d(arg0: int, arg1: float, arg2: float, arg3: int, arg4: int, arg5: int) -> None: ...

  @staticmethod
  def nglMap1f(arg0: int, arg1: float, arg2: float, arg3: int, arg4: int, arg5: int) -> None: ...

  @staticmethod
  def nglMap2d(arg0: int, arg1: float, arg2: float, arg3: int, arg4: int, arg5: float, arg6: float, arg7: int, arg8: int, arg9: int) -> None: ...

  @staticmethod
  def nglMap2f(arg0: int, arg1: float, arg2: float, arg3: int, arg4: int, arg5: float, arg6: float, arg7: int, arg8: int, arg9: int) -> None: ...

  @staticmethod
  def nglMaterialfv(arg0: int, arg1: int, arg2: int) -> None: ...

  @staticmethod
  def nglMaterialiv(arg0: int, arg1: int, arg2: int) -> None: ...

  @staticmethod
  def nglMultMatrixd(arg0: int) -> None: ...

  @staticmethod
  def nglMultMatrixf(arg0: int) -> None: ...

  @staticmethod
  def nglNormal3bv(arg0: int) -> None: ...

  @staticmethod
  def nglNormal3dv(arg0: int) -> None: ...

  @staticmethod
  def nglNormal3fv(arg0: int) -> None: ...

  @staticmethod
  def nglNormal3iv(arg0: int) -> None: ...

  @staticmethod
  def nglNormal3sv(arg0: int) -> None: ...

  @staticmethod
  def nglNormalPointer(arg0: int, arg1: int, arg2: int) -> None: ...

  @staticmethod
  def nglPixelMapfv(arg0: int, arg1: int, arg2: int) -> None: ...

  @staticmethod
  def nglPixelMapuiv(arg0: int, arg1: int, arg2: int) -> None: ...

  @staticmethod
  def nglPixelMapusv(arg0: int, arg1: int, arg2: int) -> None: ...

  @staticmethod
  def nglPolygonStipple(arg0: int) -> None: ...

  @staticmethod
  def nglPrioritizeTextures(arg0: int, arg1: int, arg2: int) -> None: ...

  @staticmethod
  def nglRasterPos2dv(arg0: int) -> None: ...

  @staticmethod
  def nglRasterPos2fv(arg0: int) -> None: ...

  @staticmethod
  def nglRasterPos2iv(arg0: int) -> None: ...

  @staticmethod
  def nglRasterPos2sv(arg0: int) -> None: ...

  @staticmethod
  def nglRasterPos3dv(arg0: int) -> None: ...

  @staticmethod
  def nglRasterPos3fv(arg0: int) -> None: ...

  @staticmethod
  def nglRasterPos3iv(arg0: int) -> None: ...

  @staticmethod
  def nglRasterPos3sv(arg0: int) -> None: ...

  @staticmethod
  def nglRasterPos4dv(arg0: int) -> None: ...

  @staticmethod
  def nglRasterPos4fv(arg0: int) -> None: ...

  @staticmethod
  def nglRasterPos4iv(arg0: int) -> None: ...

  @staticmethod
  def nglRasterPos4sv(arg0: int) -> None: ...

  @staticmethod
  def nglReadPixels(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int) -> None: ...

  @staticmethod
  def nglRectdv(arg0: int, arg1: int) -> None: ...

  @staticmethod
  def nglRectfv(arg0: int, arg1: int) -> None: ...

  @staticmethod
  def nglRectiv(arg0: int, arg1: int) -> None: ...

  @staticmethod
  def nglRectsv(arg0: int, arg1: int) -> None: ...

  @staticmethod
  def nglSelectBuffer(arg0: int, arg1: int) -> None: ...

  @staticmethod
  def nglTexCoord1dv(arg0: int) -> None: ...

  @staticmethod
  def nglTexCoord1fv(arg0: int) -> None: ...

  @staticmethod
  def nglTexCoord1iv(arg0: int) -> None: ...

  @staticmethod
  def nglTexCoord1sv(arg0: int) -> None: ...

  @staticmethod
  def nglTexCoord2dv(arg0: int) -> None: ...

  @staticmethod
  def nglTexCoord2fv(arg0: int) -> None: ...

  @staticmethod
  def nglTexCoord2iv(arg0: int) -> None: ...

  @staticmethod
  def nglTexCoord2sv(arg0: int) -> None: ...

  @staticmethod
  def nglTexCoord3dv(arg0: int) -> None: ...

  @staticmethod
  def nglTexCoord3fv(arg0: int) -> None: ...

  @staticmethod
  def nglTexCoord3iv(arg0: int) -> None: ...

  @staticmethod
  def nglTexCoord3sv(arg0: int) -> None: ...

  @staticmethod
  def nglTexCoord4dv(arg0: int) -> None: ...

  @staticmethod
  def nglTexCoord4fv(arg0: int) -> None: ...

  @staticmethod
  def nglTexCoord4iv(arg0: int) -> None: ...

  @staticmethod
  def nglTexCoord4sv(arg0: int) -> None: ...

  @staticmethod
  def nglTexCoordPointer(arg0: int, arg1: int, arg2: int, arg3: int) -> None: ...

  @staticmethod
  def nglTexEnvfv(arg0: int, arg1: int, arg2: int) -> None: ...

  @staticmethod
  def nglTexEnviv(arg0: int, arg1: int, arg2: int) -> None: ...

  @staticmethod
  def nglTexGendv(arg0: int, arg1: int, arg2: int) -> None: ...

  @staticmethod
  def nglTexGenfv(arg0: int, arg1: int, arg2: int) -> None: ...

  @staticmethod
  def nglTexGeniv(arg0: int, arg1: int, arg2: int) -> None: ...

  @staticmethod
  def nglTexImage1D(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int, arg7: int) -> None: ...

  @staticmethod
  def nglTexImage2D(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int, arg7: int, arg8: int) -> None: ...

  @staticmethod
  def nglTexParameterfv(arg0: int, arg1: int, arg2: int) -> None: ...

  @staticmethod
  def nglTexParameteriv(arg0: int, arg1: int, arg2: int) -> None: ...

  @staticmethod
  def nglTexSubImage1D(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int) -> None: ...

  @staticmethod
  def nglTexSubImage2D(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int, arg7: int, arg8: int) -> None: ...

  @staticmethod
  def nglVertex2dv(arg0: int) -> None: ...

  @staticmethod
  def nglVertex2fv(arg0: int) -> None: ...

  @staticmethod
  def nglVertex2iv(arg0: int) -> None: ...

  @staticmethod
  def nglVertex2sv(arg0: int) -> None: ...

  @staticmethod
  def nglVertex3dv(arg0: int) -> None: ...

  @staticmethod
  def nglVertex3fv(arg0: int) -> None: ...

  @staticmethod
  def nglVertex3iv(arg0: int) -> None: ...

  @staticmethod
  def nglVertex3sv(arg0: int) -> None: ...

  @staticmethod
  def nglVertex4dv(arg0: int) -> None: ...

  @staticmethod
  def nglVertex4fv(arg0: int) -> None: ...

  @staticmethod
  def nglVertex4iv(arg0: int) -> None: ...

  @staticmethod
  def nglVertex4sv(arg0: int) -> None: ...

  @staticmethod
  def nglVertexPointer(arg0: int, arg1: int, arg2: int, arg3: int) -> None: ...


class GL11C:

  GL_ALPHA: int

  GL_ALWAYS: int

  GL_AND: int

  GL_AND_INVERTED: int

  GL_AND_REVERSE: int

  GL_BACK: int

  GL_BACK_LEFT: int

  GL_BACK_RIGHT: int

  GL_BLEND: int

  GL_BLEND_DST: int

  GL_BLEND_SRC: int

  GL_BLUE: int

  GL_BYTE: int

  GL_CCW: int

  GL_CLEAR: int

  GL_COLOR: int

  GL_COLOR_BUFFER_BIT: int

  GL_COLOR_CLEAR_VALUE: int

  GL_COLOR_LOGIC_OP: int

  GL_COLOR_WRITEMASK: int

  GL_COPY: int

  GL_COPY_INVERTED: int

  GL_CULL_FACE: int

  GL_CULL_FACE_MODE: int

  GL_CW: int

  GL_DECR: int

  GL_DEPTH: int

  GL_DEPTH_BUFFER_BIT: int

  GL_DEPTH_CLEAR_VALUE: int

  GL_DEPTH_COMPONENT: int

  GL_DEPTH_FUNC: int

  GL_DEPTH_RANGE: int

  GL_DEPTH_TEST: int

  GL_DEPTH_WRITEMASK: int

  GL_DITHER: int

  GL_DONT_CARE: int

  GL_DOUBLE: int

  GL_DOUBLEBUFFER: int

  GL_DRAW_BUFFER: int

  GL_DST_ALPHA: int

  GL_DST_COLOR: int

  GL_EQUAL: int

  GL_EQUIV: int

  GL_EXTENSIONS: int

  GL_FALSE: int

  GL_FASTEST: int

  GL_FILL: int

  GL_FLOAT: int

  GL_FRONT: int

  GL_FRONT_AND_BACK: int

  GL_FRONT_FACE: int

  GL_FRONT_LEFT: int

  GL_FRONT_RIGHT: int

  GL_GEQUAL: int

  GL_GREATER: int

  GL_GREEN: int

  GL_INCR: int

  GL_INT: int

  GL_INVALID_ENUM: int

  GL_INVALID_OPERATION: int

  GL_INVALID_VALUE: int

  GL_INVERT: int

  GL_KEEP: int

  GL_LEFT: int

  GL_LEQUAL: int

  GL_LESS: int

  GL_LINE: int

  GL_LINE_LOOP: int

  GL_LINE_SMOOTH: int

  GL_LINE_SMOOTH_HINT: int

  GL_LINE_STRIP: int

  GL_LINE_WIDTH: int

  GL_LINE_WIDTH_GRANULARITY: int

  GL_LINE_WIDTH_RANGE: int

  GL_LINEAR: int

  GL_LINEAR_MIPMAP_LINEAR: int

  GL_LINEAR_MIPMAP_NEAREST: int

  GL_LINES: int

  GL_LOGIC_OP_MODE: int

  GL_MAX_TEXTURE_SIZE: int

  GL_MAX_VIEWPORT_DIMS: int

  GL_NAND: int

  GL_NEAREST: int

  GL_NEAREST_MIPMAP_LINEAR: int

  GL_NEAREST_MIPMAP_NEAREST: int

  GL_NEVER: int

  GL_NICEST: int

  GL_NO_ERROR: int

  GL_NONE: int

  GL_NOOP: int

  GL_NOR: int

  GL_NOTEQUAL: int

  GL_ONE: int

  GL_ONE_MINUS_DST_ALPHA: int

  GL_ONE_MINUS_DST_COLOR: int

  GL_ONE_MINUS_SRC_ALPHA: int

  GL_ONE_MINUS_SRC_COLOR: int

  GL_OR: int

  GL_OR_INVERTED: int

  GL_OR_REVERSE: int

  GL_OUT_OF_MEMORY: int

  GL_PACK_ALIGNMENT: int

  GL_PACK_LSB_FIRST: int

  GL_PACK_ROW_LENGTH: int

  GL_PACK_SKIP_PIXELS: int

  GL_PACK_SKIP_ROWS: int

  GL_PACK_SWAP_BYTES: int

  GL_POINT: int

  GL_POINT_SIZE: int

  GL_POINT_SIZE_GRANULARITY: int

  GL_POINT_SIZE_RANGE: int

  GL_POINTS: int

  GL_POLYGON_MODE: int

  GL_POLYGON_OFFSET_FACTOR: int

  GL_POLYGON_OFFSET_FILL: int

  GL_POLYGON_OFFSET_LINE: int

  GL_POLYGON_OFFSET_POINT: int

  GL_POLYGON_OFFSET_UNITS: int

  GL_POLYGON_SMOOTH: int

  GL_POLYGON_SMOOTH_HINT: int

  GL_PROXY_TEXTURE_1D: int

  GL_PROXY_TEXTURE_2D: int

  GL_QUADS: int

  GL_R3_G3_B2: int

  GL_READ_BUFFER: int

  GL_RED: int

  GL_RENDERER: int

  GL_REPEAT: int

  GL_REPLACE: int

  GL_RGB: int

  GL_RGB10: int

  GL_RGB10_A2: int

  GL_RGB12: int

  GL_RGB16: int

  GL_RGB4: int

  GL_RGB5: int

  GL_RGB5_A1: int

  GL_RGB8: int

  GL_RGBA: int

  GL_RGBA12: int

  GL_RGBA16: int

  GL_RGBA2: int

  GL_RGBA4: int

  GL_RGBA8: int

  GL_RIGHT: int

  GL_SCISSOR_BOX: int

  GL_SCISSOR_TEST: int

  GL_SET: int

  GL_SHORT: int

  GL_SRC_ALPHA: int

  GL_SRC_ALPHA_SATURATE: int

  GL_SRC_COLOR: int

  GL_STACK_OVERFLOW: int

  GL_STACK_UNDERFLOW: int

  GL_STENCIL: int

  GL_STENCIL_BUFFER_BIT: int

  GL_STENCIL_CLEAR_VALUE: int

  GL_STENCIL_FAIL: int

  GL_STENCIL_FUNC: int

  GL_STENCIL_INDEX: int

  GL_STENCIL_PASS_DEPTH_FAIL: int

  GL_STENCIL_PASS_DEPTH_PASS: int

  GL_STENCIL_REF: int

  GL_STENCIL_TEST: int

  GL_STENCIL_VALUE_MASK: int

  GL_STENCIL_WRITEMASK: int

  GL_STEREO: int

  GL_SUBPIXEL_BITS: int

  GL_TEXTURE_1D: int

  GL_TEXTURE_2D: int

  GL_TEXTURE_ALPHA_SIZE: int

  GL_TEXTURE_BINDING_1D: int

  GL_TEXTURE_BINDING_2D: int

  GL_TEXTURE_BLUE_SIZE: int

  GL_TEXTURE_BORDER_COLOR: int

  GL_TEXTURE_GREEN_SIZE: int

  GL_TEXTURE_HEIGHT: int

  GL_TEXTURE_INTERNAL_FORMAT: int

  GL_TEXTURE_MAG_FILTER: int

  GL_TEXTURE_MIN_FILTER: int

  GL_TEXTURE_RED_SIZE: int

  GL_TEXTURE_WIDTH: int

  GL_TEXTURE_WRAP_S: int

  GL_TEXTURE_WRAP_T: int

  GL_TRIANGLE_FAN: int

  GL_TRIANGLE_STRIP: int

  GL_TRIANGLES: int

  GL_TRUE: int

  GL_UNPACK_ALIGNMENT: int

  GL_UNPACK_LSB_FIRST: int

  GL_UNPACK_ROW_LENGTH: int

  GL_UNPACK_SKIP_PIXELS: int

  GL_UNPACK_SKIP_ROWS: int

  GL_UNPACK_SWAP_BYTES: int

  GL_UNSIGNED_BYTE: int

  GL_UNSIGNED_INT: int

  GL_UNSIGNED_SHORT: int

  GL_VENDOR: int

  GL_VERSION: int

  GL_VERTEX_ARRAY: int

  GL_VIEWPORT: int

  GL_XOR: int

  GL_ZERO: int

  @staticmethod
  def glBindTexture(arg0: int, arg1: int) -> None: ...

  @staticmethod
  def glBlendFunc(arg0: int, arg1: int) -> None: ...

  @staticmethod
  def glClear(arg0: int) -> None: ...

  @staticmethod
  def glClearColor(arg0: float, arg1: float, arg2: float, arg3: float) -> None: ...

  @staticmethod
  def glClearDepth(arg0: float) -> None: ...

  @staticmethod
  def glClearStencil(arg0: int) -> None: ...

  @staticmethod
  def glColorMask(arg0: bool, arg1: bool, arg2: bool, arg3: bool) -> None: ...

  @staticmethod
  def glCopyTexImage1D(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int) -> None: ...

  @staticmethod
  def glCopyTexImage2D(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int, arg7: int) -> None: ...

  @staticmethod
  def glCopyTexSubImage1D(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int) -> None: ...

  @staticmethod
  def glCopyTexSubImage2D(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int, arg7: int) -> None: ...

  @staticmethod
  def glCullFace(arg0: int) -> None: ...

  @staticmethod
  @overload
  def glDeleteTextures(arg0: list[int]) -> None: ...

  @staticmethod
  @overload
  def glDeleteTextures(arg0: int) -> None: ...

  @staticmethod
  @overload
  def glDeleteTextures(arg0: IntBuffer) -> None: ...

  @staticmethod
  def glDepthFunc(arg0: int) -> None: ...

  @staticmethod
  def glDepthMask(arg0: bool) -> None: ...

  @staticmethod
  def glDepthRange(arg0: float, arg1: float) -> None: ...

  @staticmethod
  def glDisable(arg0: int) -> None: ...

  @staticmethod
  def glDrawArrays(arg0: int, arg1: int, arg2: int) -> None: ...

  @staticmethod
  def glDrawBuffer(arg0: int) -> None: ...

  @staticmethod
  @overload
  def glDrawElements(arg0: int, arg1: ByteBuffer) -> None: ...

  @staticmethod
  @overload
  def glDrawElements(arg0: int, arg1: IntBuffer) -> None: ...

  @staticmethod
  @overload
  def glDrawElements(arg0: int, arg1: ShortBuffer) -> None: ...

  @staticmethod
  @overload
  def glDrawElements(arg0: int, arg1: int, arg2: ByteBuffer) -> None: ...

  @staticmethod
  @overload
  def glDrawElements(arg0: int, arg1: int, arg2: int, arg3: int) -> None: ...

  @staticmethod
  def glEnable(arg0: int) -> None: ...

  @staticmethod
  def glFinish() -> None: ...

  @staticmethod
  def glFlush() -> None: ...

  @staticmethod
  def glFrontFace(arg0: int) -> None: ...

  @staticmethod
  @overload
  def glGenTextures() -> int: ...

  @staticmethod
  @overload
  def glGenTextures(arg0: list[int]) -> None: ...

  @staticmethod
  @overload
  def glGenTextures(arg0: IntBuffer) -> None: ...

  @staticmethod
  def glGetBoolean(arg0: int) -> bool: ...

  @staticmethod
  def glGetBooleanv(arg0: int, arg1: ByteBuffer) -> None: ...

  @staticmethod
  def glGetDouble(arg0: int) -> float: ...

  @staticmethod
  @overload
  def glGetDoublev(arg0: int, arg1: list[float]) -> None: ...

  @staticmethod
  @overload
  def glGetDoublev(arg0: int, arg1: DoubleBuffer) -> None: ...

  @staticmethod
  def glGetError() -> int: ...

  @staticmethod
  def glGetFloat(arg0: int) -> float: ...

  @staticmethod
  @overload
  def glGetFloatv(arg0: int, arg1: list[float]) -> None: ...

  @staticmethod
  @overload
  def glGetFloatv(arg0: int, arg1: FloatBuffer) -> None: ...

  @staticmethod
  def glGetInteger(arg0: int) -> int: ...

  @staticmethod
  @overload
  def glGetIntegerv(arg0: int, arg1: list[int]) -> None: ...

  @staticmethod
  @overload
  def glGetIntegerv(arg0: int, arg1: IntBuffer) -> None: ...

  @staticmethod
  def glGetPointer(arg0: int) -> int: ...

  @staticmethod
  def glGetPointerv(arg0: int, arg1: PointerBuffer) -> None: ...

  @staticmethod
  def glGetString(arg0: int) -> str: ...

  @staticmethod
  @overload
  def glGetTexImage(arg0: int, arg1: int, arg2: int, arg3: int, arg4: list[float]) -> None: ...

  @staticmethod
  @overload
  def glGetTexImage(arg0: int, arg1: int, arg2: int, arg3: int, arg4: list[float]) -> None: ...

  @staticmethod
  @overload
  def glGetTexImage(arg0: int, arg1: int, arg2: int, arg3: int, arg4: list[int]) -> None: ...

  @staticmethod
  @overload
  def glGetTexImage(arg0: int, arg1: int, arg2: int, arg3: int, arg4: list[int]) -> None: ...

  @staticmethod
  @overload
  def glGetTexImage(arg0: int, arg1: int, arg2: int, arg3: int, arg4: ByteBuffer) -> None: ...

  @staticmethod
  @overload
  def glGetTexImage(arg0: int, arg1: int, arg2: int, arg3: int, arg4: DoubleBuffer) -> None: ...

  @staticmethod
  @overload
  def glGetTexImage(arg0: int, arg1: int, arg2: int, arg3: int, arg4: FloatBuffer) -> None: ...

  @staticmethod
  @overload
  def glGetTexImage(arg0: int, arg1: int, arg2: int, arg3: int, arg4: IntBuffer) -> None: ...

  @staticmethod
  @overload
  def glGetTexImage(arg0: int, arg1: int, arg2: int, arg3: int, arg4: ShortBuffer) -> None: ...

  @staticmethod
  @overload
  def glGetTexImage(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int) -> None: ...

  @staticmethod
  def glGetTexLevelParameterf(arg0: int, arg1: int, arg2: int) -> float: ...

  @staticmethod
  @overload
  def glGetTexLevelParameterfv(arg0: int, arg1: int, arg2: int, arg3: list[float]) -> None: ...

  @staticmethod
  @overload
  def glGetTexLevelParameterfv(arg0: int, arg1: int, arg2: int, arg3: FloatBuffer) -> None: ...

  @staticmethod
  def glGetTexLevelParameteri(arg0: int, arg1: int, arg2: int) -> int: ...

  @staticmethod
  @overload
  def glGetTexLevelParameteriv(arg0: int, arg1: int, arg2: int, arg3: list[int]) -> None: ...

  @staticmethod
  @overload
  def glGetTexLevelParameteriv(arg0: int, arg1: int, arg2: int, arg3: IntBuffer) -> None: ...

  @staticmethod
  def glGetTexParameterf(arg0: int, arg1: int) -> float: ...

  @staticmethod
  @overload
  def glGetTexParameterfv(arg0: int, arg1: int, arg2: list[float]) -> None: ...

  @staticmethod
  @overload
  def glGetTexParameterfv(arg0: int, arg1: int, arg2: FloatBuffer) -> None: ...

  @staticmethod
  def glGetTexParameteri(arg0: int, arg1: int) -> int: ...

  @staticmethod
  @overload
  def glGetTexParameteriv(arg0: int, arg1: int, arg2: list[int]) -> None: ...

  @staticmethod
  @overload
  def glGetTexParameteriv(arg0: int, arg1: int, arg2: IntBuffer) -> None: ...

  @staticmethod
  def glHint(arg0: int, arg1: int) -> None: ...

  @staticmethod
  def glIsEnabled(arg0: int) -> bool: ...

  @staticmethod
  def glIsTexture(arg0: int) -> bool: ...

  @staticmethod
  def glLineWidth(arg0: float) -> None: ...

  @staticmethod
  def glLogicOp(arg0: int) -> None: ...

  @staticmethod
  def glPixelStoref(arg0: int, arg1: float) -> None: ...

  @staticmethod
  def glPixelStorei(arg0: int, arg1: int) -> None: ...

  @staticmethod
  def glPointSize(arg0: float) -> None: ...

  @staticmethod
  def glPolygonMode(arg0: int, arg1: int) -> None: ...

  @staticmethod
  def glPolygonOffset(arg0: float, arg1: float) -> None: ...

  @staticmethod
  def glReadBuffer(arg0: int) -> None: ...

  @staticmethod
  @overload
  def glReadPixels(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: list[float]) -> None: ...

  @staticmethod
  @overload
  def glReadPixels(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: list[int]) -> None: ...

  @staticmethod
  @overload
  def glReadPixels(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: list[int]) -> None: ...

  @staticmethod
  @overload
  def glReadPixels(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: ByteBuffer) -> None: ...

  @staticmethod
  @overload
  def glReadPixels(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: FloatBuffer) -> None: ...

  @staticmethod
  @overload
  def glReadPixels(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: IntBuffer) -> None: ...

  @staticmethod
  @overload
  def glReadPixels(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: ShortBuffer) -> None: ...

  @staticmethod
  @overload
  def glReadPixels(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int) -> None: ...

  @staticmethod
  def glScissor(arg0: int, arg1: int, arg2: int, arg3: int) -> None: ...

  @staticmethod
  def glStencilFunc(arg0: int, arg1: int, arg2: int) -> None: ...

  @staticmethod
  def glStencilMask(arg0: int) -> None: ...

  @staticmethod
  def glStencilOp(arg0: int, arg1: int, arg2: int) -> None: ...

  @staticmethod
  @overload
  def glTexImage1D(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int, arg7: list[float]) -> None: ...

  @staticmethod
  @overload
  def glTexImage1D(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int, arg7: list[float]) -> None: ...

  @staticmethod
  @overload
  def glTexImage1D(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int, arg7: list[int]) -> None: ...

  @staticmethod
  @overload
  def glTexImage1D(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int, arg7: list[int]) -> None: ...

  @staticmethod
  @overload
  def glTexImage1D(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int, arg7: ByteBuffer) -> None: ...

  @staticmethod
  @overload
  def glTexImage1D(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int, arg7: DoubleBuffer) -> None: ...

  @staticmethod
  @overload
  def glTexImage1D(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int, arg7: FloatBuffer) -> None: ...

  @staticmethod
  @overload
  def glTexImage1D(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int, arg7: IntBuffer) -> None: ...

  @staticmethod
  @overload
  def glTexImage1D(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int, arg7: ShortBuffer) -> None: ...

  @staticmethod
  @overload
  def glTexImage1D(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int, arg7: int) -> None: ...

  @staticmethod
  @overload
  def glTexImage2D(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int, arg7: int, arg8: list[float]) -> None: ...

  @staticmethod
  @overload
  def glTexImage2D(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int, arg7: int, arg8: list[float]) -> None: ...

  @staticmethod
  @overload
  def glTexImage2D(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int, arg7: int, arg8: list[int]) -> None: ...

  @staticmethod
  @overload
  def glTexImage2D(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int, arg7: int, arg8: list[int]) -> None: ...

  @staticmethod
  @overload
  def glTexImage2D(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int, arg7: int, arg8: ByteBuffer) -> None: ...

  @staticmethod
  @overload
  def glTexImage2D(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int, arg7: int, arg8: DoubleBuffer) -> None: ...

  @staticmethod
  @overload
  def glTexImage2D(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int, arg7: int, arg8: FloatBuffer) -> None: ...

  @staticmethod
  @overload
  def glTexImage2D(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int, arg7: int, arg8: IntBuffer) -> None: ...

  @staticmethod
  @overload
  def glTexImage2D(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int, arg7: int, arg8: ShortBuffer) -> None: ...

  @staticmethod
  @overload
  def glTexImage2D(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int, arg7: int, arg8: int) -> None: ...

  @staticmethod
  def glTexParameterf(arg0: int, arg1: int, arg2: float) -> None: ...

  @staticmethod
  @overload
  def glTexParameterfv(arg0: int, arg1: int, arg2: list[float]) -> None: ...

  @staticmethod
  @overload
  def glTexParameterfv(arg0: int, arg1: int, arg2: FloatBuffer) -> None: ...

  @staticmethod
  def glTexParameteri(arg0: int, arg1: int, arg2: int) -> None: ...

  @staticmethod
  @overload
  def glTexParameteriv(arg0: int, arg1: int, arg2: list[int]) -> None: ...

  @staticmethod
  @overload
  def glTexParameteriv(arg0: int, arg1: int, arg2: IntBuffer) -> None: ...

  @staticmethod
  @overload
  def glTexSubImage1D(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: list[float]) -> None: ...

  @staticmethod
  @overload
  def glTexSubImage1D(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: list[float]) -> None: ...

  @staticmethod
  @overload
  def glTexSubImage1D(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: list[int]) -> None: ...

  @staticmethod
  @overload
  def glTexSubImage1D(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: list[int]) -> None: ...

  @staticmethod
  @overload
  def glTexSubImage1D(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: ByteBuffer) -> None: ...

  @staticmethod
  @overload
  def glTexSubImage1D(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: DoubleBuffer) -> None: ...

  @staticmethod
  @overload
  def glTexSubImage1D(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: FloatBuffer) -> None: ...

  @staticmethod
  @overload
  def glTexSubImage1D(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: IntBuffer) -> None: ...

  @staticmethod
  @overload
  def glTexSubImage1D(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: ShortBuffer) -> None: ...

  @staticmethod
  @overload
  def glTexSubImage1D(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int) -> None: ...

  @staticmethod
  @overload
  def glTexSubImage2D(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int, arg7: int, arg8: list[float]) -> None: ...

  @staticmethod
  @overload
  def glTexSubImage2D(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int, arg7: int, arg8: list[float]) -> None: ...

  @staticmethod
  @overload
  def glTexSubImage2D(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int, arg7: int, arg8: list[int]) -> None: ...

  @staticmethod
  @overload
  def glTexSubImage2D(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int, arg7: int, arg8: list[int]) -> None: ...

  @staticmethod
  @overload
  def glTexSubImage2D(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int, arg7: int, arg8: ByteBuffer) -> None: ...

  @staticmethod
  @overload
  def glTexSubImage2D(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int, arg7: int, arg8: DoubleBuffer) -> None: ...

  @staticmethod
  @overload
  def glTexSubImage2D(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int, arg7: int, arg8: FloatBuffer) -> None: ...

  @staticmethod
  @overload
  def glTexSubImage2D(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int, arg7: int, arg8: IntBuffer) -> None: ...

  @staticmethod
  @overload
  def glTexSubImage2D(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int, arg7: int, arg8: ShortBuffer) -> None: ...

  @staticmethod
  @overload
  def glTexSubImage2D(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int, arg7: int, arg8: int) -> None: ...

  @staticmethod
  def glViewport(arg0: int, arg1: int, arg2: int, arg3: int) -> None: ...

  @staticmethod
  def nglDeleteTextures(arg0: int, arg1: int) -> None: ...

  @staticmethod
  def nglDrawElements(arg0: int, arg1: int, arg2: int, arg3: int) -> None: ...

  @staticmethod
  def nglGenTextures(arg0: int, arg1: int) -> None: ...

  @staticmethod
  def nglGetBooleanv(arg0: int, arg1: int) -> None: ...

  @staticmethod
  def nglGetDoublev(arg0: int, arg1: int) -> None: ...

  @staticmethod
  def nglGetFloatv(arg0: int, arg1: int) -> None: ...

  @staticmethod
  def nglGetIntegerv(arg0: int, arg1: int) -> None: ...

  @staticmethod
  def nglGetPointerv(arg0: int, arg1: int) -> None: ...

  @staticmethod
  def nglGetString(arg0: int) -> int: ...

  @staticmethod
  def nglGetTexImage(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int) -> None: ...

  @staticmethod
  def nglGetTexLevelParameterfv(arg0: int, arg1: int, arg2: int, arg3: int) -> None: ...

  @staticmethod
  def nglGetTexLevelParameteriv(arg0: int, arg1: int, arg2: int, arg3: int) -> None: ...

  @staticmethod
  def nglGetTexParameterfv(arg0: int, arg1: int, arg2: int) -> None: ...

  @staticmethod
  def nglGetTexParameteriv(arg0: int, arg1: int, arg2: int) -> None: ...

  @staticmethod
  def nglReadPixels(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int) -> None: ...

  @staticmethod
  def nglTexImage1D(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int, arg7: int) -> None: ...

  @staticmethod
  def nglTexImage2D(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int, arg7: int, arg8: int) -> None: ...

  @staticmethod
  def nglTexParameterfv(arg0: int, arg1: int, arg2: int) -> None: ...

  @staticmethod
  def nglTexParameteriv(arg0: int, arg1: int, arg2: int) -> None: ...

  @staticmethod
  def nglTexSubImage1D(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int) -> None: ...

  @staticmethod
  def nglTexSubImage2D(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int, arg7: int, arg8: int) -> None: ...


class GL12(GL11):

  GL_ALIASED_LINE_WIDTH_RANGE: int

  GL_ALIASED_POINT_SIZE_RANGE: int

  GL_BGR: int

  GL_BGRA: int

  GL_CLAMP_TO_EDGE: int

  GL_LIGHT_MODEL_COLOR_CONTROL: int

  GL_MAX_3D_TEXTURE_SIZE: int

  GL_MAX_ELEMENTS_INDICES: int

  GL_MAX_ELEMENTS_VERTICES: int

  GL_PACK_IMAGE_HEIGHT: int

  GL_PACK_SKIP_IMAGES: int

  GL_PROXY_TEXTURE_3D: int

  GL_RESCALE_NORMAL: int

  GL_SEPARATE_SPECULAR_COLOR: int

  GL_SINGLE_COLOR: int

  GL_SMOOTH_LINE_WIDTH_GRANULARITY: int

  GL_SMOOTH_LINE_WIDTH_RANGE: int

  GL_SMOOTH_POINT_SIZE_GRANULARITY: int

  GL_SMOOTH_POINT_SIZE_RANGE: int

  GL_TEXTURE_3D: int

  GL_TEXTURE_BASE_LEVEL: int

  GL_TEXTURE_BINDING_3D: int

  GL_TEXTURE_DEPTH: int

  GL_TEXTURE_MAX_LEVEL: int

  GL_TEXTURE_MAX_LOD: int

  GL_TEXTURE_MIN_LOD: int

  GL_TEXTURE_WRAP_R: int

  GL_UNPACK_IMAGE_HEIGHT: int

  GL_UNPACK_SKIP_IMAGES: int

  GL_UNSIGNED_BYTE_2_3_3_REV: int

  GL_UNSIGNED_BYTE_3_3_2: int

  GL_UNSIGNED_INT_10_10_10_2: int

  GL_UNSIGNED_INT_2_10_10_10_REV: int

  GL_UNSIGNED_INT_8_8_8_8: int

  GL_UNSIGNED_INT_8_8_8_8_REV: int

  GL_UNSIGNED_SHORT_1_5_5_5_REV: int

  GL_UNSIGNED_SHORT_4_4_4_4: int

  GL_UNSIGNED_SHORT_4_4_4_4_REV: int

  GL_UNSIGNED_SHORT_5_5_5_1: int

  GL_UNSIGNED_SHORT_5_6_5: int

  GL_UNSIGNED_SHORT_5_6_5_REV: int

  @staticmethod
  def glCopyTexSubImage3D(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int, arg7: int, arg8: int) -> None: ...

  @staticmethod
  @overload
  def glDrawRangeElements(arg0: int, arg1: int, arg2: int, arg3: ByteBuffer) -> None: ...

  @staticmethod
  @overload
  def glDrawRangeElements(arg0: int, arg1: int, arg2: int, arg3: IntBuffer) -> None: ...

  @staticmethod
  @overload
  def glDrawRangeElements(arg0: int, arg1: int, arg2: int, arg3: ShortBuffer) -> None: ...

  @staticmethod
  @overload
  def glDrawRangeElements(arg0: int, arg1: int, arg2: int, arg3: int, arg4: ByteBuffer) -> None: ...

  @staticmethod
  @overload
  def glDrawRangeElements(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int) -> None: ...

  @staticmethod
  @overload
  def glTexImage3D(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int, arg7: int, arg8: int, arg9: list[float]) -> None: ...

  @staticmethod
  @overload
  def glTexImage3D(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int, arg7: int, arg8: int, arg9: list[float]) -> None: ...

  @staticmethod
  @overload
  def glTexImage3D(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int, arg7: int, arg8: int, arg9: list[int]) -> None: ...

  @staticmethod
  @overload
  def glTexImage3D(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int, arg7: int, arg8: int, arg9: list[int]) -> None: ...

  @staticmethod
  @overload
  def glTexImage3D(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int, arg7: int, arg8: int, arg9: ByteBuffer) -> None: ...

  @staticmethod
  @overload
  def glTexImage3D(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int, arg7: int, arg8: int, arg9: DoubleBuffer) -> None: ...

  @staticmethod
  @overload
  def glTexImage3D(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int, arg7: int, arg8: int, arg9: FloatBuffer) -> None: ...

  @staticmethod
  @overload
  def glTexImage3D(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int, arg7: int, arg8: int, arg9: IntBuffer) -> None: ...

  @staticmethod
  @overload
  def glTexImage3D(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int, arg7: int, arg8: int, arg9: ShortBuffer) -> None: ...

  @staticmethod
  @overload
  def glTexImage3D(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int, arg7: int, arg8: int, arg9: int) -> None: ...

  @staticmethod
  @overload
  def glTexSubImage3D(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int, arg7: int, arg8: int, arg9: int, arg10: list[float]) -> None: ...

  @staticmethod
  @overload
  def glTexSubImage3D(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int, arg7: int, arg8: int, arg9: int, arg10: list[float]) -> None: ...

  @staticmethod
  @overload
  def glTexSubImage3D(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int, arg7: int, arg8: int, arg9: int, arg10: list[int]) -> None: ...

  @staticmethod
  @overload
  def glTexSubImage3D(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int, arg7: int, arg8: int, arg9: int, arg10: list[int]) -> None: ...

  @staticmethod
  @overload
  def glTexSubImage3D(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int, arg7: int, arg8: int, arg9: int, arg10: ByteBuffer) -> None: ...

  @staticmethod
  @overload
  def glTexSubImage3D(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int, arg7: int, arg8: int, arg9: int, arg10: DoubleBuffer) -> None: ...

  @staticmethod
  @overload
  def glTexSubImage3D(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int, arg7: int, arg8: int, arg9: int, arg10: FloatBuffer) -> None: ...

  @staticmethod
  @overload
  def glTexSubImage3D(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int, arg7: int, arg8: int, arg9: int, arg10: IntBuffer) -> None: ...

  @staticmethod
  @overload
  def glTexSubImage3D(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int, arg7: int, arg8: int, arg9: int, arg10: ShortBuffer) -> None: ...

  @staticmethod
  @overload
  def glTexSubImage3D(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int, arg7: int, arg8: int, arg9: int, arg10: int) -> None: ...

  @staticmethod
  def nglDrawRangeElements(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int) -> None: ...

  @staticmethod
  def nglTexImage3D(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int, arg7: int, arg8: int, arg9: int) -> None: ...

  @staticmethod
  def nglTexSubImage3D(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int, arg7: int, arg8: int, arg9: int, arg10: int) -> None: ...


class GL12C(GL11C):

  GL_ALIASED_LINE_WIDTH_RANGE: int

  GL_BGR: int

  GL_BGRA: int

  GL_CLAMP_TO_EDGE: int

  GL_MAX_3D_TEXTURE_SIZE: int

  GL_MAX_ELEMENTS_INDICES: int

  GL_MAX_ELEMENTS_VERTICES: int

  GL_PACK_IMAGE_HEIGHT: int

  GL_PACK_SKIP_IMAGES: int

  GL_PROXY_TEXTURE_3D: int

  GL_SMOOTH_LINE_WIDTH_GRANULARITY: int

  GL_SMOOTH_LINE_WIDTH_RANGE: int

  GL_SMOOTH_POINT_SIZE_GRANULARITY: int

  GL_SMOOTH_POINT_SIZE_RANGE: int

  GL_TEXTURE_3D: int

  GL_TEXTURE_BASE_LEVEL: int

  GL_TEXTURE_BINDING_3D: int

  GL_TEXTURE_DEPTH: int

  GL_TEXTURE_MAX_LEVEL: int

  GL_TEXTURE_MAX_LOD: int

  GL_TEXTURE_MIN_LOD: int

  GL_TEXTURE_WRAP_R: int

  GL_UNPACK_IMAGE_HEIGHT: int

  GL_UNPACK_SKIP_IMAGES: int

  GL_UNSIGNED_BYTE_2_3_3_REV: int

  GL_UNSIGNED_BYTE_3_3_2: int

  GL_UNSIGNED_INT_10_10_10_2: int

  GL_UNSIGNED_INT_2_10_10_10_REV: int

  GL_UNSIGNED_INT_8_8_8_8: int

  GL_UNSIGNED_INT_8_8_8_8_REV: int

  GL_UNSIGNED_SHORT_1_5_5_5_REV: int

  GL_UNSIGNED_SHORT_4_4_4_4: int

  GL_UNSIGNED_SHORT_4_4_4_4_REV: int

  GL_UNSIGNED_SHORT_5_5_5_1: int

  GL_UNSIGNED_SHORT_5_6_5: int

  GL_UNSIGNED_SHORT_5_6_5_REV: int

  @staticmethod
  def glCopyTexSubImage3D(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int, arg7: int, arg8: int) -> None: ...

  @staticmethod
  @overload
  def glDrawRangeElements(arg0: int, arg1: int, arg2: int, arg3: ByteBuffer) -> None: ...

  @staticmethod
  @overload
  def glDrawRangeElements(arg0: int, arg1: int, arg2: int, arg3: IntBuffer) -> None: ...

  @staticmethod
  @overload
  def glDrawRangeElements(arg0: int, arg1: int, arg2: int, arg3: ShortBuffer) -> None: ...

  @staticmethod
  @overload
  def glDrawRangeElements(arg0: int, arg1: int, arg2: int, arg3: int, arg4: ByteBuffer) -> None: ...

  @staticmethod
  @overload
  def glDrawRangeElements(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int) -> None: ...

  @staticmethod
  @overload
  def glTexImage3D(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int, arg7: int, arg8: int, arg9: list[float]) -> None: ...

  @staticmethod
  @overload
  def glTexImage3D(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int, arg7: int, arg8: int, arg9: list[float]) -> None: ...

  @staticmethod
  @overload
  def glTexImage3D(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int, arg7: int, arg8: int, arg9: list[int]) -> None: ...

  @staticmethod
  @overload
  def glTexImage3D(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int, arg7: int, arg8: int, arg9: list[int]) -> None: ...

  @staticmethod
  @overload
  def glTexImage3D(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int, arg7: int, arg8: int, arg9: ByteBuffer) -> None: ...

  @staticmethod
  @overload
  def glTexImage3D(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int, arg7: int, arg8: int, arg9: DoubleBuffer) -> None: ...

  @staticmethod
  @overload
  def glTexImage3D(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int, arg7: int, arg8: int, arg9: FloatBuffer) -> None: ...

  @staticmethod
  @overload
  def glTexImage3D(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int, arg7: int, arg8: int, arg9: IntBuffer) -> None: ...

  @staticmethod
  @overload
  def glTexImage3D(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int, arg7: int, arg8: int, arg9: ShortBuffer) -> None: ...

  @staticmethod
  @overload
  def glTexImage3D(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int, arg7: int, arg8: int, arg9: int) -> None: ...

  @staticmethod
  @overload
  def glTexSubImage3D(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int, arg7: int, arg8: int, arg9: int, arg10: list[float]) -> None: ...

  @staticmethod
  @overload
  def glTexSubImage3D(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int, arg7: int, arg8: int, arg9: int, arg10: list[float]) -> None: ...

  @staticmethod
  @overload
  def glTexSubImage3D(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int, arg7: int, arg8: int, arg9: int, arg10: list[int]) -> None: ...

  @staticmethod
  @overload
  def glTexSubImage3D(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int, arg7: int, arg8: int, arg9: int, arg10: list[int]) -> None: ...

  @staticmethod
  @overload
  def glTexSubImage3D(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int, arg7: int, arg8: int, arg9: int, arg10: ByteBuffer) -> None: ...

  @staticmethod
  @overload
  def glTexSubImage3D(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int, arg7: int, arg8: int, arg9: int, arg10: DoubleBuffer) -> None: ...

  @staticmethod
  @overload
  def glTexSubImage3D(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int, arg7: int, arg8: int, arg9: int, arg10: FloatBuffer) -> None: ...

  @staticmethod
  @overload
  def glTexSubImage3D(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int, arg7: int, arg8: int, arg9: int, arg10: IntBuffer) -> None: ...

  @staticmethod
  @overload
  def glTexSubImage3D(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int, arg7: int, arg8: int, arg9: int, arg10: ShortBuffer) -> None: ...

  @staticmethod
  @overload
  def glTexSubImage3D(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int, arg7: int, arg8: int, arg9: int, arg10: int) -> None: ...

  @staticmethod
  def nglDrawRangeElements(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int) -> None: ...

  @staticmethod
  def nglTexImage3D(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int, arg7: int, arg8: int, arg9: int) -> None: ...

  @staticmethod
  def nglTexSubImage3D(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int, arg7: int, arg8: int, arg9: int, arg10: int) -> None: ...


class GL13(GL12):

  GL_ACTIVE_TEXTURE: int

  GL_ADD_SIGNED: int

  GL_CLAMP_TO_BORDER: int

  GL_CLIENT_ACTIVE_TEXTURE: int

  GL_COMBINE: int

  GL_COMBINE_ALPHA: int

  GL_COMBINE_RGB: int

  GL_COMPRESSED_ALPHA: int

  GL_COMPRESSED_INTENSITY: int

  GL_COMPRESSED_LUMINANCE: int

  GL_COMPRESSED_LUMINANCE_ALPHA: int

  GL_COMPRESSED_RGB: int

  GL_COMPRESSED_RGBA: int

  GL_COMPRESSED_TEXTURE_FORMATS: int

  GL_CONSTANT: int

  GL_DOT3_RGB: int

  GL_DOT3_RGBA: int

  GL_INTERPOLATE: int

  GL_MAX_CUBE_MAP_TEXTURE_SIZE: int

  GL_MAX_TEXTURE_UNITS: int

  GL_MULTISAMPLE: int

  GL_MULTISAMPLE_BIT: int

  GL_NORMAL_MAP: int

  GL_NUM_COMPRESSED_TEXTURE_FORMATS: int

  GL_OPERAND0_ALPHA: int

  GL_OPERAND0_RGB: int

  GL_OPERAND1_ALPHA: int

  GL_OPERAND1_RGB: int

  GL_OPERAND2_ALPHA: int

  GL_OPERAND2_RGB: int

  GL_PREVIOUS: int

  GL_PRIMARY_COLOR: int

  GL_PROXY_TEXTURE_CUBE_MAP: int

  GL_REFLECTION_MAP: int

  GL_RGB_SCALE: int

  GL_SAMPLE_ALPHA_TO_COVERAGE: int

  GL_SAMPLE_ALPHA_TO_ONE: int

  GL_SAMPLE_BUFFERS: int

  GL_SAMPLE_COVERAGE: int

  GL_SAMPLE_COVERAGE_INVERT: int

  GL_SAMPLE_COVERAGE_VALUE: int

  GL_SAMPLES: int

  GL_SOURCE0_ALPHA: int

  GL_SOURCE0_RGB: int

  GL_SOURCE1_ALPHA: int

  GL_SOURCE1_RGB: int

  GL_SOURCE2_ALPHA: int

  GL_SOURCE2_RGB: int

  GL_SUBTRACT: int

  GL_TEXTURE0: int

  GL_TEXTURE1: int

  GL_TEXTURE10: int

  GL_TEXTURE11: int

  GL_TEXTURE12: int

  GL_TEXTURE13: int

  GL_TEXTURE14: int

  GL_TEXTURE15: int

  GL_TEXTURE16: int

  GL_TEXTURE17: int

  GL_TEXTURE18: int

  GL_TEXTURE19: int

  GL_TEXTURE2: int

  GL_TEXTURE20: int

  GL_TEXTURE21: int

  GL_TEXTURE22: int

  GL_TEXTURE23: int

  GL_TEXTURE24: int

  GL_TEXTURE25: int

  GL_TEXTURE26: int

  GL_TEXTURE27: int

  GL_TEXTURE28: int

  GL_TEXTURE29: int

  GL_TEXTURE3: int

  GL_TEXTURE30: int

  GL_TEXTURE31: int

  GL_TEXTURE4: int

  GL_TEXTURE5: int

  GL_TEXTURE6: int

  GL_TEXTURE7: int

  GL_TEXTURE8: int

  GL_TEXTURE9: int

  GL_TEXTURE_BINDING_CUBE_MAP: int

  GL_TEXTURE_COMPRESSED: int

  GL_TEXTURE_COMPRESSED_IMAGE_SIZE: int

  GL_TEXTURE_COMPRESSION_HINT: int

  GL_TEXTURE_CUBE_MAP: int

  GL_TEXTURE_CUBE_MAP_NEGATIVE_X: int

  GL_TEXTURE_CUBE_MAP_NEGATIVE_Y: int

  GL_TEXTURE_CUBE_MAP_NEGATIVE_Z: int

  GL_TEXTURE_CUBE_MAP_POSITIVE_X: int

  GL_TEXTURE_CUBE_MAP_POSITIVE_Y: int

  GL_TEXTURE_CUBE_MAP_POSITIVE_Z: int

  GL_TRANSPOSE_COLOR_MATRIX: int

  GL_TRANSPOSE_MODELVIEW_MATRIX: int

  GL_TRANSPOSE_PROJECTION_MATRIX: int

  GL_TRANSPOSE_TEXTURE_MATRIX: int

  @staticmethod
  def glActiveTexture(arg0: int) -> None: ...

  @staticmethod
  def glClientActiveTexture(arg0: int) -> None: ...

  @staticmethod
  @overload
  def glCompressedTexImage1D(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: ByteBuffer) -> None: ...

  @staticmethod
  @overload
  def glCompressedTexImage1D(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int) -> None: ...

  @staticmethod
  @overload
  def glCompressedTexImage2D(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: ByteBuffer) -> None: ...

  @staticmethod
  @overload
  def glCompressedTexImage2D(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int, arg7: int) -> None: ...

  @staticmethod
  @overload
  def glCompressedTexImage3D(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int, arg7: ByteBuffer) -> None: ...

  @staticmethod
  @overload
  def glCompressedTexImage3D(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int, arg7: int, arg8: int) -> None: ...

  @staticmethod
  @overload
  def glCompressedTexSubImage1D(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: ByteBuffer) -> None: ...

  @staticmethod
  @overload
  def glCompressedTexSubImage1D(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int) -> None: ...

  @staticmethod
  @overload
  def glCompressedTexSubImage2D(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int, arg7: ByteBuffer) -> None: ...

  @staticmethod
  @overload
  def glCompressedTexSubImage2D(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int, arg7: int, arg8: int) -> None: ...

  @staticmethod
  @overload
  def glCompressedTexSubImage3D(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int, arg7: int, arg8: int, arg9: ByteBuffer) -> None: ...

  @staticmethod
  @overload
  def glCompressedTexSubImage3D(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int, arg7: int, arg8: int, arg9: int, arg10: int) -> None: ...

  @staticmethod
  @overload
  def glGetCompressedTexImage(arg0: int, arg1: int, arg2: ByteBuffer) -> None: ...

  @staticmethod
  @overload
  def glGetCompressedTexImage(arg0: int, arg1: int, arg2: int) -> None: ...

  @staticmethod
  @overload
  def glLoadTransposeMatrixd(arg0: list[float]) -> None: ...

  @staticmethod
  @overload
  def glLoadTransposeMatrixd(arg0: DoubleBuffer) -> None: ...

  @staticmethod
  @overload
  def glLoadTransposeMatrixf(arg0: list[float]) -> None: ...

  @staticmethod
  @overload
  def glLoadTransposeMatrixf(arg0: FloatBuffer) -> None: ...

  @staticmethod
  @overload
  def glMultTransposeMatrixd(arg0: list[float]) -> None: ...

  @staticmethod
  @overload
  def glMultTransposeMatrixd(arg0: DoubleBuffer) -> None: ...

  @staticmethod
  @overload
  def glMultTransposeMatrixf(arg0: list[float]) -> None: ...

  @staticmethod
  @overload
  def glMultTransposeMatrixf(arg0: FloatBuffer) -> None: ...

  @staticmethod
  def glMultiTexCoord1d(arg0: int, arg1: float) -> None: ...

  @staticmethod
  @overload
  def glMultiTexCoord1dv(arg0: int, arg1: list[float]) -> None: ...

  @staticmethod
  @overload
  def glMultiTexCoord1dv(arg0: int, arg1: DoubleBuffer) -> None: ...

  @staticmethod
  def glMultiTexCoord1f(arg0: int, arg1: float) -> None: ...

  @staticmethod
  @overload
  def glMultiTexCoord1fv(arg0: int, arg1: list[float]) -> None: ...

  @staticmethod
  @overload
  def glMultiTexCoord1fv(arg0: int, arg1: FloatBuffer) -> None: ...

  @staticmethod
  def glMultiTexCoord1i(arg0: int, arg1: int) -> None: ...

  @staticmethod
  @overload
  def glMultiTexCoord1iv(arg0: int, arg1: list[int]) -> None: ...

  @staticmethod
  @overload
  def glMultiTexCoord1iv(arg0: int, arg1: IntBuffer) -> None: ...

  @staticmethod
  def glMultiTexCoord1s(arg0: int, arg1: int) -> None: ...

  @staticmethod
  @overload
  def glMultiTexCoord1sv(arg0: int, arg1: list[int]) -> None: ...

  @staticmethod
  @overload
  def glMultiTexCoord1sv(arg0: int, arg1: ShortBuffer) -> None: ...

  @staticmethod
  def glMultiTexCoord2d(arg0: int, arg1: float, arg2: float) -> None: ...

  @staticmethod
  @overload
  def glMultiTexCoord2dv(arg0: int, arg1: list[float]) -> None: ...

  @staticmethod
  @overload
  def glMultiTexCoord2dv(arg0: int, arg1: DoubleBuffer) -> None: ...

  @staticmethod
  def glMultiTexCoord2f(arg0: int, arg1: float, arg2: float) -> None: ...

  @staticmethod
  @overload
  def glMultiTexCoord2fv(arg0: int, arg1: list[float]) -> None: ...

  @staticmethod
  @overload
  def glMultiTexCoord2fv(arg0: int, arg1: FloatBuffer) -> None: ...

  @staticmethod
  def glMultiTexCoord2i(arg0: int, arg1: int, arg2: int) -> None: ...

  @staticmethod
  @overload
  def glMultiTexCoord2iv(arg0: int, arg1: list[int]) -> None: ...

  @staticmethod
  @overload
  def glMultiTexCoord2iv(arg0: int, arg1: IntBuffer) -> None: ...

  @staticmethod
  def glMultiTexCoord2s(arg0: int, arg1: int, arg2: int) -> None: ...

  @staticmethod
  @overload
  def glMultiTexCoord2sv(arg0: int, arg1: list[int]) -> None: ...

  @staticmethod
  @overload
  def glMultiTexCoord2sv(arg0: int, arg1: ShortBuffer) -> None: ...

  @staticmethod
  def glMultiTexCoord3d(arg0: int, arg1: float, arg2: float, arg3: float) -> None: ...

  @staticmethod
  @overload
  def glMultiTexCoord3dv(arg0: int, arg1: list[float]) -> None: ...

  @staticmethod
  @overload
  def glMultiTexCoord3dv(arg0: int, arg1: DoubleBuffer) -> None: ...

  @staticmethod
  def glMultiTexCoord3f(arg0: int, arg1: float, arg2: float, arg3: float) -> None: ...

  @staticmethod
  @overload
  def glMultiTexCoord3fv(arg0: int, arg1: list[float]) -> None: ...

  @staticmethod
  @overload
  def glMultiTexCoord3fv(arg0: int, arg1: FloatBuffer) -> None: ...

  @staticmethod
  def glMultiTexCoord3i(arg0: int, arg1: int, arg2: int, arg3: int) -> None: ...

  @staticmethod
  @overload
  def glMultiTexCoord3iv(arg0: int, arg1: list[int]) -> None: ...

  @staticmethod
  @overload
  def glMultiTexCoord3iv(arg0: int, arg1: IntBuffer) -> None: ...

  @staticmethod
  def glMultiTexCoord3s(arg0: int, arg1: int, arg2: int, arg3: int) -> None: ...

  @staticmethod
  @overload
  def glMultiTexCoord3sv(arg0: int, arg1: list[int]) -> None: ...

  @staticmethod
  @overload
  def glMultiTexCoord3sv(arg0: int, arg1: ShortBuffer) -> None: ...

  @staticmethod
  def glMultiTexCoord4d(arg0: int, arg1: float, arg2: float, arg3: float, arg4: float) -> None: ...

  @staticmethod
  @overload
  def glMultiTexCoord4dv(arg0: int, arg1: list[float]) -> None: ...

  @staticmethod
  @overload
  def glMultiTexCoord4dv(arg0: int, arg1: DoubleBuffer) -> None: ...

  @staticmethod
  def glMultiTexCoord4f(arg0: int, arg1: float, arg2: float, arg3: float, arg4: float) -> None: ...

  @staticmethod
  @overload
  def glMultiTexCoord4fv(arg0: int, arg1: list[float]) -> None: ...

  @staticmethod
  @overload
  def glMultiTexCoord4fv(arg0: int, arg1: FloatBuffer) -> None: ...

  @staticmethod
  def glMultiTexCoord4i(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int) -> None: ...

  @staticmethod
  @overload
  def glMultiTexCoord4iv(arg0: int, arg1: list[int]) -> None: ...

  @staticmethod
  @overload
  def glMultiTexCoord4iv(arg0: int, arg1: IntBuffer) -> None: ...

  @staticmethod
  def glMultiTexCoord4s(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int) -> None: ...

  @staticmethod
  @overload
  def glMultiTexCoord4sv(arg0: int, arg1: list[int]) -> None: ...

  @staticmethod
  @overload
  def glMultiTexCoord4sv(arg0: int, arg1: ShortBuffer) -> None: ...

  @staticmethod
  def glSampleCoverage(arg0: float, arg1: bool) -> None: ...

  @staticmethod
  def nglCompressedTexImage1D(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int) -> None: ...

  @staticmethod
  def nglCompressedTexImage2D(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int, arg7: int) -> None: ...

  @staticmethod
  def nglCompressedTexImage3D(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int, arg7: int, arg8: int) -> None: ...

  @staticmethod
  def nglCompressedTexSubImage1D(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int) -> None: ...

  @staticmethod
  def nglCompressedTexSubImage2D(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int, arg7: int, arg8: int) -> None: ...

  @staticmethod
  def nglCompressedTexSubImage3D(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int, arg7: int, arg8: int, arg9: int, arg10: int) -> None: ...

  @staticmethod
  def nglGetCompressedTexImage(arg0: int, arg1: int, arg2: int) -> None: ...

  @staticmethod
  def nglLoadTransposeMatrixd(arg0: int) -> None: ...

  @staticmethod
  def nglLoadTransposeMatrixf(arg0: int) -> None: ...

  @staticmethod
  def nglMultTransposeMatrixd(arg0: int) -> None: ...

  @staticmethod
  def nglMultTransposeMatrixf(arg0: int) -> None: ...

  @staticmethod
  def nglMultiTexCoord1dv(arg0: int, arg1: int) -> None: ...

  @staticmethod
  def nglMultiTexCoord1fv(arg0: int, arg1: int) -> None: ...

  @staticmethod
  def nglMultiTexCoord1iv(arg0: int, arg1: int) -> None: ...

  @staticmethod
  def nglMultiTexCoord1sv(arg0: int, arg1: int) -> None: ...

  @staticmethod
  def nglMultiTexCoord2dv(arg0: int, arg1: int) -> None: ...

  @staticmethod
  def nglMultiTexCoord2fv(arg0: int, arg1: int) -> None: ...

  @staticmethod
  def nglMultiTexCoord2iv(arg0: int, arg1: int) -> None: ...

  @staticmethod
  def nglMultiTexCoord2sv(arg0: int, arg1: int) -> None: ...

  @staticmethod
  def nglMultiTexCoord3dv(arg0: int, arg1: int) -> None: ...

  @staticmethod
  def nglMultiTexCoord3fv(arg0: int, arg1: int) -> None: ...

  @staticmethod
  def nglMultiTexCoord3iv(arg0: int, arg1: int) -> None: ...

  @staticmethod
  def nglMultiTexCoord3sv(arg0: int, arg1: int) -> None: ...

  @staticmethod
  def nglMultiTexCoord4dv(arg0: int, arg1: int) -> None: ...

  @staticmethod
  def nglMultiTexCoord4fv(arg0: int, arg1: int) -> None: ...

  @staticmethod
  def nglMultiTexCoord4iv(arg0: int, arg1: int) -> None: ...

  @staticmethod
  def nglMultiTexCoord4sv(arg0: int, arg1: int) -> None: ...


class GL13C(GL12C):

  GL_ACTIVE_TEXTURE: int

  GL_CLAMP_TO_BORDER: int

  GL_COMPRESSED_RGB: int

  GL_COMPRESSED_RGBA: int

  GL_COMPRESSED_TEXTURE_FORMATS: int

  GL_MAX_CUBE_MAP_TEXTURE_SIZE: int

  GL_MULTISAMPLE: int

  GL_NUM_COMPRESSED_TEXTURE_FORMATS: int

  GL_PROXY_TEXTURE_CUBE_MAP: int

  GL_SAMPLE_ALPHA_TO_COVERAGE: int

  GL_SAMPLE_ALPHA_TO_ONE: int

  GL_SAMPLE_BUFFERS: int

  GL_SAMPLE_COVERAGE: int

  GL_SAMPLE_COVERAGE_INVERT: int

  GL_SAMPLE_COVERAGE_VALUE: int

  GL_SAMPLES: int

  GL_TEXTURE0: int

  GL_TEXTURE1: int

  GL_TEXTURE10: int

  GL_TEXTURE11: int

  GL_TEXTURE12: int

  GL_TEXTURE13: int

  GL_TEXTURE14: int

  GL_TEXTURE15: int

  GL_TEXTURE16: int

  GL_TEXTURE17: int

  GL_TEXTURE18: int

  GL_TEXTURE19: int

  GL_TEXTURE2: int

  GL_TEXTURE20: int

  GL_TEXTURE21: int

  GL_TEXTURE22: int

  GL_TEXTURE23: int

  GL_TEXTURE24: int

  GL_TEXTURE25: int

  GL_TEXTURE26: int

  GL_TEXTURE27: int

  GL_TEXTURE28: int

  GL_TEXTURE29: int

  GL_TEXTURE3: int

  GL_TEXTURE30: int

  GL_TEXTURE31: int

  GL_TEXTURE4: int

  GL_TEXTURE5: int

  GL_TEXTURE6: int

  GL_TEXTURE7: int

  GL_TEXTURE8: int

  GL_TEXTURE9: int

  GL_TEXTURE_BINDING_CUBE_MAP: int

  GL_TEXTURE_COMPRESSED: int

  GL_TEXTURE_COMPRESSED_IMAGE_SIZE: int

  GL_TEXTURE_COMPRESSION_HINT: int

  GL_TEXTURE_CUBE_MAP: int

  GL_TEXTURE_CUBE_MAP_NEGATIVE_X: int

  GL_TEXTURE_CUBE_MAP_NEGATIVE_Y: int

  GL_TEXTURE_CUBE_MAP_NEGATIVE_Z: int

  GL_TEXTURE_CUBE_MAP_POSITIVE_X: int

  GL_TEXTURE_CUBE_MAP_POSITIVE_Y: int

  GL_TEXTURE_CUBE_MAP_POSITIVE_Z: int

  @staticmethod
  def glActiveTexture(arg0: int) -> None: ...

  @staticmethod
  @overload
  def glCompressedTexImage1D(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: ByteBuffer) -> None: ...

  @staticmethod
  @overload
  def glCompressedTexImage1D(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int) -> None: ...

  @staticmethod
  @overload
  def glCompressedTexImage2D(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: ByteBuffer) -> None: ...

  @staticmethod
  @overload
  def glCompressedTexImage2D(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int, arg7: int) -> None: ...

  @staticmethod
  @overload
  def glCompressedTexImage3D(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int, arg7: ByteBuffer) -> None: ...

  @staticmethod
  @overload
  def glCompressedTexImage3D(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int, arg7: int, arg8: int) -> None: ...

  @staticmethod
  @overload
  def glCompressedTexSubImage1D(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: ByteBuffer) -> None: ...

  @staticmethod
  @overload
  def glCompressedTexSubImage1D(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int) -> None: ...

  @staticmethod
  @overload
  def glCompressedTexSubImage2D(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int, arg7: ByteBuffer) -> None: ...

  @staticmethod
  @overload
  def glCompressedTexSubImage2D(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int, arg7: int, arg8: int) -> None: ...

  @staticmethod
  @overload
  def glCompressedTexSubImage3D(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int, arg7: int, arg8: int, arg9: ByteBuffer) -> None: ...

  @staticmethod
  @overload
  def glCompressedTexSubImage3D(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int, arg7: int, arg8: int, arg9: int, arg10: int) -> None: ...

  @staticmethod
  @overload
  def glGetCompressedTexImage(arg0: int, arg1: int, arg2: ByteBuffer) -> None: ...

  @staticmethod
  @overload
  def glGetCompressedTexImage(arg0: int, arg1: int, arg2: int) -> None: ...

  @staticmethod
  def glSampleCoverage(arg0: float, arg1: bool) -> None: ...

  @staticmethod
  def nglCompressedTexImage1D(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int) -> None: ...

  @staticmethod
  def nglCompressedTexImage2D(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int, arg7: int) -> None: ...

  @staticmethod
  def nglCompressedTexImage3D(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int, arg7: int, arg8: int) -> None: ...

  @staticmethod
  def nglCompressedTexSubImage1D(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int) -> None: ...

  @staticmethod
  def nglCompressedTexSubImage2D(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int, arg7: int, arg8: int) -> None: ...

  @staticmethod
  def nglCompressedTexSubImage3D(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int, arg7: int, arg8: int, arg9: int, arg10: int) -> None: ...

  @staticmethod
  def nglGetCompressedTexImage(arg0: int, arg1: int, arg2: int) -> None: ...


class GL14(GL13):

  GL_BLEND_DST_ALPHA: int

  GL_BLEND_DST_RGB: int

  GL_BLEND_SRC_ALPHA: int

  GL_BLEND_SRC_RGB: int

  GL_COLOR_SUM: int

  GL_COMPARE_R_TO_TEXTURE: int

  GL_CONSTANT_ALPHA: int

  GL_CONSTANT_COLOR: int

  GL_CURRENT_FOG_COORDINATE: int

  GL_CURRENT_SECONDARY_COLOR: int

  GL_DECR_WRAP: int

  GL_DEPTH_COMPONENT16: int

  GL_DEPTH_COMPONENT24: int

  GL_DEPTH_COMPONENT32: int

  GL_DEPTH_TEXTURE_MODE: int

  GL_FOG_COORDINATE: int

  GL_FOG_COORDINATE_ARRAY: int

  GL_FOG_COORDINATE_ARRAY_POINTER: int

  GL_FOG_COORDINATE_ARRAY_STRIDE: int

  GL_FOG_COORDINATE_ARRAY_TYPE: int

  GL_FOG_COORDINATE_SOURCE: int

  GL_FRAGMENT_DEPTH: int

  GL_FUNC_ADD: int

  GL_FUNC_REVERSE_SUBTRACT: int

  GL_FUNC_SUBTRACT: int

  GL_GENERATE_MIPMAP: int

  GL_GENERATE_MIPMAP_HINT: int

  GL_INCR_WRAP: int

  GL_MAX: int

  GL_MAX_TEXTURE_LOD_BIAS: int

  GL_MIN: int

  GL_MIRRORED_REPEAT: int

  GL_ONE_MINUS_CONSTANT_ALPHA: int

  GL_ONE_MINUS_CONSTANT_COLOR: int

  GL_POINT_DISTANCE_ATTENUATION: int

  GL_POINT_FADE_THRESHOLD_SIZE: int

  GL_POINT_SIZE_MAX: int

  GL_POINT_SIZE_MIN: int

  GL_SECONDARY_COLOR_ARRAY: int

  GL_SECONDARY_COLOR_ARRAY_POINTER: int

  GL_SECONDARY_COLOR_ARRAY_SIZE: int

  GL_SECONDARY_COLOR_ARRAY_STRIDE: int

  GL_SECONDARY_COLOR_ARRAY_TYPE: int

  GL_TEXTURE_COMPARE_FUNC: int

  GL_TEXTURE_COMPARE_MODE: int

  GL_TEXTURE_DEPTH_SIZE: int

  GL_TEXTURE_FILTER_CONTROL: int

  GL_TEXTURE_LOD_BIAS: int

  @staticmethod
  def glBlendColor(arg0: float, arg1: float, arg2: float, arg3: float) -> None: ...

  @staticmethod
  def glBlendEquation(arg0: int) -> None: ...

  @staticmethod
  def glBlendFuncSeparate(arg0: int, arg1: int, arg2: int, arg3: int) -> None: ...

  @staticmethod
  @overload
  def glFogCoordPointer(arg0: int, arg1: int, arg2: ByteBuffer) -> None: ...

  @staticmethod
  @overload
  def glFogCoordPointer(arg0: int, arg1: int, arg2: FloatBuffer) -> None: ...

  @staticmethod
  @overload
  def glFogCoordPointer(arg0: int, arg1: int, arg2: ShortBuffer) -> None: ...

  @staticmethod
  @overload
  def glFogCoordPointer(arg0: int, arg1: int, arg2: int) -> None: ...

  @staticmethod
  def glFogCoordd(arg0: float) -> None: ...

  @staticmethod
  @overload
  def glFogCoorddv(arg0: list[float]) -> None: ...

  @staticmethod
  @overload
  def glFogCoorddv(arg0: DoubleBuffer) -> None: ...

  @staticmethod
  def glFogCoordf(arg0: float) -> None: ...

  @staticmethod
  @overload
  def glFogCoordfv(arg0: list[float]) -> None: ...

  @staticmethod
  @overload
  def glFogCoordfv(arg0: FloatBuffer) -> None: ...

  @staticmethod
  @overload
  def glMultiDrawArrays(arg0: int, arg1: list[int], arg2: list[int]) -> None: ...

  @staticmethod
  @overload
  def glMultiDrawArrays(arg0: int, arg1: IntBuffer, arg2: IntBuffer) -> None: ...

  @staticmethod
  @overload
  def glMultiDrawElements(arg0: int, arg1: list[int], arg2: int, arg3: PointerBuffer) -> None: ...

  @staticmethod
  @overload
  def glMultiDrawElements(arg0: int, arg1: IntBuffer, arg2: int, arg3: PointerBuffer) -> None: ...

  @staticmethod
  def glPointParameterf(arg0: int, arg1: float) -> None: ...

  @staticmethod
  @overload
  def glPointParameterfv(arg0: int, arg1: list[float]) -> None: ...

  @staticmethod
  @overload
  def glPointParameterfv(arg0: int, arg1: FloatBuffer) -> None: ...

  @staticmethod
  def glPointParameteri(arg0: int, arg1: int) -> None: ...

  @staticmethod
  @overload
  def glPointParameteriv(arg0: int, arg1: list[int]) -> None: ...

  @staticmethod
  @overload
  def glPointParameteriv(arg0: int, arg1: IntBuffer) -> None: ...

  @staticmethod
  def glSecondaryColor3b(arg0: int, arg1: int, arg2: int) -> None: ...

  @staticmethod
  def glSecondaryColor3bv(arg0: ByteBuffer) -> None: ...

  @staticmethod
  def glSecondaryColor3d(arg0: float, arg1: float, arg2: float) -> None: ...

  @staticmethod
  @overload
  def glSecondaryColor3dv(arg0: list[float]) -> None: ...

  @staticmethod
  @overload
  def glSecondaryColor3dv(arg0: DoubleBuffer) -> None: ...

  @staticmethod
  def glSecondaryColor3f(arg0: float, arg1: float, arg2: float) -> None: ...

  @staticmethod
  @overload
  def glSecondaryColor3fv(arg0: list[float]) -> None: ...

  @staticmethod
  @overload
  def glSecondaryColor3fv(arg0: FloatBuffer) -> None: ...

  @staticmethod
  def glSecondaryColor3i(arg0: int, arg1: int, arg2: int) -> None: ...

  @staticmethod
  @overload
  def glSecondaryColor3iv(arg0: list[int]) -> None: ...

  @staticmethod
  @overload
  def glSecondaryColor3iv(arg0: IntBuffer) -> None: ...

  @staticmethod
  def glSecondaryColor3s(arg0: int, arg1: int, arg2: int) -> None: ...

  @staticmethod
  @overload
  def glSecondaryColor3sv(arg0: list[int]) -> None: ...

  @staticmethod
  @overload
  def glSecondaryColor3sv(arg0: ShortBuffer) -> None: ...

  @staticmethod
  def glSecondaryColor3ub(arg0: int, arg1: int, arg2: int) -> None: ...

  @staticmethod
  def glSecondaryColor3ubv(arg0: ByteBuffer) -> None: ...

  @staticmethod
  def glSecondaryColor3ui(arg0: int, arg1: int, arg2: int) -> None: ...

  @staticmethod
  @overload
  def glSecondaryColor3uiv(arg0: list[int]) -> None: ...

  @staticmethod
  @overload
  def glSecondaryColor3uiv(arg0: IntBuffer) -> None: ...

  @staticmethod
  def glSecondaryColor3us(arg0: int, arg1: int, arg2: int) -> None: ...

  @staticmethod
  @overload
  def glSecondaryColor3usv(arg0: list[int]) -> None: ...

  @staticmethod
  @overload
  def glSecondaryColor3usv(arg0: ShortBuffer) -> None: ...

  @staticmethod
  @overload
  def glSecondaryColorPointer(arg0: int, arg1: int, arg2: int, arg3: ByteBuffer) -> None: ...

  @staticmethod
  @overload
  def glSecondaryColorPointer(arg0: int, arg1: int, arg2: int, arg3: FloatBuffer) -> None: ...

  @staticmethod
  @overload
  def glSecondaryColorPointer(arg0: int, arg1: int, arg2: int, arg3: IntBuffer) -> None: ...

  @staticmethod
  @overload
  def glSecondaryColorPointer(arg0: int, arg1: int, arg2: int, arg3: ShortBuffer) -> None: ...

  @staticmethod
  @overload
  def glSecondaryColorPointer(arg0: int, arg1: int, arg2: int, arg3: int) -> None: ...

  @staticmethod
  def glWindowPos2d(arg0: float, arg1: float) -> None: ...

  @staticmethod
  @overload
  def glWindowPos2dv(arg0: list[float]) -> None: ...

  @staticmethod
  @overload
  def glWindowPos2dv(arg0: DoubleBuffer) -> None: ...

  @staticmethod
  def glWindowPos2f(arg0: float, arg1: float) -> None: ...

  @staticmethod
  @overload
  def glWindowPos2fv(arg0: list[float]) -> None: ...

  @staticmethod
  @overload
  def glWindowPos2fv(arg0: FloatBuffer) -> None: ...

  @staticmethod
  def glWindowPos2i(arg0: int, arg1: int) -> None: ...

  @staticmethod
  @overload
  def glWindowPos2iv(arg0: list[int]) -> None: ...

  @staticmethod
  @overload
  def glWindowPos2iv(arg0: IntBuffer) -> None: ...

  @staticmethod
  def glWindowPos2s(arg0: int, arg1: int) -> None: ...

  @staticmethod
  @overload
  def glWindowPos2sv(arg0: list[int]) -> None: ...

  @staticmethod
  @overload
  def glWindowPos2sv(arg0: ShortBuffer) -> None: ...

  @staticmethod
  def glWindowPos3d(arg0: float, arg1: float, arg2: float) -> None: ...

  @staticmethod
  @overload
  def glWindowPos3dv(arg0: list[float]) -> None: ...

  @staticmethod
  @overload
  def glWindowPos3dv(arg0: DoubleBuffer) -> None: ...

  @staticmethod
  def glWindowPos3f(arg0: float, arg1: float, arg2: float) -> None: ...

  @staticmethod
  @overload
  def glWindowPos3fv(arg0: list[float]) -> None: ...

  @staticmethod
  @overload
  def glWindowPos3fv(arg0: FloatBuffer) -> None: ...

  @staticmethod
  def glWindowPos3i(arg0: int, arg1: int, arg2: int) -> None: ...

  @staticmethod
  @overload
  def glWindowPos3iv(arg0: list[int]) -> None: ...

  @staticmethod
  @overload
  def glWindowPos3iv(arg0: IntBuffer) -> None: ...

  @staticmethod
  def glWindowPos3s(arg0: int, arg1: int, arg2: int) -> None: ...

  @staticmethod
  @overload
  def glWindowPos3sv(arg0: list[int]) -> None: ...

  @staticmethod
  @overload
  def glWindowPos3sv(arg0: ShortBuffer) -> None: ...

  @staticmethod
  def nglFogCoordPointer(arg0: int, arg1: int, arg2: int) -> None: ...

  @staticmethod
  def nglFogCoorddv(arg0: int) -> None: ...

  @staticmethod
  def nglFogCoordfv(arg0: int) -> None: ...

  @staticmethod
  def nglMultiDrawArrays(arg0: int, arg1: int, arg2: int, arg3: int) -> None: ...

  @staticmethod
  def nglMultiDrawElements(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int) -> None: ...

  @staticmethod
  def nglPointParameterfv(arg0: int, arg1: int) -> None: ...

  @staticmethod
  def nglPointParameteriv(arg0: int, arg1: int) -> None: ...

  @staticmethod
  def nglSecondaryColor3bv(arg0: int) -> None: ...

  @staticmethod
  def nglSecondaryColor3dv(arg0: int) -> None: ...

  @staticmethod
  def nglSecondaryColor3fv(arg0: int) -> None: ...

  @staticmethod
  def nglSecondaryColor3iv(arg0: int) -> None: ...

  @staticmethod
  def nglSecondaryColor3sv(arg0: int) -> None: ...

  @staticmethod
  def nglSecondaryColor3ubv(arg0: int) -> None: ...

  @staticmethod
  def nglSecondaryColor3uiv(arg0: int) -> None: ...

  @staticmethod
  def nglSecondaryColor3usv(arg0: int) -> None: ...

  @staticmethod
  def nglSecondaryColorPointer(arg0: int, arg1: int, arg2: int, arg3: int) -> None: ...

  @staticmethod
  def nglWindowPos2dv(arg0: int) -> None: ...

  @staticmethod
  def nglWindowPos2fv(arg0: int) -> None: ...

  @staticmethod
  def nglWindowPos2iv(arg0: int) -> None: ...

  @staticmethod
  def nglWindowPos2sv(arg0: int) -> None: ...

  @staticmethod
  def nglWindowPos3dv(arg0: int) -> None: ...

  @staticmethod
  def nglWindowPos3fv(arg0: int) -> None: ...

  @staticmethod
  def nglWindowPos3iv(arg0: int) -> None: ...

  @staticmethod
  def nglWindowPos3sv(arg0: int) -> None: ...


class GL14C(GL13C):

  GL_BLEND_DST_ALPHA: int

  GL_BLEND_DST_RGB: int

  GL_BLEND_SRC_ALPHA: int

  GL_BLEND_SRC_RGB: int

  GL_CONSTANT_ALPHA: int

  GL_CONSTANT_COLOR: int

  GL_DECR_WRAP: int

  GL_DEPTH_COMPONENT16: int

  GL_DEPTH_COMPONENT24: int

  GL_DEPTH_COMPONENT32: int

  GL_FUNC_ADD: int

  GL_FUNC_REVERSE_SUBTRACT: int

  GL_FUNC_SUBTRACT: int

  GL_INCR_WRAP: int

  GL_MAX: int

  GL_MAX_TEXTURE_LOD_BIAS: int

  GL_MIN: int

  GL_MIRRORED_REPEAT: int

  GL_ONE_MINUS_CONSTANT_ALPHA: int

  GL_ONE_MINUS_CONSTANT_COLOR: int

  GL_POINT_FADE_THRESHOLD_SIZE: int

  GL_TEXTURE_COMPARE_FUNC: int

  GL_TEXTURE_COMPARE_MODE: int

  GL_TEXTURE_DEPTH_SIZE: int

  GL_TEXTURE_LOD_BIAS: int

  @staticmethod
  def glBlendColor(arg0: float, arg1: float, arg2: float, arg3: float) -> None: ...

  @staticmethod
  def glBlendEquation(arg0: int) -> None: ...

  @staticmethod
  def glBlendFuncSeparate(arg0: int, arg1: int, arg2: int, arg3: int) -> None: ...

  @staticmethod
  @overload
  def glMultiDrawArrays(arg0: int, arg1: list[int], arg2: list[int]) -> None: ...

  @staticmethod
  @overload
  def glMultiDrawArrays(arg0: int, arg1: IntBuffer, arg2: IntBuffer) -> None: ...

  @staticmethod
  @overload
  def glMultiDrawElements(arg0: int, arg1: list[int], arg2: int, arg3: PointerBuffer) -> None: ...

  @staticmethod
  @overload
  def glMultiDrawElements(arg0: int, arg1: IntBuffer, arg2: int, arg3: PointerBuffer) -> None: ...

  @staticmethod
  def glPointParameterf(arg0: int, arg1: float) -> None: ...

  @staticmethod
  @overload
  def glPointParameterfv(arg0: int, arg1: list[float]) -> None: ...

  @staticmethod
  @overload
  def glPointParameterfv(arg0: int, arg1: FloatBuffer) -> None: ...

  @staticmethod
  def glPointParameteri(arg0: int, arg1: int) -> None: ...

  @staticmethod
  @overload
  def glPointParameteriv(arg0: int, arg1: list[int]) -> None: ...

  @staticmethod
  @overload
  def glPointParameteriv(arg0: int, arg1: IntBuffer) -> None: ...

  @staticmethod
  def nglMultiDrawArrays(arg0: int, arg1: int, arg2: int, arg3: int) -> None: ...

  @staticmethod
  def nglMultiDrawElements(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int) -> None: ...

  @staticmethod
  def nglPointParameterfv(arg0: int, arg1: int) -> None: ...

  @staticmethod
  def nglPointParameteriv(arg0: int, arg1: int) -> None: ...


class GL15(GL14):

  GL_ARRAY_BUFFER: int

  GL_ARRAY_BUFFER_BINDING: int

  GL_BUFFER_ACCESS: int

  GL_BUFFER_MAP_POINTER: int

  GL_BUFFER_MAPPED: int

  GL_BUFFER_SIZE: int

  GL_BUFFER_USAGE: int

  GL_COLOR_ARRAY_BUFFER_BINDING: int

  GL_CURRENT_FOG_COORD: int

  GL_CURRENT_QUERY: int

  GL_DYNAMIC_COPY: int

  GL_DYNAMIC_DRAW: int

  GL_DYNAMIC_READ: int

  GL_EDGE_FLAG_ARRAY_BUFFER_BINDING: int

  GL_ELEMENT_ARRAY_BUFFER: int

  GL_ELEMENT_ARRAY_BUFFER_BINDING: int

  GL_FOG_COORD: int

  GL_FOG_COORD_ARRAY: int

  GL_FOG_COORD_ARRAY_BUFFER_BINDING: int

  GL_FOG_COORD_ARRAY_POINTER: int

  GL_FOG_COORD_ARRAY_STRIDE: int

  GL_FOG_COORD_ARRAY_TYPE: int

  GL_FOG_COORD_SRC: int

  GL_FOG_COORDINATE_ARRAY_BUFFER_BINDING: int

  GL_INDEX_ARRAY_BUFFER_BINDING: int

  GL_NORMAL_ARRAY_BUFFER_BINDING: int

  GL_QUERY_COUNTER_BITS: int

  GL_QUERY_RESULT: int

  GL_QUERY_RESULT_AVAILABLE: int

  GL_READ_ONLY: int

  GL_READ_WRITE: int

  GL_SAMPLES_PASSED: int

  GL_SECONDARY_COLOR_ARRAY_BUFFER_BINDING: int

  GL_SRC0_ALPHA: int

  GL_SRC0_RGB: int

  GL_SRC1_ALPHA: int

  GL_SRC1_RGB: int

  GL_SRC2_ALPHA: int

  GL_SRC2_RGB: int

  GL_STATIC_COPY: int

  GL_STATIC_DRAW: int

  GL_STATIC_READ: int

  GL_STREAM_COPY: int

  GL_STREAM_DRAW: int

  GL_STREAM_READ: int

  GL_TEXTURE_COORD_ARRAY_BUFFER_BINDING: int

  GL_VERTEX_ARRAY_BUFFER_BINDING: int

  GL_VERTEX_ATTRIB_ARRAY_BUFFER_BINDING: int

  GL_WEIGHT_ARRAY_BUFFER_BINDING: int

  GL_WRITE_ONLY: int

  @staticmethod
  def glBeginQuery(arg0: int, arg1: int) -> None: ...

  @staticmethod
  def glBindBuffer(arg0: int, arg1: int) -> None: ...

  @staticmethod
  @overload
  def glBufferData(arg0: int, arg1: list[float], arg2: int) -> None: ...

  @staticmethod
  @overload
  def glBufferData(arg0: int, arg1: list[float], arg2: int) -> None: ...

  @staticmethod
  @overload
  def glBufferData(arg0: int, arg1: list[int], arg2: int) -> None: ...

  @staticmethod
  @overload
  def glBufferData(arg0: int, arg1: list[int], arg2: int) -> None: ...

  @staticmethod
  @overload
  def glBufferData(arg0: int, arg1: list[int], arg2: int) -> None: ...

  @staticmethod
  @overload
  def glBufferData(arg0: int, arg1: ByteBuffer, arg2: int) -> None: ...

  @staticmethod
  @overload
  def glBufferData(arg0: int, arg1: DoubleBuffer, arg2: int) -> None: ...

  @staticmethod
  @overload
  def glBufferData(arg0: int, arg1: FloatBuffer, arg2: int) -> None: ...

  @staticmethod
  @overload
  def glBufferData(arg0: int, arg1: IntBuffer, arg2: int) -> None: ...

  @staticmethod
  @overload
  def glBufferData(arg0: int, arg1: LongBuffer, arg2: int) -> None: ...

  @staticmethod
  @overload
  def glBufferData(arg0: int, arg1: ShortBuffer, arg2: int) -> None: ...

  @staticmethod
  @overload
  def glBufferData(arg0: int, arg1: int, arg2: int) -> None: ...

  @staticmethod
  @overload
  def glBufferSubData(arg0: int, arg1: int, arg2: list[float]) -> None: ...

  @staticmethod
  @overload
  def glBufferSubData(arg0: int, arg1: int, arg2: list[float]) -> None: ...

  @staticmethod
  @overload
  def glBufferSubData(arg0: int, arg1: int, arg2: list[int]) -> None: ...

  @staticmethod
  @overload
  def glBufferSubData(arg0: int, arg1: int, arg2: list[int]) -> None: ...

  @staticmethod
  @overload
  def glBufferSubData(arg0: int, arg1: int, arg2: list[int]) -> None: ...

  @staticmethod
  @overload
  def glBufferSubData(arg0: int, arg1: int, arg2: ByteBuffer) -> None: ...

  @staticmethod
  @overload
  def glBufferSubData(arg0: int, arg1: int, arg2: DoubleBuffer) -> None: ...

  @staticmethod
  @overload
  def glBufferSubData(arg0: int, arg1: int, arg2: FloatBuffer) -> None: ...

  @staticmethod
  @overload
  def glBufferSubData(arg0: int, arg1: int, arg2: IntBuffer) -> None: ...

  @staticmethod
  @overload
  def glBufferSubData(arg0: int, arg1: int, arg2: LongBuffer) -> None: ...

  @staticmethod
  @overload
  def glBufferSubData(arg0: int, arg1: int, arg2: ShortBuffer) -> None: ...

  @staticmethod
  @overload
  def glDeleteBuffers(arg0: list[int]) -> None: ...

  @staticmethod
  @overload
  def glDeleteBuffers(arg0: int) -> None: ...

  @staticmethod
  @overload
  def glDeleteBuffers(arg0: IntBuffer) -> None: ...

  @staticmethod
  @overload
  def glDeleteQueries(arg0: list[int]) -> None: ...

  @staticmethod
  @overload
  def glDeleteQueries(arg0: int) -> None: ...

  @staticmethod
  @overload
  def glDeleteQueries(arg0: IntBuffer) -> None: ...

  @staticmethod
  def glEndQuery(arg0: int) -> None: ...

  @staticmethod
  @overload
  def glGenBuffers() -> int: ...

  @staticmethod
  @overload
  def glGenBuffers(arg0: list[int]) -> None: ...

  @staticmethod
  @overload
  def glGenBuffers(arg0: IntBuffer) -> None: ...

  @staticmethod
  @overload
  def glGenQueries() -> int: ...

  @staticmethod
  @overload
  def glGenQueries(arg0: list[int]) -> None: ...

  @staticmethod
  @overload
  def glGenQueries(arg0: IntBuffer) -> None: ...

  @staticmethod
  def glGetBufferParameteri(arg0: int, arg1: int) -> int: ...

  @staticmethod
  @overload
  def glGetBufferParameteriv(arg0: int, arg1: int, arg2: list[int]) -> None: ...

  @staticmethod
  @overload
  def glGetBufferParameteriv(arg0: int, arg1: int, arg2: IntBuffer) -> None: ...

  @staticmethod
  def glGetBufferPointer(arg0: int, arg1: int) -> int: ...

  @staticmethod
  def glGetBufferPointerv(arg0: int, arg1: int, arg2: PointerBuffer) -> None: ...

  @staticmethod
  @overload
  def glGetBufferSubData(arg0: int, arg1: int, arg2: list[float]) -> None: ...

  @staticmethod
  @overload
  def glGetBufferSubData(arg0: int, arg1: int, arg2: list[float]) -> None: ...

  @staticmethod
  @overload
  def glGetBufferSubData(arg0: int, arg1: int, arg2: list[int]) -> None: ...

  @staticmethod
  @overload
  def glGetBufferSubData(arg0: int, arg1: int, arg2: list[int]) -> None: ...

  @staticmethod
  @overload
  def glGetBufferSubData(arg0: int, arg1: int, arg2: list[int]) -> None: ...

  @staticmethod
  @overload
  def glGetBufferSubData(arg0: int, arg1: int, arg2: ByteBuffer) -> None: ...

  @staticmethod
  @overload
  def glGetBufferSubData(arg0: int, arg1: int, arg2: DoubleBuffer) -> None: ...

  @staticmethod
  @overload
  def glGetBufferSubData(arg0: int, arg1: int, arg2: FloatBuffer) -> None: ...

  @staticmethod
  @overload
  def glGetBufferSubData(arg0: int, arg1: int, arg2: IntBuffer) -> None: ...

  @staticmethod
  @overload
  def glGetBufferSubData(arg0: int, arg1: int, arg2: LongBuffer) -> None: ...

  @staticmethod
  @overload
  def glGetBufferSubData(arg0: int, arg1: int, arg2: ShortBuffer) -> None: ...

  @staticmethod
  def glGetQueryObjecti(arg0: int, arg1: int) -> int: ...

  @staticmethod
  @overload
  def glGetQueryObjectiv(arg0: int, arg1: int, arg2: list[int]) -> None: ...

  @staticmethod
  @overload
  def glGetQueryObjectiv(arg0: int, arg1: int, arg2: IntBuffer) -> None: ...

  @staticmethod
  def glGetQueryObjectui(arg0: int, arg1: int) -> int: ...

  @staticmethod
  @overload
  def glGetQueryObjectuiv(arg0: int, arg1: int, arg2: list[int]) -> None: ...

  @staticmethod
  @overload
  def glGetQueryObjectuiv(arg0: int, arg1: int, arg2: IntBuffer) -> None: ...

  @staticmethod
  def glGetQueryi(arg0: int, arg1: int) -> int: ...

  @staticmethod
  @overload
  def glGetQueryiv(arg0: int, arg1: int, arg2: list[int]) -> None: ...

  @staticmethod
  @overload
  def glGetQueryiv(arg0: int, arg1: int, arg2: IntBuffer) -> None: ...

  @staticmethod
  def glIsBuffer(arg0: int) -> bool: ...

  @staticmethod
  def glIsQuery(arg0: int) -> bool: ...

  @staticmethod
  @overload
  def glMapBuffer(arg0: int, arg1: int) -> ByteBuffer: ...

  @staticmethod
  @overload
  def glMapBuffer(arg0: int, arg1: int, arg2: ByteBuffer) -> ByteBuffer: ...

  @staticmethod
  @overload
  def glMapBuffer(arg0: int, arg1: int, arg2: int, arg3: ByteBuffer) -> ByteBuffer: ...

  @staticmethod
  def glUnmapBuffer(arg0: int) -> bool: ...

  @staticmethod
  def nglBufferData(arg0: int, arg1: int, arg2: int, arg3: int) -> None: ...

  @staticmethod
  def nglBufferSubData(arg0: int, arg1: int, arg2: int, arg3: int) -> None: ...

  @staticmethod
  def nglDeleteBuffers(arg0: int, arg1: int) -> None: ...

  @staticmethod
  def nglDeleteQueries(arg0: int, arg1: int) -> None: ...

  @staticmethod
  def nglGenBuffers(arg0: int, arg1: int) -> None: ...

  @staticmethod
  def nglGenQueries(arg0: int, arg1: int) -> None: ...

  @staticmethod
  def nglGetBufferParameteriv(arg0: int, arg1: int, arg2: int) -> None: ...

  @staticmethod
  def nglGetBufferPointerv(arg0: int, arg1: int, arg2: int) -> None: ...

  @staticmethod
  def nglGetBufferSubData(arg0: int, arg1: int, arg2: int, arg3: int) -> None: ...

  @staticmethod
  def nglGetQueryObjectiv(arg0: int, arg1: int, arg2: int) -> None: ...

  @staticmethod
  def nglGetQueryObjectuiv(arg0: int, arg1: int, arg2: int) -> None: ...

  @staticmethod
  def nglGetQueryiv(arg0: int, arg1: int, arg2: int) -> None: ...

  @staticmethod
  def nglMapBuffer(arg0: int, arg1: int) -> int: ...


class GL15C(GL14C):

  GL_ARRAY_BUFFER: int

  GL_ARRAY_BUFFER_BINDING: int

  GL_BUFFER_ACCESS: int

  GL_BUFFER_MAP_POINTER: int

  GL_BUFFER_MAPPED: int

  GL_BUFFER_SIZE: int

  GL_BUFFER_USAGE: int

  GL_CURRENT_QUERY: int

  GL_DYNAMIC_COPY: int

  GL_DYNAMIC_DRAW: int

  GL_DYNAMIC_READ: int

  GL_ELEMENT_ARRAY_BUFFER: int

  GL_ELEMENT_ARRAY_BUFFER_BINDING: int

  GL_QUERY_COUNTER_BITS: int

  GL_QUERY_RESULT: int

  GL_QUERY_RESULT_AVAILABLE: int

  GL_READ_ONLY: int

  GL_READ_WRITE: int

  GL_SAMPLES_PASSED: int

  GL_SRC1_ALPHA: int

  GL_STATIC_COPY: int

  GL_STATIC_DRAW: int

  GL_STATIC_READ: int

  GL_STREAM_COPY: int

  GL_STREAM_DRAW: int

  GL_STREAM_READ: int

  GL_VERTEX_ATTRIB_ARRAY_BUFFER_BINDING: int

  GL_WRITE_ONLY: int

  @staticmethod
  def glBeginQuery(arg0: int, arg1: int) -> None: ...

  @staticmethod
  def glBindBuffer(arg0: int, arg1: int) -> None: ...

  @staticmethod
  @overload
  def glBufferData(arg0: int, arg1: list[float], arg2: int) -> None: ...

  @staticmethod
  @overload
  def glBufferData(arg0: int, arg1: list[float], arg2: int) -> None: ...

  @staticmethod
  @overload
  def glBufferData(arg0: int, arg1: list[int], arg2: int) -> None: ...

  @staticmethod
  @overload
  def glBufferData(arg0: int, arg1: list[int], arg2: int) -> None: ...

  @staticmethod
  @overload
  def glBufferData(arg0: int, arg1: list[int], arg2: int) -> None: ...

  @staticmethod
  @overload
  def glBufferData(arg0: int, arg1: ByteBuffer, arg2: int) -> None: ...

  @staticmethod
  @overload
  def glBufferData(arg0: int, arg1: DoubleBuffer, arg2: int) -> None: ...

  @staticmethod
  @overload
  def glBufferData(arg0: int, arg1: FloatBuffer, arg2: int) -> None: ...

  @staticmethod
  @overload
  def glBufferData(arg0: int, arg1: IntBuffer, arg2: int) -> None: ...

  @staticmethod
  @overload
  def glBufferData(arg0: int, arg1: LongBuffer, arg2: int) -> None: ...

  @staticmethod
  @overload
  def glBufferData(arg0: int, arg1: ShortBuffer, arg2: int) -> None: ...

  @staticmethod
  @overload
  def glBufferData(arg0: int, arg1: int, arg2: int) -> None: ...

  @staticmethod
  @overload
  def glBufferSubData(arg0: int, arg1: int, arg2: list[float]) -> None: ...

  @staticmethod
  @overload
  def glBufferSubData(arg0: int, arg1: int, arg2: list[float]) -> None: ...

  @staticmethod
  @overload
  def glBufferSubData(arg0: int, arg1: int, arg2: list[int]) -> None: ...

  @staticmethod
  @overload
  def glBufferSubData(arg0: int, arg1: int, arg2: list[int]) -> None: ...

  @staticmethod
  @overload
  def glBufferSubData(arg0: int, arg1: int, arg2: list[int]) -> None: ...

  @staticmethod
  @overload
  def glBufferSubData(arg0: int, arg1: int, arg2: ByteBuffer) -> None: ...

  @staticmethod
  @overload
  def glBufferSubData(arg0: int, arg1: int, arg2: DoubleBuffer) -> None: ...

  @staticmethod
  @overload
  def glBufferSubData(arg0: int, arg1: int, arg2: FloatBuffer) -> None: ...

  @staticmethod
  @overload
  def glBufferSubData(arg0: int, arg1: int, arg2: IntBuffer) -> None: ...

  @staticmethod
  @overload
  def glBufferSubData(arg0: int, arg1: int, arg2: LongBuffer) -> None: ...

  @staticmethod
  @overload
  def glBufferSubData(arg0: int, arg1: int, arg2: ShortBuffer) -> None: ...

  @staticmethod
  @overload
  def glDeleteBuffers(arg0: list[int]) -> None: ...

  @staticmethod
  @overload
  def glDeleteBuffers(arg0: int) -> None: ...

  @staticmethod
  @overload
  def glDeleteBuffers(arg0: IntBuffer) -> None: ...

  @staticmethod
  @overload
  def glDeleteQueries(arg0: list[int]) -> None: ...

  @staticmethod
  @overload
  def glDeleteQueries(arg0: int) -> None: ...

  @staticmethod
  @overload
  def glDeleteQueries(arg0: IntBuffer) -> None: ...

  @staticmethod
  def glEndQuery(arg0: int) -> None: ...

  @staticmethod
  @overload
  def glGenBuffers() -> int: ...

  @staticmethod
  @overload
  def glGenBuffers(arg0: list[int]) -> None: ...

  @staticmethod
  @overload
  def glGenBuffers(arg0: IntBuffer) -> None: ...

  @staticmethod
  @overload
  def glGenQueries() -> int: ...

  @staticmethod
  @overload
  def glGenQueries(arg0: list[int]) -> None: ...

  @staticmethod
  @overload
  def glGenQueries(arg0: IntBuffer) -> None: ...

  @staticmethod
  def glGetBufferParameteri(arg0: int, arg1: int) -> int: ...

  @staticmethod
  @overload
  def glGetBufferParameteriv(arg0: int, arg1: int, arg2: list[int]) -> None: ...

  @staticmethod
  @overload
  def glGetBufferParameteriv(arg0: int, arg1: int, arg2: IntBuffer) -> None: ...

  @staticmethod
  def glGetBufferPointer(arg0: int, arg1: int) -> int: ...

  @staticmethod
  def glGetBufferPointerv(arg0: int, arg1: int, arg2: PointerBuffer) -> None: ...

  @staticmethod
  @overload
  def glGetBufferSubData(arg0: int, arg1: int, arg2: list[float]) -> None: ...

  @staticmethod
  @overload
  def glGetBufferSubData(arg0: int, arg1: int, arg2: list[float]) -> None: ...

  @staticmethod
  @overload
  def glGetBufferSubData(arg0: int, arg1: int, arg2: list[int]) -> None: ...

  @staticmethod
  @overload
  def glGetBufferSubData(arg0: int, arg1: int, arg2: list[int]) -> None: ...

  @staticmethod
  @overload
  def glGetBufferSubData(arg0: int, arg1: int, arg2: list[int]) -> None: ...

  @staticmethod
  @overload
  def glGetBufferSubData(arg0: int, arg1: int, arg2: ByteBuffer) -> None: ...

  @staticmethod
  @overload
  def glGetBufferSubData(arg0: int, arg1: int, arg2: DoubleBuffer) -> None: ...

  @staticmethod
  @overload
  def glGetBufferSubData(arg0: int, arg1: int, arg2: FloatBuffer) -> None: ...

  @staticmethod
  @overload
  def glGetBufferSubData(arg0: int, arg1: int, arg2: IntBuffer) -> None: ...

  @staticmethod
  @overload
  def glGetBufferSubData(arg0: int, arg1: int, arg2: LongBuffer) -> None: ...

  @staticmethod
  @overload
  def glGetBufferSubData(arg0: int, arg1: int, arg2: ShortBuffer) -> None: ...

  @staticmethod
  def glGetQueryObjecti(arg0: int, arg1: int) -> int: ...

  @staticmethod
  @overload
  def glGetQueryObjectiv(arg0: int, arg1: int, arg2: list[int]) -> None: ...

  @staticmethod
  @overload
  def glGetQueryObjectiv(arg0: int, arg1: int, arg2: IntBuffer) -> None: ...

  @staticmethod
  def glGetQueryObjectui(arg0: int, arg1: int) -> int: ...

  @staticmethod
  @overload
  def glGetQueryObjectuiv(arg0: int, arg1: int, arg2: list[int]) -> None: ...

  @staticmethod
  @overload
  def glGetQueryObjectuiv(arg0: int, arg1: int, arg2: IntBuffer) -> None: ...

  @staticmethod
  def glGetQueryi(arg0: int, arg1: int) -> int: ...

  @staticmethod
  @overload
  def glGetQueryiv(arg0: int, arg1: int, arg2: list[int]) -> None: ...

  @staticmethod
  @overload
  def glGetQueryiv(arg0: int, arg1: int, arg2: IntBuffer) -> None: ...

  @staticmethod
  def glIsBuffer(arg0: int) -> bool: ...

  @staticmethod
  def glIsQuery(arg0: int) -> bool: ...

  @staticmethod
  @overload
  def glMapBuffer(arg0: int, arg1: int) -> ByteBuffer: ...

  @staticmethod
  @overload
  def glMapBuffer(arg0: int, arg1: int, arg2: ByteBuffer) -> ByteBuffer: ...

  @staticmethod
  @overload
  def glMapBuffer(arg0: int, arg1: int, arg2: int, arg3: ByteBuffer) -> ByteBuffer: ...

  @staticmethod
  def glUnmapBuffer(arg0: int) -> bool: ...

  @staticmethod
  def nglBufferData(arg0: int, arg1: int, arg2: int, arg3: int) -> None: ...

  @staticmethod
  def nglBufferSubData(arg0: int, arg1: int, arg2: int, arg3: int) -> None: ...

  @staticmethod
  def nglDeleteBuffers(arg0: int, arg1: int) -> None: ...

  @staticmethod
  def nglDeleteQueries(arg0: int, arg1: int) -> None: ...

  @staticmethod
  def nglGenBuffers(arg0: int, arg1: int) -> None: ...

  @staticmethod
  def nglGenQueries(arg0: int, arg1: int) -> None: ...

  @staticmethod
  def nglGetBufferParameteriv(arg0: int, arg1: int, arg2: int) -> None: ...

  @staticmethod
  def nglGetBufferPointerv(arg0: int, arg1: int, arg2: int) -> None: ...

  @staticmethod
  def nglGetBufferSubData(arg0: int, arg1: int, arg2: int, arg3: int) -> None: ...

  @staticmethod
  def nglGetQueryObjectiv(arg0: int, arg1: int, arg2: int) -> None: ...

  @staticmethod
  def nglGetQueryObjectuiv(arg0: int, arg1: int, arg2: int) -> None: ...

  @staticmethod
  def nglGetQueryiv(arg0: int, arg1: int, arg2: int) -> None: ...

  @staticmethod
  def nglMapBuffer(arg0: int, arg1: int) -> int: ...


class GL20(GL15):

  GL_ACTIVE_ATTRIBUTE_MAX_LENGTH: int

  GL_ACTIVE_ATTRIBUTES: int

  GL_ACTIVE_UNIFORM_MAX_LENGTH: int

  GL_ACTIVE_UNIFORMS: int

  GL_ATTACHED_SHADERS: int

  GL_BLEND_EQUATION_ALPHA: int

  GL_BLEND_EQUATION_RGB: int

  GL_BOOL: int

  GL_BOOL_VEC2: int

  GL_BOOL_VEC3: int

  GL_BOOL_VEC4: int

  GL_COMPILE_STATUS: int

  GL_COORD_REPLACE: int

  GL_CURRENT_PROGRAM: int

  GL_CURRENT_VERTEX_ATTRIB: int

  GL_DELETE_STATUS: int

  GL_DRAW_BUFFER0: int

  GL_DRAW_BUFFER1: int

  GL_DRAW_BUFFER10: int

  GL_DRAW_BUFFER11: int

  GL_DRAW_BUFFER12: int

  GL_DRAW_BUFFER13: int

  GL_DRAW_BUFFER14: int

  GL_DRAW_BUFFER15: int

  GL_DRAW_BUFFER2: int

  GL_DRAW_BUFFER3: int

  GL_DRAW_BUFFER4: int

  GL_DRAW_BUFFER5: int

  GL_DRAW_BUFFER6: int

  GL_DRAW_BUFFER7: int

  GL_DRAW_BUFFER8: int

  GL_DRAW_BUFFER9: int

  GL_FLOAT_MAT2: int

  GL_FLOAT_MAT3: int

  GL_FLOAT_MAT4: int

  GL_FLOAT_VEC2: int

  GL_FLOAT_VEC3: int

  GL_FLOAT_VEC4: int

  GL_FRAGMENT_SHADER: int

  GL_FRAGMENT_SHADER_DERIVATIVE_HINT: int

  GL_INFO_LOG_LENGTH: int

  GL_INT_VEC2: int

  GL_INT_VEC3: int

  GL_INT_VEC4: int

  GL_LINK_STATUS: int

  GL_LOWER_LEFT: int

  GL_MAX_COMBINED_TEXTURE_IMAGE_UNITS: int

  GL_MAX_DRAW_BUFFERS: int

  GL_MAX_FRAGMENT_UNIFORM_COMPONENTS: int

  GL_MAX_TEXTURE_COORDS: int

  GL_MAX_TEXTURE_IMAGE_UNITS: int

  GL_MAX_VARYING_FLOATS: int

  GL_MAX_VERTEX_ATTRIBS: int

  GL_MAX_VERTEX_TEXTURE_IMAGE_UNITS: int

  GL_MAX_VERTEX_UNIFORM_COMPONENTS: int

  GL_POINT_SPRITE: int

  GL_POINT_SPRITE_COORD_ORIGIN: int

  GL_SAMPLER_1D: int

  GL_SAMPLER_1D_SHADOW: int

  GL_SAMPLER_2D: int

  GL_SAMPLER_2D_SHADOW: int

  GL_SAMPLER_3D: int

  GL_SAMPLER_CUBE: int

  GL_SHADER_SOURCE_LENGTH: int

  GL_SHADER_TYPE: int

  GL_SHADING_LANGUAGE_VERSION: int

  GL_STENCIL_BACK_FAIL: int

  GL_STENCIL_BACK_FUNC: int

  GL_STENCIL_BACK_PASS_DEPTH_FAIL: int

  GL_STENCIL_BACK_PASS_DEPTH_PASS: int

  GL_STENCIL_BACK_REF: int

  GL_STENCIL_BACK_VALUE_MASK: int

  GL_STENCIL_BACK_WRITEMASK: int

  GL_UPPER_LEFT: int

  GL_VALIDATE_STATUS: int

  GL_VERTEX_ATTRIB_ARRAY_ENABLED: int

  GL_VERTEX_ATTRIB_ARRAY_NORMALIZED: int

  GL_VERTEX_ATTRIB_ARRAY_POINTER: int

  GL_VERTEX_ATTRIB_ARRAY_SIZE: int

  GL_VERTEX_ATTRIB_ARRAY_STRIDE: int

  GL_VERTEX_ATTRIB_ARRAY_TYPE: int

  GL_VERTEX_PROGRAM_POINT_SIZE: int

  GL_VERTEX_PROGRAM_TWO_SIDE: int

  GL_VERTEX_SHADER: int

  @staticmethod
  def glAttachShader(arg0: int, arg1: int) -> None: ...

  @staticmethod
  @overload
  def glBindAttribLocation(arg0: int, arg1: int, arg2: CharSequence) -> None: ...

  @staticmethod
  @overload
  def glBindAttribLocation(arg0: int, arg1: int, arg2: ByteBuffer) -> None: ...

  @staticmethod
  def glBlendEquationSeparate(arg0: int, arg1: int) -> None: ...

  @staticmethod
  def glCompileShader(arg0: int) -> None: ...

  @staticmethod
  def glCreateProgram() -> int: ...

  @staticmethod
  def glCreateShader(arg0: int) -> int: ...

  @staticmethod
  def glDeleteProgram(arg0: int) -> None: ...

  @staticmethod
  def glDeleteShader(arg0: int) -> None: ...

  @staticmethod
  def glDetachShader(arg0: int, arg1: int) -> None: ...

  @staticmethod
  def glDisableVertexAttribArray(arg0: int) -> None: ...

  @staticmethod
  @overload
  def glDrawBuffers(arg0: list[int]) -> None: ...

  @staticmethod
  @overload
  def glDrawBuffers(arg0: int) -> None: ...

  @staticmethod
  @overload
  def glDrawBuffers(arg0: IntBuffer) -> None: ...

  @staticmethod
  def glEnableVertexAttribArray(arg0: int) -> None: ...

  @staticmethod
  @overload
  def glGetActiveAttrib(arg0: int, arg1: int, arg2: IntBuffer, arg3: IntBuffer) -> str: ...

  @staticmethod
  @overload
  def glGetActiveAttrib(arg0: int, arg1: int, arg2: int, arg3: IntBuffer, arg4: IntBuffer) -> str: ...

  @staticmethod
  @overload
  def glGetActiveAttrib(arg0: int, arg1: int, arg2: list[int], arg3: list[int], arg4: list[int], arg5: ByteBuffer) -> None: ...

  @staticmethod
  @overload
  def glGetActiveAttrib(arg0: int, arg1: int, arg2: IntBuffer, arg3: IntBuffer, arg4: IntBuffer, arg5: ByteBuffer) -> None: ...

  @staticmethod
  @overload
  def glGetActiveUniform(arg0: int, arg1: int, arg2: IntBuffer, arg3: IntBuffer) -> str: ...

  @staticmethod
  @overload
  def glGetActiveUniform(arg0: int, arg1: int, arg2: int, arg3: IntBuffer, arg4: IntBuffer) -> str: ...

  @staticmethod
  @overload
  def glGetActiveUniform(arg0: int, arg1: int, arg2: list[int], arg3: list[int], arg4: list[int], arg5: ByteBuffer) -> None: ...

  @staticmethod
  @overload
  def glGetActiveUniform(arg0: int, arg1: int, arg2: IntBuffer, arg3: IntBuffer, arg4: IntBuffer, arg5: ByteBuffer) -> None: ...

  @staticmethod
  @overload
  def glGetAttachedShaders(arg0: int, arg1: list[int], arg2: list[int]) -> None: ...

  @staticmethod
  @overload
  def glGetAttachedShaders(arg0: int, arg1: IntBuffer, arg2: IntBuffer) -> None: ...

  @staticmethod
  @overload
  def glGetAttribLocation(arg0: int, arg1: CharSequence) -> int: ...

  @staticmethod
  @overload
  def glGetAttribLocation(arg0: int, arg1: ByteBuffer) -> int: ...

  @staticmethod
  @overload
  def glGetProgramInfoLog(arg0: int) -> str: ...

  @staticmethod
  @overload
  def glGetProgramInfoLog(arg0: int, arg1: int) -> str: ...

  @staticmethod
  @overload
  def glGetProgramInfoLog(arg0: int, arg1: list[int], arg2: ByteBuffer) -> None: ...

  @staticmethod
  @overload
  def glGetProgramInfoLog(arg0: int, arg1: IntBuffer, arg2: ByteBuffer) -> None: ...

  @staticmethod
  def glGetProgrami(arg0: int, arg1: int) -> int: ...

  @staticmethod
  @overload
  def glGetProgramiv(arg0: int, arg1: int, arg2: list[int]) -> None: ...

  @staticmethod
  @overload
  def glGetProgramiv(arg0: int, arg1: int, arg2: IntBuffer) -> None: ...

  @staticmethod
  @overload
  def glGetShaderInfoLog(arg0: int) -> str: ...

  @staticmethod
  @overload
  def glGetShaderInfoLog(arg0: int, arg1: int) -> str: ...

  @staticmethod
  @overload
  def glGetShaderInfoLog(arg0: int, arg1: list[int], arg2: ByteBuffer) -> None: ...

  @staticmethod
  @overload
  def glGetShaderInfoLog(arg0: int, arg1: IntBuffer, arg2: ByteBuffer) -> None: ...

  @staticmethod
  @overload
  def glGetShaderSource(arg0: int) -> str: ...

  @staticmethod
  @overload
  def glGetShaderSource(arg0: int, arg1: int) -> str: ...

  @staticmethod
  @overload
  def glGetShaderSource(arg0: int, arg1: list[int], arg2: ByteBuffer) -> None: ...

  @staticmethod
  @overload
  def glGetShaderSource(arg0: int, arg1: IntBuffer, arg2: ByteBuffer) -> None: ...

  @staticmethod
  def glGetShaderi(arg0: int, arg1: int) -> int: ...

  @staticmethod
  @overload
  def glGetShaderiv(arg0: int, arg1: int, arg2: list[int]) -> None: ...

  @staticmethod
  @overload
  def glGetShaderiv(arg0: int, arg1: int, arg2: IntBuffer) -> None: ...

  @staticmethod
  @overload
  def glGetUniformLocation(arg0: int, arg1: CharSequence) -> int: ...

  @staticmethod
  @overload
  def glGetUniformLocation(arg0: int, arg1: ByteBuffer) -> int: ...

  @staticmethod
  def glGetUniformf(arg0: int, arg1: int) -> float: ...

  @staticmethod
  @overload
  def glGetUniformfv(arg0: int, arg1: int, arg2: list[float]) -> None: ...

  @staticmethod
  @overload
  def glGetUniformfv(arg0: int, arg1: int, arg2: FloatBuffer) -> None: ...

  @staticmethod
  def glGetUniformi(arg0: int, arg1: int) -> int: ...

  @staticmethod
  @overload
  def glGetUniformiv(arg0: int, arg1: int, arg2: list[int]) -> None: ...

  @staticmethod
  @overload
  def glGetUniformiv(arg0: int, arg1: int, arg2: IntBuffer) -> None: ...

  @staticmethod
  def glGetVertexAttribPointer(arg0: int, arg1: int) -> int: ...

  @staticmethod
  def glGetVertexAttribPointerv(arg0: int, arg1: int, arg2: PointerBuffer) -> None: ...

  @staticmethod
  @overload
  def glGetVertexAttribdv(arg0: int, arg1: int, arg2: list[float]) -> None: ...

  @staticmethod
  @overload
  def glGetVertexAttribdv(arg0: int, arg1: int, arg2: DoubleBuffer) -> None: ...

  @staticmethod
  @overload
  def glGetVertexAttribfv(arg0: int, arg1: int, arg2: list[float]) -> None: ...

  @staticmethod
  @overload
  def glGetVertexAttribfv(arg0: int, arg1: int, arg2: FloatBuffer) -> None: ...

  @staticmethod
  def glGetVertexAttribi(arg0: int, arg1: int) -> int: ...

  @staticmethod
  @overload
  def glGetVertexAttribiv(arg0: int, arg1: int, arg2: list[int]) -> None: ...

  @staticmethod
  @overload
  def glGetVertexAttribiv(arg0: int, arg1: int, arg2: IntBuffer) -> None: ...

  @staticmethod
  def glIsProgram(arg0: int) -> bool: ...

  @staticmethod
  def glIsShader(arg0: int) -> bool: ...

  @staticmethod
  def glLinkProgram(arg0: int) -> None: ...

  @staticmethod
  @overload
  def glShaderSource(arg0: int, arg1: list[CharSequence]) -> None: ...

  @staticmethod
  @overload
  def glShaderSource(arg0: int, arg1: CharSequence) -> None: ...

  @staticmethod
  @overload
  def glShaderSource(arg0: int, arg1: PointerBuffer, arg2: list[int]) -> None: ...

  @staticmethod
  @overload
  def glShaderSource(arg0: int, arg1: PointerBuffer, arg2: IntBuffer) -> None: ...

  @staticmethod
  def glStencilFuncSeparate(arg0: int, arg1: int, arg2: int, arg3: int) -> None: ...

  @staticmethod
  def glStencilMaskSeparate(arg0: int, arg1: int) -> None: ...

  @staticmethod
  def glStencilOpSeparate(arg0: int, arg1: int, arg2: int, arg3: int) -> None: ...

  @staticmethod
  def glUniform1f(arg0: int, arg1: float) -> None: ...

  @staticmethod
  @overload
  def glUniform1fv(arg0: int, arg1: list[float]) -> None: ...

  @staticmethod
  @overload
  def glUniform1fv(arg0: int, arg1: FloatBuffer) -> None: ...

  @staticmethod
  def glUniform1i(arg0: int, arg1: int) -> None: ...

  @staticmethod
  @overload
  def glUniform1iv(arg0: int, arg1: list[int]) -> None: ...

  @staticmethod
  @overload
  def glUniform1iv(arg0: int, arg1: IntBuffer) -> None: ...

  @staticmethod
  def glUniform2f(arg0: int, arg1: float, arg2: float) -> None: ...

  @staticmethod
  @overload
  def glUniform2fv(arg0: int, arg1: list[float]) -> None: ...

  @staticmethod
  @overload
  def glUniform2fv(arg0: int, arg1: FloatBuffer) -> None: ...

  @staticmethod
  def glUniform2i(arg0: int, arg1: int, arg2: int) -> None: ...

  @staticmethod
  @overload
  def glUniform2iv(arg0: int, arg1: list[int]) -> None: ...

  @staticmethod
  @overload
  def glUniform2iv(arg0: int, arg1: IntBuffer) -> None: ...

  @staticmethod
  def glUniform3f(arg0: int, arg1: float, arg2: float, arg3: float) -> None: ...

  @staticmethod
  @overload
  def glUniform3fv(arg0: int, arg1: list[float]) -> None: ...

  @staticmethod
  @overload
  def glUniform3fv(arg0: int, arg1: FloatBuffer) -> None: ...

  @staticmethod
  def glUniform3i(arg0: int, arg1: int, arg2: int, arg3: int) -> None: ...

  @staticmethod
  @overload
  def glUniform3iv(arg0: int, arg1: list[int]) -> None: ...

  @staticmethod
  @overload
  def glUniform3iv(arg0: int, arg1: IntBuffer) -> None: ...

  @staticmethod
  def glUniform4f(arg0: int, arg1: float, arg2: float, arg3: float, arg4: float) -> None: ...

  @staticmethod
  @overload
  def glUniform4fv(arg0: int, arg1: list[float]) -> None: ...

  @staticmethod
  @overload
  def glUniform4fv(arg0: int, arg1: FloatBuffer) -> None: ...

  @staticmethod
  def glUniform4i(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int) -> None: ...

  @staticmethod
  @overload
  def glUniform4iv(arg0: int, arg1: list[int]) -> None: ...

  @staticmethod
  @overload
  def glUniform4iv(arg0: int, arg1: IntBuffer) -> None: ...

  @staticmethod
  @overload
  def glUniformMatrix2fv(arg0: int, arg1: bool, arg2: list[float]) -> None: ...

  @staticmethod
  @overload
  def glUniformMatrix2fv(arg0: int, arg1: bool, arg2: FloatBuffer) -> None: ...

  @staticmethod
  @overload
  def glUniformMatrix3fv(arg0: int, arg1: bool, arg2: list[float]) -> None: ...

  @staticmethod
  @overload
  def glUniformMatrix3fv(arg0: int, arg1: bool, arg2: FloatBuffer) -> None: ...

  @staticmethod
  @overload
  def glUniformMatrix4fv(arg0: int, arg1: bool, arg2: list[float]) -> None: ...

  @staticmethod
  @overload
  def glUniformMatrix4fv(arg0: int, arg1: bool, arg2: FloatBuffer) -> None: ...

  @staticmethod
  def glUseProgram(arg0: int) -> None: ...

  @staticmethod
  def glValidateProgram(arg0: int) -> None: ...

  @staticmethod
  def glVertexAttrib1d(arg0: int, arg1: float) -> None: ...

  @staticmethod
  @overload
  def glVertexAttrib1dv(arg0: int, arg1: list[float]) -> None: ...

  @staticmethod
  @overload
  def glVertexAttrib1dv(arg0: int, arg1: DoubleBuffer) -> None: ...

  @staticmethod
  def glVertexAttrib1f(arg0: int, arg1: float) -> None: ...

  @staticmethod
  @overload
  def glVertexAttrib1fv(arg0: int, arg1: list[float]) -> None: ...

  @staticmethod
  @overload
  def glVertexAttrib1fv(arg0: int, arg1: FloatBuffer) -> None: ...

  @staticmethod
  def glVertexAttrib1s(arg0: int, arg1: int) -> None: ...

  @staticmethod
  @overload
  def glVertexAttrib1sv(arg0: int, arg1: list[int]) -> None: ...

  @staticmethod
  @overload
  def glVertexAttrib1sv(arg0: int, arg1: ShortBuffer) -> None: ...

  @staticmethod
  def glVertexAttrib2d(arg0: int, arg1: float, arg2: float) -> None: ...

  @staticmethod
  @overload
  def glVertexAttrib2dv(arg0: int, arg1: list[float]) -> None: ...

  @staticmethod
  @overload
  def glVertexAttrib2dv(arg0: int, arg1: DoubleBuffer) -> None: ...

  @staticmethod
  def glVertexAttrib2f(arg0: int, arg1: float, arg2: float) -> None: ...

  @staticmethod
  @overload
  def glVertexAttrib2fv(arg0: int, arg1: list[float]) -> None: ...

  @staticmethod
  @overload
  def glVertexAttrib2fv(arg0: int, arg1: FloatBuffer) -> None: ...

  @staticmethod
  def glVertexAttrib2s(arg0: int, arg1: int, arg2: int) -> None: ...

  @staticmethod
  @overload
  def glVertexAttrib2sv(arg0: int, arg1: list[int]) -> None: ...

  @staticmethod
  @overload
  def glVertexAttrib2sv(arg0: int, arg1: ShortBuffer) -> None: ...

  @staticmethod
  def glVertexAttrib3d(arg0: int, arg1: float, arg2: float, arg3: float) -> None: ...

  @staticmethod
  @overload
  def glVertexAttrib3dv(arg0: int, arg1: list[float]) -> None: ...

  @staticmethod
  @overload
  def glVertexAttrib3dv(arg0: int, arg1: DoubleBuffer) -> None: ...

  @staticmethod
  def glVertexAttrib3f(arg0: int, arg1: float, arg2: float, arg3: float) -> None: ...

  @staticmethod
  @overload
  def glVertexAttrib3fv(arg0: int, arg1: list[float]) -> None: ...

  @staticmethod
  @overload
  def glVertexAttrib3fv(arg0: int, arg1: FloatBuffer) -> None: ...

  @staticmethod
  def glVertexAttrib3s(arg0: int, arg1: int, arg2: int, arg3: int) -> None: ...

  @staticmethod
  @overload
  def glVertexAttrib3sv(arg0: int, arg1: list[int]) -> None: ...

  @staticmethod
  @overload
  def glVertexAttrib3sv(arg0: int, arg1: ShortBuffer) -> None: ...

  @staticmethod
  def glVertexAttrib4Nbv(arg0: int, arg1: ByteBuffer) -> None: ...

  @staticmethod
  @overload
  def glVertexAttrib4Niv(arg0: int, arg1: list[int]) -> None: ...

  @staticmethod
  @overload
  def glVertexAttrib4Niv(arg0: int, arg1: IntBuffer) -> None: ...

  @staticmethod
  @overload
  def glVertexAttrib4Nsv(arg0: int, arg1: list[int]) -> None: ...

  @staticmethod
  @overload
  def glVertexAttrib4Nsv(arg0: int, arg1: ShortBuffer) -> None: ...

  @staticmethod
  def glVertexAttrib4Nub(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int) -> None: ...

  @staticmethod
  def glVertexAttrib4Nubv(arg0: int, arg1: ByteBuffer) -> None: ...

  @staticmethod
  @overload
  def glVertexAttrib4Nuiv(arg0: int, arg1: list[int]) -> None: ...

  @staticmethod
  @overload
  def glVertexAttrib4Nuiv(arg0: int, arg1: IntBuffer) -> None: ...

  @staticmethod
  @overload
  def glVertexAttrib4Nusv(arg0: int, arg1: list[int]) -> None: ...

  @staticmethod
  @overload
  def glVertexAttrib4Nusv(arg0: int, arg1: ShortBuffer) -> None: ...

  @staticmethod
  def glVertexAttrib4bv(arg0: int, arg1: ByteBuffer) -> None: ...

  @staticmethod
  def glVertexAttrib4d(arg0: int, arg1: float, arg2: float, arg3: float, arg4: float) -> None: ...

  @staticmethod
  @overload
  def glVertexAttrib4dv(arg0: int, arg1: list[float]) -> None: ...

  @staticmethod
  @overload
  def glVertexAttrib4dv(arg0: int, arg1: DoubleBuffer) -> None: ...

  @staticmethod
  def glVertexAttrib4f(arg0: int, arg1: float, arg2: float, arg3: float, arg4: float) -> None: ...

  @staticmethod
  @overload
  def glVertexAttrib4fv(arg0: int, arg1: list[float]) -> None: ...

  @staticmethod
  @overload
  def glVertexAttrib4fv(arg0: int, arg1: FloatBuffer) -> None: ...

  @staticmethod
  @overload
  def glVertexAttrib4iv(arg0: int, arg1: list[int]) -> None: ...

  @staticmethod
  @overload
  def glVertexAttrib4iv(arg0: int, arg1: IntBuffer) -> None: ...

  @staticmethod
  def glVertexAttrib4s(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int) -> None: ...

  @staticmethod
  @overload
  def glVertexAttrib4sv(arg0: int, arg1: list[int]) -> None: ...

  @staticmethod
  @overload
  def glVertexAttrib4sv(arg0: int, arg1: ShortBuffer) -> None: ...

  @staticmethod
  def glVertexAttrib4ubv(arg0: int, arg1: ByteBuffer) -> None: ...

  @staticmethod
  @overload
  def glVertexAttrib4uiv(arg0: int, arg1: list[int]) -> None: ...

  @staticmethod
  @overload
  def glVertexAttrib4uiv(arg0: int, arg1: IntBuffer) -> None: ...

  @staticmethod
  @overload
  def glVertexAttrib4usv(arg0: int, arg1: list[int]) -> None: ...

  @staticmethod
  @overload
  def glVertexAttrib4usv(arg0: int, arg1: ShortBuffer) -> None: ...

  @staticmethod
  @overload
  def glVertexAttribPointer(arg0: int, arg1: int, arg2: int, arg3: bool, arg4: int, arg5: ByteBuffer) -> None: ...

  @staticmethod
  @overload
  def glVertexAttribPointer(arg0: int, arg1: int, arg2: int, arg3: bool, arg4: int, arg5: FloatBuffer) -> None: ...

  @staticmethod
  @overload
  def glVertexAttribPointer(arg0: int, arg1: int, arg2: int, arg3: bool, arg4: int, arg5: IntBuffer) -> None: ...

  @staticmethod
  @overload
  def glVertexAttribPointer(arg0: int, arg1: int, arg2: int, arg3: bool, arg4: int, arg5: ShortBuffer) -> None: ...

  @staticmethod
  @overload
  def glVertexAttribPointer(arg0: int, arg1: int, arg2: int, arg3: bool, arg4: int, arg5: int) -> None: ...

  @staticmethod
  def nglBindAttribLocation(arg0: int, arg1: int, arg2: int) -> None: ...

  @staticmethod
  def nglDrawBuffers(arg0: int, arg1: int) -> None: ...

  @staticmethod
  def nglGetActiveAttrib(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int) -> None: ...

  @staticmethod
  def nglGetActiveUniform(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int) -> None: ...

  @staticmethod
  def nglGetAttachedShaders(arg0: int, arg1: int, arg2: int, arg3: int) -> None: ...

  @staticmethod
  def nglGetAttribLocation(arg0: int, arg1: int) -> int: ...

  @staticmethod
  def nglGetProgramInfoLog(arg0: int, arg1: int, arg2: int, arg3: int) -> None: ...

  @staticmethod
  def nglGetProgramiv(arg0: int, arg1: int, arg2: int) -> None: ...

  @staticmethod
  def nglGetShaderInfoLog(arg0: int, arg1: int, arg2: int, arg3: int) -> None: ...

  @staticmethod
  def nglGetShaderSource(arg0: int, arg1: int, arg2: int, arg3: int) -> None: ...

  @staticmethod
  def nglGetShaderiv(arg0: int, arg1: int, arg2: int) -> None: ...

  @staticmethod
  def nglGetUniformLocation(arg0: int, arg1: int) -> int: ...

  @staticmethod
  def nglGetUniformfv(arg0: int, arg1: int, arg2: int) -> None: ...

  @staticmethod
  def nglGetUniformiv(arg0: int, arg1: int, arg2: int) -> None: ...

  @staticmethod
  def nglGetVertexAttribPointerv(arg0: int, arg1: int, arg2: int) -> None: ...

  @staticmethod
  def nglGetVertexAttribdv(arg0: int, arg1: int, arg2: int) -> None: ...

  @staticmethod
  def nglGetVertexAttribfv(arg0: int, arg1: int, arg2: int) -> None: ...

  @staticmethod
  def nglGetVertexAttribiv(arg0: int, arg1: int, arg2: int) -> None: ...

  @staticmethod
  def nglShaderSource(arg0: int, arg1: int, arg2: int, arg3: int) -> None: ...

  @staticmethod
  def nglUniform1fv(arg0: int, arg1: int, arg2: int) -> None: ...

  @staticmethod
  def nglUniform1iv(arg0: int, arg1: int, arg2: int) -> None: ...

  @staticmethod
  def nglUniform2fv(arg0: int, arg1: int, arg2: int) -> None: ...

  @staticmethod
  def nglUniform2iv(arg0: int, arg1: int, arg2: int) -> None: ...

  @staticmethod
  def nglUniform3fv(arg0: int, arg1: int, arg2: int) -> None: ...

  @staticmethod
  def nglUniform3iv(arg0: int, arg1: int, arg2: int) -> None: ...

  @staticmethod
  def nglUniform4fv(arg0: int, arg1: int, arg2: int) -> None: ...

  @staticmethod
  def nglUniform4iv(arg0: int, arg1: int, arg2: int) -> None: ...

  @staticmethod
  def nglUniformMatrix2fv(arg0: int, arg1: int, arg2: bool, arg3: int) -> None: ...

  @staticmethod
  def nglUniformMatrix3fv(arg0: int, arg1: int, arg2: bool, arg3: int) -> None: ...

  @staticmethod
  def nglUniformMatrix4fv(arg0: int, arg1: int, arg2: bool, arg3: int) -> None: ...

  @staticmethod
  def nglVertexAttrib1dv(arg0: int, arg1: int) -> None: ...

  @staticmethod
  def nglVertexAttrib1fv(arg0: int, arg1: int) -> None: ...

  @staticmethod
  def nglVertexAttrib1sv(arg0: int, arg1: int) -> None: ...

  @staticmethod
  def nglVertexAttrib2dv(arg0: int, arg1: int) -> None: ...

  @staticmethod
  def nglVertexAttrib2fv(arg0: int, arg1: int) -> None: ...

  @staticmethod
  def nglVertexAttrib2sv(arg0: int, arg1: int) -> None: ...

  @staticmethod
  def nglVertexAttrib3dv(arg0: int, arg1: int) -> None: ...

  @staticmethod
  def nglVertexAttrib3fv(arg0: int, arg1: int) -> None: ...

  @staticmethod
  def nglVertexAttrib3sv(arg0: int, arg1: int) -> None: ...

  @staticmethod
  def nglVertexAttrib4Nbv(arg0: int, arg1: int) -> None: ...

  @staticmethod
  def nglVertexAttrib4Niv(arg0: int, arg1: int) -> None: ...

  @staticmethod
  def nglVertexAttrib4Nsv(arg0: int, arg1: int) -> None: ...

  @staticmethod
  def nglVertexAttrib4Nubv(arg0: int, arg1: int) -> None: ...

  @staticmethod
  def nglVertexAttrib4Nuiv(arg0: int, arg1: int) -> None: ...

  @staticmethod
  def nglVertexAttrib4Nusv(arg0: int, arg1: int) -> None: ...

  @staticmethod
  def nglVertexAttrib4bv(arg0: int, arg1: int) -> None: ...

  @staticmethod
  def nglVertexAttrib4dv(arg0: int, arg1: int) -> None: ...

  @staticmethod
  def nglVertexAttrib4fv(arg0: int, arg1: int) -> None: ...

  @staticmethod
  def nglVertexAttrib4iv(arg0: int, arg1: int) -> None: ...

  @staticmethod
  def nglVertexAttrib4sv(arg0: int, arg1: int) -> None: ...

  @staticmethod
  def nglVertexAttrib4ubv(arg0: int, arg1: int) -> None: ...

  @staticmethod
  def nglVertexAttrib4uiv(arg0: int, arg1: int) -> None: ...

  @staticmethod
  def nglVertexAttrib4usv(arg0: int, arg1: int) -> None: ...

  @staticmethod
  def nglVertexAttribPointer(arg0: int, arg1: int, arg2: int, arg3: bool, arg4: int, arg5: int) -> None: ...


class GL20C(GL15C):

  GL_ACTIVE_ATTRIBUTE_MAX_LENGTH: int

  GL_ACTIVE_ATTRIBUTES: int

  GL_ACTIVE_UNIFORM_MAX_LENGTH: int

  GL_ACTIVE_UNIFORMS: int

  GL_ATTACHED_SHADERS: int

  GL_BLEND_EQUATION_ALPHA: int

  GL_BLEND_EQUATION_RGB: int

  GL_BOOL: int

  GL_BOOL_VEC2: int

  GL_BOOL_VEC3: int

  GL_BOOL_VEC4: int

  GL_COMPILE_STATUS: int

  GL_CURRENT_PROGRAM: int

  GL_CURRENT_VERTEX_ATTRIB: int

  GL_DELETE_STATUS: int

  GL_DRAW_BUFFER0: int

  GL_DRAW_BUFFER1: int

  GL_DRAW_BUFFER10: int

  GL_DRAW_BUFFER11: int

  GL_DRAW_BUFFER12: int

  GL_DRAW_BUFFER13: int

  GL_DRAW_BUFFER14: int

  GL_DRAW_BUFFER15: int

  GL_DRAW_BUFFER2: int

  GL_DRAW_BUFFER3: int

  GL_DRAW_BUFFER4: int

  GL_DRAW_BUFFER5: int

  GL_DRAW_BUFFER6: int

  GL_DRAW_BUFFER7: int

  GL_DRAW_BUFFER8: int

  GL_DRAW_BUFFER9: int

  GL_FLOAT_MAT2: int

  GL_FLOAT_MAT3: int

  GL_FLOAT_MAT4: int

  GL_FLOAT_VEC2: int

  GL_FLOAT_VEC3: int

  GL_FLOAT_VEC4: int

  GL_FRAGMENT_SHADER: int

  GL_FRAGMENT_SHADER_DERIVATIVE_HINT: int

  GL_INFO_LOG_LENGTH: int

  GL_INT_VEC2: int

  GL_INT_VEC3: int

  GL_INT_VEC4: int

  GL_LINK_STATUS: int

  GL_LOWER_LEFT: int

  GL_MAX_COMBINED_TEXTURE_IMAGE_UNITS: int

  GL_MAX_DRAW_BUFFERS: int

  GL_MAX_FRAGMENT_UNIFORM_COMPONENTS: int

  GL_MAX_TEXTURE_IMAGE_UNITS: int

  GL_MAX_VARYING_FLOATS: int

  GL_MAX_VERTEX_ATTRIBS: int

  GL_MAX_VERTEX_TEXTURE_IMAGE_UNITS: int

  GL_MAX_VERTEX_UNIFORM_COMPONENTS: int

  GL_POINT_SPRITE_COORD_ORIGIN: int

  GL_SAMPLER_1D: int

  GL_SAMPLER_1D_SHADOW: int

  GL_SAMPLER_2D: int

  GL_SAMPLER_2D_SHADOW: int

  GL_SAMPLER_3D: int

  GL_SAMPLER_CUBE: int

  GL_SHADER_SOURCE_LENGTH: int

  GL_SHADER_TYPE: int

  GL_SHADING_LANGUAGE_VERSION: int

  GL_STENCIL_BACK_FAIL: int

  GL_STENCIL_BACK_FUNC: int

  GL_STENCIL_BACK_PASS_DEPTH_FAIL: int

  GL_STENCIL_BACK_PASS_DEPTH_PASS: int

  GL_STENCIL_BACK_REF: int

  GL_STENCIL_BACK_VALUE_MASK: int

  GL_STENCIL_BACK_WRITEMASK: int

  GL_UPPER_LEFT: int

  GL_VALIDATE_STATUS: int

  GL_VERTEX_ATTRIB_ARRAY_ENABLED: int

  GL_VERTEX_ATTRIB_ARRAY_NORMALIZED: int

  GL_VERTEX_ATTRIB_ARRAY_POINTER: int

  GL_VERTEX_ATTRIB_ARRAY_SIZE: int

  GL_VERTEX_ATTRIB_ARRAY_STRIDE: int

  GL_VERTEX_ATTRIB_ARRAY_TYPE: int

  GL_VERTEX_PROGRAM_POINT_SIZE: int

  GL_VERTEX_SHADER: int

  @staticmethod
  def glAttachShader(arg0: int, arg1: int) -> None: ...

  @staticmethod
  @overload
  def glBindAttribLocation(arg0: int, arg1: int, arg2: CharSequence) -> None: ...

  @staticmethod
  @overload
  def glBindAttribLocation(arg0: int, arg1: int, arg2: ByteBuffer) -> None: ...

  @staticmethod
  def glBlendEquationSeparate(arg0: int, arg1: int) -> None: ...

  @staticmethod
  def glCompileShader(arg0: int) -> None: ...

  @staticmethod
  def glCreateProgram() -> int: ...

  @staticmethod
  def glCreateShader(arg0: int) -> int: ...

  @staticmethod
  def glDeleteProgram(arg0: int) -> None: ...

  @staticmethod
  def glDeleteShader(arg0: int) -> None: ...

  @staticmethod
  def glDetachShader(arg0: int, arg1: int) -> None: ...

  @staticmethod
  def glDisableVertexAttribArray(arg0: int) -> None: ...

  @staticmethod
  @overload
  def glDrawBuffers(arg0: list[int]) -> None: ...

  @staticmethod
  @overload
  def glDrawBuffers(arg0: int) -> None: ...

  @staticmethod
  @overload
  def glDrawBuffers(arg0: IntBuffer) -> None: ...

  @staticmethod
  def glEnableVertexAttribArray(arg0: int) -> None: ...

  @staticmethod
  @overload
  def glGetActiveAttrib(arg0: int, arg1: int, arg2: IntBuffer, arg3: IntBuffer) -> str: ...

  @staticmethod
  @overload
  def glGetActiveAttrib(arg0: int, arg1: int, arg2: int, arg3: IntBuffer, arg4: IntBuffer) -> str: ...

  @staticmethod
  @overload
  def glGetActiveAttrib(arg0: int, arg1: int, arg2: list[int], arg3: list[int], arg4: list[int], arg5: ByteBuffer) -> None: ...

  @staticmethod
  @overload
  def glGetActiveAttrib(arg0: int, arg1: int, arg2: IntBuffer, arg3: IntBuffer, arg4: IntBuffer, arg5: ByteBuffer) -> None: ...

  @staticmethod
  @overload
  def glGetActiveUniform(arg0: int, arg1: int, arg2: IntBuffer, arg3: IntBuffer) -> str: ...

  @staticmethod
  @overload
  def glGetActiveUniform(arg0: int, arg1: int, arg2: int, arg3: IntBuffer, arg4: IntBuffer) -> str: ...

  @staticmethod
  @overload
  def glGetActiveUniform(arg0: int, arg1: int, arg2: list[int], arg3: list[int], arg4: list[int], arg5: ByteBuffer) -> None: ...

  @staticmethod
  @overload
  def glGetActiveUniform(arg0: int, arg1: int, arg2: IntBuffer, arg3: IntBuffer, arg4: IntBuffer, arg5: ByteBuffer) -> None: ...

  @staticmethod
  @overload
  def glGetAttachedShaders(arg0: int, arg1: list[int], arg2: list[int]) -> None: ...

  @staticmethod
  @overload
  def glGetAttachedShaders(arg0: int, arg1: IntBuffer, arg2: IntBuffer) -> None: ...

  @staticmethod
  @overload
  def glGetAttribLocation(arg0: int, arg1: CharSequence) -> int: ...

  @staticmethod
  @overload
  def glGetAttribLocation(arg0: int, arg1: ByteBuffer) -> int: ...

  @staticmethod
  @overload
  def glGetProgramInfoLog(arg0: int) -> str: ...

  @staticmethod
  @overload
  def glGetProgramInfoLog(arg0: int, arg1: int) -> str: ...

  @staticmethod
  @overload
  def glGetProgramInfoLog(arg0: int, arg1: list[int], arg2: ByteBuffer) -> None: ...

  @staticmethod
  @overload
  def glGetProgramInfoLog(arg0: int, arg1: IntBuffer, arg2: ByteBuffer) -> None: ...

  @staticmethod
  def glGetProgrami(arg0: int, arg1: int) -> int: ...

  @staticmethod
  @overload
  def glGetProgramiv(arg0: int, arg1: int, arg2: list[int]) -> None: ...

  @staticmethod
  @overload
  def glGetProgramiv(arg0: int, arg1: int, arg2: IntBuffer) -> None: ...

  @staticmethod
  @overload
  def glGetShaderInfoLog(arg0: int) -> str: ...

  @staticmethod
  @overload
  def glGetShaderInfoLog(arg0: int, arg1: int) -> str: ...

  @staticmethod
  @overload
  def glGetShaderInfoLog(arg0: int, arg1: list[int], arg2: ByteBuffer) -> None: ...

  @staticmethod
  @overload
  def glGetShaderInfoLog(arg0: int, arg1: IntBuffer, arg2: ByteBuffer) -> None: ...

  @staticmethod
  @overload
  def glGetShaderSource(arg0: int) -> str: ...

  @staticmethod
  @overload
  def glGetShaderSource(arg0: int, arg1: int) -> str: ...

  @staticmethod
  @overload
  def glGetShaderSource(arg0: int, arg1: list[int], arg2: ByteBuffer) -> None: ...

  @staticmethod
  @overload
  def glGetShaderSource(arg0: int, arg1: IntBuffer, arg2: ByteBuffer) -> None: ...

  @staticmethod
  def glGetShaderi(arg0: int, arg1: int) -> int: ...

  @staticmethod
  @overload
  def glGetShaderiv(arg0: int, arg1: int, arg2: list[int]) -> None: ...

  @staticmethod
  @overload
  def glGetShaderiv(arg0: int, arg1: int, arg2: IntBuffer) -> None: ...

  @staticmethod
  @overload
  def glGetUniformLocation(arg0: int, arg1: CharSequence) -> int: ...

  @staticmethod
  @overload
  def glGetUniformLocation(arg0: int, arg1: ByteBuffer) -> int: ...

  @staticmethod
  def glGetUniformf(arg0: int, arg1: int) -> float: ...

  @staticmethod
  @overload
  def glGetUniformfv(arg0: int, arg1: int, arg2: list[float]) -> None: ...

  @staticmethod
  @overload
  def glGetUniformfv(arg0: int, arg1: int, arg2: FloatBuffer) -> None: ...

  @staticmethod
  def glGetUniformi(arg0: int, arg1: int) -> int: ...

  @staticmethod
  @overload
  def glGetUniformiv(arg0: int, arg1: int, arg2: list[int]) -> None: ...

  @staticmethod
  @overload
  def glGetUniformiv(arg0: int, arg1: int, arg2: IntBuffer) -> None: ...

  @staticmethod
  def glGetVertexAttribPointer(arg0: int, arg1: int) -> int: ...

  @staticmethod
  def glGetVertexAttribPointerv(arg0: int, arg1: int, arg2: PointerBuffer) -> None: ...

  @staticmethod
  @overload
  def glGetVertexAttribdv(arg0: int, arg1: int, arg2: list[float]) -> None: ...

  @staticmethod
  @overload
  def glGetVertexAttribdv(arg0: int, arg1: int, arg2: DoubleBuffer) -> None: ...

  @staticmethod
  @overload
  def glGetVertexAttribfv(arg0: int, arg1: int, arg2: list[float]) -> None: ...

  @staticmethod
  @overload
  def glGetVertexAttribfv(arg0: int, arg1: int, arg2: FloatBuffer) -> None: ...

  @staticmethod
  def glGetVertexAttribi(arg0: int, arg1: int) -> int: ...

  @staticmethod
  @overload
  def glGetVertexAttribiv(arg0: int, arg1: int, arg2: list[int]) -> None: ...

  @staticmethod
  @overload
  def glGetVertexAttribiv(arg0: int, arg1: int, arg2: IntBuffer) -> None: ...

  @staticmethod
  def glIsProgram(arg0: int) -> bool: ...

  @staticmethod
  def glIsShader(arg0: int) -> bool: ...

  @staticmethod
  def glLinkProgram(arg0: int) -> None: ...

  @staticmethod
  @overload
  def glShaderSource(arg0: int, arg1: list[CharSequence]) -> None: ...

  @staticmethod
  @overload
  def glShaderSource(arg0: int, arg1: CharSequence) -> None: ...

  @staticmethod
  @overload
  def glShaderSource(arg0: int, arg1: PointerBuffer, arg2: list[int]) -> None: ...

  @staticmethod
  @overload
  def glShaderSource(arg0: int, arg1: PointerBuffer, arg2: IntBuffer) -> None: ...

  @staticmethod
  def glStencilFuncSeparate(arg0: int, arg1: int, arg2: int, arg3: int) -> None: ...

  @staticmethod
  def glStencilMaskSeparate(arg0: int, arg1: int) -> None: ...

  @staticmethod
  def glStencilOpSeparate(arg0: int, arg1: int, arg2: int, arg3: int) -> None: ...

  @staticmethod
  def glUniform1f(arg0: int, arg1: float) -> None: ...

  @staticmethod
  @overload
  def glUniform1fv(arg0: int, arg1: list[float]) -> None: ...

  @staticmethod
  @overload
  def glUniform1fv(arg0: int, arg1: FloatBuffer) -> None: ...

  @staticmethod
  def glUniform1i(arg0: int, arg1: int) -> None: ...

  @staticmethod
  @overload
  def glUniform1iv(arg0: int, arg1: list[int]) -> None: ...

  @staticmethod
  @overload
  def glUniform1iv(arg0: int, arg1: IntBuffer) -> None: ...

  @staticmethod
  def glUniform2f(arg0: int, arg1: float, arg2: float) -> None: ...

  @staticmethod
  @overload
  def glUniform2fv(arg0: int, arg1: list[float]) -> None: ...

  @staticmethod
  @overload
  def glUniform2fv(arg0: int, arg1: FloatBuffer) -> None: ...

  @staticmethod
  def glUniform2i(arg0: int, arg1: int, arg2: int) -> None: ...

  @staticmethod
  @overload
  def glUniform2iv(arg0: int, arg1: list[int]) -> None: ...

  @staticmethod
  @overload
  def glUniform2iv(arg0: int, arg1: IntBuffer) -> None: ...

  @staticmethod
  def glUniform3f(arg0: int, arg1: float, arg2: float, arg3: float) -> None: ...

  @staticmethod
  @overload
  def glUniform3fv(arg0: int, arg1: list[float]) -> None: ...

  @staticmethod
  @overload
  def glUniform3fv(arg0: int, arg1: FloatBuffer) -> None: ...

  @staticmethod
  def glUniform3i(arg0: int, arg1: int, arg2: int, arg3: int) -> None: ...

  @staticmethod
  @overload
  def glUniform3iv(arg0: int, arg1: list[int]) -> None: ...

  @staticmethod
  @overload
  def glUniform3iv(arg0: int, arg1: IntBuffer) -> None: ...

  @staticmethod
  def glUniform4f(arg0: int, arg1: float, arg2: float, arg3: float, arg4: float) -> None: ...

  @staticmethod
  @overload
  def glUniform4fv(arg0: int, arg1: list[float]) -> None: ...

  @staticmethod
  @overload
  def glUniform4fv(arg0: int, arg1: FloatBuffer) -> None: ...

  @staticmethod
  def glUniform4i(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int) -> None: ...

  @staticmethod
  @overload
  def glUniform4iv(arg0: int, arg1: list[int]) -> None: ...

  @staticmethod
  @overload
  def glUniform4iv(arg0: int, arg1: IntBuffer) -> None: ...

  @staticmethod
  @overload
  def glUniformMatrix2fv(arg0: int, arg1: bool, arg2: list[float]) -> None: ...

  @staticmethod
  @overload
  def glUniformMatrix2fv(arg0: int, arg1: bool, arg2: FloatBuffer) -> None: ...

  @staticmethod
  @overload
  def glUniformMatrix3fv(arg0: int, arg1: bool, arg2: list[float]) -> None: ...

  @staticmethod
  @overload
  def glUniformMatrix3fv(arg0: int, arg1: bool, arg2: FloatBuffer) -> None: ...

  @staticmethod
  @overload
  def glUniformMatrix4fv(arg0: int, arg1: bool, arg2: list[float]) -> None: ...

  @staticmethod
  @overload
  def glUniformMatrix4fv(arg0: int, arg1: bool, arg2: FloatBuffer) -> None: ...

  @staticmethod
  def glUseProgram(arg0: int) -> None: ...

  @staticmethod
  def glValidateProgram(arg0: int) -> None: ...

  @staticmethod
  def glVertexAttrib1d(arg0: int, arg1: float) -> None: ...

  @staticmethod
  @overload
  def glVertexAttrib1dv(arg0: int, arg1: list[float]) -> None: ...

  @staticmethod
  @overload
  def glVertexAttrib1dv(arg0: int, arg1: DoubleBuffer) -> None: ...

  @staticmethod
  def glVertexAttrib1f(arg0: int, arg1: float) -> None: ...

  @staticmethod
  @overload
  def glVertexAttrib1fv(arg0: int, arg1: list[float]) -> None: ...

  @staticmethod
  @overload
  def glVertexAttrib1fv(arg0: int, arg1: FloatBuffer) -> None: ...

  @staticmethod
  def glVertexAttrib1s(arg0: int, arg1: int) -> None: ...

  @staticmethod
  @overload
  def glVertexAttrib1sv(arg0: int, arg1: list[int]) -> None: ...

  @staticmethod
  @overload
  def glVertexAttrib1sv(arg0: int, arg1: ShortBuffer) -> None: ...

  @staticmethod
  def glVertexAttrib2d(arg0: int, arg1: float, arg2: float) -> None: ...

  @staticmethod
  @overload
  def glVertexAttrib2dv(arg0: int, arg1: list[float]) -> None: ...

  @staticmethod
  @overload
  def glVertexAttrib2dv(arg0: int, arg1: DoubleBuffer) -> None: ...

  @staticmethod
  def glVertexAttrib2f(arg0: int, arg1: float, arg2: float) -> None: ...

  @staticmethod
  @overload
  def glVertexAttrib2fv(arg0: int, arg1: list[float]) -> None: ...

  @staticmethod
  @overload
  def glVertexAttrib2fv(arg0: int, arg1: FloatBuffer) -> None: ...

  @staticmethod
  def glVertexAttrib2s(arg0: int, arg1: int, arg2: int) -> None: ...

  @staticmethod
  @overload
  def glVertexAttrib2sv(arg0: int, arg1: list[int]) -> None: ...

  @staticmethod
  @overload
  def glVertexAttrib2sv(arg0: int, arg1: ShortBuffer) -> None: ...

  @staticmethod
  def glVertexAttrib3d(arg0: int, arg1: float, arg2: float, arg3: float) -> None: ...

  @staticmethod
  @overload
  def glVertexAttrib3dv(arg0: int, arg1: list[float]) -> None: ...

  @staticmethod
  @overload
  def glVertexAttrib3dv(arg0: int, arg1: DoubleBuffer) -> None: ...

  @staticmethod
  def glVertexAttrib3f(arg0: int, arg1: float, arg2: float, arg3: float) -> None: ...

  @staticmethod
  @overload
  def glVertexAttrib3fv(arg0: int, arg1: list[float]) -> None: ...

  @staticmethod
  @overload
  def glVertexAttrib3fv(arg0: int, arg1: FloatBuffer) -> None: ...

  @staticmethod
  def glVertexAttrib3s(arg0: int, arg1: int, arg2: int, arg3: int) -> None: ...

  @staticmethod
  @overload
  def glVertexAttrib3sv(arg0: int, arg1: list[int]) -> None: ...

  @staticmethod
  @overload
  def glVertexAttrib3sv(arg0: int, arg1: ShortBuffer) -> None: ...

  @staticmethod
  def glVertexAttrib4Nbv(arg0: int, arg1: ByteBuffer) -> None: ...

  @staticmethod
  @overload
  def glVertexAttrib4Niv(arg0: int, arg1: list[int]) -> None: ...

  @staticmethod
  @overload
  def glVertexAttrib4Niv(arg0: int, arg1: IntBuffer) -> None: ...

  @staticmethod
  @overload
  def glVertexAttrib4Nsv(arg0: int, arg1: list[int]) -> None: ...

  @staticmethod
  @overload
  def glVertexAttrib4Nsv(arg0: int, arg1: ShortBuffer) -> None: ...

  @staticmethod
  def glVertexAttrib4Nub(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int) -> None: ...

  @staticmethod
  def glVertexAttrib4Nubv(arg0: int, arg1: ByteBuffer) -> None: ...

  @staticmethod
  @overload
  def glVertexAttrib4Nuiv(arg0: int, arg1: list[int]) -> None: ...

  @staticmethod
  @overload
  def glVertexAttrib4Nuiv(arg0: int, arg1: IntBuffer) -> None: ...

  @staticmethod
  @overload
  def glVertexAttrib4Nusv(arg0: int, arg1: list[int]) -> None: ...

  @staticmethod
  @overload
  def glVertexAttrib4Nusv(arg0: int, arg1: ShortBuffer) -> None: ...

  @staticmethod
  def glVertexAttrib4bv(arg0: int, arg1: ByteBuffer) -> None: ...

  @staticmethod
  def glVertexAttrib4d(arg0: int, arg1: float, arg2: float, arg3: float, arg4: float) -> None: ...

  @staticmethod
  @overload
  def glVertexAttrib4dv(arg0: int, arg1: list[float]) -> None: ...

  @staticmethod
  @overload
  def glVertexAttrib4dv(arg0: int, arg1: DoubleBuffer) -> None: ...

  @staticmethod
  def glVertexAttrib4f(arg0: int, arg1: float, arg2: float, arg3: float, arg4: float) -> None: ...

  @staticmethod
  @overload
  def glVertexAttrib4fv(arg0: int, arg1: list[float]) -> None: ...

  @staticmethod
  @overload
  def glVertexAttrib4fv(arg0: int, arg1: FloatBuffer) -> None: ...

  @staticmethod
  @overload
  def glVertexAttrib4iv(arg0: int, arg1: list[int]) -> None: ...

  @staticmethod
  @overload
  def glVertexAttrib4iv(arg0: int, arg1: IntBuffer) -> None: ...

  @staticmethod
  def glVertexAttrib4s(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int) -> None: ...

  @staticmethod
  @overload
  def glVertexAttrib4sv(arg0: int, arg1: list[int]) -> None: ...

  @staticmethod
  @overload
  def glVertexAttrib4sv(arg0: int, arg1: ShortBuffer) -> None: ...

  @staticmethod
  def glVertexAttrib4ubv(arg0: int, arg1: ByteBuffer) -> None: ...

  @staticmethod
  @overload
  def glVertexAttrib4uiv(arg0: int, arg1: list[int]) -> None: ...

  @staticmethod
  @overload
  def glVertexAttrib4uiv(arg0: int, arg1: IntBuffer) -> None: ...

  @staticmethod
  @overload
  def glVertexAttrib4usv(arg0: int, arg1: list[int]) -> None: ...

  @staticmethod
  @overload
  def glVertexAttrib4usv(arg0: int, arg1: ShortBuffer) -> None: ...

  @staticmethod
  @overload
  def glVertexAttribPointer(arg0: int, arg1: int, arg2: int, arg3: bool, arg4: int, arg5: ByteBuffer) -> None: ...

  @staticmethod
  @overload
  def glVertexAttribPointer(arg0: int, arg1: int, arg2: int, arg3: bool, arg4: int, arg5: FloatBuffer) -> None: ...

  @staticmethod
  @overload
  def glVertexAttribPointer(arg0: int, arg1: int, arg2: int, arg3: bool, arg4: int, arg5: IntBuffer) -> None: ...

  @staticmethod
  @overload
  def glVertexAttribPointer(arg0: int, arg1: int, arg2: int, arg3: bool, arg4: int, arg5: ShortBuffer) -> None: ...

  @staticmethod
  @overload
  def glVertexAttribPointer(arg0: int, arg1: int, arg2: int, arg3: bool, arg4: int, arg5: int) -> None: ...

  @staticmethod
  def nglBindAttribLocation(arg0: int, arg1: int, arg2: int) -> None: ...

  @staticmethod
  def nglDrawBuffers(arg0: int, arg1: int) -> None: ...

  @staticmethod
  def nglGetActiveAttrib(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int) -> None: ...

  @staticmethod
  def nglGetActiveUniform(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int) -> None: ...

  @staticmethod
  def nglGetAttachedShaders(arg0: int, arg1: int, arg2: int, arg3: int) -> None: ...

  @staticmethod
  def nglGetAttribLocation(arg0: int, arg1: int) -> int: ...

  @staticmethod
  def nglGetProgramInfoLog(arg0: int, arg1: int, arg2: int, arg3: int) -> None: ...

  @staticmethod
  def nglGetProgramiv(arg0: int, arg1: int, arg2: int) -> None: ...

  @staticmethod
  def nglGetShaderInfoLog(arg0: int, arg1: int, arg2: int, arg3: int) -> None: ...

  @staticmethod
  def nglGetShaderSource(arg0: int, arg1: int, arg2: int, arg3: int) -> None: ...

  @staticmethod
  def nglGetShaderiv(arg0: int, arg1: int, arg2: int) -> None: ...

  @staticmethod
  def nglGetUniformLocation(arg0: int, arg1: int) -> int: ...

  @staticmethod
  def nglGetUniformfv(arg0: int, arg1: int, arg2: int) -> None: ...

  @staticmethod
  def nglGetUniformiv(arg0: int, arg1: int, arg2: int) -> None: ...

  @staticmethod
  def nglGetVertexAttribPointerv(arg0: int, arg1: int, arg2: int) -> None: ...

  @staticmethod
  def nglGetVertexAttribdv(arg0: int, arg1: int, arg2: int) -> None: ...

  @staticmethod
  def nglGetVertexAttribfv(arg0: int, arg1: int, arg2: int) -> None: ...

  @staticmethod
  def nglGetVertexAttribiv(arg0: int, arg1: int, arg2: int) -> None: ...

  @staticmethod
  def nglShaderSource(arg0: int, arg1: int, arg2: int, arg3: int) -> None: ...

  @staticmethod
  def nglUniform1fv(arg0: int, arg1: int, arg2: int) -> None: ...

  @staticmethod
  def nglUniform1iv(arg0: int, arg1: int, arg2: int) -> None: ...

  @staticmethod
  def nglUniform2fv(arg0: int, arg1: int, arg2: int) -> None: ...

  @staticmethod
  def nglUniform2iv(arg0: int, arg1: int, arg2: int) -> None: ...

  @staticmethod
  def nglUniform3fv(arg0: int, arg1: int, arg2: int) -> None: ...

  @staticmethod
  def nglUniform3iv(arg0: int, arg1: int, arg2: int) -> None: ...

  @staticmethod
  def nglUniform4fv(arg0: int, arg1: int, arg2: int) -> None: ...

  @staticmethod
  def nglUniform4iv(arg0: int, arg1: int, arg2: int) -> None: ...

  @staticmethod
  def nglUniformMatrix2fv(arg0: int, arg1: int, arg2: bool, arg3: int) -> None: ...

  @staticmethod
  def nglUniformMatrix3fv(arg0: int, arg1: int, arg2: bool, arg3: int) -> None: ...

  @staticmethod
  def nglUniformMatrix4fv(arg0: int, arg1: int, arg2: bool, arg3: int) -> None: ...

  @staticmethod
  def nglVertexAttrib1dv(arg0: int, arg1: int) -> None: ...

  @staticmethod
  def nglVertexAttrib1fv(arg0: int, arg1: int) -> None: ...

  @staticmethod
  def nglVertexAttrib1sv(arg0: int, arg1: int) -> None: ...

  @staticmethod
  def nglVertexAttrib2dv(arg0: int, arg1: int) -> None: ...

  @staticmethod
  def nglVertexAttrib2fv(arg0: int, arg1: int) -> None: ...

  @staticmethod
  def nglVertexAttrib2sv(arg0: int, arg1: int) -> None: ...

  @staticmethod
  def nglVertexAttrib3dv(arg0: int, arg1: int) -> None: ...

  @staticmethod
  def nglVertexAttrib3fv(arg0: int, arg1: int) -> None: ...

  @staticmethod
  def nglVertexAttrib3sv(arg0: int, arg1: int) -> None: ...

  @staticmethod
  def nglVertexAttrib4Nbv(arg0: int, arg1: int) -> None: ...

  @staticmethod
  def nglVertexAttrib4Niv(arg0: int, arg1: int) -> None: ...

  @staticmethod
  def nglVertexAttrib4Nsv(arg0: int, arg1: int) -> None: ...

  @staticmethod
  def nglVertexAttrib4Nubv(arg0: int, arg1: int) -> None: ...

  @staticmethod
  def nglVertexAttrib4Nuiv(arg0: int, arg1: int) -> None: ...

  @staticmethod
  def nglVertexAttrib4Nusv(arg0: int, arg1: int) -> None: ...

  @staticmethod
  def nglVertexAttrib4bv(arg0: int, arg1: int) -> None: ...

  @staticmethod
  def nglVertexAttrib4dv(arg0: int, arg1: int) -> None: ...

  @staticmethod
  def nglVertexAttrib4fv(arg0: int, arg1: int) -> None: ...

  @staticmethod
  def nglVertexAttrib4iv(arg0: int, arg1: int) -> None: ...

  @staticmethod
  def nglVertexAttrib4sv(arg0: int, arg1: int) -> None: ...

  @staticmethod
  def nglVertexAttrib4ubv(arg0: int, arg1: int) -> None: ...

  @staticmethod
  def nglVertexAttrib4uiv(arg0: int, arg1: int) -> None: ...

  @staticmethod
  def nglVertexAttrib4usv(arg0: int, arg1: int) -> None: ...

  @staticmethod
  def nglVertexAttribPointer(arg0: int, arg1: int, arg2: int, arg3: bool, arg4: int, arg5: int) -> None: ...


class GL21(GL20):

  GL_COMPRESSED_SLUMINANCE: int

  GL_COMPRESSED_SLUMINANCE_ALPHA: int

  GL_COMPRESSED_SRGB: int

  GL_COMPRESSED_SRGB_ALPHA: int

  GL_CURRENT_RASTER_SECONDARY_COLOR: int

  GL_FLOAT_MAT2x3: int

  GL_FLOAT_MAT2x4: int

  GL_FLOAT_MAT3x2: int

  GL_FLOAT_MAT3x4: int

  GL_FLOAT_MAT4x2: int

  GL_FLOAT_MAT4x3: int

  GL_PIXEL_PACK_BUFFER: int

  GL_PIXEL_PACK_BUFFER_BINDING: int

  GL_PIXEL_UNPACK_BUFFER: int

  GL_PIXEL_UNPACK_BUFFER_BINDING: int

  GL_SLUMINANCE: int

  GL_SLUMINANCE8: int

  GL_SLUMINANCE8_ALPHA8: int

  GL_SLUMINANCE_ALPHA: int

  GL_SRGB: int

  GL_SRGB8: int

  GL_SRGB8_ALPHA8: int

  GL_SRGB_ALPHA: int

  @staticmethod
  @overload
  def glUniformMatrix2x3fv(arg0: int, arg1: bool, arg2: list[float]) -> None: ...

  @staticmethod
  @overload
  def glUniformMatrix2x3fv(arg0: int, arg1: bool, arg2: FloatBuffer) -> None: ...

  @staticmethod
  @overload
  def glUniformMatrix2x4fv(arg0: int, arg1: bool, arg2: list[float]) -> None: ...

  @staticmethod
  @overload
  def glUniformMatrix2x4fv(arg0: int, arg1: bool, arg2: FloatBuffer) -> None: ...

  @staticmethod
  @overload
  def glUniformMatrix3x2fv(arg0: int, arg1: bool, arg2: list[float]) -> None: ...

  @staticmethod
  @overload
  def glUniformMatrix3x2fv(arg0: int, arg1: bool, arg2: FloatBuffer) -> None: ...

  @staticmethod
  @overload
  def glUniformMatrix3x4fv(arg0: int, arg1: bool, arg2: list[float]) -> None: ...

  @staticmethod
  @overload
  def glUniformMatrix3x4fv(arg0: int, arg1: bool, arg2: FloatBuffer) -> None: ...

  @staticmethod
  @overload
  def glUniformMatrix4x2fv(arg0: int, arg1: bool, arg2: list[float]) -> None: ...

  @staticmethod
  @overload
  def glUniformMatrix4x2fv(arg0: int, arg1: bool, arg2: FloatBuffer) -> None: ...

  @staticmethod
  @overload
  def glUniformMatrix4x3fv(arg0: int, arg1: bool, arg2: list[float]) -> None: ...

  @staticmethod
  @overload
  def glUniformMatrix4x3fv(arg0: int, arg1: bool, arg2: FloatBuffer) -> None: ...

  @staticmethod
  def nglUniformMatrix2x3fv(arg0: int, arg1: int, arg2: bool, arg3: int) -> None: ...

  @staticmethod
  def nglUniformMatrix2x4fv(arg0: int, arg1: int, arg2: bool, arg3: int) -> None: ...

  @staticmethod
  def nglUniformMatrix3x2fv(arg0: int, arg1: int, arg2: bool, arg3: int) -> None: ...

  @staticmethod
  def nglUniformMatrix3x4fv(arg0: int, arg1: int, arg2: bool, arg3: int) -> None: ...

  @staticmethod
  def nglUniformMatrix4x2fv(arg0: int, arg1: int, arg2: bool, arg3: int) -> None: ...

  @staticmethod
  def nglUniformMatrix4x3fv(arg0: int, arg1: int, arg2: bool, arg3: int) -> None: ...


class GL21C(GL20C):

  GL_COMPRESSED_SRGB: int

  GL_COMPRESSED_SRGB_ALPHA: int

  GL_FLOAT_MAT2x3: int

  GL_FLOAT_MAT2x4: int

  GL_FLOAT_MAT3x2: int

  GL_FLOAT_MAT3x4: int

  GL_FLOAT_MAT4x2: int

  GL_FLOAT_MAT4x3: int

  GL_PIXEL_PACK_BUFFER: int

  GL_PIXEL_PACK_BUFFER_BINDING: int

  GL_PIXEL_UNPACK_BUFFER: int

  GL_PIXEL_UNPACK_BUFFER_BINDING: int

  GL_SRGB: int

  GL_SRGB8: int

  GL_SRGB8_ALPHA8: int

  GL_SRGB_ALPHA: int

  @staticmethod
  @overload
  def glUniformMatrix2x3fv(arg0: int, arg1: bool, arg2: list[float]) -> None: ...

  @staticmethod
  @overload
  def glUniformMatrix2x3fv(arg0: int, arg1: bool, arg2: FloatBuffer) -> None: ...

  @staticmethod
  @overload
  def glUniformMatrix2x4fv(arg0: int, arg1: bool, arg2: list[float]) -> None: ...

  @staticmethod
  @overload
  def glUniformMatrix2x4fv(arg0: int, arg1: bool, arg2: FloatBuffer) -> None: ...

  @staticmethod
  @overload
  def glUniformMatrix3x2fv(arg0: int, arg1: bool, arg2: list[float]) -> None: ...

  @staticmethod
  @overload
  def glUniformMatrix3x2fv(arg0: int, arg1: bool, arg2: FloatBuffer) -> None: ...

  @staticmethod
  @overload
  def glUniformMatrix3x4fv(arg0: int, arg1: bool, arg2: list[float]) -> None: ...

  @staticmethod
  @overload
  def glUniformMatrix3x4fv(arg0: int, arg1: bool, arg2: FloatBuffer) -> None: ...

  @staticmethod
  @overload
  def glUniformMatrix4x2fv(arg0: int, arg1: bool, arg2: list[float]) -> None: ...

  @staticmethod
  @overload
  def glUniformMatrix4x2fv(arg0: int, arg1: bool, arg2: FloatBuffer) -> None: ...

  @staticmethod
  @overload
  def glUniformMatrix4x3fv(arg0: int, arg1: bool, arg2: list[float]) -> None: ...

  @staticmethod
  @overload
  def glUniformMatrix4x3fv(arg0: int, arg1: bool, arg2: FloatBuffer) -> None: ...

  @staticmethod
  def nglUniformMatrix2x3fv(arg0: int, arg1: int, arg2: bool, arg3: int) -> None: ...

  @staticmethod
  def nglUniformMatrix2x4fv(arg0: int, arg1: int, arg2: bool, arg3: int) -> None: ...

  @staticmethod
  def nglUniformMatrix3x2fv(arg0: int, arg1: int, arg2: bool, arg3: int) -> None: ...

  @staticmethod
  def nglUniformMatrix3x4fv(arg0: int, arg1: int, arg2: bool, arg3: int) -> None: ...

  @staticmethod
  def nglUniformMatrix4x2fv(arg0: int, arg1: int, arg2: bool, arg3: int) -> None: ...

  @staticmethod
  def nglUniformMatrix4x3fv(arg0: int, arg1: int, arg2: bool, arg3: int) -> None: ...


class GL30(GL21):

  GL_ALPHA_INTEGER: int

  GL_BGR_INTEGER: int

  GL_BGRA_INTEGER: int

  GL_BLUE_INTEGER: int

  GL_BUFFER_ACCESS_FLAGS: int

  GL_BUFFER_MAP_LENGTH: int

  GL_BUFFER_MAP_OFFSET: int

  GL_CLAMP_FRAGMENT_COLOR: int

  GL_CLAMP_READ_COLOR: int

  GL_CLAMP_VERTEX_COLOR: int

  GL_CLIP_DISTANCE0: int

  GL_CLIP_DISTANCE1: int

  GL_CLIP_DISTANCE2: int

  GL_CLIP_DISTANCE3: int

  GL_CLIP_DISTANCE4: int

  GL_CLIP_DISTANCE5: int

  GL_CLIP_DISTANCE6: int

  GL_CLIP_DISTANCE7: int

  GL_COLOR_ATTACHMENT0: int

  GL_COLOR_ATTACHMENT1: int

  GL_COLOR_ATTACHMENT10: int

  GL_COLOR_ATTACHMENT11: int

  GL_COLOR_ATTACHMENT12: int

  GL_COLOR_ATTACHMENT13: int

  GL_COLOR_ATTACHMENT14: int

  GL_COLOR_ATTACHMENT15: int

  GL_COLOR_ATTACHMENT16: int

  GL_COLOR_ATTACHMENT17: int

  GL_COLOR_ATTACHMENT18: int

  GL_COLOR_ATTACHMENT19: int

  GL_COLOR_ATTACHMENT2: int

  GL_COLOR_ATTACHMENT20: int

  GL_COLOR_ATTACHMENT21: int

  GL_COLOR_ATTACHMENT22: int

  GL_COLOR_ATTACHMENT23: int

  GL_COLOR_ATTACHMENT24: int

  GL_COLOR_ATTACHMENT25: int

  GL_COLOR_ATTACHMENT26: int

  GL_COLOR_ATTACHMENT27: int

  GL_COLOR_ATTACHMENT28: int

  GL_COLOR_ATTACHMENT29: int

  GL_COLOR_ATTACHMENT3: int

  GL_COLOR_ATTACHMENT30: int

  GL_COLOR_ATTACHMENT31: int

  GL_COLOR_ATTACHMENT4: int

  GL_COLOR_ATTACHMENT5: int

  GL_COLOR_ATTACHMENT6: int

  GL_COLOR_ATTACHMENT7: int

  GL_COLOR_ATTACHMENT8: int

  GL_COLOR_ATTACHMENT9: int

  GL_COMPARE_REF_TO_TEXTURE: int

  GL_COMPRESSED_RED: int

  GL_COMPRESSED_RED_RGTC1: int

  GL_COMPRESSED_RG: int

  GL_COMPRESSED_RG_RGTC2: int

  GL_COMPRESSED_SIGNED_RED_RGTC1: int

  GL_COMPRESSED_SIGNED_RG_RGTC2: int

  GL_CONTEXT_FLAG_FORWARD_COMPATIBLE_BIT: int

  GL_CONTEXT_FLAGS: int

  GL_DEPTH24_STENCIL8: int

  GL_DEPTH32F_STENCIL8: int

  GL_DEPTH_ATTACHMENT: int

  GL_DEPTH_COMPONENT32F: int

  GL_DEPTH_STENCIL: int

  GL_DEPTH_STENCIL_ATTACHMENT: int

  GL_DRAW_FRAMEBUFFER: int

  GL_DRAW_FRAMEBUFFER_BINDING: int

  GL_FIXED_ONLY: int

  GL_FLOAT_32_UNSIGNED_INT_24_8_REV: int

  GL_FRAMEBUFFER: int

  GL_FRAMEBUFFER_ATTACHMENT_ALPHA_SIZE: int

  GL_FRAMEBUFFER_ATTACHMENT_BLUE_SIZE: int

  GL_FRAMEBUFFER_ATTACHMENT_COLOR_ENCODING: int

  GL_FRAMEBUFFER_ATTACHMENT_COMPONENT_TYPE: int

  GL_FRAMEBUFFER_ATTACHMENT_DEPTH_SIZE: int

  GL_FRAMEBUFFER_ATTACHMENT_GREEN_SIZE: int

  GL_FRAMEBUFFER_ATTACHMENT_OBJECT_NAME: int

  GL_FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE: int

  GL_FRAMEBUFFER_ATTACHMENT_RED_SIZE: int

  GL_FRAMEBUFFER_ATTACHMENT_STENCIL_SIZE: int

  GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE: int

  GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LAYER: int

  GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL: int

  GL_FRAMEBUFFER_BINDING: int

  GL_FRAMEBUFFER_COMPLETE: int

  GL_FRAMEBUFFER_DEFAULT: int

  GL_FRAMEBUFFER_INCOMPLETE_ATTACHMENT: int

  GL_FRAMEBUFFER_INCOMPLETE_DRAW_BUFFER: int

  GL_FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT: int

  GL_FRAMEBUFFER_INCOMPLETE_MULTISAMPLE: int

  GL_FRAMEBUFFER_INCOMPLETE_READ_BUFFER: int

  GL_FRAMEBUFFER_SRGB: int

  GL_FRAMEBUFFER_UNDEFINED: int

  GL_FRAMEBUFFER_UNSUPPORTED: int

  GL_GREEN_INTEGER: int

  GL_HALF_FLOAT: int

  GL_INDEX: int

  GL_INT_SAMPLER_1D: int

  GL_INT_SAMPLER_1D_ARRAY: int

  GL_INT_SAMPLER_2D: int

  GL_INT_SAMPLER_2D_ARRAY: int

  GL_INT_SAMPLER_3D: int

  GL_INT_SAMPLER_CUBE: int

  GL_INTERLEAVED_ATTRIBS: int

  GL_INVALID_FRAMEBUFFER_OPERATION: int

  GL_MAJOR_VERSION: int

  GL_MAP_FLUSH_EXPLICIT_BIT: int

  GL_MAP_INVALIDATE_BUFFER_BIT: int

  GL_MAP_INVALIDATE_RANGE_BIT: int

  GL_MAP_READ_BIT: int

  GL_MAP_UNSYNCHRONIZED_BIT: int

  GL_MAP_WRITE_BIT: int

  GL_MAX_ARRAY_TEXTURE_LAYERS: int

  GL_MAX_CLIP_DISTANCES: int

  GL_MAX_COLOR_ATTACHMENTS: int

  GL_MAX_PROGRAM_TEXEL_OFFSET: int

  GL_MAX_RENDERBUFFER_SIZE: int

  GL_MAX_SAMPLES: int

  GL_MAX_TRANSFORM_FEEDBACK_INTERLEAVED_COMPONENTS: int

  GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS: int

  GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_COMPONENTS: int

  GL_MAX_VARYING_COMPONENTS: int

  GL_MIN_PROGRAM_TEXEL_OFFSET: int

  GL_MINOR_VERSION: int

  GL_NUM_EXTENSIONS: int

  GL_PRIMITIVES_GENERATED: int

  GL_PROXY_TEXTURE_1D_ARRAY: int

  GL_PROXY_TEXTURE_2D_ARRAY: int

  GL_QUERY_BY_REGION_NO_WAIT: int

  GL_QUERY_BY_REGION_WAIT: int

  GL_QUERY_NO_WAIT: int

  GL_QUERY_WAIT: int

  GL_R11F_G11F_B10F: int

  GL_R16: int

  GL_R16F: int

  GL_R16I: int

  GL_R16UI: int

  GL_R32F: int

  GL_R32I: int

  GL_R32UI: int

  GL_R8: int

  GL_R8I: int

  GL_R8UI: int

  GL_RASTERIZER_DISCARD: int

  GL_READ_FRAMEBUFFER: int

  GL_READ_FRAMEBUFFER_BINDING: int

  GL_RED_INTEGER: int

  GL_RENDERBUFFER: int

  GL_RENDERBUFFER_ALPHA_SIZE: int

  GL_RENDERBUFFER_BINDING: int

  GL_RENDERBUFFER_BLUE_SIZE: int

  GL_RENDERBUFFER_DEPTH_SIZE: int

  GL_RENDERBUFFER_GREEN_SIZE: int

  GL_RENDERBUFFER_HEIGHT: int

  GL_RENDERBUFFER_INTERNAL_FORMAT: int

  GL_RENDERBUFFER_RED_SIZE: int

  GL_RENDERBUFFER_SAMPLES: int

  GL_RENDERBUFFER_STENCIL_SIZE: int

  GL_RENDERBUFFER_WIDTH: int

  GL_RG: int

  GL_RG16: int

  GL_RG16F: int

  GL_RG16I: int

  GL_RG16UI: int

  GL_RG32F: int

  GL_RG32I: int

  GL_RG32UI: int

  GL_RG8: int

  GL_RG8I: int

  GL_RG8UI: int

  GL_RG_INTEGER: int

  GL_RGB16F: int

  GL_RGB16I: int

  GL_RGB16UI: int

  GL_RGB32F: int

  GL_RGB32I: int

  GL_RGB32UI: int

  GL_RGB8I: int

  GL_RGB8UI: int

  GL_RGB9_E5: int

  GL_RGB_INTEGER: int

  GL_RGBA16F: int

  GL_RGBA16I: int

  GL_RGBA16UI: int

  GL_RGBA32F: int

  GL_RGBA32I: int

  GL_RGBA32UI: int

  GL_RGBA8I: int

  GL_RGBA8UI: int

  GL_RGBA_INTEGER: int

  GL_SAMPLER_1D_ARRAY: int

  GL_SAMPLER_1D_ARRAY_SHADOW: int

  GL_SAMPLER_2D_ARRAY: int

  GL_SAMPLER_2D_ARRAY_SHADOW: int

  GL_SAMPLER_CUBE_SHADOW: int

  GL_SEPARATE_ATTRIBS: int

  GL_STENCIL_ATTACHMENT: int

  GL_STENCIL_INDEX1: int

  GL_STENCIL_INDEX16: int

  GL_STENCIL_INDEX4: int

  GL_STENCIL_INDEX8: int

  GL_TEXTURE_1D_ARRAY: int

  GL_TEXTURE_2D_ARRAY: int

  GL_TEXTURE_ALPHA_TYPE: int

  GL_TEXTURE_BINDING_1D_ARRAY: int

  GL_TEXTURE_BINDING_2D_ARRAY: int

  GL_TEXTURE_BLUE_TYPE: int

  GL_TEXTURE_DEPTH_TYPE: int

  GL_TEXTURE_GREEN_TYPE: int

  GL_TEXTURE_INTENSITY_TYPE: int

  GL_TEXTURE_LUMINANCE_TYPE: int

  GL_TEXTURE_RED_TYPE: int

  GL_TEXTURE_SHARED_SIZE: int

  GL_TEXTURE_STENCIL_SIZE: int

  GL_TRANSFORM_FEEDBACK_BUFFER: int

  GL_TRANSFORM_FEEDBACK_BUFFER_BINDING: int

  GL_TRANSFORM_FEEDBACK_BUFFER_MODE: int

  GL_TRANSFORM_FEEDBACK_BUFFER_SIZE: int

  GL_TRANSFORM_FEEDBACK_BUFFER_START: int

  GL_TRANSFORM_FEEDBACK_PRIMITIVES_WRITTEN: int

  GL_TRANSFORM_FEEDBACK_VARYING_MAX_LENGTH: int

  GL_TRANSFORM_FEEDBACK_VARYINGS: int

  GL_UNSIGNED_INT_10F_11F_11F_REV: int

  GL_UNSIGNED_INT_24_8: int

  GL_UNSIGNED_INT_5_9_9_9_REV: int

  GL_UNSIGNED_INT_SAMPLER_1D: int

  GL_UNSIGNED_INT_SAMPLER_1D_ARRAY: int

  GL_UNSIGNED_INT_SAMPLER_2D: int

  GL_UNSIGNED_INT_SAMPLER_2D_ARRAY: int

  GL_UNSIGNED_INT_SAMPLER_3D: int

  GL_UNSIGNED_INT_SAMPLER_CUBE: int

  GL_UNSIGNED_INT_VEC2: int

  GL_UNSIGNED_INT_VEC3: int

  GL_UNSIGNED_INT_VEC4: int

  GL_UNSIGNED_NORMALIZED: int

  GL_VERTEX_ARRAY_BINDING: int

  GL_VERTEX_ATTRIB_ARRAY_INTEGER: int

  @staticmethod
  def glBeginConditionalRender(arg0: int, arg1: int) -> None: ...

  @staticmethod
  def glBeginTransformFeedback(arg0: int) -> None: ...

  @staticmethod
  def glBindBufferBase(arg0: int, arg1: int, arg2: int) -> None: ...

  @staticmethod
  def glBindBufferRange(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int) -> None: ...

  @staticmethod
  @overload
  def glBindFragDataLocation(arg0: int, arg1: int, arg2: CharSequence) -> None: ...

  @staticmethod
  @overload
  def glBindFragDataLocation(arg0: int, arg1: int, arg2: ByteBuffer) -> None: ...

  @staticmethod
  def glBindFramebuffer(arg0: int, arg1: int) -> None: ...

  @staticmethod
  def glBindRenderbuffer(arg0: int, arg1: int) -> None: ...

  @staticmethod
  def glBindVertexArray(arg0: int) -> None: ...

  @staticmethod
  def glBlitFramebuffer(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int, arg7: int, arg8: int, arg9: int) -> None: ...

  @staticmethod
  def glCheckFramebufferStatus(arg0: int) -> int: ...

  @staticmethod
  def glClampColor(arg0: int, arg1: int) -> None: ...

  @staticmethod
  def glClearBufferfi(arg0: int, arg1: int, arg2: float, arg3: int) -> None: ...

  @staticmethod
  @overload
  def glClearBufferfv(arg0: int, arg1: int, arg2: list[float]) -> None: ...

  @staticmethod
  @overload
  def glClearBufferfv(arg0: int, arg1: int, arg2: FloatBuffer) -> None: ...

  @staticmethod
  @overload
  def glClearBufferiv(arg0: int, arg1: int, arg2: list[int]) -> None: ...

  @staticmethod
  @overload
  def glClearBufferiv(arg0: int, arg1: int, arg2: IntBuffer) -> None: ...

  @staticmethod
  @overload
  def glClearBufferuiv(arg0: int, arg1: int, arg2: list[int]) -> None: ...

  @staticmethod
  @overload
  def glClearBufferuiv(arg0: int, arg1: int, arg2: IntBuffer) -> None: ...

  @staticmethod
  def glColorMaski(arg0: int, arg1: bool, arg2: bool, arg3: bool, arg4: bool) -> None: ...

  @staticmethod
  @overload
  def glDeleteFramebuffers(arg0: list[int]) -> None: ...

  @staticmethod
  @overload
  def glDeleteFramebuffers(arg0: int) -> None: ...

  @staticmethod
  @overload
  def glDeleteFramebuffers(arg0: IntBuffer) -> None: ...

  @staticmethod
  @overload
  def glDeleteRenderbuffers(arg0: list[int]) -> None: ...

  @staticmethod
  @overload
  def glDeleteRenderbuffers(arg0: int) -> None: ...

  @staticmethod
  @overload
  def glDeleteRenderbuffers(arg0: IntBuffer) -> None: ...

  @staticmethod
  @overload
  def glDeleteVertexArrays(arg0: list[int]) -> None: ...

  @staticmethod
  @overload
  def glDeleteVertexArrays(arg0: int) -> None: ...

  @staticmethod
  @overload
  def glDeleteVertexArrays(arg0: IntBuffer) -> None: ...

  @staticmethod
  def glDisablei(arg0: int, arg1: int) -> None: ...

  @staticmethod
  def glEnablei(arg0: int, arg1: int) -> None: ...

  @staticmethod
  def glEndConditionalRender() -> None: ...

  @staticmethod
  def glEndTransformFeedback() -> None: ...

  @staticmethod
  def glFlushMappedBufferRange(arg0: int, arg1: int, arg2: int) -> None: ...

  @staticmethod
  def glFramebufferRenderbuffer(arg0: int, arg1: int, arg2: int, arg3: int) -> None: ...

  @staticmethod
  def glFramebufferTexture1D(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int) -> None: ...

  @staticmethod
  def glFramebufferTexture2D(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int) -> None: ...

  @staticmethod
  def glFramebufferTexture3D(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int) -> None: ...

  @staticmethod
  def glFramebufferTextureLayer(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int) -> None: ...

  @staticmethod
  @overload
  def glGenFramebuffers() -> int: ...

  @staticmethod
  @overload
  def glGenFramebuffers(arg0: list[int]) -> None: ...

  @staticmethod
  @overload
  def glGenFramebuffers(arg0: IntBuffer) -> None: ...

  @staticmethod
  @overload
  def glGenRenderbuffers() -> int: ...

  @staticmethod
  @overload
  def glGenRenderbuffers(arg0: list[int]) -> None: ...

  @staticmethod
  @overload
  def glGenRenderbuffers(arg0: IntBuffer) -> None: ...

  @staticmethod
  @overload
  def glGenVertexArrays() -> int: ...

  @staticmethod
  @overload
  def glGenVertexArrays(arg0: list[int]) -> None: ...

  @staticmethod
  @overload
  def glGenVertexArrays(arg0: IntBuffer) -> None: ...

  @staticmethod
  def glGenerateMipmap(arg0: int) -> None: ...

  @staticmethod
  def glGetBooleani(arg0: int, arg1: int) -> bool: ...

  @staticmethod
  def glGetBooleani_v(arg0: int, arg1: int, arg2: ByteBuffer) -> None: ...

  @staticmethod
  @overload
  def glGetFragDataLocation(arg0: int, arg1: CharSequence) -> int: ...

  @staticmethod
  @overload
  def glGetFragDataLocation(arg0: int, arg1: ByteBuffer) -> int: ...

  @staticmethod
  def glGetFramebufferAttachmentParameteri(arg0: int, arg1: int, arg2: int) -> int: ...

  @staticmethod
  @overload
  def glGetFramebufferAttachmentParameteriv(arg0: int, arg1: int, arg2: int, arg3: list[int]) -> None: ...

  @staticmethod
  @overload
  def glGetFramebufferAttachmentParameteriv(arg0: int, arg1: int, arg2: int, arg3: IntBuffer) -> None: ...

  @staticmethod
  def glGetIntegeri(arg0: int, arg1: int) -> int: ...

  @staticmethod
  @overload
  def glGetIntegeri_v(arg0: int, arg1: int, arg2: list[int]) -> None: ...

  @staticmethod
  @overload
  def glGetIntegeri_v(arg0: int, arg1: int, arg2: IntBuffer) -> None: ...

  @staticmethod
  def glGetRenderbufferParameteri(arg0: int, arg1: int) -> int: ...

  @staticmethod
  @overload
  def glGetRenderbufferParameteriv(arg0: int, arg1: int, arg2: list[int]) -> None: ...

  @staticmethod
  @overload
  def glGetRenderbufferParameteriv(arg0: int, arg1: int, arg2: IntBuffer) -> None: ...

  @staticmethod
  def glGetStringi(arg0: int, arg1: int) -> str: ...

  @staticmethod
  def glGetTexParameterIi(arg0: int, arg1: int) -> int: ...

  @staticmethod
  @overload
  def glGetTexParameterIiv(arg0: int, arg1: int, arg2: list[int]) -> None: ...

  @staticmethod
  @overload
  def glGetTexParameterIiv(arg0: int, arg1: int, arg2: IntBuffer) -> None: ...

  @staticmethod
  def glGetTexParameterIui(arg0: int, arg1: int) -> int: ...

  @staticmethod
  @overload
  def glGetTexParameterIuiv(arg0: int, arg1: int, arg2: list[int]) -> None: ...

  @staticmethod
  @overload
  def glGetTexParameterIuiv(arg0: int, arg1: int, arg2: IntBuffer) -> None: ...

  @staticmethod
  @overload
  def glGetTransformFeedbackVarying(arg0: int, arg1: int, arg2: IntBuffer, arg3: IntBuffer) -> str: ...

  @staticmethod
  @overload
  def glGetTransformFeedbackVarying(arg0: int, arg1: int, arg2: int, arg3: IntBuffer, arg4: IntBuffer) -> str: ...

  @staticmethod
  @overload
  def glGetTransformFeedbackVarying(arg0: int, arg1: int, arg2: list[int], arg3: list[int], arg4: list[int], arg5: ByteBuffer) -> None: ...

  @staticmethod
  @overload
  def glGetTransformFeedbackVarying(arg0: int, arg1: int, arg2: IntBuffer, arg3: IntBuffer, arg4: IntBuffer, arg5: ByteBuffer) -> None: ...

  @staticmethod
  def glGetUniformui(arg0: int, arg1: int) -> int: ...

  @staticmethod
  @overload
  def glGetUniformuiv(arg0: int, arg1: int, arg2: list[int]) -> None: ...

  @staticmethod
  @overload
  def glGetUniformuiv(arg0: int, arg1: int, arg2: IntBuffer) -> None: ...

  @staticmethod
  def glGetVertexAttribIi(arg0: int, arg1: int) -> int: ...

  @staticmethod
  @overload
  def glGetVertexAttribIiv(arg0: int, arg1: int, arg2: list[int]) -> None: ...

  @staticmethod
  @overload
  def glGetVertexAttribIiv(arg0: int, arg1: int, arg2: IntBuffer) -> None: ...

  @staticmethod
  def glGetVertexAttribIui(arg0: int, arg1: int) -> int: ...

  @staticmethod
  @overload
  def glGetVertexAttribIuiv(arg0: int, arg1: int, arg2: list[int]) -> None: ...

  @staticmethod
  @overload
  def glGetVertexAttribIuiv(arg0: int, arg1: int, arg2: IntBuffer) -> None: ...

  @staticmethod
  def glIsEnabledi(arg0: int, arg1: int) -> bool: ...

  @staticmethod
  def glIsFramebuffer(arg0: int) -> bool: ...

  @staticmethod
  def glIsRenderbuffer(arg0: int) -> bool: ...

  @staticmethod
  def glIsVertexArray(arg0: int) -> bool: ...

  @staticmethod
  @overload
  def glMapBufferRange(arg0: int, arg1: int, arg2: int, arg3: int) -> ByteBuffer: ...

  @staticmethod
  @overload
  def glMapBufferRange(arg0: int, arg1: int, arg2: int, arg3: int, arg4: ByteBuffer) -> ByteBuffer: ...

  @staticmethod
  def glRenderbufferStorage(arg0: int, arg1: int, arg2: int, arg3: int) -> None: ...

  @staticmethod
  def glRenderbufferStorageMultisample(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int) -> None: ...

  @staticmethod
  def glTexParameterIi(arg0: int, arg1: int, arg2: int) -> None: ...

  @staticmethod
  @overload
  def glTexParameterIiv(arg0: int, arg1: int, arg2: list[int]) -> None: ...

  @staticmethod
  @overload
  def glTexParameterIiv(arg0: int, arg1: int, arg2: IntBuffer) -> None: ...

  @staticmethod
  def glTexParameterIui(arg0: int, arg1: int, arg2: int) -> None: ...

  @staticmethod
  @overload
  def glTexParameterIuiv(arg0: int, arg1: int, arg2: list[int]) -> None: ...

  @staticmethod
  @overload
  def glTexParameterIuiv(arg0: int, arg1: int, arg2: IntBuffer) -> None: ...

  @staticmethod
  @overload
  def glTransformFeedbackVaryings(arg0: int, arg1: list[CharSequence], arg2: int) -> None: ...

  @staticmethod
  @overload
  def glTransformFeedbackVaryings(arg0: int, arg1: CharSequence, arg2: int) -> None: ...

  @staticmethod
  @overload
  def glTransformFeedbackVaryings(arg0: int, arg1: PointerBuffer, arg2: int) -> None: ...

  @staticmethod
  def glUniform1ui(arg0: int, arg1: int) -> None: ...

  @staticmethod
  @overload
  def glUniform1uiv(arg0: int, arg1: list[int]) -> None: ...

  @staticmethod
  @overload
  def glUniform1uiv(arg0: int, arg1: IntBuffer) -> None: ...

  @staticmethod
  def glUniform2ui(arg0: int, arg1: int, arg2: int) -> None: ...

  @staticmethod
  @overload
  def glUniform2uiv(arg0: int, arg1: list[int]) -> None: ...

  @staticmethod
  @overload
  def glUniform2uiv(arg0: int, arg1: IntBuffer) -> None: ...

  @staticmethod
  def glUniform3ui(arg0: int, arg1: int, arg2: int, arg3: int) -> None: ...

  @staticmethod
  @overload
  def glUniform3uiv(arg0: int, arg1: list[int]) -> None: ...

  @staticmethod
  @overload
  def glUniform3uiv(arg0: int, arg1: IntBuffer) -> None: ...

  @staticmethod
  def glUniform4ui(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int) -> None: ...

  @staticmethod
  @overload
  def glUniform4uiv(arg0: int, arg1: list[int]) -> None: ...

  @staticmethod
  @overload
  def glUniform4uiv(arg0: int, arg1: IntBuffer) -> None: ...

  @staticmethod
  def glVertexAttribI1i(arg0: int, arg1: int) -> None: ...

  @staticmethod
  @overload
  def glVertexAttribI1iv(arg0: int, arg1: list[int]) -> None: ...

  @staticmethod
  @overload
  def glVertexAttribI1iv(arg0: int, arg1: IntBuffer) -> None: ...

  @staticmethod
  def glVertexAttribI1ui(arg0: int, arg1: int) -> None: ...

  @staticmethod
  @overload
  def glVertexAttribI1uiv(arg0: int, arg1: list[int]) -> None: ...

  @staticmethod
  @overload
  def glVertexAttribI1uiv(arg0: int, arg1: IntBuffer) -> None: ...

  @staticmethod
  def glVertexAttribI2i(arg0: int, arg1: int, arg2: int) -> None: ...

  @staticmethod
  @overload
  def glVertexAttribI2iv(arg0: int, arg1: list[int]) -> None: ...

  @staticmethod
  @overload
  def glVertexAttribI2iv(arg0: int, arg1: IntBuffer) -> None: ...

  @staticmethod
  def glVertexAttribI2ui(arg0: int, arg1: int, arg2: int) -> None: ...

  @staticmethod
  @overload
  def glVertexAttribI2uiv(arg0: int, arg1: list[int]) -> None: ...

  @staticmethod
  @overload
  def glVertexAttribI2uiv(arg0: int, arg1: IntBuffer) -> None: ...

  @staticmethod
  def glVertexAttribI3i(arg0: int, arg1: int, arg2: int, arg3: int) -> None: ...

  @staticmethod
  @overload
  def glVertexAttribI3iv(arg0: int, arg1: list[int]) -> None: ...

  @staticmethod
  @overload
  def glVertexAttribI3iv(arg0: int, arg1: IntBuffer) -> None: ...

  @staticmethod
  def glVertexAttribI3ui(arg0: int, arg1: int, arg2: int, arg3: int) -> None: ...

  @staticmethod
  @overload
  def glVertexAttribI3uiv(arg0: int, arg1: list[int]) -> None: ...

  @staticmethod
  @overload
  def glVertexAttribI3uiv(arg0: int, arg1: IntBuffer) -> None: ...

  @staticmethod
  def glVertexAttribI4bv(arg0: int, arg1: ByteBuffer) -> None: ...

  @staticmethod
  def glVertexAttribI4i(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int) -> None: ...

  @staticmethod
  @overload
  def glVertexAttribI4iv(arg0: int, arg1: list[int]) -> None: ...

  @staticmethod
  @overload
  def glVertexAttribI4iv(arg0: int, arg1: IntBuffer) -> None: ...

  @staticmethod
  @overload
  def glVertexAttribI4sv(arg0: int, arg1: list[int]) -> None: ...

  @staticmethod
  @overload
  def glVertexAttribI4sv(arg0: int, arg1: ShortBuffer) -> None: ...

  @staticmethod
  def glVertexAttribI4ubv(arg0: int, arg1: ByteBuffer) -> None: ...

  @staticmethod
  def glVertexAttribI4ui(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int) -> None: ...

  @staticmethod
  @overload
  def glVertexAttribI4uiv(arg0: int, arg1: list[int]) -> None: ...

  @staticmethod
  @overload
  def glVertexAttribI4uiv(arg0: int, arg1: IntBuffer) -> None: ...

  @staticmethod
  @overload
  def glVertexAttribI4usv(arg0: int, arg1: list[int]) -> None: ...

  @staticmethod
  @overload
  def glVertexAttribI4usv(arg0: int, arg1: ShortBuffer) -> None: ...

  @staticmethod
  @overload
  def glVertexAttribIPointer(arg0: int, arg1: int, arg2: int, arg3: int, arg4: ByteBuffer) -> None: ...

  @staticmethod
  @overload
  def glVertexAttribIPointer(arg0: int, arg1: int, arg2: int, arg3: int, arg4: IntBuffer) -> None: ...

  @staticmethod
  @overload
  def glVertexAttribIPointer(arg0: int, arg1: int, arg2: int, arg3: int, arg4: ShortBuffer) -> None: ...

  @staticmethod
  @overload
  def glVertexAttribIPointer(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int) -> None: ...

  @staticmethod
  def nglBindFragDataLocation(arg0: int, arg1: int, arg2: int) -> None: ...

  @staticmethod
  def nglClearBufferfv(arg0: int, arg1: int, arg2: int) -> None: ...

  @staticmethod
  def nglClearBufferiv(arg0: int, arg1: int, arg2: int) -> None: ...

  @staticmethod
  def nglClearBufferuiv(arg0: int, arg1: int, arg2: int) -> None: ...

  @staticmethod
  def nglDeleteFramebuffers(arg0: int, arg1: int) -> None: ...

  @staticmethod
  def nglDeleteRenderbuffers(arg0: int, arg1: int) -> None: ...

  @staticmethod
  def nglDeleteVertexArrays(arg0: int, arg1: int) -> None: ...

  @staticmethod
  def nglGenFramebuffers(arg0: int, arg1: int) -> None: ...

  @staticmethod
  def nglGenRenderbuffers(arg0: int, arg1: int) -> None: ...

  @staticmethod
  def nglGenVertexArrays(arg0: int, arg1: int) -> None: ...

  @staticmethod
  def nglGetBooleani_v(arg0: int, arg1: int, arg2: int) -> None: ...

  @staticmethod
  def nglGetFragDataLocation(arg0: int, arg1: int) -> int: ...

  @staticmethod
  def nglGetFramebufferAttachmentParameteriv(arg0: int, arg1: int, arg2: int, arg3: int) -> None: ...

  @staticmethod
  def nglGetIntegeri_v(arg0: int, arg1: int, arg2: int) -> None: ...

  @staticmethod
  def nglGetRenderbufferParameteriv(arg0: int, arg1: int, arg2: int) -> None: ...

  @staticmethod
  def nglGetStringi(arg0: int, arg1: int) -> int: ...

  @staticmethod
  def nglGetTexParameterIiv(arg0: int, arg1: int, arg2: int) -> None: ...

  @staticmethod
  def nglGetTexParameterIuiv(arg0: int, arg1: int, arg2: int) -> None: ...

  @staticmethod
  def nglGetTransformFeedbackVarying(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int) -> None: ...

  @staticmethod
  def nglGetUniformuiv(arg0: int, arg1: int, arg2: int) -> None: ...

  @staticmethod
  def nglGetVertexAttribIiv(arg0: int, arg1: int, arg2: int) -> None: ...

  @staticmethod
  def nglGetVertexAttribIuiv(arg0: int, arg1: int, arg2: int) -> None: ...

  @staticmethod
  def nglMapBufferRange(arg0: int, arg1: int, arg2: int, arg3: int) -> int: ...

  @staticmethod
  def nglTexParameterIiv(arg0: int, arg1: int, arg2: int) -> None: ...

  @staticmethod
  def nglTexParameterIuiv(arg0: int, arg1: int, arg2: int) -> None: ...

  @staticmethod
  def nglTransformFeedbackVaryings(arg0: int, arg1: int, arg2: int, arg3: int) -> None: ...

  @staticmethod
  def nglUniform1uiv(arg0: int, arg1: int, arg2: int) -> None: ...

  @staticmethod
  def nglUniform2uiv(arg0: int, arg1: int, arg2: int) -> None: ...

  @staticmethod
  def nglUniform3uiv(arg0: int, arg1: int, arg2: int) -> None: ...

  @staticmethod
  def nglUniform4uiv(arg0: int, arg1: int, arg2: int) -> None: ...

  @staticmethod
  def nglVertexAttribI1iv(arg0: int, arg1: int) -> None: ...

  @staticmethod
  def nglVertexAttribI1uiv(arg0: int, arg1: int) -> None: ...

  @staticmethod
  def nglVertexAttribI2iv(arg0: int, arg1: int) -> None: ...

  @staticmethod
  def nglVertexAttribI2uiv(arg0: int, arg1: int) -> None: ...

  @staticmethod
  def nglVertexAttribI3iv(arg0: int, arg1: int) -> None: ...

  @staticmethod
  def nglVertexAttribI3uiv(arg0: int, arg1: int) -> None: ...

  @staticmethod
  def nglVertexAttribI4bv(arg0: int, arg1: int) -> None: ...

  @staticmethod
  def nglVertexAttribI4iv(arg0: int, arg1: int) -> None: ...

  @staticmethod
  def nglVertexAttribI4sv(arg0: int, arg1: int) -> None: ...

  @staticmethod
  def nglVertexAttribI4ubv(arg0: int, arg1: int) -> None: ...

  @staticmethod
  def nglVertexAttribI4uiv(arg0: int, arg1: int) -> None: ...

  @staticmethod
  def nglVertexAttribI4usv(arg0: int, arg1: int) -> None: ...

  @staticmethod
  def nglVertexAttribIPointer(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int) -> None: ...


class GL30C(GL21C):

  GL_BGR_INTEGER: int

  GL_BGRA_INTEGER: int

  GL_BLUE_INTEGER: int

  GL_BUFFER_ACCESS_FLAGS: int

  GL_BUFFER_MAP_LENGTH: int

  GL_BUFFER_MAP_OFFSET: int

  GL_CLAMP_READ_COLOR: int

  GL_CLIP_DISTANCE0: int

  GL_CLIP_DISTANCE1: int

  GL_CLIP_DISTANCE2: int

  GL_CLIP_DISTANCE3: int

  GL_CLIP_DISTANCE4: int

  GL_CLIP_DISTANCE5: int

  GL_CLIP_DISTANCE6: int

  GL_CLIP_DISTANCE7: int

  GL_COLOR_ATTACHMENT0: int

  GL_COLOR_ATTACHMENT1: int

  GL_COLOR_ATTACHMENT10: int

  GL_COLOR_ATTACHMENT11: int

  GL_COLOR_ATTACHMENT12: int

  GL_COLOR_ATTACHMENT13: int

  GL_COLOR_ATTACHMENT14: int

  GL_COLOR_ATTACHMENT15: int

  GL_COLOR_ATTACHMENT16: int

  GL_COLOR_ATTACHMENT17: int

  GL_COLOR_ATTACHMENT18: int

  GL_COLOR_ATTACHMENT19: int

  GL_COLOR_ATTACHMENT2: int

  GL_COLOR_ATTACHMENT20: int

  GL_COLOR_ATTACHMENT21: int

  GL_COLOR_ATTACHMENT22: int

  GL_COLOR_ATTACHMENT23: int

  GL_COLOR_ATTACHMENT24: int

  GL_COLOR_ATTACHMENT25: int

  GL_COLOR_ATTACHMENT26: int

  GL_COLOR_ATTACHMENT27: int

  GL_COLOR_ATTACHMENT28: int

  GL_COLOR_ATTACHMENT29: int

  GL_COLOR_ATTACHMENT3: int

  GL_COLOR_ATTACHMENT30: int

  GL_COLOR_ATTACHMENT31: int

  GL_COLOR_ATTACHMENT4: int

  GL_COLOR_ATTACHMENT5: int

  GL_COLOR_ATTACHMENT6: int

  GL_COLOR_ATTACHMENT7: int

  GL_COLOR_ATTACHMENT8: int

  GL_COLOR_ATTACHMENT9: int

  GL_COMPARE_REF_TO_TEXTURE: int

  GL_COMPRESSED_RED: int

  GL_COMPRESSED_RED_RGTC1: int

  GL_COMPRESSED_RG: int

  GL_COMPRESSED_RG_RGTC2: int

  GL_COMPRESSED_SIGNED_RED_RGTC1: int

  GL_COMPRESSED_SIGNED_RG_RGTC2: int

  GL_CONTEXT_FLAG_FORWARD_COMPATIBLE_BIT: int

  GL_CONTEXT_FLAGS: int

  GL_DEPTH24_STENCIL8: int

  GL_DEPTH32F_STENCIL8: int

  GL_DEPTH_ATTACHMENT: int

  GL_DEPTH_COMPONENT32F: int

  GL_DEPTH_STENCIL: int

  GL_DEPTH_STENCIL_ATTACHMENT: int

  GL_DRAW_FRAMEBUFFER: int

  GL_DRAW_FRAMEBUFFER_BINDING: int

  GL_FIXED_ONLY: int

  GL_FLOAT_32_UNSIGNED_INT_24_8_REV: int

  GL_FRAMEBUFFER: int

  GL_FRAMEBUFFER_ATTACHMENT_ALPHA_SIZE: int

  GL_FRAMEBUFFER_ATTACHMENT_BLUE_SIZE: int

  GL_FRAMEBUFFER_ATTACHMENT_COLOR_ENCODING: int

  GL_FRAMEBUFFER_ATTACHMENT_COMPONENT_TYPE: int

  GL_FRAMEBUFFER_ATTACHMENT_DEPTH_SIZE: int

  GL_FRAMEBUFFER_ATTACHMENT_GREEN_SIZE: int

  GL_FRAMEBUFFER_ATTACHMENT_OBJECT_NAME: int

  GL_FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE: int

  GL_FRAMEBUFFER_ATTACHMENT_RED_SIZE: int

  GL_FRAMEBUFFER_ATTACHMENT_STENCIL_SIZE: int

  GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE: int

  GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LAYER: int

  GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL: int

  GL_FRAMEBUFFER_BINDING: int

  GL_FRAMEBUFFER_COMPLETE: int

  GL_FRAMEBUFFER_DEFAULT: int

  GL_FRAMEBUFFER_INCOMPLETE_ATTACHMENT: int

  GL_FRAMEBUFFER_INCOMPLETE_DRAW_BUFFER: int

  GL_FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT: int

  GL_FRAMEBUFFER_INCOMPLETE_MULTISAMPLE: int

  GL_FRAMEBUFFER_INCOMPLETE_READ_BUFFER: int

  GL_FRAMEBUFFER_SRGB: int

  GL_FRAMEBUFFER_UNDEFINED: int

  GL_FRAMEBUFFER_UNSUPPORTED: int

  GL_GREEN_INTEGER: int

  GL_HALF_FLOAT: int

  GL_INT_SAMPLER_1D: int

  GL_INT_SAMPLER_1D_ARRAY: int

  GL_INT_SAMPLER_2D: int

  GL_INT_SAMPLER_2D_ARRAY: int

  GL_INT_SAMPLER_3D: int

  GL_INT_SAMPLER_CUBE: int

  GL_INTERLEAVED_ATTRIBS: int

  GL_INVALID_FRAMEBUFFER_OPERATION: int

  GL_MAJOR_VERSION: int

  GL_MAP_FLUSH_EXPLICIT_BIT: int

  GL_MAP_INVALIDATE_BUFFER_BIT: int

  GL_MAP_INVALIDATE_RANGE_BIT: int

  GL_MAP_READ_BIT: int

  GL_MAP_UNSYNCHRONIZED_BIT: int

  GL_MAP_WRITE_BIT: int

  GL_MAX_ARRAY_TEXTURE_LAYERS: int

  GL_MAX_CLIP_DISTANCES: int

  GL_MAX_COLOR_ATTACHMENTS: int

  GL_MAX_PROGRAM_TEXEL_OFFSET: int

  GL_MAX_RENDERBUFFER_SIZE: int

  GL_MAX_SAMPLES: int

  GL_MAX_TRANSFORM_FEEDBACK_INTERLEAVED_COMPONENTS: int

  GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS: int

  GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_COMPONENTS: int

  GL_MAX_VARYING_COMPONENTS: int

  GL_MIN_PROGRAM_TEXEL_OFFSET: int

  GL_MINOR_VERSION: int

  GL_NUM_EXTENSIONS: int

  GL_PRIMITIVES_GENERATED: int

  GL_PROXY_TEXTURE_1D_ARRAY: int

  GL_PROXY_TEXTURE_2D_ARRAY: int

  GL_QUERY_BY_REGION_NO_WAIT: int

  GL_QUERY_BY_REGION_WAIT: int

  GL_QUERY_NO_WAIT: int

  GL_QUERY_WAIT: int

  GL_R11F_G11F_B10F: int

  GL_R16: int

  GL_R16F: int

  GL_R16I: int

  GL_R16UI: int

  GL_R32F: int

  GL_R32I: int

  GL_R32UI: int

  GL_R8: int

  GL_R8I: int

  GL_R8UI: int

  GL_RASTERIZER_DISCARD: int

  GL_READ_FRAMEBUFFER: int

  GL_READ_FRAMEBUFFER_BINDING: int

  GL_RED_INTEGER: int

  GL_RENDERBUFFER: int

  GL_RENDERBUFFER_ALPHA_SIZE: int

  GL_RENDERBUFFER_BINDING: int

  GL_RENDERBUFFER_BLUE_SIZE: int

  GL_RENDERBUFFER_DEPTH_SIZE: int

  GL_RENDERBUFFER_GREEN_SIZE: int

  GL_RENDERBUFFER_HEIGHT: int

  GL_RENDERBUFFER_INTERNAL_FORMAT: int

  GL_RENDERBUFFER_RED_SIZE: int

  GL_RENDERBUFFER_SAMPLES: int

  GL_RENDERBUFFER_STENCIL_SIZE: int

  GL_RENDERBUFFER_WIDTH: int

  GL_RG: int

  GL_RG16: int

  GL_RG16F: int

  GL_RG16I: int

  GL_RG16UI: int

  GL_RG32F: int

  GL_RG32I: int

  GL_RG32UI: int

  GL_RG8: int

  GL_RG8I: int

  GL_RG8UI: int

  GL_RG_INTEGER: int

  GL_RGB16F: int

  GL_RGB16I: int

  GL_RGB16UI: int

  GL_RGB32F: int

  GL_RGB32I: int

  GL_RGB32UI: int

  GL_RGB8I: int

  GL_RGB8UI: int

  GL_RGB9_E5: int

  GL_RGB_INTEGER: int

  GL_RGBA16F: int

  GL_RGBA16I: int

  GL_RGBA16UI: int

  GL_RGBA32F: int

  GL_RGBA32I: int

  GL_RGBA32UI: int

  GL_RGBA8I: int

  GL_RGBA8UI: int

  GL_RGBA_INTEGER: int

  GL_SAMPLER_1D_ARRAY: int

  GL_SAMPLER_1D_ARRAY_SHADOW: int

  GL_SAMPLER_2D_ARRAY: int

  GL_SAMPLER_2D_ARRAY_SHADOW: int

  GL_SAMPLER_CUBE_SHADOW: int

  GL_SEPARATE_ATTRIBS: int

  GL_STENCIL_ATTACHMENT: int

  GL_STENCIL_INDEX1: int

  GL_STENCIL_INDEX16: int

  GL_STENCIL_INDEX4: int

  GL_STENCIL_INDEX8: int

  GL_TEXTURE_1D_ARRAY: int

  GL_TEXTURE_2D_ARRAY: int

  GL_TEXTURE_ALPHA_TYPE: int

  GL_TEXTURE_BINDING_1D_ARRAY: int

  GL_TEXTURE_BINDING_2D_ARRAY: int

  GL_TEXTURE_BLUE_TYPE: int

  GL_TEXTURE_DEPTH_TYPE: int

  GL_TEXTURE_GREEN_TYPE: int

  GL_TEXTURE_RED_TYPE: int

  GL_TEXTURE_SHARED_SIZE: int

  GL_TEXTURE_STENCIL_SIZE: int

  GL_TRANSFORM_FEEDBACK_BUFFER: int

  GL_TRANSFORM_FEEDBACK_BUFFER_BINDING: int

  GL_TRANSFORM_FEEDBACK_BUFFER_MODE: int

  GL_TRANSFORM_FEEDBACK_BUFFER_SIZE: int

  GL_TRANSFORM_FEEDBACK_BUFFER_START: int

  GL_TRANSFORM_FEEDBACK_PRIMITIVES_WRITTEN: int

  GL_TRANSFORM_FEEDBACK_VARYING_MAX_LENGTH: int

  GL_TRANSFORM_FEEDBACK_VARYINGS: int

  GL_UNSIGNED_INT_10F_11F_11F_REV: int

  GL_UNSIGNED_INT_24_8: int

  GL_UNSIGNED_INT_5_9_9_9_REV: int

  GL_UNSIGNED_INT_SAMPLER_1D: int

  GL_UNSIGNED_INT_SAMPLER_1D_ARRAY: int

  GL_UNSIGNED_INT_SAMPLER_2D: int

  GL_UNSIGNED_INT_SAMPLER_2D_ARRAY: int

  GL_UNSIGNED_INT_SAMPLER_3D: int

  GL_UNSIGNED_INT_SAMPLER_CUBE: int

  GL_UNSIGNED_INT_VEC2: int

  GL_UNSIGNED_INT_VEC3: int

  GL_UNSIGNED_INT_VEC4: int

  GL_UNSIGNED_NORMALIZED: int

  GL_VERTEX_ARRAY_BINDING: int

  GL_VERTEX_ATTRIB_ARRAY_INTEGER: int

  @staticmethod
  def glBeginConditionalRender(arg0: int, arg1: int) -> None: ...

  @staticmethod
  def glBeginTransformFeedback(arg0: int) -> None: ...

  @staticmethod
  def glBindBufferBase(arg0: int, arg1: int, arg2: int) -> None: ...

  @staticmethod
  def glBindBufferRange(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int) -> None: ...

  @staticmethod
  @overload
  def glBindFragDataLocation(arg0: int, arg1: int, arg2: CharSequence) -> None: ...

  @staticmethod
  @overload
  def glBindFragDataLocation(arg0: int, arg1: int, arg2: ByteBuffer) -> None: ...

  @staticmethod
  def glBindFramebuffer(arg0: int, arg1: int) -> None: ...

  @staticmethod
  def glBindRenderbuffer(arg0: int, arg1: int) -> None: ...

  @staticmethod
  def glBindVertexArray(arg0: int) -> None: ...

  @staticmethod
  def glBlitFramebuffer(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int, arg7: int, arg8: int, arg9: int) -> None: ...

  @staticmethod
  def glCheckFramebufferStatus(arg0: int) -> int: ...

  @staticmethod
  def glClampColor(arg0: int, arg1: int) -> None: ...

  @staticmethod
  def glClearBufferfi(arg0: int, arg1: int, arg2: float, arg3: int) -> None: ...

  @staticmethod
  @overload
  def glClearBufferfv(arg0: int, arg1: int, arg2: list[float]) -> None: ...

  @staticmethod
  @overload
  def glClearBufferfv(arg0: int, arg1: int, arg2: FloatBuffer) -> None: ...

  @staticmethod
  @overload
  def glClearBufferiv(arg0: int, arg1: int, arg2: list[int]) -> None: ...

  @staticmethod
  @overload
  def glClearBufferiv(arg0: int, arg1: int, arg2: IntBuffer) -> None: ...

  @staticmethod
  @overload
  def glClearBufferuiv(arg0: int, arg1: int, arg2: list[int]) -> None: ...

  @staticmethod
  @overload
  def glClearBufferuiv(arg0: int, arg1: int, arg2: IntBuffer) -> None: ...

  @staticmethod
  def glColorMaski(arg0: int, arg1: bool, arg2: bool, arg3: bool, arg4: bool) -> None: ...

  @staticmethod
  @overload
  def glDeleteFramebuffers(arg0: list[int]) -> None: ...

  @staticmethod
  @overload
  def glDeleteFramebuffers(arg0: int) -> None: ...

  @staticmethod
  @overload
  def glDeleteFramebuffers(arg0: IntBuffer) -> None: ...

  @staticmethod
  @overload
  def glDeleteRenderbuffers(arg0: list[int]) -> None: ...

  @staticmethod
  @overload
  def glDeleteRenderbuffers(arg0: int) -> None: ...

  @staticmethod
  @overload
  def glDeleteRenderbuffers(arg0: IntBuffer) -> None: ...

  @staticmethod
  @overload
  def glDeleteVertexArrays(arg0: list[int]) -> None: ...

  @staticmethod
  @overload
  def glDeleteVertexArrays(arg0: int) -> None: ...

  @staticmethod
  @overload
  def glDeleteVertexArrays(arg0: IntBuffer) -> None: ...

  @staticmethod
  def glDisablei(arg0: int, arg1: int) -> None: ...

  @staticmethod
  def glEnablei(arg0: int, arg1: int) -> None: ...

  @staticmethod
  def glEndConditionalRender() -> None: ...

  @staticmethod
  def glEndTransformFeedback() -> None: ...

  @staticmethod
  def glFlushMappedBufferRange(arg0: int, arg1: int, arg2: int) -> None: ...

  @staticmethod
  def glFramebufferRenderbuffer(arg0: int, arg1: int, arg2: int, arg3: int) -> None: ...

  @staticmethod
  def glFramebufferTexture1D(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int) -> None: ...

  @staticmethod
  def glFramebufferTexture2D(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int) -> None: ...

  @staticmethod
  def glFramebufferTexture3D(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int) -> None: ...

  @staticmethod
  def glFramebufferTextureLayer(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int) -> None: ...

  @staticmethod
  @overload
  def glGenFramebuffers() -> int: ...

  @staticmethod
  @overload
  def glGenFramebuffers(arg0: list[int]) -> None: ...

  @staticmethod
  @overload
  def glGenFramebuffers(arg0: IntBuffer) -> None: ...

  @staticmethod
  @overload
  def glGenRenderbuffers() -> int: ...

  @staticmethod
  @overload
  def glGenRenderbuffers(arg0: list[int]) -> None: ...

  @staticmethod
  @overload
  def glGenRenderbuffers(arg0: IntBuffer) -> None: ...

  @staticmethod
  @overload
  def glGenVertexArrays() -> int: ...

  @staticmethod
  @overload
  def glGenVertexArrays(arg0: list[int]) -> None: ...

  @staticmethod
  @overload
  def glGenVertexArrays(arg0: IntBuffer) -> None: ...

  @staticmethod
  def glGenerateMipmap(arg0: int) -> None: ...

  @staticmethod
  def glGetBooleani(arg0: int, arg1: int) -> bool: ...

  @staticmethod
  def glGetBooleani_v(arg0: int, arg1: int, arg2: ByteBuffer) -> None: ...

  @staticmethod
  @overload
  def glGetFragDataLocation(arg0: int, arg1: CharSequence) -> int: ...

  @staticmethod
  @overload
  def glGetFragDataLocation(arg0: int, arg1: ByteBuffer) -> int: ...

  @staticmethod
  def glGetFramebufferAttachmentParameteri(arg0: int, arg1: int, arg2: int) -> int: ...

  @staticmethod
  @overload
  def glGetFramebufferAttachmentParameteriv(arg0: int, arg1: int, arg2: int, arg3: list[int]) -> None: ...

  @staticmethod
  @overload
  def glGetFramebufferAttachmentParameteriv(arg0: int, arg1: int, arg2: int, arg3: IntBuffer) -> None: ...

  @staticmethod
  def glGetIntegeri(arg0: int, arg1: int) -> int: ...

  @staticmethod
  @overload
  def glGetIntegeri_v(arg0: int, arg1: int, arg2: list[int]) -> None: ...

  @staticmethod
  @overload
  def glGetIntegeri_v(arg0: int, arg1: int, arg2: IntBuffer) -> None: ...

  @staticmethod
  def glGetRenderbufferParameteri(arg0: int, arg1: int) -> int: ...

  @staticmethod
  @overload
  def glGetRenderbufferParameteriv(arg0: int, arg1: int, arg2: list[int]) -> None: ...

  @staticmethod
  @overload
  def glGetRenderbufferParameteriv(arg0: int, arg1: int, arg2: IntBuffer) -> None: ...

  @staticmethod
  def glGetStringi(arg0: int, arg1: int) -> str: ...

  @staticmethod
  def glGetTexParameterIi(arg0: int, arg1: int) -> int: ...

  @staticmethod
  @overload
  def glGetTexParameterIiv(arg0: int, arg1: int, arg2: list[int]) -> None: ...

  @staticmethod
  @overload
  def glGetTexParameterIiv(arg0: int, arg1: int, arg2: IntBuffer) -> None: ...

  @staticmethod
  def glGetTexParameterIui(arg0: int, arg1: int) -> int: ...

  @staticmethod
  @overload
  def glGetTexParameterIuiv(arg0: int, arg1: int, arg2: list[int]) -> None: ...

  @staticmethod
  @overload
  def glGetTexParameterIuiv(arg0: int, arg1: int, arg2: IntBuffer) -> None: ...

  @staticmethod
  @overload
  def glGetTransformFeedbackVarying(arg0: int, arg1: int, arg2: IntBuffer, arg3: IntBuffer) -> str: ...

  @staticmethod
  @overload
  def glGetTransformFeedbackVarying(arg0: int, arg1: int, arg2: int, arg3: IntBuffer, arg4: IntBuffer) -> str: ...

  @staticmethod
  @overload
  def glGetTransformFeedbackVarying(arg0: int, arg1: int, arg2: list[int], arg3: list[int], arg4: list[int], arg5: ByteBuffer) -> None: ...

  @staticmethod
  @overload
  def glGetTransformFeedbackVarying(arg0: int, arg1: int, arg2: IntBuffer, arg3: IntBuffer, arg4: IntBuffer, arg5: ByteBuffer) -> None: ...

  @staticmethod
  def glGetUniformui(arg0: int, arg1: int) -> int: ...

  @staticmethod
  @overload
  def glGetUniformuiv(arg0: int, arg1: int, arg2: list[int]) -> None: ...

  @staticmethod
  @overload
  def glGetUniformuiv(arg0: int, arg1: int, arg2: IntBuffer) -> None: ...

  @staticmethod
  def glGetVertexAttribIi(arg0: int, arg1: int) -> int: ...

  @staticmethod
  @overload
  def glGetVertexAttribIiv(arg0: int, arg1: int, arg2: list[int]) -> None: ...

  @staticmethod
  @overload
  def glGetVertexAttribIiv(arg0: int, arg1: int, arg2: IntBuffer) -> None: ...

  @staticmethod
  def glGetVertexAttribIui(arg0: int, arg1: int) -> int: ...

  @staticmethod
  @overload
  def glGetVertexAttribIuiv(arg0: int, arg1: int, arg2: list[int]) -> None: ...

  @staticmethod
  @overload
  def glGetVertexAttribIuiv(arg0: int, arg1: int, arg2: IntBuffer) -> None: ...

  @staticmethod
  def glIsEnabledi(arg0: int, arg1: int) -> bool: ...

  @staticmethod
  def glIsFramebuffer(arg0: int) -> bool: ...

  @staticmethod
  def glIsRenderbuffer(arg0: int) -> bool: ...

  @staticmethod
  def glIsVertexArray(arg0: int) -> bool: ...

  @staticmethod
  @overload
  def glMapBufferRange(arg0: int, arg1: int, arg2: int, arg3: int) -> ByteBuffer: ...

  @staticmethod
  @overload
  def glMapBufferRange(arg0: int, arg1: int, arg2: int, arg3: int, arg4: ByteBuffer) -> ByteBuffer: ...

  @staticmethod
  def glRenderbufferStorage(arg0: int, arg1: int, arg2: int, arg3: int) -> None: ...

  @staticmethod
  def glRenderbufferStorageMultisample(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int) -> None: ...

  @staticmethod
  def glTexParameterIi(arg0: int, arg1: int, arg2: int) -> None: ...

  @staticmethod
  @overload
  def glTexParameterIiv(arg0: int, arg1: int, arg2: list[int]) -> None: ...

  @staticmethod
  @overload
  def glTexParameterIiv(arg0: int, arg1: int, arg2: IntBuffer) -> None: ...

  @staticmethod
  def glTexParameterIui(arg0: int, arg1: int, arg2: int) -> None: ...

  @staticmethod
  @overload
  def glTexParameterIuiv(arg0: int, arg1: int, arg2: list[int]) -> None: ...

  @staticmethod
  @overload
  def glTexParameterIuiv(arg0: int, arg1: int, arg2: IntBuffer) -> None: ...

  @staticmethod
  @overload
  def glTransformFeedbackVaryings(arg0: int, arg1: list[CharSequence], arg2: int) -> None: ...

  @staticmethod
  @overload
  def glTransformFeedbackVaryings(arg0: int, arg1: CharSequence, arg2: int) -> None: ...

  @staticmethod
  @overload
  def glTransformFeedbackVaryings(arg0: int, arg1: PointerBuffer, arg2: int) -> None: ...

  @staticmethod
  def glUniform1ui(arg0: int, arg1: int) -> None: ...

  @staticmethod
  @overload
  def glUniform1uiv(arg0: int, arg1: list[int]) -> None: ...

  @staticmethod
  @overload
  def glUniform1uiv(arg0: int, arg1: IntBuffer) -> None: ...

  @staticmethod
  def glUniform2ui(arg0: int, arg1: int, arg2: int) -> None: ...

  @staticmethod
  @overload
  def glUniform2uiv(arg0: int, arg1: list[int]) -> None: ...

  @staticmethod
  @overload
  def glUniform2uiv(arg0: int, arg1: IntBuffer) -> None: ...

  @staticmethod
  def glUniform3ui(arg0: int, arg1: int, arg2: int, arg3: int) -> None: ...

  @staticmethod
  @overload
  def glUniform3uiv(arg0: int, arg1: list[int]) -> None: ...

  @staticmethod
  @overload
  def glUniform3uiv(arg0: int, arg1: IntBuffer) -> None: ...

  @staticmethod
  def glUniform4ui(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int) -> None: ...

  @staticmethod
  @overload
  def glUniform4uiv(arg0: int, arg1: list[int]) -> None: ...

  @staticmethod
  @overload
  def glUniform4uiv(arg0: int, arg1: IntBuffer) -> None: ...

  @staticmethod
  def glVertexAttribI1i(arg0: int, arg1: int) -> None: ...

  @staticmethod
  @overload
  def glVertexAttribI1iv(arg0: int, arg1: list[int]) -> None: ...

  @staticmethod
  @overload
  def glVertexAttribI1iv(arg0: int, arg1: IntBuffer) -> None: ...

  @staticmethod
  def glVertexAttribI1ui(arg0: int, arg1: int) -> None: ...

  @staticmethod
  @overload
  def glVertexAttribI1uiv(arg0: int, arg1: list[int]) -> None: ...

  @staticmethod
  @overload
  def glVertexAttribI1uiv(arg0: int, arg1: IntBuffer) -> None: ...

  @staticmethod
  def glVertexAttribI2i(arg0: int, arg1: int, arg2: int) -> None: ...

  @staticmethod
  @overload
  def glVertexAttribI2iv(arg0: int, arg1: list[int]) -> None: ...

  @staticmethod
  @overload
  def glVertexAttribI2iv(arg0: int, arg1: IntBuffer) -> None: ...

  @staticmethod
  def glVertexAttribI2ui(arg0: int, arg1: int, arg2: int) -> None: ...

  @staticmethod
  @overload
  def glVertexAttribI2uiv(arg0: int, arg1: list[int]) -> None: ...

  @staticmethod
  @overload
  def glVertexAttribI2uiv(arg0: int, arg1: IntBuffer) -> None: ...

  @staticmethod
  def glVertexAttribI3i(arg0: int, arg1: int, arg2: int, arg3: int) -> None: ...

  @staticmethod
  @overload
  def glVertexAttribI3iv(arg0: int, arg1: list[int]) -> None: ...

  @staticmethod
  @overload
  def glVertexAttribI3iv(arg0: int, arg1: IntBuffer) -> None: ...

  @staticmethod
  def glVertexAttribI3ui(arg0: int, arg1: int, arg2: int, arg3: int) -> None: ...

  @staticmethod
  @overload
  def glVertexAttribI3uiv(arg0: int, arg1: list[int]) -> None: ...

  @staticmethod
  @overload
  def glVertexAttribI3uiv(arg0: int, arg1: IntBuffer) -> None: ...

  @staticmethod
  def glVertexAttribI4bv(arg0: int, arg1: ByteBuffer) -> None: ...

  @staticmethod
  def glVertexAttribI4i(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int) -> None: ...

  @staticmethod
  @overload
  def glVertexAttribI4iv(arg0: int, arg1: list[int]) -> None: ...

  @staticmethod
  @overload
  def glVertexAttribI4iv(arg0: int, arg1: IntBuffer) -> None: ...

  @staticmethod
  @overload
  def glVertexAttribI4sv(arg0: int, arg1: list[int]) -> None: ...

  @staticmethod
  @overload
  def glVertexAttribI4sv(arg0: int, arg1: ShortBuffer) -> None: ...

  @staticmethod
  def glVertexAttribI4ubv(arg0: int, arg1: ByteBuffer) -> None: ...

  @staticmethod
  def glVertexAttribI4ui(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int) -> None: ...

  @staticmethod
  @overload
  def glVertexAttribI4uiv(arg0: int, arg1: list[int]) -> None: ...

  @staticmethod
  @overload
  def glVertexAttribI4uiv(arg0: int, arg1: IntBuffer) -> None: ...

  @staticmethod
  @overload
  def glVertexAttribI4usv(arg0: int, arg1: list[int]) -> None: ...

  @staticmethod
  @overload
  def glVertexAttribI4usv(arg0: int, arg1: ShortBuffer) -> None: ...

  @staticmethod
  @overload
  def glVertexAttribIPointer(arg0: int, arg1: int, arg2: int, arg3: int, arg4: ByteBuffer) -> None: ...

  @staticmethod
  @overload
  def glVertexAttribIPointer(arg0: int, arg1: int, arg2: int, arg3: int, arg4: IntBuffer) -> None: ...

  @staticmethod
  @overload
  def glVertexAttribIPointer(arg0: int, arg1: int, arg2: int, arg3: int, arg4: ShortBuffer) -> None: ...

  @staticmethod
  @overload
  def glVertexAttribIPointer(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int) -> None: ...

  @staticmethod
  def nglBindFragDataLocation(arg0: int, arg1: int, arg2: int) -> None: ...

  @staticmethod
  def nglClearBufferfv(arg0: int, arg1: int, arg2: int) -> None: ...

  @staticmethod
  def nglClearBufferiv(arg0: int, arg1: int, arg2: int) -> None: ...

  @staticmethod
  def nglClearBufferuiv(arg0: int, arg1: int, arg2: int) -> None: ...

  @staticmethod
  def nglDeleteFramebuffers(arg0: int, arg1: int) -> None: ...

  @staticmethod
  def nglDeleteRenderbuffers(arg0: int, arg1: int) -> None: ...

  @staticmethod
  def nglDeleteVertexArrays(arg0: int, arg1: int) -> None: ...

  @staticmethod
  def nglGenFramebuffers(arg0: int, arg1: int) -> None: ...

  @staticmethod
  def nglGenRenderbuffers(arg0: int, arg1: int) -> None: ...

  @staticmethod
  def nglGenVertexArrays(arg0: int, arg1: int) -> None: ...

  @staticmethod
  def nglGetBooleani_v(arg0: int, arg1: int, arg2: int) -> None: ...

  @staticmethod
  def nglGetFragDataLocation(arg0: int, arg1: int) -> int: ...

  @staticmethod
  def nglGetFramebufferAttachmentParameteriv(arg0: int, arg1: int, arg2: int, arg3: int) -> None: ...

  @staticmethod
  def nglGetIntegeri_v(arg0: int, arg1: int, arg2: int) -> None: ...

  @staticmethod
  def nglGetRenderbufferParameteriv(arg0: int, arg1: int, arg2: int) -> None: ...

  @staticmethod
  def nglGetStringi(arg0: int, arg1: int) -> int: ...

  @staticmethod
  def nglGetTexParameterIiv(arg0: int, arg1: int, arg2: int) -> None: ...

  @staticmethod
  def nglGetTexParameterIuiv(arg0: int, arg1: int, arg2: int) -> None: ...

  @staticmethod
  def nglGetTransformFeedbackVarying(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int) -> None: ...

  @staticmethod
  def nglGetUniformuiv(arg0: int, arg1: int, arg2: int) -> None: ...

  @staticmethod
  def nglGetVertexAttribIiv(arg0: int, arg1: int, arg2: int) -> None: ...

  @staticmethod
  def nglGetVertexAttribIuiv(arg0: int, arg1: int, arg2: int) -> None: ...

  @staticmethod
  def nglMapBufferRange(arg0: int, arg1: int, arg2: int, arg3: int) -> int: ...

  @staticmethod
  def nglTexParameterIiv(arg0: int, arg1: int, arg2: int) -> None: ...

  @staticmethod
  def nglTexParameterIuiv(arg0: int, arg1: int, arg2: int) -> None: ...

  @staticmethod
  def nglTransformFeedbackVaryings(arg0: int, arg1: int, arg2: int, arg3: int) -> None: ...

  @staticmethod
  def nglUniform1uiv(arg0: int, arg1: int, arg2: int) -> None: ...

  @staticmethod
  def nglUniform2uiv(arg0: int, arg1: int, arg2: int) -> None: ...

  @staticmethod
  def nglUniform3uiv(arg0: int, arg1: int, arg2: int) -> None: ...

  @staticmethod
  def nglUniform4uiv(arg0: int, arg1: int, arg2: int) -> None: ...

  @staticmethod
  def nglVertexAttribI1iv(arg0: int, arg1: int) -> None: ...

  @staticmethod
  def nglVertexAttribI1uiv(arg0: int, arg1: int) -> None: ...

  @staticmethod
  def nglVertexAttribI2iv(arg0: int, arg1: int) -> None: ...

  @staticmethod
  def nglVertexAttribI2uiv(arg0: int, arg1: int) -> None: ...

  @staticmethod
  def nglVertexAttribI3iv(arg0: int, arg1: int) -> None: ...

  @staticmethod
  def nglVertexAttribI3uiv(arg0: int, arg1: int) -> None: ...

  @staticmethod
  def nglVertexAttribI4bv(arg0: int, arg1: int) -> None: ...

  @staticmethod
  def nglVertexAttribI4iv(arg0: int, arg1: int) -> None: ...

  @staticmethod
  def nglVertexAttribI4sv(arg0: int, arg1: int) -> None: ...

  @staticmethod
  def nglVertexAttribI4ubv(arg0: int, arg1: int) -> None: ...

  @staticmethod
  def nglVertexAttribI4uiv(arg0: int, arg1: int) -> None: ...

  @staticmethod
  def nglVertexAttribI4usv(arg0: int, arg1: int) -> None: ...

  @staticmethod
  def nglVertexAttribIPointer(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int) -> None: ...


class GL31(GL30):

  GL_ACTIVE_UNIFORM_BLOCK_MAX_NAME_LENGTH: int

  GL_ACTIVE_UNIFORM_BLOCKS: int

  GL_COPY_READ_BUFFER: int

  GL_COPY_WRITE_BUFFER: int

  GL_INT_SAMPLER_2D_RECT: int

  GL_INT_SAMPLER_BUFFER: int

  GL_INVALID_INDEX: int

  GL_MAX_COMBINED_FRAGMENT_UNIFORM_COMPONENTS: int

  GL_MAX_COMBINED_GEOMETRY_UNIFORM_COMPONENTS: int

  GL_MAX_COMBINED_UNIFORM_BLOCKS: int

  GL_MAX_COMBINED_VERTEX_UNIFORM_COMPONENTS: int

  GL_MAX_FRAGMENT_UNIFORM_BLOCKS: int

  GL_MAX_GEOMETRY_UNIFORM_BLOCKS: int

  GL_MAX_RECTANGLE_TEXTURE_SIZE: int

  GL_MAX_TEXTURE_BUFFER_SIZE: int

  GL_MAX_UNIFORM_BLOCK_SIZE: int

  GL_MAX_UNIFORM_BUFFER_BINDINGS: int

  GL_MAX_VERTEX_UNIFORM_BLOCKS: int

  GL_PRIMITIVE_RESTART: int

  GL_PRIMITIVE_RESTART_INDEX: int

  GL_PROXY_TEXTURE_RECTANGLE: int

  GL_R16_SNORM: int

  GL_R8_SNORM: int

  GL_RG16_SNORM: int

  GL_RG8_SNORM: int

  GL_RGB16_SNORM: int

  GL_RGB8_SNORM: int

  GL_RGBA16_SNORM: int

  GL_RGBA8_SNORM: int

  GL_SAMPLER_2D_RECT: int

  GL_SAMPLER_2D_RECT_SHADOW: int

  GL_SAMPLER_BUFFER: int

  GL_SIGNED_NORMALIZED: int

  GL_TEXTURE_BINDING_BUFFER: int

  GL_TEXTURE_BINDING_RECTANGLE: int

  GL_TEXTURE_BUFFER: int

  GL_TEXTURE_BUFFER_DATA_STORE_BINDING: int

  GL_TEXTURE_RECTANGLE: int

  GL_UNIFORM_ARRAY_STRIDE: int

  GL_UNIFORM_BLOCK_ACTIVE_UNIFORM_INDICES: int

  GL_UNIFORM_BLOCK_ACTIVE_UNIFORMS: int

  GL_UNIFORM_BLOCK_BINDING: int

  GL_UNIFORM_BLOCK_DATA_SIZE: int

  GL_UNIFORM_BLOCK_INDEX: int

  GL_UNIFORM_BLOCK_NAME_LENGTH: int

  GL_UNIFORM_BLOCK_REFERENCED_BY_FRAGMENT_SHADER: int

  GL_UNIFORM_BLOCK_REFERENCED_BY_GEOMETRY_SHADER: int

  GL_UNIFORM_BLOCK_REFERENCED_BY_VERTEX_SHADER: int

  GL_UNIFORM_BUFFER: int

  GL_UNIFORM_BUFFER_BINDING: int

  GL_UNIFORM_BUFFER_OFFSET_ALIGNMENT: int

  GL_UNIFORM_BUFFER_SIZE: int

  GL_UNIFORM_BUFFER_START: int

  GL_UNIFORM_IS_ROW_MAJOR: int

  GL_UNIFORM_MATRIX_STRIDE: int

  GL_UNIFORM_NAME_LENGTH: int

  GL_UNIFORM_OFFSET: int

  GL_UNIFORM_SIZE: int

  GL_UNIFORM_TYPE: int

  GL_UNSIGNED_INT_SAMPLER_2D_RECT: int

  GL_UNSIGNED_INT_SAMPLER_BUFFER: int

  @staticmethod
  def glCopyBufferSubData(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int) -> None: ...

  @staticmethod
  def glDrawArraysInstanced(arg0: int, arg1: int, arg2: int, arg3: int) -> None: ...

  @staticmethod
  @overload
  def glDrawElementsInstanced(arg0: int, arg1: ByteBuffer, arg2: int) -> None: ...

  @staticmethod
  @overload
  def glDrawElementsInstanced(arg0: int, arg1: IntBuffer, arg2: int) -> None: ...

  @staticmethod
  @overload
  def glDrawElementsInstanced(arg0: int, arg1: ShortBuffer, arg2: int) -> None: ...

  @staticmethod
  @overload
  def glDrawElementsInstanced(arg0: int, arg1: int, arg2: ByteBuffer, arg3: int) -> None: ...

  @staticmethod
  @overload
  def glDrawElementsInstanced(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int) -> None: ...

  @staticmethod
  @overload
  def glGetActiveUniformBlockName(arg0: int, arg1: int) -> str: ...

  @staticmethod
  @overload
  def glGetActiveUniformBlockName(arg0: int, arg1: int, arg2: int) -> str: ...

  @staticmethod
  @overload
  def glGetActiveUniformBlockName(arg0: int, arg1: int, arg2: list[int], arg3: ByteBuffer) -> None: ...

  @staticmethod
  @overload
  def glGetActiveUniformBlockName(arg0: int, arg1: int, arg2: IntBuffer, arg3: ByteBuffer) -> None: ...

  @staticmethod
  def glGetActiveUniformBlocki(arg0: int, arg1: int, arg2: int) -> int: ...

  @staticmethod
  @overload
  def glGetActiveUniformBlockiv(arg0: int, arg1: int, arg2: int, arg3: list[int]) -> None: ...

  @staticmethod
  @overload
  def glGetActiveUniformBlockiv(arg0: int, arg1: int, arg2: int, arg3: IntBuffer) -> None: ...

  @staticmethod
  @overload
  def glGetActiveUniformName(arg0: int, arg1: int) -> str: ...

  @staticmethod
  @overload
  def glGetActiveUniformName(arg0: int, arg1: int, arg2: int) -> str: ...

  @staticmethod
  @overload
  def glGetActiveUniformName(arg0: int, arg1: int, arg2: list[int], arg3: ByteBuffer) -> None: ...

  @staticmethod
  @overload
  def glGetActiveUniformName(arg0: int, arg1: int, arg2: IntBuffer, arg3: ByteBuffer) -> None: ...

  @staticmethod
  def glGetActiveUniformsi(arg0: int, arg1: int, arg2: int) -> int: ...

  @staticmethod
  @overload
  def glGetActiveUniformsiv(arg0: int, arg1: list[int], arg2: int, arg3: list[int]) -> None: ...

  @staticmethod
  @overload
  def glGetActiveUniformsiv(arg0: int, arg1: IntBuffer, arg2: int, arg3: IntBuffer) -> None: ...

  @staticmethod
  @overload
  def glGetUniformBlockIndex(arg0: int, arg1: CharSequence) -> int: ...

  @staticmethod
  @overload
  def glGetUniformBlockIndex(arg0: int, arg1: ByteBuffer) -> int: ...

  @staticmethod
  @overload
  def glGetUniformIndices(arg0: int, arg1: CharSequence) -> int: ...

  @staticmethod
  @overload
  def glGetUniformIndices(arg0: int, arg1: list[CharSequence], arg2: IntBuffer) -> None: ...

  @staticmethod
  @overload
  def glGetUniformIndices(arg0: int, arg1: PointerBuffer, arg2: list[int]) -> None: ...

  @staticmethod
  @overload
  def glGetUniformIndices(arg0: int, arg1: PointerBuffer, arg2: IntBuffer) -> None: ...

  @staticmethod
  def glPrimitiveRestartIndex(arg0: int) -> None: ...

  @staticmethod
  def glTexBuffer(arg0: int, arg1: int, arg2: int) -> None: ...

  @staticmethod
  def glUniformBlockBinding(arg0: int, arg1: int, arg2: int) -> None: ...

  @staticmethod
  def nglDrawElementsInstanced(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int) -> None: ...

  @staticmethod
  def nglGetActiveUniformBlockName(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int) -> None: ...

  @staticmethod
  def nglGetActiveUniformBlockiv(arg0: int, arg1: int, arg2: int, arg3: int) -> None: ...

  @staticmethod
  def nglGetActiveUniformName(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int) -> None: ...

  @staticmethod
  def nglGetActiveUniformsiv(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int) -> None: ...

  @staticmethod
  def nglGetUniformBlockIndex(arg0: int, arg1: int) -> int: ...

  @staticmethod
  def nglGetUniformIndices(arg0: int, arg1: int, arg2: int, arg3: int) -> None: ...


class GL31C(GL30C):

  GL_ACTIVE_UNIFORM_BLOCK_MAX_NAME_LENGTH: int

  GL_ACTIVE_UNIFORM_BLOCKS: int

  GL_COPY_READ_BUFFER: int

  GL_COPY_WRITE_BUFFER: int

  GL_INT_SAMPLER_2D_RECT: int

  GL_INT_SAMPLER_BUFFER: int

  GL_INVALID_INDEX: int

  GL_MAX_COMBINED_FRAGMENT_UNIFORM_COMPONENTS: int

  GL_MAX_COMBINED_GEOMETRY_UNIFORM_COMPONENTS: int

  GL_MAX_COMBINED_UNIFORM_BLOCKS: int

  GL_MAX_COMBINED_VERTEX_UNIFORM_COMPONENTS: int

  GL_MAX_FRAGMENT_UNIFORM_BLOCKS: int

  GL_MAX_GEOMETRY_UNIFORM_BLOCKS: int

  GL_MAX_RECTANGLE_TEXTURE_SIZE: int

  GL_MAX_TEXTURE_BUFFER_SIZE: int

  GL_MAX_UNIFORM_BLOCK_SIZE: int

  GL_MAX_UNIFORM_BUFFER_BINDINGS: int

  GL_MAX_VERTEX_UNIFORM_BLOCKS: int

  GL_PRIMITIVE_RESTART: int

  GL_PRIMITIVE_RESTART_INDEX: int

  GL_PROXY_TEXTURE_RECTANGLE: int

  GL_R16_SNORM: int

  GL_R8_SNORM: int

  GL_RG16_SNORM: int

  GL_RG8_SNORM: int

  GL_RGB16_SNORM: int

  GL_RGB8_SNORM: int

  GL_RGBA16_SNORM: int

  GL_RGBA8_SNORM: int

  GL_SAMPLER_2D_RECT: int

  GL_SAMPLER_2D_RECT_SHADOW: int

  GL_SAMPLER_BUFFER: int

  GL_SIGNED_NORMALIZED: int

  GL_TEXTURE_BINDING_BUFFER: int

  GL_TEXTURE_BINDING_RECTANGLE: int

  GL_TEXTURE_BUFFER: int

  GL_TEXTURE_BUFFER_DATA_STORE_BINDING: int

  GL_TEXTURE_RECTANGLE: int

  GL_UNIFORM_ARRAY_STRIDE: int

  GL_UNIFORM_BLOCK_ACTIVE_UNIFORM_INDICES: int

  GL_UNIFORM_BLOCK_ACTIVE_UNIFORMS: int

  GL_UNIFORM_BLOCK_BINDING: int

  GL_UNIFORM_BLOCK_DATA_SIZE: int

  GL_UNIFORM_BLOCK_INDEX: int

  GL_UNIFORM_BLOCK_NAME_LENGTH: int

  GL_UNIFORM_BLOCK_REFERENCED_BY_FRAGMENT_SHADER: int

  GL_UNIFORM_BLOCK_REFERENCED_BY_GEOMETRY_SHADER: int

  GL_UNIFORM_BLOCK_REFERENCED_BY_VERTEX_SHADER: int

  GL_UNIFORM_BUFFER: int

  GL_UNIFORM_BUFFER_BINDING: int

  GL_UNIFORM_BUFFER_OFFSET_ALIGNMENT: int

  GL_UNIFORM_BUFFER_SIZE: int

  GL_UNIFORM_BUFFER_START: int

  GL_UNIFORM_IS_ROW_MAJOR: int

  GL_UNIFORM_MATRIX_STRIDE: int

  GL_UNIFORM_NAME_LENGTH: int

  GL_UNIFORM_OFFSET: int

  GL_UNIFORM_SIZE: int

  GL_UNIFORM_TYPE: int

  GL_UNSIGNED_INT_SAMPLER_2D_RECT: int

  GL_UNSIGNED_INT_SAMPLER_BUFFER: int

  @staticmethod
  def glCopyBufferSubData(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int) -> None: ...

  @staticmethod
  def glDrawArraysInstanced(arg0: int, arg1: int, arg2: int, arg3: int) -> None: ...

  @staticmethod
  @overload
  def glDrawElementsInstanced(arg0: int, arg1: ByteBuffer, arg2: int) -> None: ...

  @staticmethod
  @overload
  def glDrawElementsInstanced(arg0: int, arg1: IntBuffer, arg2: int) -> None: ...

  @staticmethod
  @overload
  def glDrawElementsInstanced(arg0: int, arg1: ShortBuffer, arg2: int) -> None: ...

  @staticmethod
  @overload
  def glDrawElementsInstanced(arg0: int, arg1: int, arg2: ByteBuffer, arg3: int) -> None: ...

  @staticmethod
  @overload
  def glDrawElementsInstanced(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int) -> None: ...

  @staticmethod
  @overload
  def glGetActiveUniformBlockName(arg0: int, arg1: int) -> str: ...

  @staticmethod
  @overload
  def glGetActiveUniformBlockName(arg0: int, arg1: int, arg2: int) -> str: ...

  @staticmethod
  @overload
  def glGetActiveUniformBlockName(arg0: int, arg1: int, arg2: list[int], arg3: ByteBuffer) -> None: ...

  @staticmethod
  @overload
  def glGetActiveUniformBlockName(arg0: int, arg1: int, arg2: IntBuffer, arg3: ByteBuffer) -> None: ...

  @staticmethod
  def glGetActiveUniformBlocki(arg0: int, arg1: int, arg2: int) -> int: ...

  @staticmethod
  @overload
  def glGetActiveUniformBlockiv(arg0: int, arg1: int, arg2: int, arg3: list[int]) -> None: ...

  @staticmethod
  @overload
  def glGetActiveUniformBlockiv(arg0: int, arg1: int, arg2: int, arg3: IntBuffer) -> None: ...

  @staticmethod
  @overload
  def glGetActiveUniformName(arg0: int, arg1: int) -> str: ...

  @staticmethod
  @overload
  def glGetActiveUniformName(arg0: int, arg1: int, arg2: int) -> str: ...

  @staticmethod
  @overload
  def glGetActiveUniformName(arg0: int, arg1: int, arg2: list[int], arg3: ByteBuffer) -> None: ...

  @staticmethod
  @overload
  def glGetActiveUniformName(arg0: int, arg1: int, arg2: IntBuffer, arg3: ByteBuffer) -> None: ...

  @staticmethod
  def glGetActiveUniformsi(arg0: int, arg1: int, arg2: int) -> int: ...

  @staticmethod
  @overload
  def glGetActiveUniformsiv(arg0: int, arg1: list[int], arg2: int, arg3: list[int]) -> None: ...

  @staticmethod
  @overload
  def glGetActiveUniformsiv(arg0: int, arg1: IntBuffer, arg2: int, arg3: IntBuffer) -> None: ...

  @staticmethod
  @overload
  def glGetUniformBlockIndex(arg0: int, arg1: CharSequence) -> int: ...

  @staticmethod
  @overload
  def glGetUniformBlockIndex(arg0: int, arg1: ByteBuffer) -> int: ...

  @staticmethod
  @overload
  def glGetUniformIndices(arg0: int, arg1: CharSequence) -> int: ...

  @staticmethod
  @overload
  def glGetUniformIndices(arg0: int, arg1: list[CharSequence], arg2: IntBuffer) -> None: ...

  @staticmethod
  @overload
  def glGetUniformIndices(arg0: int, arg1: PointerBuffer, arg2: list[int]) -> None: ...

  @staticmethod
  @overload
  def glGetUniformIndices(arg0: int, arg1: PointerBuffer, arg2: IntBuffer) -> None: ...

  @staticmethod
  def glPrimitiveRestartIndex(arg0: int) -> None: ...

  @staticmethod
  def glTexBuffer(arg0: int, arg1: int, arg2: int) -> None: ...

  @staticmethod
  def glUniformBlockBinding(arg0: int, arg1: int, arg2: int) -> None: ...

  @staticmethod
  def nglDrawElementsInstanced(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int) -> None: ...

  @staticmethod
  def nglGetActiveUniformBlockName(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int) -> None: ...

  @staticmethod
  def nglGetActiveUniformBlockiv(arg0: int, arg1: int, arg2: int, arg3: int) -> None: ...

  @staticmethod
  def nglGetActiveUniformName(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int) -> None: ...

  @staticmethod
  def nglGetActiveUniformsiv(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int) -> None: ...

  @staticmethod
  def nglGetUniformBlockIndex(arg0: int, arg1: int) -> int: ...

  @staticmethod
  def nglGetUniformIndices(arg0: int, arg1: int, arg2: int, arg3: int) -> None: ...


class GL32(GL31):

  GL_ALREADY_SIGNALED: int

  GL_CONDITION_SATISFIED: int

  GL_CONTEXT_COMPATIBILITY_PROFILE_BIT: int

  GL_CONTEXT_CORE_PROFILE_BIT: int

  GL_CONTEXT_PROFILE_MASK: int

  GL_DEPTH_CLAMP: int

  GL_FIRST_VERTEX_CONVENTION: int

  GL_FRAMEBUFFER_ATTACHMENT_LAYERED: int

  GL_FRAMEBUFFER_INCOMPLETE_LAYER_TARGETS: int

  GL_GEOMETRY_INPUT_TYPE: int

  GL_GEOMETRY_OUTPUT_TYPE: int

  GL_GEOMETRY_SHADER: int

  GL_GEOMETRY_VERTICES_OUT: int

  GL_INT_SAMPLER_2D_MULTISAMPLE: int

  GL_INT_SAMPLER_2D_MULTISAMPLE_ARRAY: int

  GL_LAST_VERTEX_CONVENTION: int

  GL_LINE_STRIP_ADJACENCY: int

  GL_LINES_ADJACENCY: int

  GL_MAX_COLOR_TEXTURE_SAMPLES: int

  GL_MAX_DEPTH_TEXTURE_SAMPLES: int

  GL_MAX_FRAGMENT_INPUT_COMPONENTS: int

  GL_MAX_GEOMETRY_INPUT_COMPONENTS: int

  GL_MAX_GEOMETRY_OUTPUT_COMPONENTS: int

  GL_MAX_GEOMETRY_OUTPUT_VERTICES: int

  GL_MAX_GEOMETRY_TEXTURE_IMAGE_UNITS: int

  GL_MAX_GEOMETRY_TOTAL_OUTPUT_COMPONENTS: int

  GL_MAX_GEOMETRY_UNIFORM_COMPONENTS: int

  GL_MAX_INTEGER_SAMPLES: int

  GL_MAX_SAMPLE_MASK_WORDS: int

  GL_MAX_SERVER_WAIT_TIMEOUT: int

  GL_MAX_VERTEX_OUTPUT_COMPONENTS: int

  GL_OBJECT_TYPE: int

  GL_PROGRAM_POINT_SIZE: int

  GL_PROVOKING_VERTEX: int

  GL_PROXY_TEXTURE_2D_MULTISAMPLE: int

  GL_PROXY_TEXTURE_2D_MULTISAMPLE_ARRAY: int

  GL_QUADS_FOLLOW_PROVOKING_VERTEX_CONVENTION: int

  GL_SAMPLE_MASK: int

  GL_SAMPLE_MASK_VALUE: int

  GL_SAMPLE_POSITION: int

  GL_SAMPLER_2D_MULTISAMPLE: int

  GL_SAMPLER_2D_MULTISAMPLE_ARRAY: int

  GL_SIGNALED: int

  GL_SYNC_CONDITION: int

  GL_SYNC_FENCE: int

  GL_SYNC_FLAGS: int

  GL_SYNC_FLUSH_COMMANDS_BIT: int

  GL_SYNC_GPU_COMMANDS_COMPLETE: int

  GL_SYNC_STATUS: int

  GL_TEXTURE_2D_MULTISAMPLE: int

  GL_TEXTURE_2D_MULTISAMPLE_ARRAY: int

  GL_TEXTURE_BINDING_2D_MULTISAMPLE: int

  GL_TEXTURE_BINDING_2D_MULTISAMPLE_ARRAY: int

  GL_TEXTURE_CUBE_MAP_SEAMLESS: int

  GL_TEXTURE_FIXED_SAMPLE_LOCATIONS: int

  GL_TEXTURE_SAMPLES: int

  GL_TIMEOUT_EXPIRED: int

  GL_TIMEOUT_IGNORED: int

  GL_TRIANGLE_STRIP_ADJACENCY: int

  GL_TRIANGLES_ADJACENCY: int

  GL_UNSIGNALED: int

  GL_UNSIGNED_INT_SAMPLER_2D_MULTISAMPLE: int

  GL_UNSIGNED_INT_SAMPLER_2D_MULTISAMPLE_ARRAY: int

  GL_WAIT_FAILED: int

  @staticmethod
  def glClientWaitSync(arg0: int, arg1: int, arg2: int) -> int: ...

  @staticmethod
  def glDeleteSync(arg0: int) -> None: ...

  @staticmethod
  @overload
  def glDrawElementsBaseVertex(arg0: int, arg1: ByteBuffer, arg2: int) -> None: ...

  @staticmethod
  @overload
  def glDrawElementsBaseVertex(arg0: int, arg1: IntBuffer, arg2: int) -> None: ...

  @staticmethod
  @overload
  def glDrawElementsBaseVertex(arg0: int, arg1: ShortBuffer, arg2: int) -> None: ...

  @staticmethod
  @overload
  def glDrawElementsBaseVertex(arg0: int, arg1: int, arg2: ByteBuffer, arg3: int) -> None: ...

  @staticmethod
  @overload
  def glDrawElementsBaseVertex(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int) -> None: ...

  @staticmethod
  @overload
  def glDrawElementsInstancedBaseVertex(arg0: int, arg1: ByteBuffer, arg2: int, arg3: int) -> None: ...

  @staticmethod
  @overload
  def glDrawElementsInstancedBaseVertex(arg0: int, arg1: IntBuffer, arg2: int, arg3: int) -> None: ...

  @staticmethod
  @overload
  def glDrawElementsInstancedBaseVertex(arg0: int, arg1: ShortBuffer, arg2: int, arg3: int) -> None: ...

  @staticmethod
  @overload
  def glDrawElementsInstancedBaseVertex(arg0: int, arg1: int, arg2: ByteBuffer, arg3: int, arg4: int) -> None: ...

  @staticmethod
  @overload
  def glDrawElementsInstancedBaseVertex(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int) -> None: ...

  @staticmethod
  @overload
  def glDrawRangeElementsBaseVertex(arg0: int, arg1: int, arg2: int, arg3: ByteBuffer, arg4: int) -> None: ...

  @staticmethod
  @overload
  def glDrawRangeElementsBaseVertex(arg0: int, arg1: int, arg2: int, arg3: IntBuffer, arg4: int) -> None: ...

  @staticmethod
  @overload
  def glDrawRangeElementsBaseVertex(arg0: int, arg1: int, arg2: int, arg3: ShortBuffer, arg4: int) -> None: ...

  @staticmethod
  @overload
  def glDrawRangeElementsBaseVertex(arg0: int, arg1: int, arg2: int, arg3: int, arg4: ByteBuffer, arg5: int) -> None: ...

  @staticmethod
  @overload
  def glDrawRangeElementsBaseVertex(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int) -> None: ...

  @staticmethod
  def glFenceSync(arg0: int, arg1: int) -> int: ...

  @staticmethod
  def glFramebufferTexture(arg0: int, arg1: int, arg2: int, arg3: int) -> None: ...

  @staticmethod
  def glGetBufferParameteri64(arg0: int, arg1: int) -> int: ...

  @staticmethod
  @overload
  def glGetBufferParameteri64v(arg0: int, arg1: int, arg2: list[int]) -> None: ...

  @staticmethod
  @overload
  def glGetBufferParameteri64v(arg0: int, arg1: int, arg2: LongBuffer) -> None: ...

  @staticmethod
  def glGetInteger64(arg0: int) -> int: ...

  @staticmethod
  def glGetInteger64i(arg0: int, arg1: int) -> int: ...

  @staticmethod
  @overload
  def glGetInteger64i_v(arg0: int, arg1: int, arg2: list[int]) -> None: ...

  @staticmethod
  @overload
  def glGetInteger64i_v(arg0: int, arg1: int, arg2: LongBuffer) -> None: ...

  @staticmethod
  @overload
  def glGetInteger64v(arg0: int, arg1: list[int]) -> None: ...

  @staticmethod
  @overload
  def glGetInteger64v(arg0: int, arg1: LongBuffer) -> None: ...

  @staticmethod
  def glGetMultisamplef(arg0: int, arg1: int) -> float: ...

  @staticmethod
  @overload
  def glGetMultisamplefv(arg0: int, arg1: int, arg2: list[float]) -> None: ...

  @staticmethod
  @overload
  def glGetMultisamplefv(arg0: int, arg1: int, arg2: FloatBuffer) -> None: ...

  @staticmethod
  def glGetSynci(arg0: int, arg1: int, arg2: IntBuffer) -> int: ...

  @staticmethod
  @overload
  def glGetSynciv(arg0: int, arg1: int, arg2: list[int], arg3: list[int]) -> None: ...

  @staticmethod
  @overload
  def glGetSynciv(arg0: int, arg1: int, arg2: IntBuffer, arg3: IntBuffer) -> None: ...

  @staticmethod
  def glIsSync(arg0: int) -> bool: ...

  @staticmethod
  @overload
  def glMultiDrawElementsBaseVertex(arg0: int, arg1: list[int], arg2: int, arg3: PointerBuffer, arg4: list[int]) -> None: ...

  @staticmethod
  @overload
  def glMultiDrawElementsBaseVertex(arg0: int, arg1: IntBuffer, arg2: int, arg3: PointerBuffer, arg4: IntBuffer) -> None: ...

  @staticmethod
  def glProvokingVertex(arg0: int) -> None: ...

  @staticmethod
  def glSampleMaski(arg0: int, arg1: int) -> None: ...

  @staticmethod
  def glTexImage2DMultisample(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: bool) -> None: ...

  @staticmethod
  def glTexImage3DMultisample(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: bool) -> None: ...

  @staticmethod
  def glWaitSync(arg0: int, arg1: int, arg2: int) -> None: ...

  @staticmethod
  def nglClientWaitSync(arg0: int, arg1: int, arg2: int) -> int: ...

  @staticmethod
  def nglDeleteSync(arg0: int) -> None: ...

  @staticmethod
  def nglDrawElementsBaseVertex(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int) -> None: ...

  @staticmethod
  def nglDrawElementsInstancedBaseVertex(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int) -> None: ...

  @staticmethod
  def nglDrawRangeElementsBaseVertex(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int) -> None: ...

  @staticmethod
  def nglGetBufferParameteri64v(arg0: int, arg1: int, arg2: int) -> None: ...

  @staticmethod
  def nglGetInteger64i_v(arg0: int, arg1: int, arg2: int) -> None: ...

  @staticmethod
  def nglGetInteger64v(arg0: int, arg1: int) -> None: ...

  @staticmethod
  def nglGetMultisamplefv(arg0: int, arg1: int, arg2: int) -> None: ...

  @staticmethod
  def nglGetSynciv(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int) -> None: ...

  @staticmethod
  def nglIsSync(arg0: int) -> bool: ...

  @staticmethod
  def nglMultiDrawElementsBaseVertex(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int) -> None: ...

  @staticmethod
  def nglWaitSync(arg0: int, arg1: int, arg2: int) -> None: ...


class GL32C(GL31C):

  GL_ALREADY_SIGNALED: int

  GL_CONDITION_SATISFIED: int

  GL_CONTEXT_COMPATIBILITY_PROFILE_BIT: int

  GL_CONTEXT_CORE_PROFILE_BIT: int

  GL_CONTEXT_PROFILE_MASK: int

  GL_DEPTH_CLAMP: int

  GL_FIRST_VERTEX_CONVENTION: int

  GL_FRAMEBUFFER_ATTACHMENT_LAYERED: int

  GL_FRAMEBUFFER_INCOMPLETE_LAYER_TARGETS: int

  GL_GEOMETRY_INPUT_TYPE: int

  GL_GEOMETRY_OUTPUT_TYPE: int

  GL_GEOMETRY_SHADER: int

  GL_GEOMETRY_VERTICES_OUT: int

  GL_INT_SAMPLER_2D_MULTISAMPLE: int

  GL_INT_SAMPLER_2D_MULTISAMPLE_ARRAY: int

  GL_LAST_VERTEX_CONVENTION: int

  GL_LINE_STRIP_ADJACENCY: int

  GL_LINES_ADJACENCY: int

  GL_MAX_COLOR_TEXTURE_SAMPLES: int

  GL_MAX_DEPTH_TEXTURE_SAMPLES: int

  GL_MAX_FRAGMENT_INPUT_COMPONENTS: int

  GL_MAX_GEOMETRY_INPUT_COMPONENTS: int

  GL_MAX_GEOMETRY_OUTPUT_COMPONENTS: int

  GL_MAX_GEOMETRY_OUTPUT_VERTICES: int

  GL_MAX_GEOMETRY_TEXTURE_IMAGE_UNITS: int

  GL_MAX_GEOMETRY_TOTAL_OUTPUT_COMPONENTS: int

  GL_MAX_GEOMETRY_UNIFORM_COMPONENTS: int

  GL_MAX_INTEGER_SAMPLES: int

  GL_MAX_SAMPLE_MASK_WORDS: int

  GL_MAX_SERVER_WAIT_TIMEOUT: int

  GL_MAX_VERTEX_OUTPUT_COMPONENTS: int

  GL_OBJECT_TYPE: int

  GL_PROGRAM_POINT_SIZE: int

  GL_PROVOKING_VERTEX: int

  GL_PROXY_TEXTURE_2D_MULTISAMPLE: int

  GL_PROXY_TEXTURE_2D_MULTISAMPLE_ARRAY: int

  GL_QUADS_FOLLOW_PROVOKING_VERTEX_CONVENTION: int

  GL_SAMPLE_MASK: int

  GL_SAMPLE_MASK_VALUE: int

  GL_SAMPLE_POSITION: int

  GL_SAMPLER_2D_MULTISAMPLE: int

  GL_SAMPLER_2D_MULTISAMPLE_ARRAY: int

  GL_SIGNALED: int

  GL_SYNC_CONDITION: int

  GL_SYNC_FENCE: int

  GL_SYNC_FLAGS: int

  GL_SYNC_FLUSH_COMMANDS_BIT: int

  GL_SYNC_GPU_COMMANDS_COMPLETE: int

  GL_SYNC_STATUS: int

  GL_TEXTURE_2D_MULTISAMPLE: int

  GL_TEXTURE_2D_MULTISAMPLE_ARRAY: int

  GL_TEXTURE_BINDING_2D_MULTISAMPLE: int

  GL_TEXTURE_BINDING_2D_MULTISAMPLE_ARRAY: int

  GL_TEXTURE_CUBE_MAP_SEAMLESS: int

  GL_TEXTURE_FIXED_SAMPLE_LOCATIONS: int

  GL_TEXTURE_SAMPLES: int

  GL_TIMEOUT_EXPIRED: int

  GL_TIMEOUT_IGNORED: int

  GL_TRIANGLE_STRIP_ADJACENCY: int

  GL_TRIANGLES_ADJACENCY: int

  GL_UNSIGNALED: int

  GL_UNSIGNED_INT_SAMPLER_2D_MULTISAMPLE: int

  GL_UNSIGNED_INT_SAMPLER_2D_MULTISAMPLE_ARRAY: int

  GL_WAIT_FAILED: int

  @staticmethod
  def glClientWaitSync(arg0: int, arg1: int, arg2: int) -> int: ...

  @staticmethod
  def glDeleteSync(arg0: int) -> None: ...

  @staticmethod
  @overload
  def glDrawElementsBaseVertex(arg0: int, arg1: ByteBuffer, arg2: int) -> None: ...

  @staticmethod
  @overload
  def glDrawElementsBaseVertex(arg0: int, arg1: IntBuffer, arg2: int) -> None: ...

  @staticmethod
  @overload
  def glDrawElementsBaseVertex(arg0: int, arg1: ShortBuffer, arg2: int) -> None: ...

  @staticmethod
  @overload
  def glDrawElementsBaseVertex(arg0: int, arg1: int, arg2: ByteBuffer, arg3: int) -> None: ...

  @staticmethod
  @overload
  def glDrawElementsBaseVertex(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int) -> None: ...

  @staticmethod
  @overload
  def glDrawElementsInstancedBaseVertex(arg0: int, arg1: ByteBuffer, arg2: int, arg3: int) -> None: ...

  @staticmethod
  @overload
  def glDrawElementsInstancedBaseVertex(arg0: int, arg1: IntBuffer, arg2: int, arg3: int) -> None: ...

  @staticmethod
  @overload
  def glDrawElementsInstancedBaseVertex(arg0: int, arg1: ShortBuffer, arg2: int, arg3: int) -> None: ...

  @staticmethod
  @overload
  def glDrawElementsInstancedBaseVertex(arg0: int, arg1: int, arg2: ByteBuffer, arg3: int, arg4: int) -> None: ...

  @staticmethod
  @overload
  def glDrawElementsInstancedBaseVertex(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int) -> None: ...

  @staticmethod
  @overload
  def glDrawRangeElementsBaseVertex(arg0: int, arg1: int, arg2: int, arg3: ByteBuffer, arg4: int) -> None: ...

  @staticmethod
  @overload
  def glDrawRangeElementsBaseVertex(arg0: int, arg1: int, arg2: int, arg3: IntBuffer, arg4: int) -> None: ...

  @staticmethod
  @overload
  def glDrawRangeElementsBaseVertex(arg0: int, arg1: int, arg2: int, arg3: ShortBuffer, arg4: int) -> None: ...

  @staticmethod
  @overload
  def glDrawRangeElementsBaseVertex(arg0: int, arg1: int, arg2: int, arg3: int, arg4: ByteBuffer, arg5: int) -> None: ...

  @staticmethod
  @overload
  def glDrawRangeElementsBaseVertex(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int) -> None: ...

  @staticmethod
  def glFenceSync(arg0: int, arg1: int) -> int: ...

  @staticmethod
  def glFramebufferTexture(arg0: int, arg1: int, arg2: int, arg3: int) -> None: ...

  @staticmethod
  def glGetBufferParameteri64(arg0: int, arg1: int) -> int: ...

  @staticmethod
  @overload
  def glGetBufferParameteri64v(arg0: int, arg1: int, arg2: list[int]) -> None: ...

  @staticmethod
  @overload
  def glGetBufferParameteri64v(arg0: int, arg1: int, arg2: LongBuffer) -> None: ...

  @staticmethod
  def glGetInteger64(arg0: int) -> int: ...

  @staticmethod
  def glGetInteger64i(arg0: int, arg1: int) -> int: ...

  @staticmethod
  @overload
  def glGetInteger64i_v(arg0: int, arg1: int, arg2: list[int]) -> None: ...

  @staticmethod
  @overload
  def glGetInteger64i_v(arg0: int, arg1: int, arg2: LongBuffer) -> None: ...

  @staticmethod
  @overload
  def glGetInteger64v(arg0: int, arg1: list[int]) -> None: ...

  @staticmethod
  @overload
  def glGetInteger64v(arg0: int, arg1: LongBuffer) -> None: ...

  @staticmethod
  def glGetMultisamplef(arg0: int, arg1: int) -> float: ...

  @staticmethod
  @overload
  def glGetMultisamplefv(arg0: int, arg1: int, arg2: list[float]) -> None: ...

  @staticmethod
  @overload
  def glGetMultisamplefv(arg0: int, arg1: int, arg2: FloatBuffer) -> None: ...

  @staticmethod
  def glGetSynci(arg0: int, arg1: int, arg2: IntBuffer) -> int: ...

  @staticmethod
  @overload
  def glGetSynciv(arg0: int, arg1: int, arg2: list[int], arg3: list[int]) -> None: ...

  @staticmethod
  @overload
  def glGetSynciv(arg0: int, arg1: int, arg2: IntBuffer, arg3: IntBuffer) -> None: ...

  @staticmethod
  def glIsSync(arg0: int) -> bool: ...

  @staticmethod
  @overload
  def glMultiDrawElementsBaseVertex(arg0: int, arg1: list[int], arg2: int, arg3: PointerBuffer, arg4: list[int]) -> None: ...

  @staticmethod
  @overload
  def glMultiDrawElementsBaseVertex(arg0: int, arg1: IntBuffer, arg2: int, arg3: PointerBuffer, arg4: IntBuffer) -> None: ...

  @staticmethod
  def glProvokingVertex(arg0: int) -> None: ...

  @staticmethod
  def glSampleMaski(arg0: int, arg1: int) -> None: ...

  @staticmethod
  def glTexImage2DMultisample(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: bool) -> None: ...

  @staticmethod
  def glTexImage3DMultisample(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: bool) -> None: ...

  @staticmethod
  def glWaitSync(arg0: int, arg1: int, arg2: int) -> None: ...

  @staticmethod
  def nglClientWaitSync(arg0: int, arg1: int, arg2: int) -> int: ...

  @staticmethod
  def nglDeleteSync(arg0: int) -> None: ...

  @staticmethod
  def nglDrawElementsBaseVertex(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int) -> None: ...

  @staticmethod
  def nglDrawElementsInstancedBaseVertex(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int) -> None: ...

  @staticmethod
  def nglDrawRangeElementsBaseVertex(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int) -> None: ...

  @staticmethod
  def nglGetBufferParameteri64v(arg0: int, arg1: int, arg2: int) -> None: ...

  @staticmethod
  def nglGetInteger64i_v(arg0: int, arg1: int, arg2: int) -> None: ...

  @staticmethod
  def nglGetInteger64v(arg0: int, arg1: int) -> None: ...

  @staticmethod
  def nglGetMultisamplefv(arg0: int, arg1: int, arg2: int) -> None: ...

  @staticmethod
  def nglGetSynciv(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int) -> None: ...

  @staticmethod
  def nglIsSync(arg0: int) -> bool: ...

  @staticmethod
  def nglMultiDrawElementsBaseVertex(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int) -> None: ...

  @staticmethod
  def nglWaitSync(arg0: int, arg1: int, arg2: int) -> None: ...


class GL33(GL32):

  GL_ANY_SAMPLES_PASSED: int

  GL_INT_2_10_10_10_REV: int

  GL_MAX_DUAL_SOURCE_DRAW_BUFFERS: int

  GL_ONE_MINUS_SRC1_ALPHA: int

  GL_ONE_MINUS_SRC1_COLOR: int

  GL_RGB10_A2UI: int

  GL_SAMPLER_BINDING: int

  GL_SRC1_COLOR: int

  GL_TEXTURE_SWIZZLE_A: int

  GL_TEXTURE_SWIZZLE_B: int

  GL_TEXTURE_SWIZZLE_G: int

  GL_TEXTURE_SWIZZLE_R: int

  GL_TEXTURE_SWIZZLE_RGBA: int

  GL_TIME_ELAPSED: int

  GL_TIMESTAMP: int

  GL_VERTEX_ATTRIB_ARRAY_DIVISOR: int

  @staticmethod
  @overload
  def glBindFragDataLocationIndexed(arg0: int, arg1: int, arg2: int, arg3: CharSequence) -> None: ...

  @staticmethod
  @overload
  def glBindFragDataLocationIndexed(arg0: int, arg1: int, arg2: int, arg3: ByteBuffer) -> None: ...

  @staticmethod
  def glBindSampler(arg0: int, arg1: int) -> None: ...

  @staticmethod
  def glColorP3ui(arg0: int, arg1: int) -> None: ...

  @staticmethod
  @overload
  def glColorP3uiv(arg0: int, arg1: list[int]) -> None: ...

  @staticmethod
  @overload
  def glColorP3uiv(arg0: int, arg1: IntBuffer) -> None: ...

  @staticmethod
  def glColorP4ui(arg0: int, arg1: int) -> None: ...

  @staticmethod
  @overload
  def glColorP4uiv(arg0: int, arg1: list[int]) -> None: ...

  @staticmethod
  @overload
  def glColorP4uiv(arg0: int, arg1: IntBuffer) -> None: ...

  @staticmethod
  @overload
  def glDeleteSamplers(arg0: list[int]) -> None: ...

  @staticmethod
  @overload
  def glDeleteSamplers(arg0: int) -> None: ...

  @staticmethod
  @overload
  def glDeleteSamplers(arg0: IntBuffer) -> None: ...

  @staticmethod
  @overload
  def glGenSamplers() -> int: ...

  @staticmethod
  @overload
  def glGenSamplers(arg0: list[int]) -> None: ...

  @staticmethod
  @overload
  def glGenSamplers(arg0: IntBuffer) -> None: ...

  @staticmethod
  @overload
  def glGetFragDataIndex(arg0: int, arg1: CharSequence) -> int: ...

  @staticmethod
  @overload
  def glGetFragDataIndex(arg0: int, arg1: ByteBuffer) -> int: ...

  @staticmethod
  def glGetQueryObjecti64(arg0: int, arg1: int) -> int: ...

  @staticmethod
  @overload
  def glGetQueryObjecti64v(arg0: int, arg1: int, arg2: list[int]) -> None: ...

  @staticmethod
  @overload
  def glGetQueryObjecti64v(arg0: int, arg1: int, arg2: LongBuffer) -> None: ...

  @staticmethod
  def glGetQueryObjectui64(arg0: int, arg1: int) -> int: ...

  @staticmethod
  @overload
  def glGetQueryObjectui64v(arg0: int, arg1: int, arg2: list[int]) -> None: ...

  @staticmethod
  @overload
  def glGetQueryObjectui64v(arg0: int, arg1: int, arg2: LongBuffer) -> None: ...

  @staticmethod
  def glGetSamplerParameterIi(arg0: int, arg1: int) -> int: ...

  @staticmethod
  @overload
  def glGetSamplerParameterIiv(arg0: int, arg1: int, arg2: list[int]) -> None: ...

  @staticmethod
  @overload
  def glGetSamplerParameterIiv(arg0: int, arg1: int, arg2: IntBuffer) -> None: ...

  @staticmethod
  def glGetSamplerParameterIui(arg0: int, arg1: int) -> int: ...

  @staticmethod
  @overload
  def glGetSamplerParameterIuiv(arg0: int, arg1: int, arg2: list[int]) -> None: ...

  @staticmethod
  @overload
  def glGetSamplerParameterIuiv(arg0: int, arg1: int, arg2: IntBuffer) -> None: ...

  @staticmethod
  def glGetSamplerParameterf(arg0: int, arg1: int) -> float: ...

  @staticmethod
  @overload
  def glGetSamplerParameterfv(arg0: int, arg1: int, arg2: list[float]) -> None: ...

  @staticmethod
  @overload
  def glGetSamplerParameterfv(arg0: int, arg1: int, arg2: FloatBuffer) -> None: ...

  @staticmethod
  def glGetSamplerParameteri(arg0: int, arg1: int) -> int: ...

  @staticmethod
  @overload
  def glGetSamplerParameteriv(arg0: int, arg1: int, arg2: list[int]) -> None: ...

  @staticmethod
  @overload
  def glGetSamplerParameteriv(arg0: int, arg1: int, arg2: IntBuffer) -> None: ...

  @staticmethod
  def glIsSampler(arg0: int) -> bool: ...

  @staticmethod
  def glMultiTexCoordP1ui(arg0: int, arg1: int, arg2: int) -> None: ...

  @staticmethod
  @overload
  def glMultiTexCoordP1uiv(arg0: int, arg1: int, arg2: list[int]) -> None: ...

  @staticmethod
  @overload
  def glMultiTexCoordP1uiv(arg0: int, arg1: int, arg2: IntBuffer) -> None: ...

  @staticmethod
  def glMultiTexCoordP2ui(arg0: int, arg1: int, arg2: int) -> None: ...

  @staticmethod
  @overload
  def glMultiTexCoordP2uiv(arg0: int, arg1: int, arg2: list[int]) -> None: ...

  @staticmethod
  @overload
  def glMultiTexCoordP2uiv(arg0: int, arg1: int, arg2: IntBuffer) -> None: ...

  @staticmethod
  def glMultiTexCoordP3ui(arg0: int, arg1: int, arg2: int) -> None: ...

  @staticmethod
  @overload
  def glMultiTexCoordP3uiv(arg0: int, arg1: int, arg2: list[int]) -> None: ...

  @staticmethod
  @overload
  def glMultiTexCoordP3uiv(arg0: int, arg1: int, arg2: IntBuffer) -> None: ...

  @staticmethod
  def glMultiTexCoordP4ui(arg0: int, arg1: int, arg2: int) -> None: ...

  @staticmethod
  @overload
  def glMultiTexCoordP4uiv(arg0: int, arg1: int, arg2: list[int]) -> None: ...

  @staticmethod
  @overload
  def glMultiTexCoordP4uiv(arg0: int, arg1: int, arg2: IntBuffer) -> None: ...

  @staticmethod
  def glNormalP3ui(arg0: int, arg1: int) -> None: ...

  @staticmethod
  @overload
  def glNormalP3uiv(arg0: int, arg1: list[int]) -> None: ...

  @staticmethod
  @overload
  def glNormalP3uiv(arg0: int, arg1: IntBuffer) -> None: ...

  @staticmethod
  def glQueryCounter(arg0: int, arg1: int) -> None: ...

  @staticmethod
  @overload
  def glSamplerParameterIiv(arg0: int, arg1: int, arg2: list[int]) -> None: ...

  @staticmethod
  @overload
  def glSamplerParameterIiv(arg0: int, arg1: int, arg2: IntBuffer) -> None: ...

  @staticmethod
  @overload
  def glSamplerParameterIuiv(arg0: int, arg1: int, arg2: list[int]) -> None: ...

  @staticmethod
  @overload
  def glSamplerParameterIuiv(arg0: int, arg1: int, arg2: IntBuffer) -> None: ...

  @staticmethod
  def glSamplerParameterf(arg0: int, arg1: int, arg2: float) -> None: ...

  @staticmethod
  @overload
  def glSamplerParameterfv(arg0: int, arg1: int, arg2: list[float]) -> None: ...

  @staticmethod
  @overload
  def glSamplerParameterfv(arg0: int, arg1: int, arg2: FloatBuffer) -> None: ...

  @staticmethod
  def glSamplerParameteri(arg0: int, arg1: int, arg2: int) -> None: ...

  @staticmethod
  @overload
  def glSamplerParameteriv(arg0: int, arg1: int, arg2: list[int]) -> None: ...

  @staticmethod
  @overload
  def glSamplerParameteriv(arg0: int, arg1: int, arg2: IntBuffer) -> None: ...

  @staticmethod
  def glSecondaryColorP3ui(arg0: int, arg1: int) -> None: ...

  @staticmethod
  @overload
  def glSecondaryColorP3uiv(arg0: int, arg1: list[int]) -> None: ...

  @staticmethod
  @overload
  def glSecondaryColorP3uiv(arg0: int, arg1: IntBuffer) -> None: ...

  @staticmethod
  def glTexCoordP1ui(arg0: int, arg1: int) -> None: ...

  @staticmethod
  @overload
  def glTexCoordP1uiv(arg0: int, arg1: list[int]) -> None: ...

  @staticmethod
  @overload
  def glTexCoordP1uiv(arg0: int, arg1: IntBuffer) -> None: ...

  @staticmethod
  def glTexCoordP2ui(arg0: int, arg1: int) -> None: ...

  @staticmethod
  @overload
  def glTexCoordP2uiv(arg0: int, arg1: list[int]) -> None: ...

  @staticmethod
  @overload
  def glTexCoordP2uiv(arg0: int, arg1: IntBuffer) -> None: ...

  @staticmethod
  def glTexCoordP3ui(arg0: int, arg1: int) -> None: ...

  @staticmethod
  @overload
  def glTexCoordP3uiv(arg0: int, arg1: list[int]) -> None: ...

  @staticmethod
  @overload
  def glTexCoordP3uiv(arg0: int, arg1: IntBuffer) -> None: ...

  @staticmethod
  def glTexCoordP4ui(arg0: int, arg1: int) -> None: ...

  @staticmethod
  @overload
  def glTexCoordP4uiv(arg0: int, arg1: list[int]) -> None: ...

  @staticmethod
  @overload
  def glTexCoordP4uiv(arg0: int, arg1: IntBuffer) -> None: ...

  @staticmethod
  def glVertexAttribDivisor(arg0: int, arg1: int) -> None: ...

  @staticmethod
  def glVertexAttribP1ui(arg0: int, arg1: int, arg2: bool, arg3: int) -> None: ...

  @staticmethod
  @overload
  def glVertexAttribP1uiv(arg0: int, arg1: int, arg2: bool, arg3: list[int]) -> None: ...

  @staticmethod
  @overload
  def glVertexAttribP1uiv(arg0: int, arg1: int, arg2: bool, arg3: IntBuffer) -> None: ...

  @staticmethod
  def glVertexAttribP2ui(arg0: int, arg1: int, arg2: bool, arg3: int) -> None: ...

  @staticmethod
  @overload
  def glVertexAttribP2uiv(arg0: int, arg1: int, arg2: bool, arg3: list[int]) -> None: ...

  @staticmethod
  @overload
  def glVertexAttribP2uiv(arg0: int, arg1: int, arg2: bool, arg3: IntBuffer) -> None: ...

  @staticmethod
  def glVertexAttribP3ui(arg0: int, arg1: int, arg2: bool, arg3: int) -> None: ...

  @staticmethod
  @overload
  def glVertexAttribP3uiv(arg0: int, arg1: int, arg2: bool, arg3: list[int]) -> None: ...

  @staticmethod
  @overload
  def glVertexAttribP3uiv(arg0: int, arg1: int, arg2: bool, arg3: IntBuffer) -> None: ...

  @staticmethod
  def glVertexAttribP4ui(arg0: int, arg1: int, arg2: bool, arg3: int) -> None: ...

  @staticmethod
  @overload
  def glVertexAttribP4uiv(arg0: int, arg1: int, arg2: bool, arg3: list[int]) -> None: ...

  @staticmethod
  @overload
  def glVertexAttribP4uiv(arg0: int, arg1: int, arg2: bool, arg3: IntBuffer) -> None: ...

  @staticmethod
  def glVertexP2ui(arg0: int, arg1: int) -> None: ...

  @staticmethod
  @overload
  def glVertexP2uiv(arg0: int, arg1: list[int]) -> None: ...

  @staticmethod
  @overload
  def glVertexP2uiv(arg0: int, arg1: IntBuffer) -> None: ...

  @staticmethod
  def glVertexP3ui(arg0: int, arg1: int) -> None: ...

  @staticmethod
  @overload
  def glVertexP3uiv(arg0: int, arg1: list[int]) -> None: ...

  @staticmethod
  @overload
  def glVertexP3uiv(arg0: int, arg1: IntBuffer) -> None: ...

  @staticmethod
  def glVertexP4ui(arg0: int, arg1: int) -> None: ...

  @staticmethod
  @overload
  def glVertexP4uiv(arg0: int, arg1: list[int]) -> None: ...

  @staticmethod
  @overload
  def glVertexP4uiv(arg0: int, arg1: IntBuffer) -> None: ...

  @staticmethod
  def nglBindFragDataLocationIndexed(arg0: int, arg1: int, arg2: int, arg3: int) -> None: ...

  @staticmethod
  def nglColorP3uiv(arg0: int, arg1: int) -> None: ...

  @staticmethod
  def nglColorP4uiv(arg0: int, arg1: int) -> None: ...

  @staticmethod
  def nglDeleteSamplers(arg0: int, arg1: int) -> None: ...

  @staticmethod
  def nglGenSamplers(arg0: int, arg1: int) -> None: ...

  @staticmethod
  def nglGetFragDataIndex(arg0: int, arg1: int) -> int: ...

  @staticmethod
  def nglGetQueryObjecti64v(arg0: int, arg1: int, arg2: int) -> None: ...

  @staticmethod
  def nglGetQueryObjectui64v(arg0: int, arg1: int, arg2: int) -> None: ...

  @staticmethod
  def nglGetSamplerParameterIiv(arg0: int, arg1: int, arg2: int) -> None: ...

  @staticmethod
  def nglGetSamplerParameterIuiv(arg0: int, arg1: int, arg2: int) -> None: ...

  @staticmethod
  def nglGetSamplerParameterfv(arg0: int, arg1: int, arg2: int) -> None: ...

  @staticmethod
  def nglGetSamplerParameteriv(arg0: int, arg1: int, arg2: int) -> None: ...

  @staticmethod
  def nglMultiTexCoordP1uiv(arg0: int, arg1: int, arg2: int) -> None: ...

  @staticmethod
  def nglMultiTexCoordP2uiv(arg0: int, arg1: int, arg2: int) -> None: ...

  @staticmethod
  def nglMultiTexCoordP3uiv(arg0: int, arg1: int, arg2: int) -> None: ...

  @staticmethod
  def nglMultiTexCoordP4uiv(arg0: int, arg1: int, arg2: int) -> None: ...

  @staticmethod
  def nglNormalP3uiv(arg0: int, arg1: int) -> None: ...

  @staticmethod
  def nglSamplerParameterIiv(arg0: int, arg1: int, arg2: int) -> None: ...

  @staticmethod
  def nglSamplerParameterIuiv(arg0: int, arg1: int, arg2: int) -> None: ...

  @staticmethod
  def nglSamplerParameterfv(arg0: int, arg1: int, arg2: int) -> None: ...

  @staticmethod
  def nglSamplerParameteriv(arg0: int, arg1: int, arg2: int) -> None: ...

  @staticmethod
  def nglSecondaryColorP3uiv(arg0: int, arg1: int) -> None: ...

  @staticmethod
  def nglTexCoordP1uiv(arg0: int, arg1: int) -> None: ...

  @staticmethod
  def nglTexCoordP2uiv(arg0: int, arg1: int) -> None: ...

  @staticmethod
  def nglTexCoordP3uiv(arg0: int, arg1: int) -> None: ...

  @staticmethod
  def nglTexCoordP4uiv(arg0: int, arg1: int) -> None: ...

  @staticmethod
  def nglVertexAttribP1uiv(arg0: int, arg1: int, arg2: bool, arg3: int) -> None: ...

  @staticmethod
  def nglVertexAttribP2uiv(arg0: int, arg1: int, arg2: bool, arg3: int) -> None: ...

  @staticmethod
  def nglVertexAttribP3uiv(arg0: int, arg1: int, arg2: bool, arg3: int) -> None: ...

  @staticmethod
  def nglVertexAttribP4uiv(arg0: int, arg1: int, arg2: bool, arg3: int) -> None: ...

  @staticmethod
  def nglVertexP2uiv(arg0: int, arg1: int) -> None: ...

  @staticmethod
  def nglVertexP3uiv(arg0: int, arg1: int) -> None: ...

  @staticmethod
  def nglVertexP4uiv(arg0: int, arg1: int) -> None: ...


class GL33C(GL32C):

  GL_ANY_SAMPLES_PASSED: int

  GL_INT_2_10_10_10_REV: int

  GL_MAX_DUAL_SOURCE_DRAW_BUFFERS: int

  GL_ONE_MINUS_SRC1_ALPHA: int

  GL_ONE_MINUS_SRC1_COLOR: int

  GL_RGB10_A2UI: int

  GL_SAMPLER_BINDING: int

  GL_SRC1_COLOR: int

  GL_TEXTURE_SWIZZLE_A: int

  GL_TEXTURE_SWIZZLE_B: int

  GL_TEXTURE_SWIZZLE_G: int

  GL_TEXTURE_SWIZZLE_R: int

  GL_TEXTURE_SWIZZLE_RGBA: int

  GL_TIME_ELAPSED: int

  GL_TIMESTAMP: int

  GL_VERTEX_ATTRIB_ARRAY_DIVISOR: int

  @staticmethod
  @overload
  def glBindFragDataLocationIndexed(arg0: int, arg1: int, arg2: int, arg3: CharSequence) -> None: ...

  @staticmethod
  @overload
  def glBindFragDataLocationIndexed(arg0: int, arg1: int, arg2: int, arg3: ByteBuffer) -> None: ...

  @staticmethod
  def glBindSampler(arg0: int, arg1: int) -> None: ...

  @staticmethod
  @overload
  def glDeleteSamplers(arg0: list[int]) -> None: ...

  @staticmethod
  @overload
  def glDeleteSamplers(arg0: int) -> None: ...

  @staticmethod
  @overload
  def glDeleteSamplers(arg0: IntBuffer) -> None: ...

  @staticmethod
  @overload
  def glGenSamplers() -> int: ...

  @staticmethod
  @overload
  def glGenSamplers(arg0: list[int]) -> None: ...

  @staticmethod
  @overload
  def glGenSamplers(arg0: IntBuffer) -> None: ...

  @staticmethod
  @overload
  def glGetFragDataIndex(arg0: int, arg1: CharSequence) -> int: ...

  @staticmethod
  @overload
  def glGetFragDataIndex(arg0: int, arg1: ByteBuffer) -> int: ...

  @staticmethod
  def glGetQueryObjecti64(arg0: int, arg1: int) -> int: ...

  @staticmethod
  @overload
  def glGetQueryObjecti64v(arg0: int, arg1: int, arg2: list[int]) -> None: ...

  @staticmethod
  @overload
  def glGetQueryObjecti64v(arg0: int, arg1: int, arg2: LongBuffer) -> None: ...

  @staticmethod
  def glGetQueryObjectui64(arg0: int, arg1: int) -> int: ...

  @staticmethod
  @overload
  def glGetQueryObjectui64v(arg0: int, arg1: int, arg2: list[int]) -> None: ...

  @staticmethod
  @overload
  def glGetQueryObjectui64v(arg0: int, arg1: int, arg2: LongBuffer) -> None: ...

  @staticmethod
  def glGetSamplerParameterIi(arg0: int, arg1: int) -> int: ...

  @staticmethod
  @overload
  def glGetSamplerParameterIiv(arg0: int, arg1: int, arg2: list[int]) -> None: ...

  @staticmethod
  @overload
  def glGetSamplerParameterIiv(arg0: int, arg1: int, arg2: IntBuffer) -> None: ...

  @staticmethod
  def glGetSamplerParameterIui(arg0: int, arg1: int) -> int: ...

  @staticmethod
  @overload
  def glGetSamplerParameterIuiv(arg0: int, arg1: int, arg2: list[int]) -> None: ...

  @staticmethod
  @overload
  def glGetSamplerParameterIuiv(arg0: int, arg1: int, arg2: IntBuffer) -> None: ...

  @staticmethod
  def glGetSamplerParameterf(arg0: int, arg1: int) -> float: ...

  @staticmethod
  @overload
  def glGetSamplerParameterfv(arg0: int, arg1: int, arg2: list[float]) -> None: ...

  @staticmethod
  @overload
  def glGetSamplerParameterfv(arg0: int, arg1: int, arg2: FloatBuffer) -> None: ...

  @staticmethod
  def glGetSamplerParameteri(arg0: int, arg1: int) -> int: ...

  @staticmethod
  @overload
  def glGetSamplerParameteriv(arg0: int, arg1: int, arg2: list[int]) -> None: ...

  @staticmethod
  @overload
  def glGetSamplerParameteriv(arg0: int, arg1: int, arg2: IntBuffer) -> None: ...

  @staticmethod
  def glIsSampler(arg0: int) -> bool: ...

  @staticmethod
  def glQueryCounter(arg0: int, arg1: int) -> None: ...

  @staticmethod
  @overload
  def glSamplerParameterIiv(arg0: int, arg1: int, arg2: list[int]) -> None: ...

  @staticmethod
  @overload
  def glSamplerParameterIiv(arg0: int, arg1: int, arg2: IntBuffer) -> None: ...

  @staticmethod
  @overload
  def glSamplerParameterIuiv(arg0: int, arg1: int, arg2: list[int]) -> None: ...

  @staticmethod
  @overload
  def glSamplerParameterIuiv(arg0: int, arg1: int, arg2: IntBuffer) -> None: ...

  @staticmethod
  def glSamplerParameterf(arg0: int, arg1: int, arg2: float) -> None: ...

  @staticmethod
  @overload
  def glSamplerParameterfv(arg0: int, arg1: int, arg2: list[float]) -> None: ...

  @staticmethod
  @overload
  def glSamplerParameterfv(arg0: int, arg1: int, arg2: FloatBuffer) -> None: ...

  @staticmethod
  def glSamplerParameteri(arg0: int, arg1: int, arg2: int) -> None: ...

  @staticmethod
  @overload
  def glSamplerParameteriv(arg0: int, arg1: int, arg2: list[int]) -> None: ...

  @staticmethod
  @overload
  def glSamplerParameteriv(arg0: int, arg1: int, arg2: IntBuffer) -> None: ...

  @staticmethod
  def glVertexAttribDivisor(arg0: int, arg1: int) -> None: ...

  @staticmethod
  def glVertexAttribP1ui(arg0: int, arg1: int, arg2: bool, arg3: int) -> None: ...

  @staticmethod
  @overload
  def glVertexAttribP1uiv(arg0: int, arg1: int, arg2: bool, arg3: list[int]) -> None: ...

  @staticmethod
  @overload
  def glVertexAttribP1uiv(arg0: int, arg1: int, arg2: bool, arg3: IntBuffer) -> None: ...

  @staticmethod
  def glVertexAttribP2ui(arg0: int, arg1: int, arg2: bool, arg3: int) -> None: ...

  @staticmethod
  @overload
  def glVertexAttribP2uiv(arg0: int, arg1: int, arg2: bool, arg3: list[int]) -> None: ...

  @staticmethod
  @overload
  def glVertexAttribP2uiv(arg0: int, arg1: int, arg2: bool, arg3: IntBuffer) -> None: ...

  @staticmethod
  def glVertexAttribP3ui(arg0: int, arg1: int, arg2: bool, arg3: int) -> None: ...

  @staticmethod
  @overload
  def glVertexAttribP3uiv(arg0: int, arg1: int, arg2: bool, arg3: list[int]) -> None: ...

  @staticmethod
  @overload
  def glVertexAttribP3uiv(arg0: int, arg1: int, arg2: bool, arg3: IntBuffer) -> None: ...

  @staticmethod
  def glVertexAttribP4ui(arg0: int, arg1: int, arg2: bool, arg3: int) -> None: ...

  @staticmethod
  @overload
  def glVertexAttribP4uiv(arg0: int, arg1: int, arg2: bool, arg3: list[int]) -> None: ...

  @staticmethod
  @overload
  def glVertexAttribP4uiv(arg0: int, arg1: int, arg2: bool, arg3: IntBuffer) -> None: ...

  @staticmethod
  def nglBindFragDataLocationIndexed(arg0: int, arg1: int, arg2: int, arg3: int) -> None: ...

  @staticmethod
  def nglDeleteSamplers(arg0: int, arg1: int) -> None: ...

  @staticmethod
  def nglGenSamplers(arg0: int, arg1: int) -> None: ...

  @staticmethod
  def nglGetFragDataIndex(arg0: int, arg1: int) -> int: ...

  @staticmethod
  def nglGetQueryObjecti64v(arg0: int, arg1: int, arg2: int) -> None: ...

  @staticmethod
  def nglGetQueryObjectui64v(arg0: int, arg1: int, arg2: int) -> None: ...

  @staticmethod
  def nglGetSamplerParameterIiv(arg0: int, arg1: int, arg2: int) -> None: ...

  @staticmethod
  def nglGetSamplerParameterIuiv(arg0: int, arg1: int, arg2: int) -> None: ...

  @staticmethod
  def nglGetSamplerParameterfv(arg0: int, arg1: int, arg2: int) -> None: ...

  @staticmethod
  def nglGetSamplerParameteriv(arg0: int, arg1: int, arg2: int) -> None: ...

  @staticmethod
  def nglSamplerParameterIiv(arg0: int, arg1: int, arg2: int) -> None: ...

  @staticmethod
  def nglSamplerParameterIuiv(arg0: int, arg1: int, arg2: int) -> None: ...

  @staticmethod
  def nglSamplerParameterfv(arg0: int, arg1: int, arg2: int) -> None: ...

  @staticmethod
  def nglSamplerParameteriv(arg0: int, arg1: int, arg2: int) -> None: ...

  @staticmethod
  def nglVertexAttribP1uiv(arg0: int, arg1: int, arg2: bool, arg3: int) -> None: ...

  @staticmethod
  def nglVertexAttribP2uiv(arg0: int, arg1: int, arg2: bool, arg3: int) -> None: ...

  @staticmethod
  def nglVertexAttribP3uiv(arg0: int, arg1: int, arg2: bool, arg3: int) -> None: ...

  @staticmethod
  def nglVertexAttribP4uiv(arg0: int, arg1: int, arg2: bool, arg3: int) -> None: ...


class GL40(GL33):

  GL_ACTIVE_SUBROUTINE_MAX_LENGTH: int

  GL_ACTIVE_SUBROUTINE_UNIFORM_LOCATIONS: int

  GL_ACTIVE_SUBROUTINE_UNIFORM_MAX_LENGTH: int

  GL_ACTIVE_SUBROUTINE_UNIFORMS: int

  GL_ACTIVE_SUBROUTINES: int

  GL_COMPATIBLE_SUBROUTINES: int

  GL_DOUBLE_MAT2: int

  GL_DOUBLE_MAT2x3: int

  GL_DOUBLE_MAT2x4: int

  GL_DOUBLE_MAT3: int

  GL_DOUBLE_MAT3x2: int

  GL_DOUBLE_MAT3x4: int

  GL_DOUBLE_MAT4: int

  GL_DOUBLE_MAT4x2: int

  GL_DOUBLE_MAT4x3: int

  GL_DOUBLE_VEC2: int

  GL_DOUBLE_VEC3: int

  GL_DOUBLE_VEC4: int

  GL_DRAW_INDIRECT_BUFFER: int

  GL_DRAW_INDIRECT_BUFFER_BINDING: int

  GL_FRACTIONAL_EVEN: int

  GL_FRACTIONAL_ODD: int

  GL_FRAGMENT_INTERPOLATION_OFFSET_BITS: int

  GL_GEOMETRY_SHADER_INVOCATIONS: int

  GL_INT_SAMPLER_CUBE_MAP_ARRAY: int

  GL_ISOLINES: int

  GL_MAX_COMBINED_TESS_CONTROL_UNIFORM_COMPONENTS: int

  GL_MAX_COMBINED_TESS_EVALUATION_UNIFORM_COMPONENTS: int

  GL_MAX_FRAGMENT_INTERPOLATION_OFFSET: int

  GL_MAX_GEOMETRY_SHADER_INVOCATIONS: int

  GL_MAX_PATCH_VERTICES: int

  GL_MAX_PROGRAM_TEXTURE_GATHER_OFFSET: int

  GL_MAX_SUBROUTINE_UNIFORM_LOCATIONS: int

  GL_MAX_SUBROUTINES: int

  GL_MAX_TESS_CONTROL_INPUT_COMPONENTS: int

  GL_MAX_TESS_CONTROL_OUTPUT_COMPONENTS: int

  GL_MAX_TESS_CONTROL_TEXTURE_IMAGE_UNITS: int

  GL_MAX_TESS_CONTROL_TOTAL_OUTPUT_COMPONENTS: int

  GL_MAX_TESS_CONTROL_UNIFORM_BLOCKS: int

  GL_MAX_TESS_CONTROL_UNIFORM_COMPONENTS: int

  GL_MAX_TESS_EVALUATION_INPUT_COMPONENTS: int

  GL_MAX_TESS_EVALUATION_OUTPUT_COMPONENTS: int

  GL_MAX_TESS_EVALUATION_TEXTURE_IMAGE_UNITS: int

  GL_MAX_TESS_EVALUATION_UNIFORM_BLOCKS: int

  GL_MAX_TESS_EVALUATION_UNIFORM_COMPONENTS: int

  GL_MAX_TESS_GEN_LEVEL: int

  GL_MAX_TESS_PATCH_COMPONENTS: int

  GL_MAX_TRANSFORM_FEEDBACK_BUFFERS: int

  GL_MAX_VERTEX_STREAMS: int

  GL_MIN_FRAGMENT_INTERPOLATION_OFFSET: int

  GL_MIN_PROGRAM_TEXTURE_GATHER_OFFSET: int

  GL_MIN_SAMPLE_SHADING_VALUE: int

  GL_NUM_COMPATIBLE_SUBROUTINES: int

  GL_PATCH_DEFAULT_INNER_LEVEL: int

  GL_PATCH_DEFAULT_OUTER_LEVEL: int

  GL_PATCH_VERTICES: int

  GL_PATCHES: int

  GL_PROXY_TEXTURE_CUBE_MAP_ARRAY: int

  GL_SAMPLE_SHADING: int

  GL_SAMPLER_CUBE_MAP_ARRAY: int

  GL_SAMPLER_CUBE_MAP_ARRAY_SHADOW: int

  GL_TESS_CONTROL_OUTPUT_VERTICES: int

  GL_TESS_CONTROL_SHADER: int

  GL_TESS_EVALUATION_SHADER: int

  GL_TESS_GEN_MODE: int

  GL_TESS_GEN_POINT_MODE: int

  GL_TESS_GEN_SPACING: int

  GL_TESS_GEN_VERTEX_ORDER: int

  GL_TEXTURE_BINDING_CUBE_MAP_ARRAY: int

  GL_TEXTURE_CUBE_MAP_ARRAY: int

  GL_TRANSFORM_FEEDBACK: int

  GL_TRANSFORM_FEEDBACK_BINDING: int

  GL_TRANSFORM_FEEDBACK_BUFFER_ACTIVE: int

  GL_TRANSFORM_FEEDBACK_BUFFER_PAUSED: int

  GL_UNIFORM_BLOCK_REFERENCED_BY_TESS_CONTROL_SHADER: int

  GL_UNIFORM_BLOCK_REFERENCED_BY_TESS_EVALUATION_SHADER: int

  GL_UNSIGNED_INT_SAMPLER_CUBE_MAP_ARRAY: int

  @staticmethod
  def glBeginQueryIndexed(arg0: int, arg1: int, arg2: int) -> None: ...

  @staticmethod
  def glBindTransformFeedback(arg0: int, arg1: int) -> None: ...

  @staticmethod
  def glBlendEquationSeparatei(arg0: int, arg1: int, arg2: int) -> None: ...

  @staticmethod
  def glBlendEquationi(arg0: int, arg1: int) -> None: ...

  @staticmethod
  def glBlendFuncSeparatei(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int) -> None: ...

  @staticmethod
  def glBlendFunci(arg0: int, arg1: int, arg2: int) -> None: ...

  @staticmethod
  @overload
  def glDeleteTransformFeedbacks(arg0: list[int]) -> None: ...

  @staticmethod
  @overload
  def glDeleteTransformFeedbacks(arg0: int) -> None: ...

  @staticmethod
  @overload
  def glDeleteTransformFeedbacks(arg0: IntBuffer) -> None: ...

  @staticmethod
  @overload
  def glDrawArraysIndirect(arg0: int, arg1: list[int]) -> None: ...

  @staticmethod
  @overload
  def glDrawArraysIndirect(arg0: int, arg1: ByteBuffer) -> None: ...

  @staticmethod
  @overload
  def glDrawArraysIndirect(arg0: int, arg1: IntBuffer) -> None: ...

  @staticmethod
  @overload
  def glDrawArraysIndirect(arg0: int, arg1: int) -> None: ...

  @staticmethod
  @overload
  def glDrawElementsIndirect(arg0: int, arg1: int, arg2: list[int]) -> None: ...

  @staticmethod
  @overload
  def glDrawElementsIndirect(arg0: int, arg1: int, arg2: ByteBuffer) -> None: ...

  @staticmethod
  @overload
  def glDrawElementsIndirect(arg0: int, arg1: int, arg2: IntBuffer) -> None: ...

  @staticmethod
  @overload
  def glDrawElementsIndirect(arg0: int, arg1: int, arg2: int) -> None: ...

  @staticmethod
  def glDrawTransformFeedback(arg0: int, arg1: int) -> None: ...

  @staticmethod
  def glDrawTransformFeedbackStream(arg0: int, arg1: int, arg2: int) -> None: ...

  @staticmethod
  def glEndQueryIndexed(arg0: int, arg1: int) -> None: ...

  @staticmethod
  @overload
  def glGenTransformFeedbacks() -> int: ...

  @staticmethod
  @overload
  def glGenTransformFeedbacks(arg0: list[int]) -> None: ...

  @staticmethod
  @overload
  def glGenTransformFeedbacks(arg0: IntBuffer) -> None: ...

  @staticmethod
  @overload
  def glGetActiveSubroutineName(arg0: int, arg1: int, arg2: int) -> str: ...

  @staticmethod
  @overload
  def glGetActiveSubroutineName(arg0: int, arg1: int, arg2: int, arg3: int) -> str: ...

  @staticmethod
  @overload
  def glGetActiveSubroutineName(arg0: int, arg1: int, arg2: int, arg3: list[int], arg4: ByteBuffer) -> None: ...

  @staticmethod
  @overload
  def glGetActiveSubroutineName(arg0: int, arg1: int, arg2: int, arg3: IntBuffer, arg4: ByteBuffer) -> None: ...

  @staticmethod
  @overload
  def glGetActiveSubroutineUniformName(arg0: int, arg1: int, arg2: int) -> str: ...

  @staticmethod
  @overload
  def glGetActiveSubroutineUniformName(arg0: int, arg1: int, arg2: int, arg3: int) -> str: ...

  @staticmethod
  @overload
  def glGetActiveSubroutineUniformName(arg0: int, arg1: int, arg2: int, arg3: list[int], arg4: ByteBuffer) -> None: ...

  @staticmethod
  @overload
  def glGetActiveSubroutineUniformName(arg0: int, arg1: int, arg2: int, arg3: IntBuffer, arg4: ByteBuffer) -> None: ...

  @staticmethod
  def glGetActiveSubroutineUniformi(arg0: int, arg1: int, arg2: int, arg3: int) -> int: ...

  @staticmethod
  @overload
  def glGetActiveSubroutineUniformiv(arg0: int, arg1: int, arg2: int, arg3: int, arg4: list[int]) -> None: ...

  @staticmethod
  @overload
  def glGetActiveSubroutineUniformiv(arg0: int, arg1: int, arg2: int, arg3: int, arg4: IntBuffer) -> None: ...

  @staticmethod
  def glGetProgramStagei(arg0: int, arg1: int, arg2: int) -> int: ...

  @staticmethod
  @overload
  def glGetProgramStageiv(arg0: int, arg1: int, arg2: int, arg3: list[int]) -> None: ...

  @staticmethod
  @overload
  def glGetProgramStageiv(arg0: int, arg1: int, arg2: int, arg3: IntBuffer) -> None: ...

  @staticmethod
  def glGetQueryIndexedi(arg0: int, arg1: int, arg2: int) -> int: ...

  @staticmethod
  @overload
  def glGetQueryIndexediv(arg0: int, arg1: int, arg2: int, arg3: list[int]) -> None: ...

  @staticmethod
  @overload
  def glGetQueryIndexediv(arg0: int, arg1: int, arg2: int, arg3: IntBuffer) -> None: ...

  @staticmethod
  @overload
  def glGetSubroutineIndex(arg0: int, arg1: int, arg2: CharSequence) -> int: ...

  @staticmethod
  @overload
  def glGetSubroutineIndex(arg0: int, arg1: int, arg2: ByteBuffer) -> int: ...

  @staticmethod
  @overload
  def glGetSubroutineUniformLocation(arg0: int, arg1: int, arg2: CharSequence) -> int: ...

  @staticmethod
  @overload
  def glGetSubroutineUniformLocation(arg0: int, arg1: int, arg2: ByteBuffer) -> int: ...

  @staticmethod
  def glGetUniformSubroutineui(arg0: int, arg1: int) -> int: ...

  @staticmethod
  @overload
  def glGetUniformSubroutineuiv(arg0: int, arg1: int, arg2: list[int]) -> None: ...

  @staticmethod
  @overload
  def glGetUniformSubroutineuiv(arg0: int, arg1: int, arg2: IntBuffer) -> None: ...

  @staticmethod
  def glGetUniformd(arg0: int, arg1: int) -> float: ...

  @staticmethod
  @overload
  def glGetUniformdv(arg0: int, arg1: int, arg2: list[float]) -> None: ...

  @staticmethod
  @overload
  def glGetUniformdv(arg0: int, arg1: int, arg2: DoubleBuffer) -> None: ...

  @staticmethod
  def glIsTransformFeedback(arg0: int) -> bool: ...

  @staticmethod
  def glMinSampleShading(arg0: float) -> None: ...

  @staticmethod
  @overload
  def glPatchParameterfv(arg0: int, arg1: list[float]) -> None: ...

  @staticmethod
  @overload
  def glPatchParameterfv(arg0: int, arg1: FloatBuffer) -> None: ...

  @staticmethod
  def glPatchParameteri(arg0: int, arg1: int) -> None: ...

  @staticmethod
  def glPauseTransformFeedback() -> None: ...

  @staticmethod
  def glResumeTransformFeedback() -> None: ...

  @staticmethod
  def glUniform1d(arg0: int, arg1: float) -> None: ...

  @staticmethod
  @overload
  def glUniform1dv(arg0: int, arg1: list[float]) -> None: ...

  @staticmethod
  @overload
  def glUniform1dv(arg0: int, arg1: DoubleBuffer) -> None: ...

  @staticmethod
  def glUniform2d(arg0: int, arg1: float, arg2: float) -> None: ...

  @staticmethod
  @overload
  def glUniform2dv(arg0: int, arg1: list[float]) -> None: ...

  @staticmethod
  @overload
  def glUniform2dv(arg0: int, arg1: DoubleBuffer) -> None: ...

  @staticmethod
  def glUniform3d(arg0: int, arg1: float, arg2: float, arg3: float) -> None: ...

  @staticmethod
  @overload
  def glUniform3dv(arg0: int, arg1: list[float]) -> None: ...

  @staticmethod
  @overload
  def glUniform3dv(arg0: int, arg1: DoubleBuffer) -> None: ...

  @staticmethod
  def glUniform4d(arg0: int, arg1: float, arg2: float, arg3: float, arg4: float) -> None: ...

  @staticmethod
  @overload
  def glUniform4dv(arg0: int, arg1: list[float]) -> None: ...

  @staticmethod
  @overload
  def glUniform4dv(arg0: int, arg1: DoubleBuffer) -> None: ...

  @staticmethod
  @overload
  def glUniformMatrix2dv(arg0: int, arg1: bool, arg2: list[float]) -> None: ...

  @staticmethod
  @overload
  def glUniformMatrix2dv(arg0: int, arg1: bool, arg2: DoubleBuffer) -> None: ...

  @staticmethod
  @overload
  def glUniformMatrix2x3dv(arg0: int, arg1: bool, arg2: list[float]) -> None: ...

  @staticmethod
  @overload
  def glUniformMatrix2x3dv(arg0: int, arg1: bool, arg2: DoubleBuffer) -> None: ...

  @staticmethod
  @overload
  def glUniformMatrix2x4dv(arg0: int, arg1: bool, arg2: list[float]) -> None: ...

  @staticmethod
  @overload
  def glUniformMatrix2x4dv(arg0: int, arg1: bool, arg2: DoubleBuffer) -> None: ...

  @staticmethod
  @overload
  def glUniformMatrix3dv(arg0: int, arg1: bool, arg2: list[float]) -> None: ...

  @staticmethod
  @overload
  def glUniformMatrix3dv(arg0: int, arg1: bool, arg2: DoubleBuffer) -> None: ...

  @staticmethod
  @overload
  def glUniformMatrix3x2dv(arg0: int, arg1: bool, arg2: list[float]) -> None: ...

  @staticmethod
  @overload
  def glUniformMatrix3x2dv(arg0: int, arg1: bool, arg2: DoubleBuffer) -> None: ...

  @staticmethod
  @overload
  def glUniformMatrix3x4dv(arg0: int, arg1: bool, arg2: list[float]) -> None: ...

  @staticmethod
  @overload
  def glUniformMatrix3x4dv(arg0: int, arg1: bool, arg2: DoubleBuffer) -> None: ...

  @staticmethod
  @overload
  def glUniformMatrix4dv(arg0: int, arg1: bool, arg2: list[float]) -> None: ...

  @staticmethod
  @overload
  def glUniformMatrix4dv(arg0: int, arg1: bool, arg2: DoubleBuffer) -> None: ...

  @staticmethod
  @overload
  def glUniformMatrix4x2dv(arg0: int, arg1: bool, arg2: list[float]) -> None: ...

  @staticmethod
  @overload
  def glUniformMatrix4x2dv(arg0: int, arg1: bool, arg2: DoubleBuffer) -> None: ...

  @staticmethod
  @overload
  def glUniformMatrix4x3dv(arg0: int, arg1: bool, arg2: list[float]) -> None: ...

  @staticmethod
  @overload
  def glUniformMatrix4x3dv(arg0: int, arg1: bool, arg2: DoubleBuffer) -> None: ...

  @staticmethod
  def glUniformSubroutinesui(arg0: int, arg1: int) -> None: ...

  @staticmethod
  @overload
  def glUniformSubroutinesuiv(arg0: int, arg1: list[int]) -> None: ...

  @staticmethod
  @overload
  def glUniformSubroutinesuiv(arg0: int, arg1: IntBuffer) -> None: ...

  @staticmethod
  def nglDeleteTransformFeedbacks(arg0: int, arg1: int) -> None: ...

  @staticmethod
  def nglDrawArraysIndirect(arg0: int, arg1: int) -> None: ...

  @staticmethod
  def nglDrawElementsIndirect(arg0: int, arg1: int, arg2: int) -> None: ...

  @staticmethod
  def nglGenTransformFeedbacks(arg0: int, arg1: int) -> None: ...

  @staticmethod
  def nglGetActiveSubroutineName(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int) -> None: ...

  @staticmethod
  def nglGetActiveSubroutineUniformName(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int) -> None: ...

  @staticmethod
  def nglGetActiveSubroutineUniformiv(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int) -> None: ...

  @staticmethod
  def nglGetProgramStageiv(arg0: int, arg1: int, arg2: int, arg3: int) -> None: ...

  @staticmethod
  def nglGetQueryIndexediv(arg0: int, arg1: int, arg2: int, arg3: int) -> None: ...

  @staticmethod
  def nglGetSubroutineIndex(arg0: int, arg1: int, arg2: int) -> int: ...

  @staticmethod
  def nglGetSubroutineUniformLocation(arg0: int, arg1: int, arg2: int) -> int: ...

  @staticmethod
  def nglGetUniformSubroutineuiv(arg0: int, arg1: int, arg2: int) -> None: ...

  @staticmethod
  def nglGetUniformdv(arg0: int, arg1: int, arg2: int) -> None: ...

  @staticmethod
  def nglPatchParameterfv(arg0: int, arg1: int) -> None: ...

  @staticmethod
  def nglUniform1dv(arg0: int, arg1: int, arg2: int) -> None: ...

  @staticmethod
  def nglUniform2dv(arg0: int, arg1: int, arg2: int) -> None: ...

  @staticmethod
  def nglUniform3dv(arg0: int, arg1: int, arg2: int) -> None: ...

  @staticmethod
  def nglUniform4dv(arg0: int, arg1: int, arg2: int) -> None: ...

  @staticmethod
  def nglUniformMatrix2dv(arg0: int, arg1: int, arg2: bool, arg3: int) -> None: ...

  @staticmethod
  def nglUniformMatrix2x3dv(arg0: int, arg1: int, arg2: bool, arg3: int) -> None: ...

  @staticmethod
  def nglUniformMatrix2x4dv(arg0: int, arg1: int, arg2: bool, arg3: int) -> None: ...

  @staticmethod
  def nglUniformMatrix3dv(arg0: int, arg1: int, arg2: bool, arg3: int) -> None: ...

  @staticmethod
  def nglUniformMatrix3x2dv(arg0: int, arg1: int, arg2: bool, arg3: int) -> None: ...

  @staticmethod
  def nglUniformMatrix3x4dv(arg0: int, arg1: int, arg2: bool, arg3: int) -> None: ...

  @staticmethod
  def nglUniformMatrix4dv(arg0: int, arg1: int, arg2: bool, arg3: int) -> None: ...

  @staticmethod
  def nglUniformMatrix4x2dv(arg0: int, arg1: int, arg2: bool, arg3: int) -> None: ...

  @staticmethod
  def nglUniformMatrix4x3dv(arg0: int, arg1: int, arg2: bool, arg3: int) -> None: ...

  @staticmethod
  def nglUniformSubroutinesuiv(arg0: int, arg1: int, arg2: int) -> None: ...


class GL40C(GL33C):

  GL_ACTIVE_SUBROUTINE_MAX_LENGTH: int

  GL_ACTIVE_SUBROUTINE_UNIFORM_LOCATIONS: int

  GL_ACTIVE_SUBROUTINE_UNIFORM_MAX_LENGTH: int

  GL_ACTIVE_SUBROUTINE_UNIFORMS: int

  GL_ACTIVE_SUBROUTINES: int

  GL_COMPATIBLE_SUBROUTINES: int

  GL_DOUBLE_MAT2: int

  GL_DOUBLE_MAT2x3: int

  GL_DOUBLE_MAT2x4: int

  GL_DOUBLE_MAT3: int

  GL_DOUBLE_MAT3x2: int

  GL_DOUBLE_MAT3x4: int

  GL_DOUBLE_MAT4: int

  GL_DOUBLE_MAT4x2: int

  GL_DOUBLE_MAT4x3: int

  GL_DOUBLE_VEC2: int

  GL_DOUBLE_VEC3: int

  GL_DOUBLE_VEC4: int

  GL_DRAW_INDIRECT_BUFFER: int

  GL_DRAW_INDIRECT_BUFFER_BINDING: int

  GL_FRACTIONAL_EVEN: int

  GL_FRACTIONAL_ODD: int

  GL_FRAGMENT_INTERPOLATION_OFFSET_BITS: int

  GL_GEOMETRY_SHADER_INVOCATIONS: int

  GL_INT_SAMPLER_CUBE_MAP_ARRAY: int

  GL_ISOLINES: int

  GL_MAX_COMBINED_TESS_CONTROL_UNIFORM_COMPONENTS: int

  GL_MAX_COMBINED_TESS_EVALUATION_UNIFORM_COMPONENTS: int

  GL_MAX_FRAGMENT_INTERPOLATION_OFFSET: int

  GL_MAX_GEOMETRY_SHADER_INVOCATIONS: int

  GL_MAX_PATCH_VERTICES: int

  GL_MAX_PROGRAM_TEXTURE_GATHER_OFFSET: int

  GL_MAX_SUBROUTINE_UNIFORM_LOCATIONS: int

  GL_MAX_SUBROUTINES: int

  GL_MAX_TESS_CONTROL_INPUT_COMPONENTS: int

  GL_MAX_TESS_CONTROL_OUTPUT_COMPONENTS: int

  GL_MAX_TESS_CONTROL_TEXTURE_IMAGE_UNITS: int

  GL_MAX_TESS_CONTROL_TOTAL_OUTPUT_COMPONENTS: int

  GL_MAX_TESS_CONTROL_UNIFORM_BLOCKS: int

  GL_MAX_TESS_CONTROL_UNIFORM_COMPONENTS: int

  GL_MAX_TESS_EVALUATION_INPUT_COMPONENTS: int

  GL_MAX_TESS_EVALUATION_OUTPUT_COMPONENTS: int

  GL_MAX_TESS_EVALUATION_TEXTURE_IMAGE_UNITS: int

  GL_MAX_TESS_EVALUATION_UNIFORM_BLOCKS: int

  GL_MAX_TESS_EVALUATION_UNIFORM_COMPONENTS: int

  GL_MAX_TESS_GEN_LEVEL: int

  GL_MAX_TESS_PATCH_COMPONENTS: int

  GL_MAX_TRANSFORM_FEEDBACK_BUFFERS: int

  GL_MAX_VERTEX_STREAMS: int

  GL_MIN_FRAGMENT_INTERPOLATION_OFFSET: int

  GL_MIN_PROGRAM_TEXTURE_GATHER_OFFSET: int

  GL_MIN_SAMPLE_SHADING_VALUE: int

  GL_NUM_COMPATIBLE_SUBROUTINES: int

  GL_PATCH_DEFAULT_INNER_LEVEL: int

  GL_PATCH_DEFAULT_OUTER_LEVEL: int

  GL_PATCH_VERTICES: int

  GL_PATCHES: int

  GL_PROXY_TEXTURE_CUBE_MAP_ARRAY: int

  GL_SAMPLE_SHADING: int

  GL_SAMPLER_CUBE_MAP_ARRAY: int

  GL_SAMPLER_CUBE_MAP_ARRAY_SHADOW: int

  GL_TESS_CONTROL_OUTPUT_VERTICES: int

  GL_TESS_CONTROL_SHADER: int

  GL_TESS_EVALUATION_SHADER: int

  GL_TESS_GEN_MODE: int

  GL_TESS_GEN_POINT_MODE: int

  GL_TESS_GEN_SPACING: int

  GL_TESS_GEN_VERTEX_ORDER: int

  GL_TEXTURE_BINDING_CUBE_MAP_ARRAY: int

  GL_TEXTURE_CUBE_MAP_ARRAY: int

  GL_TRANSFORM_FEEDBACK: int

  GL_TRANSFORM_FEEDBACK_BINDING: int

  GL_TRANSFORM_FEEDBACK_BUFFER_ACTIVE: int

  GL_TRANSFORM_FEEDBACK_BUFFER_PAUSED: int

  GL_UNIFORM_BLOCK_REFERENCED_BY_TESS_CONTROL_SHADER: int

  GL_UNIFORM_BLOCK_REFERENCED_BY_TESS_EVALUATION_SHADER: int

  GL_UNSIGNED_INT_SAMPLER_CUBE_MAP_ARRAY: int

  @staticmethod
  def glBeginQueryIndexed(arg0: int, arg1: int, arg2: int) -> None: ...

  @staticmethod
  def glBindTransformFeedback(arg0: int, arg1: int) -> None: ...

  @staticmethod
  def glBlendEquationSeparatei(arg0: int, arg1: int, arg2: int) -> None: ...

  @staticmethod
  def glBlendEquationi(arg0: int, arg1: int) -> None: ...

  @staticmethod
  def glBlendFuncSeparatei(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int) -> None: ...

  @staticmethod
  def glBlendFunci(arg0: int, arg1: int, arg2: int) -> None: ...

  @staticmethod
  @overload
  def glDeleteTransformFeedbacks(arg0: list[int]) -> None: ...

  @staticmethod
  @overload
  def glDeleteTransformFeedbacks(arg0: int) -> None: ...

  @staticmethod
  @overload
  def glDeleteTransformFeedbacks(arg0: IntBuffer) -> None: ...

  @staticmethod
  @overload
  def glDrawArraysIndirect(arg0: int, arg1: list[int]) -> None: ...

  @staticmethod
  @overload
  def glDrawArraysIndirect(arg0: int, arg1: ByteBuffer) -> None: ...

  @staticmethod
  @overload
  def glDrawArraysIndirect(arg0: int, arg1: IntBuffer) -> None: ...

  @staticmethod
  @overload
  def glDrawArraysIndirect(arg0: int, arg1: int) -> None: ...

  @staticmethod
  @overload
  def glDrawElementsIndirect(arg0: int, arg1: int, arg2: list[int]) -> None: ...

  @staticmethod
  @overload
  def glDrawElementsIndirect(arg0: int, arg1: int, arg2: ByteBuffer) -> None: ...

  @staticmethod
  @overload
  def glDrawElementsIndirect(arg0: int, arg1: int, arg2: IntBuffer) -> None: ...

  @staticmethod
  @overload
  def glDrawElementsIndirect(arg0: int, arg1: int, arg2: int) -> None: ...

  @staticmethod
  def glDrawTransformFeedback(arg0: int, arg1: int) -> None: ...

  @staticmethod
  def glDrawTransformFeedbackStream(arg0: int, arg1: int, arg2: int) -> None: ...

  @staticmethod
  def glEndQueryIndexed(arg0: int, arg1: int) -> None: ...

  @staticmethod
  @overload
  def glGenTransformFeedbacks() -> int: ...

  @staticmethod
  @overload
  def glGenTransformFeedbacks(arg0: list[int]) -> None: ...

  @staticmethod
  @overload
  def glGenTransformFeedbacks(arg0: IntBuffer) -> None: ...

  @staticmethod
  @overload
  def glGetActiveSubroutineName(arg0: int, arg1: int, arg2: int) -> str: ...

  @staticmethod
  @overload
  def glGetActiveSubroutineName(arg0: int, arg1: int, arg2: int, arg3: int) -> str: ...

  @staticmethod
  @overload
  def glGetActiveSubroutineName(arg0: int, arg1: int, arg2: int, arg3: list[int], arg4: ByteBuffer) -> None: ...

  @staticmethod
  @overload
  def glGetActiveSubroutineName(arg0: int, arg1: int, arg2: int, arg3: IntBuffer, arg4: ByteBuffer) -> None: ...

  @staticmethod
  @overload
  def glGetActiveSubroutineUniformName(arg0: int, arg1: int, arg2: int) -> str: ...

  @staticmethod
  @overload
  def glGetActiveSubroutineUniformName(arg0: int, arg1: int, arg2: int, arg3: int) -> str: ...

  @staticmethod
  @overload
  def glGetActiveSubroutineUniformName(arg0: int, arg1: int, arg2: int, arg3: list[int], arg4: ByteBuffer) -> None: ...

  @staticmethod
  @overload
  def glGetActiveSubroutineUniformName(arg0: int, arg1: int, arg2: int, arg3: IntBuffer, arg4: ByteBuffer) -> None: ...

  @staticmethod
  def glGetActiveSubroutineUniformi(arg0: int, arg1: int, arg2: int, arg3: int) -> int: ...

  @staticmethod
  @overload
  def glGetActiveSubroutineUniformiv(arg0: int, arg1: int, arg2: int, arg3: int, arg4: list[int]) -> None: ...

  @staticmethod
  @overload
  def glGetActiveSubroutineUniformiv(arg0: int, arg1: int, arg2: int, arg3: int, arg4: IntBuffer) -> None: ...

  @staticmethod
  def glGetProgramStagei(arg0: int, arg1: int, arg2: int) -> int: ...

  @staticmethod
  @overload
  def glGetProgramStageiv(arg0: int, arg1: int, arg2: int, arg3: list[int]) -> None: ...

  @staticmethod
  @overload
  def glGetProgramStageiv(arg0: int, arg1: int, arg2: int, arg3: IntBuffer) -> None: ...

  @staticmethod
  def glGetQueryIndexedi(arg0: int, arg1: int, arg2: int) -> int: ...

  @staticmethod
  @overload
  def glGetQueryIndexediv(arg0: int, arg1: int, arg2: int, arg3: list[int]) -> None: ...

  @staticmethod
  @overload
  def glGetQueryIndexediv(arg0: int, arg1: int, arg2: int, arg3: IntBuffer) -> None: ...

  @staticmethod
  @overload
  def glGetSubroutineIndex(arg0: int, arg1: int, arg2: CharSequence) -> int: ...

  @staticmethod
  @overload
  def glGetSubroutineIndex(arg0: int, arg1: int, arg2: ByteBuffer) -> int: ...

  @staticmethod
  @overload
  def glGetSubroutineUniformLocation(arg0: int, arg1: int, arg2: CharSequence) -> int: ...

  @staticmethod
  @overload
  def glGetSubroutineUniformLocation(arg0: int, arg1: int, arg2: ByteBuffer) -> int: ...

  @staticmethod
  def glGetUniformSubroutineui(arg0: int, arg1: int) -> int: ...

  @staticmethod
  @overload
  def glGetUniformSubroutineuiv(arg0: int, arg1: int, arg2: list[int]) -> None: ...

  @staticmethod
  @overload
  def glGetUniformSubroutineuiv(arg0: int, arg1: int, arg2: IntBuffer) -> None: ...

  @staticmethod
  def glGetUniformd(arg0: int, arg1: int) -> float: ...

  @staticmethod
  @overload
  def glGetUniformdv(arg0: int, arg1: int, arg2: list[float]) -> None: ...

  @staticmethod
  @overload
  def glGetUniformdv(arg0: int, arg1: int, arg2: DoubleBuffer) -> None: ...

  @staticmethod
  def glIsTransformFeedback(arg0: int) -> bool: ...

  @staticmethod
  def glMinSampleShading(arg0: float) -> None: ...

  @staticmethod
  @overload
  def glPatchParameterfv(arg0: int, arg1: list[float]) -> None: ...

  @staticmethod
  @overload
  def glPatchParameterfv(arg0: int, arg1: FloatBuffer) -> None: ...

  @staticmethod
  def glPatchParameteri(arg0: int, arg1: int) -> None: ...

  @staticmethod
  def glPauseTransformFeedback() -> None: ...

  @staticmethod
  def glResumeTransformFeedback() -> None: ...

  @staticmethod
  def glUniform1d(arg0: int, arg1: float) -> None: ...

  @staticmethod
  @overload
  def glUniform1dv(arg0: int, arg1: list[float]) -> None: ...

  @staticmethod
  @overload
  def glUniform1dv(arg0: int, arg1: DoubleBuffer) -> None: ...

  @staticmethod
  def glUniform2d(arg0: int, arg1: float, arg2: float) -> None: ...

  @staticmethod
  @overload
  def glUniform2dv(arg0: int, arg1: list[float]) -> None: ...

  @staticmethod
  @overload
  def glUniform2dv(arg0: int, arg1: DoubleBuffer) -> None: ...

  @staticmethod
  def glUniform3d(arg0: int, arg1: float, arg2: float, arg3: float) -> None: ...

  @staticmethod
  @overload
  def glUniform3dv(arg0: int, arg1: list[float]) -> None: ...

  @staticmethod
  @overload
  def glUniform3dv(arg0: int, arg1: DoubleBuffer) -> None: ...

  @staticmethod
  def glUniform4d(arg0: int, arg1: float, arg2: float, arg3: float, arg4: float) -> None: ...

  @staticmethod
  @overload
  def glUniform4dv(arg0: int, arg1: list[float]) -> None: ...

  @staticmethod
  @overload
  def glUniform4dv(arg0: int, arg1: DoubleBuffer) -> None: ...

  @staticmethod
  @overload
  def glUniformMatrix2dv(arg0: int, arg1: bool, arg2: list[float]) -> None: ...

  @staticmethod
  @overload
  def glUniformMatrix2dv(arg0: int, arg1: bool, arg2: DoubleBuffer) -> None: ...

  @staticmethod
  @overload
  def glUniformMatrix2x3dv(arg0: int, arg1: bool, arg2: list[float]) -> None: ...

  @staticmethod
  @overload
  def glUniformMatrix2x3dv(arg0: int, arg1: bool, arg2: DoubleBuffer) -> None: ...

  @staticmethod
  @overload
  def glUniformMatrix2x4dv(arg0: int, arg1: bool, arg2: list[float]) -> None: ...

  @staticmethod
  @overload
  def glUniformMatrix2x4dv(arg0: int, arg1: bool, arg2: DoubleBuffer) -> None: ...

  @staticmethod
  @overload
  def glUniformMatrix3dv(arg0: int, arg1: bool, arg2: list[float]) -> None: ...

  @staticmethod
  @overload
  def glUniformMatrix3dv(arg0: int, arg1: bool, arg2: DoubleBuffer) -> None: ...

  @staticmethod
  @overload
  def glUniformMatrix3x2dv(arg0: int, arg1: bool, arg2: list[float]) -> None: ...

  @staticmethod
  @overload
  def glUniformMatrix3x2dv(arg0: int, arg1: bool, arg2: DoubleBuffer) -> None: ...

  @staticmethod
  @overload
  def glUniformMatrix3x4dv(arg0: int, arg1: bool, arg2: list[float]) -> None: ...

  @staticmethod
  @overload
  def glUniformMatrix3x4dv(arg0: int, arg1: bool, arg2: DoubleBuffer) -> None: ...

  @staticmethod
  @overload
  def glUniformMatrix4dv(arg0: int, arg1: bool, arg2: list[float]) -> None: ...

  @staticmethod
  @overload
  def glUniformMatrix4dv(arg0: int, arg1: bool, arg2: DoubleBuffer) -> None: ...

  @staticmethod
  @overload
  def glUniformMatrix4x2dv(arg0: int, arg1: bool, arg2: list[float]) -> None: ...

  @staticmethod
  @overload
  def glUniformMatrix4x2dv(arg0: int, arg1: bool, arg2: DoubleBuffer) -> None: ...

  @staticmethod
  @overload
  def glUniformMatrix4x3dv(arg0: int, arg1: bool, arg2: list[float]) -> None: ...

  @staticmethod
  @overload
  def glUniformMatrix4x3dv(arg0: int, arg1: bool, arg2: DoubleBuffer) -> None: ...

  @staticmethod
  def glUniformSubroutinesui(arg0: int, arg1: int) -> None: ...

  @staticmethod
  @overload
  def glUniformSubroutinesuiv(arg0: int, arg1: list[int]) -> None: ...

  @staticmethod
  @overload
  def glUniformSubroutinesuiv(arg0: int, arg1: IntBuffer) -> None: ...

  @staticmethod
  def nglDeleteTransformFeedbacks(arg0: int, arg1: int) -> None: ...

  @staticmethod
  def nglDrawArraysIndirect(arg0: int, arg1: int) -> None: ...

  @staticmethod
  def nglDrawElementsIndirect(arg0: int, arg1: int, arg2: int) -> None: ...

  @staticmethod
  def nglGenTransformFeedbacks(arg0: int, arg1: int) -> None: ...

  @staticmethod
  def nglGetActiveSubroutineName(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int) -> None: ...

  @staticmethod
  def nglGetActiveSubroutineUniformName(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int) -> None: ...

  @staticmethod
  def nglGetActiveSubroutineUniformiv(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int) -> None: ...

  @staticmethod
  def nglGetProgramStageiv(arg0: int, arg1: int, arg2: int, arg3: int) -> None: ...

  @staticmethod
  def nglGetQueryIndexediv(arg0: int, arg1: int, arg2: int, arg3: int) -> None: ...

  @staticmethod
  def nglGetSubroutineIndex(arg0: int, arg1: int, arg2: int) -> int: ...

  @staticmethod
  def nglGetSubroutineUniformLocation(arg0: int, arg1: int, arg2: int) -> int: ...

  @staticmethod
  def nglGetUniformSubroutineuiv(arg0: int, arg1: int, arg2: int) -> None: ...

  @staticmethod
  def nglGetUniformdv(arg0: int, arg1: int, arg2: int) -> None: ...

  @staticmethod
  def nglPatchParameterfv(arg0: int, arg1: int) -> None: ...

  @staticmethod
  def nglUniform1dv(arg0: int, arg1: int, arg2: int) -> None: ...

  @staticmethod
  def nglUniform2dv(arg0: int, arg1: int, arg2: int) -> None: ...

  @staticmethod
  def nglUniform3dv(arg0: int, arg1: int, arg2: int) -> None: ...

  @staticmethod
  def nglUniform4dv(arg0: int, arg1: int, arg2: int) -> None: ...

  @staticmethod
  def nglUniformMatrix2dv(arg0: int, arg1: int, arg2: bool, arg3: int) -> None: ...

  @staticmethod
  def nglUniformMatrix2x3dv(arg0: int, arg1: int, arg2: bool, arg3: int) -> None: ...

  @staticmethod
  def nglUniformMatrix2x4dv(arg0: int, arg1: int, arg2: bool, arg3: int) -> None: ...

  @staticmethod
  def nglUniformMatrix3dv(arg0: int, arg1: int, arg2: bool, arg3: int) -> None: ...

  @staticmethod
  def nglUniformMatrix3x2dv(arg0: int, arg1: int, arg2: bool, arg3: int) -> None: ...

  @staticmethod
  def nglUniformMatrix3x4dv(arg0: int, arg1: int, arg2: bool, arg3: int) -> None: ...

  @staticmethod
  def nglUniformMatrix4dv(arg0: int, arg1: int, arg2: bool, arg3: int) -> None: ...

  @staticmethod
  def nglUniformMatrix4x2dv(arg0: int, arg1: int, arg2: bool, arg3: int) -> None: ...

  @staticmethod
  def nglUniformMatrix4x3dv(arg0: int, arg1: int, arg2: bool, arg3: int) -> None: ...

  @staticmethod
  def nglUniformSubroutinesuiv(arg0: int, arg1: int, arg2: int) -> None: ...


class GL41(GL40):

  GL_ACTIVE_PROGRAM: int

  GL_ALL_SHADER_BITS: int

  GL_FIXED: int

  GL_FRAGMENT_SHADER_BIT: int

  GL_GEOMETRY_SHADER_BIT: int

  GL_HIGH_FLOAT: int

  GL_HIGH_INT: int

  GL_IMPLEMENTATION_COLOR_READ_FORMAT: int

  GL_IMPLEMENTATION_COLOR_READ_TYPE: int

  GL_LAYER_PROVOKING_VERTEX: int

  GL_LOW_FLOAT: int

  GL_LOW_INT: int

  GL_MAX_FRAGMENT_UNIFORM_VECTORS: int

  GL_MAX_VARYING_VECTORS: int

  GL_MAX_VERTEX_UNIFORM_VECTORS: int

  GL_MAX_VIEWPORTS: int

  GL_MEDIUM_FLOAT: int

  GL_MEDIUM_INT: int

  GL_NUM_PROGRAM_BINARY_FORMATS: int

  GL_NUM_SHADER_BINARY_FORMATS: int

  GL_PROGRAM_BINARY_FORMATS: int

  GL_PROGRAM_BINARY_LENGTH: int

  GL_PROGRAM_BINARY_RETRIEVABLE_HINT: int

  GL_PROGRAM_PIPELINE_BINDING: int

  GL_PROGRAM_SEPARABLE: int

  GL_RGB565: int

  GL_SHADER_BINARY_FORMATS: int

  GL_SHADER_COMPILER: int

  GL_TESS_CONTROL_SHADER_BIT: int

  GL_TESS_EVALUATION_SHADER_BIT: int

  GL_UNDEFINED_VERTEX: int

  GL_VERTEX_SHADER_BIT: int

  GL_VIEWPORT_BOUNDS_RANGE: int

  GL_VIEWPORT_INDEX_PROVOKING_VERTEX: int

  GL_VIEWPORT_SUBPIXEL_BITS: int

  @staticmethod
  def glActiveShaderProgram(arg0: int, arg1: int) -> None: ...

  @staticmethod
  def glBindProgramPipeline(arg0: int) -> None: ...

  @staticmethod
  def glClearDepthf(arg0: float) -> None: ...

  @staticmethod
  @overload
  def glCreateShaderProgramv(arg0: int, arg1: list[CharSequence]) -> int: ...

  @staticmethod
  @overload
  def glCreateShaderProgramv(arg0: int, arg1: CharSequence) -> int: ...

  @staticmethod
  @overload
  def glCreateShaderProgramv(arg0: int, arg1: PointerBuffer) -> int: ...

  @staticmethod
  @overload
  def glDeleteProgramPipelines(arg0: list[int]) -> None: ...

  @staticmethod
  @overload
  def glDeleteProgramPipelines(arg0: int) -> None: ...

  @staticmethod
  @overload
  def glDeleteProgramPipelines(arg0: IntBuffer) -> None: ...

  @staticmethod
  @overload
  def glDepthRangeArrayv(arg0: int, arg1: list[float]) -> None: ...

  @staticmethod
  @overload
  def glDepthRangeArrayv(arg0: int, arg1: DoubleBuffer) -> None: ...

  @staticmethod
  def glDepthRangeIndexed(arg0: int, arg1: float, arg2: float) -> None: ...

  @staticmethod
  def glDepthRangef(arg0: float, arg1: float) -> None: ...

  @staticmethod
  @overload
  def glGenProgramPipelines() -> int: ...

  @staticmethod
  @overload
  def glGenProgramPipelines(arg0: list[int]) -> None: ...

  @staticmethod
  @overload
  def glGenProgramPipelines(arg0: IntBuffer) -> None: ...

  @staticmethod
  def glGetDoublei(arg0: int, arg1: int) -> float: ...

  @staticmethod
  @overload
  def glGetDoublei_v(arg0: int, arg1: int, arg2: list[float]) -> None: ...

  @staticmethod
  @overload
  def glGetDoublei_v(arg0: int, arg1: int, arg2: DoubleBuffer) -> None: ...

  @staticmethod
  def glGetFloati(arg0: int, arg1: int) -> float: ...

  @staticmethod
  @overload
  def glGetFloati_v(arg0: int, arg1: int, arg2: list[float]) -> None: ...

  @staticmethod
  @overload
  def glGetFloati_v(arg0: int, arg1: int, arg2: FloatBuffer) -> None: ...

  @staticmethod
  @overload
  def glGetProgramBinary(arg0: int, arg1: list[int], arg2: list[int], arg3: ByteBuffer) -> None: ...

  @staticmethod
  @overload
  def glGetProgramBinary(arg0: int, arg1: IntBuffer, arg2: IntBuffer, arg3: ByteBuffer) -> None: ...

  @staticmethod
  @overload
  def glGetProgramPipelineInfoLog(arg0: int) -> str: ...

  @staticmethod
  @overload
  def glGetProgramPipelineInfoLog(arg0: int, arg1: int) -> str: ...

  @staticmethod
  @overload
  def glGetProgramPipelineInfoLog(arg0: int, arg1: list[int], arg2: ByteBuffer) -> None: ...

  @staticmethod
  @overload
  def glGetProgramPipelineInfoLog(arg0: int, arg1: IntBuffer, arg2: ByteBuffer) -> None: ...

  @staticmethod
  def glGetProgramPipelinei(arg0: int, arg1: int) -> int: ...

  @staticmethod
  @overload
  def glGetProgramPipelineiv(arg0: int, arg1: int, arg2: list[int]) -> None: ...

  @staticmethod
  @overload
  def glGetProgramPipelineiv(arg0: int, arg1: int, arg2: IntBuffer) -> None: ...

  @staticmethod
  @overload
  def glGetShaderPrecisionFormat(arg0: int, arg1: int, arg2: IntBuffer) -> int: ...

  @staticmethod
  @overload
  def glGetShaderPrecisionFormat(arg0: int, arg1: int, arg2: list[int], arg3: list[int]) -> None: ...

  @staticmethod
  @overload
  def glGetShaderPrecisionFormat(arg0: int, arg1: int, arg2: IntBuffer, arg3: IntBuffer) -> None: ...

  @staticmethod
  @overload
  def glGetVertexAttribLdv(arg0: int, arg1: int, arg2: list[float]) -> None: ...

  @staticmethod
  @overload
  def glGetVertexAttribLdv(arg0: int, arg1: int, arg2: DoubleBuffer) -> None: ...

  @staticmethod
  def glIsProgramPipeline(arg0: int) -> bool: ...

  @staticmethod
  def glProgramBinary(arg0: int, arg1: int, arg2: ByteBuffer) -> None: ...

  @staticmethod
  def glProgramParameteri(arg0: int, arg1: int, arg2: int) -> None: ...

  @staticmethod
  def glProgramUniform1d(arg0: int, arg1: int, arg2: float) -> None: ...

  @staticmethod
  @overload
  def glProgramUniform1dv(arg0: int, arg1: int, arg2: list[float]) -> None: ...

  @staticmethod
  @overload
  def glProgramUniform1dv(arg0: int, arg1: int, arg2: DoubleBuffer) -> None: ...

  @staticmethod
  def glProgramUniform1f(arg0: int, arg1: int, arg2: float) -> None: ...

  @staticmethod
  @overload
  def glProgramUniform1fv(arg0: int, arg1: int, arg2: list[float]) -> None: ...

  @staticmethod
  @overload
  def glProgramUniform1fv(arg0: int, arg1: int, arg2: FloatBuffer) -> None: ...

  @staticmethod
  def glProgramUniform1i(arg0: int, arg1: int, arg2: int) -> None: ...

  @staticmethod
  @overload
  def glProgramUniform1iv(arg0: int, arg1: int, arg2: list[int]) -> None: ...

  @staticmethod
  @overload
  def glProgramUniform1iv(arg0: int, arg1: int, arg2: IntBuffer) -> None: ...

  @staticmethod
  def glProgramUniform1ui(arg0: int, arg1: int, arg2: int) -> None: ...

  @staticmethod
  @overload
  def glProgramUniform1uiv(arg0: int, arg1: int, arg2: list[int]) -> None: ...

  @staticmethod
  @overload
  def glProgramUniform1uiv(arg0: int, arg1: int, arg2: IntBuffer) -> None: ...

  @staticmethod
  def glProgramUniform2d(arg0: int, arg1: int, arg2: float, arg3: float) -> None: ...

  @staticmethod
  @overload
  def glProgramUniform2dv(arg0: int, arg1: int, arg2: list[float]) -> None: ...

  @staticmethod
  @overload
  def glProgramUniform2dv(arg0: int, arg1: int, arg2: DoubleBuffer) -> None: ...

  @staticmethod
  def glProgramUniform2f(arg0: int, arg1: int, arg2: float, arg3: float) -> None: ...

  @staticmethod
  @overload
  def glProgramUniform2fv(arg0: int, arg1: int, arg2: list[float]) -> None: ...

  @staticmethod
  @overload
  def glProgramUniform2fv(arg0: int, arg1: int, arg2: FloatBuffer) -> None: ...

  @staticmethod
  def glProgramUniform2i(arg0: int, arg1: int, arg2: int, arg3: int) -> None: ...

  @staticmethod
  @overload
  def glProgramUniform2iv(arg0: int, arg1: int, arg2: list[int]) -> None: ...

  @staticmethod
  @overload
  def glProgramUniform2iv(arg0: int, arg1: int, arg2: IntBuffer) -> None: ...

  @staticmethod
  def glProgramUniform2ui(arg0: int, arg1: int, arg2: int, arg3: int) -> None: ...

  @staticmethod
  @overload
  def glProgramUniform2uiv(arg0: int, arg1: int, arg2: list[int]) -> None: ...

  @staticmethod
  @overload
  def glProgramUniform2uiv(arg0: int, arg1: int, arg2: IntBuffer) -> None: ...

  @staticmethod
  def glProgramUniform3d(arg0: int, arg1: int, arg2: float, arg3: float, arg4: float) -> None: ...

  @staticmethod
  @overload
  def glProgramUniform3dv(arg0: int, arg1: int, arg2: list[float]) -> None: ...

  @staticmethod
  @overload
  def glProgramUniform3dv(arg0: int, arg1: int, arg2: DoubleBuffer) -> None: ...

  @staticmethod
  def glProgramUniform3f(arg0: int, arg1: int, arg2: float, arg3: float, arg4: float) -> None: ...

  @staticmethod
  @overload
  def glProgramUniform3fv(arg0: int, arg1: int, arg2: list[float]) -> None: ...

  @staticmethod
  @overload
  def glProgramUniform3fv(arg0: int, arg1: int, arg2: FloatBuffer) -> None: ...

  @staticmethod
  def glProgramUniform3i(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int) -> None: ...

  @staticmethod
  @overload
  def glProgramUniform3iv(arg0: int, arg1: int, arg2: list[int]) -> None: ...

  @staticmethod
  @overload
  def glProgramUniform3iv(arg0: int, arg1: int, arg2: IntBuffer) -> None: ...

  @staticmethod
  def glProgramUniform3ui(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int) -> None: ...

  @staticmethod
  @overload
  def glProgramUniform3uiv(arg0: int, arg1: int, arg2: list[int]) -> None: ...

  @staticmethod
  @overload
  def glProgramUniform3uiv(arg0: int, arg1: int, arg2: IntBuffer) -> None: ...

  @staticmethod
  def glProgramUniform4d(arg0: int, arg1: int, arg2: float, arg3: float, arg4: float, arg5: float) -> None: ...

  @staticmethod
  @overload
  def glProgramUniform4dv(arg0: int, arg1: int, arg2: list[float]) -> None: ...

  @staticmethod
  @overload
  def glProgramUniform4dv(arg0: int, arg1: int, arg2: DoubleBuffer) -> None: ...

  @staticmethod
  def glProgramUniform4f(arg0: int, arg1: int, arg2: float, arg3: float, arg4: float, arg5: float) -> None: ...

  @staticmethod
  @overload
  def glProgramUniform4fv(arg0: int, arg1: int, arg2: list[float]) -> None: ...

  @staticmethod
  @overload
  def glProgramUniform4fv(arg0: int, arg1: int, arg2: FloatBuffer) -> None: ...

  @staticmethod
  def glProgramUniform4i(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int) -> None: ...

  @staticmethod
  @overload
  def glProgramUniform4iv(arg0: int, arg1: int, arg2: list[int]) -> None: ...

  @staticmethod
  @overload
  def glProgramUniform4iv(arg0: int, arg1: int, arg2: IntBuffer) -> None: ...

  @staticmethod
  def glProgramUniform4ui(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int) -> None: ...

  @staticmethod
  @overload
  def glProgramUniform4uiv(arg0: int, arg1: int, arg2: list[int]) -> None: ...

  @staticmethod
  @overload
  def glProgramUniform4uiv(arg0: int, arg1: int, arg2: IntBuffer) -> None: ...

  @staticmethod
  @overload
  def glProgramUniformMatrix2dv(arg0: int, arg1: int, arg2: bool, arg3: list[float]) -> None: ...

  @staticmethod
  @overload
  def glProgramUniformMatrix2dv(arg0: int, arg1: int, arg2: bool, arg3: DoubleBuffer) -> None: ...

  @staticmethod
  @overload
  def glProgramUniformMatrix2fv(arg0: int, arg1: int, arg2: bool, arg3: list[float]) -> None: ...

  @staticmethod
  @overload
  def glProgramUniformMatrix2fv(arg0: int, arg1: int, arg2: bool, arg3: FloatBuffer) -> None: ...

  @staticmethod
  @overload
  def glProgramUniformMatrix2x3dv(arg0: int, arg1: int, arg2: bool, arg3: list[float]) -> None: ...

  @staticmethod
  @overload
  def glProgramUniformMatrix2x3dv(arg0: int, arg1: int, arg2: bool, arg3: DoubleBuffer) -> None: ...

  @staticmethod
  @overload
  def glProgramUniformMatrix2x3fv(arg0: int, arg1: int, arg2: bool, arg3: list[float]) -> None: ...

  @staticmethod
  @overload
  def glProgramUniformMatrix2x3fv(arg0: int, arg1: int, arg2: bool, arg3: FloatBuffer) -> None: ...

  @staticmethod
  @overload
  def glProgramUniformMatrix2x4dv(arg0: int, arg1: int, arg2: bool, arg3: list[float]) -> None: ...

  @staticmethod
  @overload
  def glProgramUniformMatrix2x4dv(arg0: int, arg1: int, arg2: bool, arg3: DoubleBuffer) -> None: ...

  @staticmethod
  @overload
  def glProgramUniformMatrix2x4fv(arg0: int, arg1: int, arg2: bool, arg3: list[float]) -> None: ...

  @staticmethod
  @overload
  def glProgramUniformMatrix2x4fv(arg0: int, arg1: int, arg2: bool, arg3: FloatBuffer) -> None: ...

  @staticmethod
  @overload
  def glProgramUniformMatrix3dv(arg0: int, arg1: int, arg2: bool, arg3: list[float]) -> None: ...

  @staticmethod
  @overload
  def glProgramUniformMatrix3dv(arg0: int, arg1: int, arg2: bool, arg3: DoubleBuffer) -> None: ...

  @staticmethod
  @overload
  def glProgramUniformMatrix3fv(arg0: int, arg1: int, arg2: bool, arg3: list[float]) -> None: ...

  @staticmethod
  @overload
  def glProgramUniformMatrix3fv(arg0: int, arg1: int, arg2: bool, arg3: FloatBuffer) -> None: ...

  @staticmethod
  @overload
  def glProgramUniformMatrix3x2dv(arg0: int, arg1: int, arg2: bool, arg3: list[float]) -> None: ...

  @staticmethod
  @overload
  def glProgramUniformMatrix3x2dv(arg0: int, arg1: int, arg2: bool, arg3: DoubleBuffer) -> None: ...

  @staticmethod
  @overload
  def glProgramUniformMatrix3x2fv(arg0: int, arg1: int, arg2: bool, arg3: list[float]) -> None: ...

  @staticmethod
  @overload
  def glProgramUniformMatrix3x2fv(arg0: int, arg1: int, arg2: bool, arg3: FloatBuffer) -> None: ...

  @staticmethod
  @overload
  def glProgramUniformMatrix3x4dv(arg0: int, arg1: int, arg2: bool, arg3: list[float]) -> None: ...

  @staticmethod
  @overload
  def glProgramUniformMatrix3x4dv(arg0: int, arg1: int, arg2: bool, arg3: DoubleBuffer) -> None: ...

  @staticmethod
  @overload
  def glProgramUniformMatrix3x4fv(arg0: int, arg1: int, arg2: bool, arg3: list[float]) -> None: ...

  @staticmethod
  @overload
  def glProgramUniformMatrix3x4fv(arg0: int, arg1: int, arg2: bool, arg3: FloatBuffer) -> None: ...

  @staticmethod
  @overload
  def glProgramUniformMatrix4dv(arg0: int, arg1: int, arg2: bool, arg3: list[float]) -> None: ...

  @staticmethod
  @overload
  def glProgramUniformMatrix4dv(arg0: int, arg1: int, arg2: bool, arg3: DoubleBuffer) -> None: ...

  @staticmethod
  @overload
  def glProgramUniformMatrix4fv(arg0: int, arg1: int, arg2: bool, arg3: list[float]) -> None: ...

  @staticmethod
  @overload
  def glProgramUniformMatrix4fv(arg0: int, arg1: int, arg2: bool, arg3: FloatBuffer) -> None: ...

  @staticmethod
  @overload
  def glProgramUniformMatrix4x2dv(arg0: int, arg1: int, arg2: bool, arg3: list[float]) -> None: ...

  @staticmethod
  @overload
  def glProgramUniformMatrix4x2dv(arg0: int, arg1: int, arg2: bool, arg3: DoubleBuffer) -> None: ...

  @staticmethod
  @overload
  def glProgramUniformMatrix4x2fv(arg0: int, arg1: int, arg2: bool, arg3: list[float]) -> None: ...

  @staticmethod
  @overload
  def glProgramUniformMatrix4x2fv(arg0: int, arg1: int, arg2: bool, arg3: FloatBuffer) -> None: ...

  @staticmethod
  @overload
  def glProgramUniformMatrix4x3dv(arg0: int, arg1: int, arg2: bool, arg3: list[float]) -> None: ...

  @staticmethod
  @overload
  def glProgramUniformMatrix4x3dv(arg0: int, arg1: int, arg2: bool, arg3: DoubleBuffer) -> None: ...

  @staticmethod
  @overload
  def glProgramUniformMatrix4x3fv(arg0: int, arg1: int, arg2: bool, arg3: list[float]) -> None: ...

  @staticmethod
  @overload
  def glProgramUniformMatrix4x3fv(arg0: int, arg1: int, arg2: bool, arg3: FloatBuffer) -> None: ...

  @staticmethod
  def glReleaseShaderCompiler() -> None: ...

  @staticmethod
  @overload
  def glScissorArrayv(arg0: int, arg1: list[int]) -> None: ...

  @staticmethod
  @overload
  def glScissorArrayv(arg0: int, arg1: IntBuffer) -> None: ...

  @staticmethod
  def glScissorIndexed(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int) -> None: ...

  @staticmethod
  @overload
  def glScissorIndexedv(arg0: int, arg1: list[int]) -> None: ...

  @staticmethod
  @overload
  def glScissorIndexedv(arg0: int, arg1: IntBuffer) -> None: ...

  @staticmethod
  @overload
  def glShaderBinary(arg0: list[int], arg1: int, arg2: ByteBuffer) -> None: ...

  @staticmethod
  @overload
  def glShaderBinary(arg0: IntBuffer, arg1: int, arg2: ByteBuffer) -> None: ...

  @staticmethod
  def glUseProgramStages(arg0: int, arg1: int, arg2: int) -> None: ...

  @staticmethod
  def glValidateProgramPipeline(arg0: int) -> None: ...

  @staticmethod
  def glVertexAttribL1d(arg0: int, arg1: float) -> None: ...

  @staticmethod
  @overload
  def glVertexAttribL1dv(arg0: int, arg1: list[float]) -> None: ...

  @staticmethod
  @overload
  def glVertexAttribL1dv(arg0: int, arg1: DoubleBuffer) -> None: ...

  @staticmethod
  def glVertexAttribL2d(arg0: int, arg1: float, arg2: float) -> None: ...

  @staticmethod
  @overload
  def glVertexAttribL2dv(arg0: int, arg1: list[float]) -> None: ...

  @staticmethod
  @overload
  def glVertexAttribL2dv(arg0: int, arg1: DoubleBuffer) -> None: ...

  @staticmethod
  def glVertexAttribL3d(arg0: int, arg1: float, arg2: float, arg3: float) -> None: ...

  @staticmethod
  @overload
  def glVertexAttribL3dv(arg0: int, arg1: list[float]) -> None: ...

  @staticmethod
  @overload
  def glVertexAttribL3dv(arg0: int, arg1: DoubleBuffer) -> None: ...

  @staticmethod
  def glVertexAttribL4d(arg0: int, arg1: float, arg2: float, arg3: float, arg4: float) -> None: ...

  @staticmethod
  @overload
  def glVertexAttribL4dv(arg0: int, arg1: list[float]) -> None: ...

  @staticmethod
  @overload
  def glVertexAttribL4dv(arg0: int, arg1: DoubleBuffer) -> None: ...

  @staticmethod
  @overload
  def glVertexAttribLPointer(arg0: int, arg1: int, arg2: int, arg3: DoubleBuffer) -> None: ...

  @staticmethod
  @overload
  def glVertexAttribLPointer(arg0: int, arg1: int, arg2: int, arg3: int, arg4: ByteBuffer) -> None: ...

  @staticmethod
  @overload
  def glVertexAttribLPointer(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int) -> None: ...

  @staticmethod
  @overload
  def glViewportArrayv(arg0: int, arg1: list[float]) -> None: ...

  @staticmethod
  @overload
  def glViewportArrayv(arg0: int, arg1: FloatBuffer) -> None: ...

  @staticmethod
  def glViewportIndexedf(arg0: int, arg1: float, arg2: float, arg3: float, arg4: float) -> None: ...

  @staticmethod
  @overload
  def glViewportIndexedfv(arg0: int, arg1: list[float]) -> None: ...

  @staticmethod
  @overload
  def glViewportIndexedfv(arg0: int, arg1: FloatBuffer) -> None: ...

  @staticmethod
  def nglCreateShaderProgramv(arg0: int, arg1: int, arg2: int) -> int: ...

  @staticmethod
  def nglDeleteProgramPipelines(arg0: int, arg1: int) -> None: ...

  @staticmethod
  def nglDepthRangeArrayv(arg0: int, arg1: int, arg2: int) -> None: ...

  @staticmethod
  def nglGenProgramPipelines(arg0: int, arg1: int) -> None: ...

  @staticmethod
  def nglGetDoublei_v(arg0: int, arg1: int, arg2: int) -> None: ...

  @staticmethod
  def nglGetFloati_v(arg0: int, arg1: int, arg2: int) -> None: ...

  @staticmethod
  def nglGetProgramBinary(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int) -> None: ...

  @staticmethod
  def nglGetProgramPipelineInfoLog(arg0: int, arg1: int, arg2: int, arg3: int) -> None: ...

  @staticmethod
  def nglGetProgramPipelineiv(arg0: int, arg1: int, arg2: int) -> None: ...

  @staticmethod
  def nglGetShaderPrecisionFormat(arg0: int, arg1: int, arg2: int, arg3: int) -> None: ...

  @staticmethod
  def nglGetVertexAttribLdv(arg0: int, arg1: int, arg2: int) -> None: ...

  @staticmethod
  def nglProgramBinary(arg0: int, arg1: int, arg2: int, arg3: int) -> None: ...

  @staticmethod
  def nglProgramUniform1dv(arg0: int, arg1: int, arg2: int, arg3: int) -> None: ...

  @staticmethod
  def nglProgramUniform1fv(arg0: int, arg1: int, arg2: int, arg3: int) -> None: ...

  @staticmethod
  def nglProgramUniform1iv(arg0: int, arg1: int, arg2: int, arg3: int) -> None: ...

  @staticmethod
  def nglProgramUniform1uiv(arg0: int, arg1: int, arg2: int, arg3: int) -> None: ...

  @staticmethod
  def nglProgramUniform2dv(arg0: int, arg1: int, arg2: int, arg3: int) -> None: ...

  @staticmethod
  def nglProgramUniform2fv(arg0: int, arg1: int, arg2: int, arg3: int) -> None: ...

  @staticmethod
  def nglProgramUniform2iv(arg0: int, arg1: int, arg2: int, arg3: int) -> None: ...

  @staticmethod
  def nglProgramUniform2uiv(arg0: int, arg1: int, arg2: int, arg3: int) -> None: ...

  @staticmethod
  def nglProgramUniform3dv(arg0: int, arg1: int, arg2: int, arg3: int) -> None: ...

  @staticmethod
  def nglProgramUniform3fv(arg0: int, arg1: int, arg2: int, arg3: int) -> None: ...

  @staticmethod
  def nglProgramUniform3iv(arg0: int, arg1: int, arg2: int, arg3: int) -> None: ...

  @staticmethod
  def nglProgramUniform3uiv(arg0: int, arg1: int, arg2: int, arg3: int) -> None: ...

  @staticmethod
  def nglProgramUniform4dv(arg0: int, arg1: int, arg2: int, arg3: int) -> None: ...

  @staticmethod
  def nglProgramUniform4fv(arg0: int, arg1: int, arg2: int, arg3: int) -> None: ...

  @staticmethod
  def nglProgramUniform4iv(arg0: int, arg1: int, arg2: int, arg3: int) -> None: ...

  @staticmethod
  def nglProgramUniform4uiv(arg0: int, arg1: int, arg2: int, arg3: int) -> None: ...

  @staticmethod
  def nglProgramUniformMatrix2dv(arg0: int, arg1: int, arg2: int, arg3: bool, arg4: int) -> None: ...

  @staticmethod
  def nglProgramUniformMatrix2fv(arg0: int, arg1: int, arg2: int, arg3: bool, arg4: int) -> None: ...

  @staticmethod
  def nglProgramUniformMatrix2x3dv(arg0: int, arg1: int, arg2: int, arg3: bool, arg4: int) -> None: ...

  @staticmethod
  def nglProgramUniformMatrix2x3fv(arg0: int, arg1: int, arg2: int, arg3: bool, arg4: int) -> None: ...

  @staticmethod
  def nglProgramUniformMatrix2x4dv(arg0: int, arg1: int, arg2: int, arg3: bool, arg4: int) -> None: ...

  @staticmethod
  def nglProgramUniformMatrix2x4fv(arg0: int, arg1: int, arg2: int, arg3: bool, arg4: int) -> None: ...

  @staticmethod
  def nglProgramUniformMatrix3dv(arg0: int, arg1: int, arg2: int, arg3: bool, arg4: int) -> None: ...

  @staticmethod
  def nglProgramUniformMatrix3fv(arg0: int, arg1: int, arg2: int, arg3: bool, arg4: int) -> None: ...

  @staticmethod
  def nglProgramUniformMatrix3x2dv(arg0: int, arg1: int, arg2: int, arg3: bool, arg4: int) -> None: ...

  @staticmethod
  def nglProgramUniformMatrix3x2fv(arg0: int, arg1: int, arg2: int, arg3: bool, arg4: int) -> None: ...

  @staticmethod
  def nglProgramUniformMatrix3x4dv(arg0: int, arg1: int, arg2: int, arg3: bool, arg4: int) -> None: ...

  @staticmethod
  def nglProgramUniformMatrix3x4fv(arg0: int, arg1: int, arg2: int, arg3: bool, arg4: int) -> None: ...

  @staticmethod
  def nglProgramUniformMatrix4dv(arg0: int, arg1: int, arg2: int, arg3: bool, arg4: int) -> None: ...

  @staticmethod
  def nglProgramUniformMatrix4fv(arg0: int, arg1: int, arg2: int, arg3: bool, arg4: int) -> None: ...

  @staticmethod
  def nglProgramUniformMatrix4x2dv(arg0: int, arg1: int, arg2: int, arg3: bool, arg4: int) -> None: ...

  @staticmethod
  def nglProgramUniformMatrix4x2fv(arg0: int, arg1: int, arg2: int, arg3: bool, arg4: int) -> None: ...

  @staticmethod
  def nglProgramUniformMatrix4x3dv(arg0: int, arg1: int, arg2: int, arg3: bool, arg4: int) -> None: ...

  @staticmethod
  def nglProgramUniformMatrix4x3fv(arg0: int, arg1: int, arg2: int, arg3: bool, arg4: int) -> None: ...

  @staticmethod
  def nglScissorArrayv(arg0: int, arg1: int, arg2: int) -> None: ...

  @staticmethod
  def nglScissorIndexedv(arg0: int, arg1: int) -> None: ...

  @staticmethod
  def nglShaderBinary(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int) -> None: ...

  @staticmethod
  def nglVertexAttribL1dv(arg0: int, arg1: int) -> None: ...

  @staticmethod
  def nglVertexAttribL2dv(arg0: int, arg1: int) -> None: ...

  @staticmethod
  def nglVertexAttribL3dv(arg0: int, arg1: int) -> None: ...

  @staticmethod
  def nglVertexAttribL4dv(arg0: int, arg1: int) -> None: ...

  @staticmethod
  def nglVertexAttribLPointer(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int) -> None: ...

  @staticmethod
  def nglViewportArrayv(arg0: int, arg1: int, arg2: int) -> None: ...

  @staticmethod
  def nglViewportIndexedfv(arg0: int, arg1: int) -> None: ...


class GL41C(GL40C):

  GL_ACTIVE_PROGRAM: int

  GL_ALL_SHADER_BITS: int

  GL_FIXED: int

  GL_FRAGMENT_SHADER_BIT: int

  GL_GEOMETRY_SHADER_BIT: int

  GL_HIGH_FLOAT: int

  GL_HIGH_INT: int

  GL_IMPLEMENTATION_COLOR_READ_FORMAT: int

  GL_IMPLEMENTATION_COLOR_READ_TYPE: int

  GL_LAYER_PROVOKING_VERTEX: int

  GL_LOW_FLOAT: int

  GL_LOW_INT: int

  GL_MAX_FRAGMENT_UNIFORM_VECTORS: int

  GL_MAX_VARYING_VECTORS: int

  GL_MAX_VERTEX_UNIFORM_VECTORS: int

  GL_MAX_VIEWPORTS: int

  GL_MEDIUM_FLOAT: int

  GL_MEDIUM_INT: int

  GL_NUM_PROGRAM_BINARY_FORMATS: int

  GL_NUM_SHADER_BINARY_FORMATS: int

  GL_PROGRAM_BINARY_FORMATS: int

  GL_PROGRAM_BINARY_LENGTH: int

  GL_PROGRAM_BINARY_RETRIEVABLE_HINT: int

  GL_PROGRAM_PIPELINE_BINDING: int

  GL_PROGRAM_SEPARABLE: int

  GL_RGB565: int

  GL_SHADER_BINARY_FORMATS: int

  GL_SHADER_COMPILER: int

  GL_TESS_CONTROL_SHADER_BIT: int

  GL_TESS_EVALUATION_SHADER_BIT: int

  GL_UNDEFINED_VERTEX: int

  GL_VERTEX_SHADER_BIT: int

  GL_VIEWPORT_BOUNDS_RANGE: int

  GL_VIEWPORT_INDEX_PROVOKING_VERTEX: int

  GL_VIEWPORT_SUBPIXEL_BITS: int

  @staticmethod
  def glActiveShaderProgram(arg0: int, arg1: int) -> None: ...

  @staticmethod
  def glBindProgramPipeline(arg0: int) -> None: ...

  @staticmethod
  def glClearDepthf(arg0: float) -> None: ...

  @staticmethod
  @overload
  def glCreateShaderProgramv(arg0: int, arg1: list[CharSequence]) -> int: ...

  @staticmethod
  @overload
  def glCreateShaderProgramv(arg0: int, arg1: CharSequence) -> int: ...

  @staticmethod
  @overload
  def glCreateShaderProgramv(arg0: int, arg1: PointerBuffer) -> int: ...

  @staticmethod
  @overload
  def glDeleteProgramPipelines(arg0: list[int]) -> None: ...

  @staticmethod
  @overload
  def glDeleteProgramPipelines(arg0: int) -> None: ...

  @staticmethod
  @overload
  def glDeleteProgramPipelines(arg0: IntBuffer) -> None: ...

  @staticmethod
  @overload
  def glDepthRangeArrayv(arg0: int, arg1: list[float]) -> None: ...

  @staticmethod
  @overload
  def glDepthRangeArrayv(arg0: int, arg1: DoubleBuffer) -> None: ...

  @staticmethod
  def glDepthRangeIndexed(arg0: int, arg1: float, arg2: float) -> None: ...

  @staticmethod
  def glDepthRangef(arg0: float, arg1: float) -> None: ...

  @staticmethod
  @overload
  def glGenProgramPipelines() -> int: ...

  @staticmethod
  @overload
  def glGenProgramPipelines(arg0: list[int]) -> None: ...

  @staticmethod
  @overload
  def glGenProgramPipelines(arg0: IntBuffer) -> None: ...

  @staticmethod
  def glGetDoublei(arg0: int, arg1: int) -> float: ...

  @staticmethod
  @overload
  def glGetDoublei_v(arg0: int, arg1: int, arg2: list[float]) -> None: ...

  @staticmethod
  @overload
  def glGetDoublei_v(arg0: int, arg1: int, arg2: DoubleBuffer) -> None: ...

  @staticmethod
  def glGetFloati(arg0: int, arg1: int) -> float: ...

  @staticmethod
  @overload
  def glGetFloati_v(arg0: int, arg1: int, arg2: list[float]) -> None: ...

  @staticmethod
  @overload
  def glGetFloati_v(arg0: int, arg1: int, arg2: FloatBuffer) -> None: ...

  @staticmethod
  @overload
  def glGetProgramBinary(arg0: int, arg1: list[int], arg2: list[int], arg3: ByteBuffer) -> None: ...

  @staticmethod
  @overload
  def glGetProgramBinary(arg0: int, arg1: IntBuffer, arg2: IntBuffer, arg3: ByteBuffer) -> None: ...

  @staticmethod
  @overload
  def glGetProgramPipelineInfoLog(arg0: int) -> str: ...

  @staticmethod
  @overload
  def glGetProgramPipelineInfoLog(arg0: int, arg1: int) -> str: ...

  @staticmethod
  @overload
  def glGetProgramPipelineInfoLog(arg0: int, arg1: list[int], arg2: ByteBuffer) -> None: ...

  @staticmethod
  @overload
  def glGetProgramPipelineInfoLog(arg0: int, arg1: IntBuffer, arg2: ByteBuffer) -> None: ...

  @staticmethod
  def glGetProgramPipelinei(arg0: int, arg1: int) -> int: ...

  @staticmethod
  @overload
  def glGetProgramPipelineiv(arg0: int, arg1: int, arg2: list[int]) -> None: ...

  @staticmethod
  @overload
  def glGetProgramPipelineiv(arg0: int, arg1: int, arg2: IntBuffer) -> None: ...

  @staticmethod
  @overload
  def glGetShaderPrecisionFormat(arg0: int, arg1: int, arg2: IntBuffer) -> int: ...

  @staticmethod
  @overload
  def glGetShaderPrecisionFormat(arg0: int, arg1: int, arg2: list[int], arg3: list[int]) -> None: ...

  @staticmethod
  @overload
  def glGetShaderPrecisionFormat(arg0: int, arg1: int, arg2: IntBuffer, arg3: IntBuffer) -> None: ...

  @staticmethod
  @overload
  def glGetVertexAttribLdv(arg0: int, arg1: int, arg2: list[float]) -> None: ...

  @staticmethod
  @overload
  def glGetVertexAttribLdv(arg0: int, arg1: int, arg2: DoubleBuffer) -> None: ...

  @staticmethod
  def glIsProgramPipeline(arg0: int) -> bool: ...

  @staticmethod
  def glProgramBinary(arg0: int, arg1: int, arg2: ByteBuffer) -> None: ...

  @staticmethod
  def glProgramParameteri(arg0: int, arg1: int, arg2: int) -> None: ...

  @staticmethod
  def glProgramUniform1d(arg0: int, arg1: int, arg2: float) -> None: ...

  @staticmethod
  @overload
  def glProgramUniform1dv(arg0: int, arg1: int, arg2: list[float]) -> None: ...

  @staticmethod
  @overload
  def glProgramUniform1dv(arg0: int, arg1: int, arg2: DoubleBuffer) -> None: ...

  @staticmethod
  def glProgramUniform1f(arg0: int, arg1: int, arg2: float) -> None: ...

  @staticmethod
  @overload
  def glProgramUniform1fv(arg0: int, arg1: int, arg2: list[float]) -> None: ...

  @staticmethod
  @overload
  def glProgramUniform1fv(arg0: int, arg1: int, arg2: FloatBuffer) -> None: ...

  @staticmethod
  def glProgramUniform1i(arg0: int, arg1: int, arg2: int) -> None: ...

  @staticmethod
  @overload
  def glProgramUniform1iv(arg0: int, arg1: int, arg2: list[int]) -> None: ...

  @staticmethod
  @overload
  def glProgramUniform1iv(arg0: int, arg1: int, arg2: IntBuffer) -> None: ...

  @staticmethod
  def glProgramUniform1ui(arg0: int, arg1: int, arg2: int) -> None: ...

  @staticmethod
  @overload
  def glProgramUniform1uiv(arg0: int, arg1: int, arg2: list[int]) -> None: ...

  @staticmethod
  @overload
  def glProgramUniform1uiv(arg0: int, arg1: int, arg2: IntBuffer) -> None: ...

  @staticmethod
  def glProgramUniform2d(arg0: int, arg1: int, arg2: float, arg3: float) -> None: ...

  @staticmethod
  @overload
  def glProgramUniform2dv(arg0: int, arg1: int, arg2: list[float]) -> None: ...

  @staticmethod
  @overload
  def glProgramUniform2dv(arg0: int, arg1: int, arg2: DoubleBuffer) -> None: ...

  @staticmethod
  def glProgramUniform2f(arg0: int, arg1: int, arg2: float, arg3: float) -> None: ...

  @staticmethod
  @overload
  def glProgramUniform2fv(arg0: int, arg1: int, arg2: list[float]) -> None: ...

  @staticmethod
  @overload
  def glProgramUniform2fv(arg0: int, arg1: int, arg2: FloatBuffer) -> None: ...

  @staticmethod
  def glProgramUniform2i(arg0: int, arg1: int, arg2: int, arg3: int) -> None: ...

  @staticmethod
  @overload
  def glProgramUniform2iv(arg0: int, arg1: int, arg2: list[int]) -> None: ...

  @staticmethod
  @overload
  def glProgramUniform2iv(arg0: int, arg1: int, arg2: IntBuffer) -> None: ...

  @staticmethod
  def glProgramUniform2ui(arg0: int, arg1: int, arg2: int, arg3: int) -> None: ...

  @staticmethod
  @overload
  def glProgramUniform2uiv(arg0: int, arg1: int, arg2: list[int]) -> None: ...

  @staticmethod
  @overload
  def glProgramUniform2uiv(arg0: int, arg1: int, arg2: IntBuffer) -> None: ...

  @staticmethod
  def glProgramUniform3d(arg0: int, arg1: int, arg2: float, arg3: float, arg4: float) -> None: ...

  @staticmethod
  @overload
  def glProgramUniform3dv(arg0: int, arg1: int, arg2: list[float]) -> None: ...

  @staticmethod
  @overload
  def glProgramUniform3dv(arg0: int, arg1: int, arg2: DoubleBuffer) -> None: ...

  @staticmethod
  def glProgramUniform3f(arg0: int, arg1: int, arg2: float, arg3: float, arg4: float) -> None: ...

  @staticmethod
  @overload
  def glProgramUniform3fv(arg0: int, arg1: int, arg2: list[float]) -> None: ...

  @staticmethod
  @overload
  def glProgramUniform3fv(arg0: int, arg1: int, arg2: FloatBuffer) -> None: ...

  @staticmethod
  def glProgramUniform3i(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int) -> None: ...

  @staticmethod
  @overload
  def glProgramUniform3iv(arg0: int, arg1: int, arg2: list[int]) -> None: ...

  @staticmethod
  @overload
  def glProgramUniform3iv(arg0: int, arg1: int, arg2: IntBuffer) -> None: ...

  @staticmethod
  def glProgramUniform3ui(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int) -> None: ...

  @staticmethod
  @overload
  def glProgramUniform3uiv(arg0: int, arg1: int, arg2: list[int]) -> None: ...

  @staticmethod
  @overload
  def glProgramUniform3uiv(arg0: int, arg1: int, arg2: IntBuffer) -> None: ...

  @staticmethod
  def glProgramUniform4d(arg0: int, arg1: int, arg2: float, arg3: float, arg4: float, arg5: float) -> None: ...

  @staticmethod
  @overload
  def glProgramUniform4dv(arg0: int, arg1: int, arg2: list[float]) -> None: ...

  @staticmethod
  @overload
  def glProgramUniform4dv(arg0: int, arg1: int, arg2: DoubleBuffer) -> None: ...

  @staticmethod
  def glProgramUniform4f(arg0: int, arg1: int, arg2: float, arg3: float, arg4: float, arg5: float) -> None: ...

  @staticmethod
  @overload
  def glProgramUniform4fv(arg0: int, arg1: int, arg2: list[float]) -> None: ...

  @staticmethod
  @overload
  def glProgramUniform4fv(arg0: int, arg1: int, arg2: FloatBuffer) -> None: ...

  @staticmethod
  def glProgramUniform4i(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int) -> None: ...

  @staticmethod
  @overload
  def glProgramUniform4iv(arg0: int, arg1: int, arg2: list[int]) -> None: ...

  @staticmethod
  @overload
  def glProgramUniform4iv(arg0: int, arg1: int, arg2: IntBuffer) -> None: ...

  @staticmethod
  def glProgramUniform4ui(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int) -> None: ...

  @staticmethod
  @overload
  def glProgramUniform4uiv(arg0: int, arg1: int, arg2: list[int]) -> None: ...

  @staticmethod
  @overload
  def glProgramUniform4uiv(arg0: int, arg1: int, arg2: IntBuffer) -> None: ...

  @staticmethod
  @overload
  def glProgramUniformMatrix2dv(arg0: int, arg1: int, arg2: bool, arg3: list[float]) -> None: ...

  @staticmethod
  @overload
  def glProgramUniformMatrix2dv(arg0: int, arg1: int, arg2: bool, arg3: DoubleBuffer) -> None: ...

  @staticmethod
  @overload
  def glProgramUniformMatrix2fv(arg0: int, arg1: int, arg2: bool, arg3: list[float]) -> None: ...

  @staticmethod
  @overload
  def glProgramUniformMatrix2fv(arg0: int, arg1: int, arg2: bool, arg3: FloatBuffer) -> None: ...

  @staticmethod
  @overload
  def glProgramUniformMatrix2x3dv(arg0: int, arg1: int, arg2: bool, arg3: list[float]) -> None: ...

  @staticmethod
  @overload
  def glProgramUniformMatrix2x3dv(arg0: int, arg1: int, arg2: bool, arg3: DoubleBuffer) -> None: ...

  @staticmethod
  @overload
  def glProgramUniformMatrix2x3fv(arg0: int, arg1: int, arg2: bool, arg3: list[float]) -> None: ...

  @staticmethod
  @overload
  def glProgramUniformMatrix2x3fv(arg0: int, arg1: int, arg2: bool, arg3: FloatBuffer) -> None: ...

  @staticmethod
  @overload
  def glProgramUniformMatrix2x4dv(arg0: int, arg1: int, arg2: bool, arg3: list[float]) -> None: ...

  @staticmethod
  @overload
  def glProgramUniformMatrix2x4dv(arg0: int, arg1: int, arg2: bool, arg3: DoubleBuffer) -> None: ...

  @staticmethod
  @overload
  def glProgramUniformMatrix2x4fv(arg0: int, arg1: int, arg2: bool, arg3: list[float]) -> None: ...

  @staticmethod
  @overload
  def glProgramUniformMatrix2x4fv(arg0: int, arg1: int, arg2: bool, arg3: FloatBuffer) -> None: ...

  @staticmethod
  @overload
  def glProgramUniformMatrix3dv(arg0: int, arg1: int, arg2: bool, arg3: list[float]) -> None: ...

  @staticmethod
  @overload
  def glProgramUniformMatrix3dv(arg0: int, arg1: int, arg2: bool, arg3: DoubleBuffer) -> None: ...

  @staticmethod
  @overload
  def glProgramUniformMatrix3fv(arg0: int, arg1: int, arg2: bool, arg3: list[float]) -> None: ...

  @staticmethod
  @overload
  def glProgramUniformMatrix3fv(arg0: int, arg1: int, arg2: bool, arg3: FloatBuffer) -> None: ...

  @staticmethod
  @overload
  def glProgramUniformMatrix3x2dv(arg0: int, arg1: int, arg2: bool, arg3: list[float]) -> None: ...

  @staticmethod
  @overload
  def glProgramUniformMatrix3x2dv(arg0: int, arg1: int, arg2: bool, arg3: DoubleBuffer) -> None: ...

  @staticmethod
  @overload
  def glProgramUniformMatrix3x2fv(arg0: int, arg1: int, arg2: bool, arg3: list[float]) -> None: ...

  @staticmethod
  @overload
  def glProgramUniformMatrix3x2fv(arg0: int, arg1: int, arg2: bool, arg3: FloatBuffer) -> None: ...

  @staticmethod
  @overload
  def glProgramUniformMatrix3x4dv(arg0: int, arg1: int, arg2: bool, arg3: list[float]) -> None: ...

  @staticmethod
  @overload
  def glProgramUniformMatrix3x4dv(arg0: int, arg1: int, arg2: bool, arg3: DoubleBuffer) -> None: ...

  @staticmethod
  @overload
  def glProgramUniformMatrix3x4fv(arg0: int, arg1: int, arg2: bool, arg3: list[float]) -> None: ...

  @staticmethod
  @overload
  def glProgramUniformMatrix3x4fv(arg0: int, arg1: int, arg2: bool, arg3: FloatBuffer) -> None: ...

  @staticmethod
  @overload
  def glProgramUniformMatrix4dv(arg0: int, arg1: int, arg2: bool, arg3: list[float]) -> None: ...

  @staticmethod
  @overload
  def glProgramUniformMatrix4dv(arg0: int, arg1: int, arg2: bool, arg3: DoubleBuffer) -> None: ...

  @staticmethod
  @overload
  def glProgramUniformMatrix4fv(arg0: int, arg1: int, arg2: bool, arg3: list[float]) -> None: ...

  @staticmethod
  @overload
  def glProgramUniformMatrix4fv(arg0: int, arg1: int, arg2: bool, arg3: FloatBuffer) -> None: ...

  @staticmethod
  @overload
  def glProgramUniformMatrix4x2dv(arg0: int, arg1: int, arg2: bool, arg3: list[float]) -> None: ...

  @staticmethod
  @overload
  def glProgramUniformMatrix4x2dv(arg0: int, arg1: int, arg2: bool, arg3: DoubleBuffer) -> None: ...

  @staticmethod
  @overload
  def glProgramUniformMatrix4x2fv(arg0: int, arg1: int, arg2: bool, arg3: list[float]) -> None: ...

  @staticmethod
  @overload
  def glProgramUniformMatrix4x2fv(arg0: int, arg1: int, arg2: bool, arg3: FloatBuffer) -> None: ...

  @staticmethod
  @overload
  def glProgramUniformMatrix4x3dv(arg0: int, arg1: int, arg2: bool, arg3: list[float]) -> None: ...

  @staticmethod
  @overload
  def glProgramUniformMatrix4x3dv(arg0: int, arg1: int, arg2: bool, arg3: DoubleBuffer) -> None: ...

  @staticmethod
  @overload
  def glProgramUniformMatrix4x3fv(arg0: int, arg1: int, arg2: bool, arg3: list[float]) -> None: ...

  @staticmethod
  @overload
  def glProgramUniformMatrix4x3fv(arg0: int, arg1: int, arg2: bool, arg3: FloatBuffer) -> None: ...

  @staticmethod
  def glReleaseShaderCompiler() -> None: ...

  @staticmethod
  @overload
  def glScissorArrayv(arg0: int, arg1: list[int]) -> None: ...

  @staticmethod
  @overload
  def glScissorArrayv(arg0: int, arg1: IntBuffer) -> None: ...

  @staticmethod
  def glScissorIndexed(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int) -> None: ...

  @staticmethod
  @overload
  def glScissorIndexedv(arg0: int, arg1: list[int]) -> None: ...

  @staticmethod
  @overload
  def glScissorIndexedv(arg0: int, arg1: IntBuffer) -> None: ...

  @staticmethod
  @overload
  def glShaderBinary(arg0: list[int], arg1: int, arg2: ByteBuffer) -> None: ...

  @staticmethod
  @overload
  def glShaderBinary(arg0: IntBuffer, arg1: int, arg2: ByteBuffer) -> None: ...

  @staticmethod
  def glUseProgramStages(arg0: int, arg1: int, arg2: int) -> None: ...

  @staticmethod
  def glValidateProgramPipeline(arg0: int) -> None: ...

  @staticmethod
  def glVertexAttribL1d(arg0: int, arg1: float) -> None: ...

  @staticmethod
  @overload
  def glVertexAttribL1dv(arg0: int, arg1: list[float]) -> None: ...

  @staticmethod
  @overload
  def glVertexAttribL1dv(arg0: int, arg1: DoubleBuffer) -> None: ...

  @staticmethod
  def glVertexAttribL2d(arg0: int, arg1: float, arg2: float) -> None: ...

  @staticmethod
  @overload
  def glVertexAttribL2dv(arg0: int, arg1: list[float]) -> None: ...

  @staticmethod
  @overload
  def glVertexAttribL2dv(arg0: int, arg1: DoubleBuffer) -> None: ...

  @staticmethod
  def glVertexAttribL3d(arg0: int, arg1: float, arg2: float, arg3: float) -> None: ...

  @staticmethod
  @overload
  def glVertexAttribL3dv(arg0: int, arg1: list[float]) -> None: ...

  @staticmethod
  @overload
  def glVertexAttribL3dv(arg0: int, arg1: DoubleBuffer) -> None: ...

  @staticmethod
  def glVertexAttribL4d(arg0: int, arg1: float, arg2: float, arg3: float, arg4: float) -> None: ...

  @staticmethod
  @overload
  def glVertexAttribL4dv(arg0: int, arg1: list[float]) -> None: ...

  @staticmethod
  @overload
  def glVertexAttribL4dv(arg0: int, arg1: DoubleBuffer) -> None: ...

  @staticmethod
  @overload
  def glVertexAttribLPointer(arg0: int, arg1: int, arg2: int, arg3: DoubleBuffer) -> None: ...

  @staticmethod
  @overload
  def glVertexAttribLPointer(arg0: int, arg1: int, arg2: int, arg3: int, arg4: ByteBuffer) -> None: ...

  @staticmethod
  @overload
  def glVertexAttribLPointer(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int) -> None: ...

  @staticmethod
  @overload
  def glViewportArrayv(arg0: int, arg1: list[float]) -> None: ...

  @staticmethod
  @overload
  def glViewportArrayv(arg0: int, arg1: FloatBuffer) -> None: ...

  @staticmethod
  def glViewportIndexedf(arg0: int, arg1: float, arg2: float, arg3: float, arg4: float) -> None: ...

  @staticmethod
  @overload
  def glViewportIndexedfv(arg0: int, arg1: list[float]) -> None: ...

  @staticmethod
  @overload
  def glViewportIndexedfv(arg0: int, arg1: FloatBuffer) -> None: ...

  @staticmethod
  def nglCreateShaderProgramv(arg0: int, arg1: int, arg2: int) -> int: ...

  @staticmethod
  def nglDeleteProgramPipelines(arg0: int, arg1: int) -> None: ...

  @staticmethod
  def nglDepthRangeArrayv(arg0: int, arg1: int, arg2: int) -> None: ...

  @staticmethod
  def nglGenProgramPipelines(arg0: int, arg1: int) -> None: ...

  @staticmethod
  def nglGetDoublei_v(arg0: int, arg1: int, arg2: int) -> None: ...

  @staticmethod
  def nglGetFloati_v(arg0: int, arg1: int, arg2: int) -> None: ...

  @staticmethod
  def nglGetProgramBinary(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int) -> None: ...

  @staticmethod
  def nglGetProgramPipelineInfoLog(arg0: int, arg1: int, arg2: int, arg3: int) -> None: ...

  @staticmethod
  def nglGetProgramPipelineiv(arg0: int, arg1: int, arg2: int) -> None: ...

  @staticmethod
  def nglGetShaderPrecisionFormat(arg0: int, arg1: int, arg2: int, arg3: int) -> None: ...

  @staticmethod
  def nglGetVertexAttribLdv(arg0: int, arg1: int, arg2: int) -> None: ...

  @staticmethod
  def nglProgramBinary(arg0: int, arg1: int, arg2: int, arg3: int) -> None: ...

  @staticmethod
  def nglProgramUniform1dv(arg0: int, arg1: int, arg2: int, arg3: int) -> None: ...

  @staticmethod
  def nglProgramUniform1fv(arg0: int, arg1: int, arg2: int, arg3: int) -> None: ...

  @staticmethod
  def nglProgramUniform1iv(arg0: int, arg1: int, arg2: int, arg3: int) -> None: ...

  @staticmethod
  def nglProgramUniform1uiv(arg0: int, arg1: int, arg2: int, arg3: int) -> None: ...

  @staticmethod
  def nglProgramUniform2dv(arg0: int, arg1: int, arg2: int, arg3: int) -> None: ...

  @staticmethod
  def nglProgramUniform2fv(arg0: int, arg1: int, arg2: int, arg3: int) -> None: ...

  @staticmethod
  def nglProgramUniform2iv(arg0: int, arg1: int, arg2: int, arg3: int) -> None: ...

  @staticmethod
  def nglProgramUniform2uiv(arg0: int, arg1: int, arg2: int, arg3: int) -> None: ...

  @staticmethod
  def nglProgramUniform3dv(arg0: int, arg1: int, arg2: int, arg3: int) -> None: ...

  @staticmethod
  def nglProgramUniform3fv(arg0: int, arg1: int, arg2: int, arg3: int) -> None: ...

  @staticmethod
  def nglProgramUniform3iv(arg0: int, arg1: int, arg2: int, arg3: int) -> None: ...

  @staticmethod
  def nglProgramUniform3uiv(arg0: int, arg1: int, arg2: int, arg3: int) -> None: ...

  @staticmethod
  def nglProgramUniform4dv(arg0: int, arg1: int, arg2: int, arg3: int) -> None: ...

  @staticmethod
  def nglProgramUniform4fv(arg0: int, arg1: int, arg2: int, arg3: int) -> None: ...

  @staticmethod
  def nglProgramUniform4iv(arg0: int, arg1: int, arg2: int, arg3: int) -> None: ...

  @staticmethod
  def nglProgramUniform4uiv(arg0: int, arg1: int, arg2: int, arg3: int) -> None: ...

  @staticmethod
  def nglProgramUniformMatrix2dv(arg0: int, arg1: int, arg2: int, arg3: bool, arg4: int) -> None: ...

  @staticmethod
  def nglProgramUniformMatrix2fv(arg0: int, arg1: int, arg2: int, arg3: bool, arg4: int) -> None: ...

  @staticmethod
  def nglProgramUniformMatrix2x3dv(arg0: int, arg1: int, arg2: int, arg3: bool, arg4: int) -> None: ...

  @staticmethod
  def nglProgramUniformMatrix2x3fv(arg0: int, arg1: int, arg2: int, arg3: bool, arg4: int) -> None: ...

  @staticmethod
  def nglProgramUniformMatrix2x4dv(arg0: int, arg1: int, arg2: int, arg3: bool, arg4: int) -> None: ...

  @staticmethod
  def nglProgramUniformMatrix2x4fv(arg0: int, arg1: int, arg2: int, arg3: bool, arg4: int) -> None: ...

  @staticmethod
  def nglProgramUniformMatrix3dv(arg0: int, arg1: int, arg2: int, arg3: bool, arg4: int) -> None: ...

  @staticmethod
  def nglProgramUniformMatrix3fv(arg0: int, arg1: int, arg2: int, arg3: bool, arg4: int) -> None: ...

  @staticmethod
  def nglProgramUniformMatrix3x2dv(arg0: int, arg1: int, arg2: int, arg3: bool, arg4: int) -> None: ...

  @staticmethod
  def nglProgramUniformMatrix3x2fv(arg0: int, arg1: int, arg2: int, arg3: bool, arg4: int) -> None: ...

  @staticmethod
  def nglProgramUniformMatrix3x4dv(arg0: int, arg1: int, arg2: int, arg3: bool, arg4: int) -> None: ...

  @staticmethod
  def nglProgramUniformMatrix3x4fv(arg0: int, arg1: int, arg2: int, arg3: bool, arg4: int) -> None: ...

  @staticmethod
  def nglProgramUniformMatrix4dv(arg0: int, arg1: int, arg2: int, arg3: bool, arg4: int) -> None: ...

  @staticmethod
  def nglProgramUniformMatrix4fv(arg0: int, arg1: int, arg2: int, arg3: bool, arg4: int) -> None: ...

  @staticmethod
  def nglProgramUniformMatrix4x2dv(arg0: int, arg1: int, arg2: int, arg3: bool, arg4: int) -> None: ...

  @staticmethod
  def nglProgramUniformMatrix4x2fv(arg0: int, arg1: int, arg2: int, arg3: bool, arg4: int) -> None: ...

  @staticmethod
  def nglProgramUniformMatrix4x3dv(arg0: int, arg1: int, arg2: int, arg3: bool, arg4: int) -> None: ...

  @staticmethod
  def nglProgramUniformMatrix4x3fv(arg0: int, arg1: int, arg2: int, arg3: bool, arg4: int) -> None: ...

  @staticmethod
  def nglScissorArrayv(arg0: int, arg1: int, arg2: int) -> None: ...

  @staticmethod
  def nglScissorIndexedv(arg0: int, arg1: int) -> None: ...

  @staticmethod
  def nglShaderBinary(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int) -> None: ...

  @staticmethod
  def nglVertexAttribL1dv(arg0: int, arg1: int) -> None: ...

  @staticmethod
  def nglVertexAttribL2dv(arg0: int, arg1: int) -> None: ...

  @staticmethod
  def nglVertexAttribL3dv(arg0: int, arg1: int) -> None: ...

  @staticmethod
  def nglVertexAttribL4dv(arg0: int, arg1: int) -> None: ...

  @staticmethod
  def nglVertexAttribLPointer(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int) -> None: ...

  @staticmethod
  def nglViewportArrayv(arg0: int, arg1: int, arg2: int) -> None: ...

  @staticmethod
  def nglViewportIndexedfv(arg0: int, arg1: int) -> None: ...


class GL42(GL41):

  GL_ACTIVE_ATOMIC_COUNTER_BUFFERS: int

  GL_ALL_BARRIER_BITS: int

  GL_ATOMIC_COUNTER_BARRIER_BIT: int

  GL_ATOMIC_COUNTER_BUFFER: int

  GL_ATOMIC_COUNTER_BUFFER_ACTIVE_ATOMIC_COUNTER_INDICES: int

  GL_ATOMIC_COUNTER_BUFFER_ACTIVE_ATOMIC_COUNTERS: int

  GL_ATOMIC_COUNTER_BUFFER_BINDING: int

  GL_ATOMIC_COUNTER_BUFFER_DATA_SIZE: int

  GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_FRAGMENT_SHADER: int

  GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_GEOMETRY_SHADER: int

  GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_TESS_CONTROL_SHADER: int

  GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_TESS_EVALUATION_SHADER: int

  GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_VERTEX_SHADER: int

  GL_ATOMIC_COUNTER_BUFFER_SIZE: int

  GL_ATOMIC_COUNTER_BUFFER_START: int

  GL_BUFFER_UPDATE_BARRIER_BIT: int

  GL_COMMAND_BARRIER_BIT: int

  GL_COMPRESSED_RGB_BPTC_SIGNED_FLOAT: int

  GL_COMPRESSED_RGB_BPTC_UNSIGNED_FLOAT: int

  GL_COMPRESSED_RGBA_BPTC_UNORM: int

  GL_COMPRESSED_SRGB_ALPHA_BPTC_UNORM: int

  GL_COPY_READ_BUFFER_BINDING: int

  GL_COPY_WRITE_BUFFER_BINDING: int

  GL_ELEMENT_ARRAY_BARRIER_BIT: int

  GL_FRAMEBUFFER_BARRIER_BIT: int

  GL_IMAGE_1D: int

  GL_IMAGE_1D_ARRAY: int

  GL_IMAGE_2D: int

  GL_IMAGE_2D_ARRAY: int

  GL_IMAGE_2D_MULTISAMPLE: int

  GL_IMAGE_2D_MULTISAMPLE_ARRAY: int

  GL_IMAGE_2D_RECT: int

  GL_IMAGE_3D: int

  GL_IMAGE_BINDING_ACCESS: int

  GL_IMAGE_BINDING_FORMAT: int

  GL_IMAGE_BINDING_LAYER: int

  GL_IMAGE_BINDING_LAYERED: int

  GL_IMAGE_BINDING_LEVEL: int

  GL_IMAGE_BINDING_NAME: int

  GL_IMAGE_BUFFER: int

  GL_IMAGE_CUBE: int

  GL_IMAGE_CUBE_MAP_ARRAY: int

  GL_IMAGE_FORMAT_COMPATIBILITY_BY_CLASS: int

  GL_IMAGE_FORMAT_COMPATIBILITY_BY_SIZE: int

  GL_IMAGE_FORMAT_COMPATIBILITY_TYPE: int

  GL_INT_IMAGE_1D: int

  GL_INT_IMAGE_1D_ARRAY: int

  GL_INT_IMAGE_2D: int

  GL_INT_IMAGE_2D_ARRAY: int

  GL_INT_IMAGE_2D_MULTISAMPLE: int

  GL_INT_IMAGE_2D_MULTISAMPLE_ARRAY: int

  GL_INT_IMAGE_2D_RECT: int

  GL_INT_IMAGE_3D: int

  GL_INT_IMAGE_BUFFER: int

  GL_INT_IMAGE_CUBE: int

  GL_INT_IMAGE_CUBE_MAP_ARRAY: int

  GL_MAX_ATOMIC_COUNTER_BUFFER_BINDINGS: int

  GL_MAX_ATOMIC_COUNTER_BUFFER_SIZE: int

  GL_MAX_COMBINED_ATOMIC_COUNTER_BUFFERS: int

  GL_MAX_COMBINED_ATOMIC_COUNTERS: int

  GL_MAX_COMBINED_IMAGE_UNIFORMS: int

  GL_MAX_COMBINED_IMAGE_UNITS_AND_FRAGMENT_OUTPUTS: int

  GL_MAX_FRAGMENT_ATOMIC_COUNTER_BUFFERS: int

  GL_MAX_FRAGMENT_ATOMIC_COUNTERS: int

  GL_MAX_FRAGMENT_IMAGE_UNIFORMS: int

  GL_MAX_GEOMETRY_ATOMIC_COUNTER_BUFFERS: int

  GL_MAX_GEOMETRY_ATOMIC_COUNTERS: int

  GL_MAX_GEOMETRY_IMAGE_UNIFORMS: int

  GL_MAX_IMAGE_SAMPLES: int

  GL_MAX_IMAGE_UNITS: int

  GL_MAX_TESS_CONTROL_ATOMIC_COUNTER_BUFFERS: int

  GL_MAX_TESS_CONTROL_ATOMIC_COUNTERS: int

  GL_MAX_TESS_CONTROL_IMAGE_UNIFORMS: int

  GL_MAX_TESS_EVALUATION_ATOMIC_COUNTER_BUFFERS: int

  GL_MAX_TESS_EVALUATION_ATOMIC_COUNTERS: int

  GL_MAX_TESS_EVALUATION_IMAGE_UNIFORMS: int

  GL_MAX_VERTEX_ATOMIC_COUNTER_BUFFERS: int

  GL_MAX_VERTEX_ATOMIC_COUNTERS: int

  GL_MAX_VERTEX_IMAGE_UNIFORMS: int

  GL_MIN_MAP_BUFFER_ALIGNMENT: int

  GL_NUM_SAMPLE_COUNTS: int

  GL_PACK_COMPRESSED_BLOCK_DEPTH: int

  GL_PACK_COMPRESSED_BLOCK_HEIGHT: int

  GL_PACK_COMPRESSED_BLOCK_SIZE: int

  GL_PACK_COMPRESSED_BLOCK_WIDTH: int

  GL_PIXEL_BUFFER_BARRIER_BIT: int

  GL_SHADER_IMAGE_ACCESS_BARRIER_BIT: int

  GL_TEXTURE_FETCH_BARRIER_BIT: int

  GL_TEXTURE_IMMUTABLE_FORMAT: int

  GL_TEXTURE_UPDATE_BARRIER_BIT: int

  GL_TRANSFORM_FEEDBACK_ACTIVE: int

  GL_TRANSFORM_FEEDBACK_BARRIER_BIT: int

  GL_TRANSFORM_FEEDBACK_PAUSED: int

  GL_UNIFORM_ATOMIC_COUNTER_BUFFER_INDEX: int

  GL_UNIFORM_BARRIER_BIT: int

  GL_UNPACK_COMPRESSED_BLOCK_DEPTH: int

  GL_UNPACK_COMPRESSED_BLOCK_HEIGHT: int

  GL_UNPACK_COMPRESSED_BLOCK_SIZE: int

  GL_UNPACK_COMPRESSED_BLOCK_WIDTH: int

  GL_UNSIGNED_INT_ATOMIC_COUNTER: int

  GL_UNSIGNED_INT_IMAGE_1D: int

  GL_UNSIGNED_INT_IMAGE_1D_ARRAY: int

  GL_UNSIGNED_INT_IMAGE_2D: int

  GL_UNSIGNED_INT_IMAGE_2D_ARRAY: int

  GL_UNSIGNED_INT_IMAGE_2D_MULTISAMPLE: int

  GL_UNSIGNED_INT_IMAGE_2D_MULTISAMPLE_ARRAY: int

  GL_UNSIGNED_INT_IMAGE_2D_RECT: int

  GL_UNSIGNED_INT_IMAGE_3D: int

  GL_UNSIGNED_INT_IMAGE_BUFFER: int

  GL_UNSIGNED_INT_IMAGE_CUBE: int

  GL_UNSIGNED_INT_IMAGE_CUBE_MAP_ARRAY: int

  GL_VERTEX_ATTRIB_ARRAY_BARRIER_BIT: int

  @staticmethod
  def glBindImageTexture(arg0: int, arg1: int, arg2: int, arg3: bool, arg4: int, arg5: int, arg6: int) -> None: ...

  @staticmethod
  def glDrawArraysInstancedBaseInstance(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int) -> None: ...

  @staticmethod
  @overload
  def glDrawElementsInstancedBaseInstance(arg0: int, arg1: ByteBuffer, arg2: int, arg3: int) -> None: ...

  @staticmethod
  @overload
  def glDrawElementsInstancedBaseInstance(arg0: int, arg1: IntBuffer, arg2: int, arg3: int) -> None: ...

  @staticmethod
  @overload
  def glDrawElementsInstancedBaseInstance(arg0: int, arg1: ShortBuffer, arg2: int, arg3: int) -> None: ...

  @staticmethod
  @overload
  def glDrawElementsInstancedBaseInstance(arg0: int, arg1: int, arg2: ByteBuffer, arg3: int, arg4: int) -> None: ...

  @staticmethod
  @overload
  def glDrawElementsInstancedBaseInstance(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int) -> None: ...

  @staticmethod
  @overload
  def glDrawElementsInstancedBaseVertexBaseInstance(arg0: int, arg1: ByteBuffer, arg2: int, arg3: int, arg4: int) -> None: ...

  @staticmethod
  @overload
  def glDrawElementsInstancedBaseVertexBaseInstance(arg0: int, arg1: IntBuffer, arg2: int, arg3: int, arg4: int) -> None: ...

  @staticmethod
  @overload
  def glDrawElementsInstancedBaseVertexBaseInstance(arg0: int, arg1: ShortBuffer, arg2: int, arg3: int, arg4: int) -> None: ...

  @staticmethod
  @overload
  def glDrawElementsInstancedBaseVertexBaseInstance(arg0: int, arg1: int, arg2: ByteBuffer, arg3: int, arg4: int, arg5: int) -> None: ...

  @staticmethod
  @overload
  def glDrawElementsInstancedBaseVertexBaseInstance(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int) -> None: ...

  @staticmethod
  def glDrawTransformFeedbackInstanced(arg0: int, arg1: int, arg2: int) -> None: ...

  @staticmethod
  def glDrawTransformFeedbackStreamInstanced(arg0: int, arg1: int, arg2: int, arg3: int) -> None: ...

  @staticmethod
  def glGetActiveAtomicCounterBufferi(arg0: int, arg1: int, arg2: int) -> int: ...

  @staticmethod
  @overload
  def glGetActiveAtomicCounterBufferiv(arg0: int, arg1: int, arg2: int, arg3: list[int]) -> None: ...

  @staticmethod
  @overload
  def glGetActiveAtomicCounterBufferiv(arg0: int, arg1: int, arg2: int, arg3: IntBuffer) -> None: ...

  @staticmethod
  def glGetInternalformati(arg0: int, arg1: int, arg2: int) -> int: ...

  @staticmethod
  @overload
  def glGetInternalformativ(arg0: int, arg1: int, arg2: int, arg3: list[int]) -> None: ...

  @staticmethod
  @overload
  def glGetInternalformativ(arg0: int, arg1: int, arg2: int, arg3: IntBuffer) -> None: ...

  @staticmethod
  def glMemoryBarrier(arg0: int) -> None: ...

  @staticmethod
  def glTexStorage1D(arg0: int, arg1: int, arg2: int, arg3: int) -> None: ...

  @staticmethod
  def glTexStorage2D(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int) -> None: ...

  @staticmethod
  def glTexStorage3D(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int) -> None: ...

  @staticmethod
  def nglDrawElementsInstancedBaseInstance(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int) -> None: ...

  @staticmethod
  def nglDrawElementsInstancedBaseVertexBaseInstance(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int) -> None: ...

  @staticmethod
  def nglGetActiveAtomicCounterBufferiv(arg0: int, arg1: int, arg2: int, arg3: int) -> None: ...

  @staticmethod
  def nglGetInternalformativ(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int) -> None: ...


class GL42C(GL41C):

  GL_ACTIVE_ATOMIC_COUNTER_BUFFERS: int

  GL_ALL_BARRIER_BITS: int

  GL_ATOMIC_COUNTER_BARRIER_BIT: int

  GL_ATOMIC_COUNTER_BUFFER: int

  GL_ATOMIC_COUNTER_BUFFER_ACTIVE_ATOMIC_COUNTER_INDICES: int

  GL_ATOMIC_COUNTER_BUFFER_ACTIVE_ATOMIC_COUNTERS: int

  GL_ATOMIC_COUNTER_BUFFER_BINDING: int

  GL_ATOMIC_COUNTER_BUFFER_DATA_SIZE: int

  GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_FRAGMENT_SHADER: int

  GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_GEOMETRY_SHADER: int

  GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_TESS_CONTROL_SHADER: int

  GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_TESS_EVALUATION_SHADER: int

  GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_VERTEX_SHADER: int

  GL_ATOMIC_COUNTER_BUFFER_SIZE: int

  GL_ATOMIC_COUNTER_BUFFER_START: int

  GL_BUFFER_UPDATE_BARRIER_BIT: int

  GL_COMMAND_BARRIER_BIT: int

  GL_COMPRESSED_RGB_BPTC_SIGNED_FLOAT: int

  GL_COMPRESSED_RGB_BPTC_UNSIGNED_FLOAT: int

  GL_COMPRESSED_RGBA_BPTC_UNORM: int

  GL_COMPRESSED_SRGB_ALPHA_BPTC_UNORM: int

  GL_COPY_READ_BUFFER_BINDING: int

  GL_COPY_WRITE_BUFFER_BINDING: int

  GL_ELEMENT_ARRAY_BARRIER_BIT: int

  GL_FRAMEBUFFER_BARRIER_BIT: int

  GL_IMAGE_1D: int

  GL_IMAGE_1D_ARRAY: int

  GL_IMAGE_2D: int

  GL_IMAGE_2D_ARRAY: int

  GL_IMAGE_2D_MULTISAMPLE: int

  GL_IMAGE_2D_MULTISAMPLE_ARRAY: int

  GL_IMAGE_2D_RECT: int

  GL_IMAGE_3D: int

  GL_IMAGE_BINDING_ACCESS: int

  GL_IMAGE_BINDING_FORMAT: int

  GL_IMAGE_BINDING_LAYER: int

  GL_IMAGE_BINDING_LAYERED: int

  GL_IMAGE_BINDING_LEVEL: int

  GL_IMAGE_BINDING_NAME: int

  GL_IMAGE_BUFFER: int

  GL_IMAGE_CUBE: int

  GL_IMAGE_CUBE_MAP_ARRAY: int

  GL_IMAGE_FORMAT_COMPATIBILITY_BY_CLASS: int

  GL_IMAGE_FORMAT_COMPATIBILITY_BY_SIZE: int

  GL_IMAGE_FORMAT_COMPATIBILITY_TYPE: int

  GL_INT_IMAGE_1D: int

  GL_INT_IMAGE_1D_ARRAY: int

  GL_INT_IMAGE_2D: int

  GL_INT_IMAGE_2D_ARRAY: int

  GL_INT_IMAGE_2D_MULTISAMPLE: int

  GL_INT_IMAGE_2D_MULTISAMPLE_ARRAY: int

  GL_INT_IMAGE_2D_RECT: int

  GL_INT_IMAGE_3D: int

  GL_INT_IMAGE_BUFFER: int

  GL_INT_IMAGE_CUBE: int

  GL_INT_IMAGE_CUBE_MAP_ARRAY: int

  GL_MAX_ATOMIC_COUNTER_BUFFER_BINDINGS: int

  GL_MAX_ATOMIC_COUNTER_BUFFER_SIZE: int

  GL_MAX_COMBINED_ATOMIC_COUNTER_BUFFERS: int

  GL_MAX_COMBINED_ATOMIC_COUNTERS: int

  GL_MAX_COMBINED_IMAGE_UNIFORMS: int

  GL_MAX_COMBINED_IMAGE_UNITS_AND_FRAGMENT_OUTPUTS: int

  GL_MAX_FRAGMENT_ATOMIC_COUNTER_BUFFERS: int

  GL_MAX_FRAGMENT_ATOMIC_COUNTERS: int

  GL_MAX_FRAGMENT_IMAGE_UNIFORMS: int

  GL_MAX_GEOMETRY_ATOMIC_COUNTER_BUFFERS: int

  GL_MAX_GEOMETRY_ATOMIC_COUNTERS: int

  GL_MAX_GEOMETRY_IMAGE_UNIFORMS: int

  GL_MAX_IMAGE_SAMPLES: int

  GL_MAX_IMAGE_UNITS: int

  GL_MAX_TESS_CONTROL_ATOMIC_COUNTER_BUFFERS: int

  GL_MAX_TESS_CONTROL_ATOMIC_COUNTERS: int

  GL_MAX_TESS_CONTROL_IMAGE_UNIFORMS: int

  GL_MAX_TESS_EVALUATION_ATOMIC_COUNTER_BUFFERS: int

  GL_MAX_TESS_EVALUATION_ATOMIC_COUNTERS: int

  GL_MAX_TESS_EVALUATION_IMAGE_UNIFORMS: int

  GL_MAX_VERTEX_ATOMIC_COUNTER_BUFFERS: int

  GL_MAX_VERTEX_ATOMIC_COUNTERS: int

  GL_MAX_VERTEX_IMAGE_UNIFORMS: int

  GL_MIN_MAP_BUFFER_ALIGNMENT: int

  GL_NUM_SAMPLE_COUNTS: int

  GL_PACK_COMPRESSED_BLOCK_DEPTH: int

  GL_PACK_COMPRESSED_BLOCK_HEIGHT: int

  GL_PACK_COMPRESSED_BLOCK_SIZE: int

  GL_PACK_COMPRESSED_BLOCK_WIDTH: int

  GL_PIXEL_BUFFER_BARRIER_BIT: int

  GL_SHADER_IMAGE_ACCESS_BARRIER_BIT: int

  GL_TEXTURE_FETCH_BARRIER_BIT: int

  GL_TEXTURE_IMMUTABLE_FORMAT: int

  GL_TEXTURE_UPDATE_BARRIER_BIT: int

  GL_TRANSFORM_FEEDBACK_ACTIVE: int

  GL_TRANSFORM_FEEDBACK_BARRIER_BIT: int

  GL_TRANSFORM_FEEDBACK_PAUSED: int

  GL_UNIFORM_ATOMIC_COUNTER_BUFFER_INDEX: int

  GL_UNIFORM_BARRIER_BIT: int

  GL_UNPACK_COMPRESSED_BLOCK_DEPTH: int

  GL_UNPACK_COMPRESSED_BLOCK_HEIGHT: int

  GL_UNPACK_COMPRESSED_BLOCK_SIZE: int

  GL_UNPACK_COMPRESSED_BLOCK_WIDTH: int

  GL_UNSIGNED_INT_ATOMIC_COUNTER: int

  GL_UNSIGNED_INT_IMAGE_1D: int

  GL_UNSIGNED_INT_IMAGE_1D_ARRAY: int

  GL_UNSIGNED_INT_IMAGE_2D: int

  GL_UNSIGNED_INT_IMAGE_2D_ARRAY: int

  GL_UNSIGNED_INT_IMAGE_2D_MULTISAMPLE: int

  GL_UNSIGNED_INT_IMAGE_2D_MULTISAMPLE_ARRAY: int

  GL_UNSIGNED_INT_IMAGE_2D_RECT: int

  GL_UNSIGNED_INT_IMAGE_3D: int

  GL_UNSIGNED_INT_IMAGE_BUFFER: int

  GL_UNSIGNED_INT_IMAGE_CUBE: int

  GL_UNSIGNED_INT_IMAGE_CUBE_MAP_ARRAY: int

  GL_VERTEX_ATTRIB_ARRAY_BARRIER_BIT: int

  @staticmethod
  def glBindImageTexture(arg0: int, arg1: int, arg2: int, arg3: bool, arg4: int, arg5: int, arg6: int) -> None: ...

  @staticmethod
  def glDrawArraysInstancedBaseInstance(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int) -> None: ...

  @staticmethod
  @overload
  def glDrawElementsInstancedBaseInstance(arg0: int, arg1: ByteBuffer, arg2: int, arg3: int) -> None: ...

  @staticmethod
  @overload
  def glDrawElementsInstancedBaseInstance(arg0: int, arg1: IntBuffer, arg2: int, arg3: int) -> None: ...

  @staticmethod
  @overload
  def glDrawElementsInstancedBaseInstance(arg0: int, arg1: ShortBuffer, arg2: int, arg3: int) -> None: ...

  @staticmethod
  @overload
  def glDrawElementsInstancedBaseInstance(arg0: int, arg1: int, arg2: ByteBuffer, arg3: int, arg4: int) -> None: ...

  @staticmethod
  @overload
  def glDrawElementsInstancedBaseInstance(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int) -> None: ...

  @staticmethod
  @overload
  def glDrawElementsInstancedBaseVertexBaseInstance(arg0: int, arg1: ByteBuffer, arg2: int, arg3: int, arg4: int) -> None: ...

  @staticmethod
  @overload
  def glDrawElementsInstancedBaseVertexBaseInstance(arg0: int, arg1: IntBuffer, arg2: int, arg3: int, arg4: int) -> None: ...

  @staticmethod
  @overload
  def glDrawElementsInstancedBaseVertexBaseInstance(arg0: int, arg1: ShortBuffer, arg2: int, arg3: int, arg4: int) -> None: ...

  @staticmethod
  @overload
  def glDrawElementsInstancedBaseVertexBaseInstance(arg0: int, arg1: int, arg2: ByteBuffer, arg3: int, arg4: int, arg5: int) -> None: ...

  @staticmethod
  @overload
  def glDrawElementsInstancedBaseVertexBaseInstance(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int) -> None: ...

  @staticmethod
  def glDrawTransformFeedbackInstanced(arg0: int, arg1: int, arg2: int) -> None: ...

  @staticmethod
  def glDrawTransformFeedbackStreamInstanced(arg0: int, arg1: int, arg2: int, arg3: int) -> None: ...

  @staticmethod
  def glGetActiveAtomicCounterBufferi(arg0: int, arg1: int, arg2: int) -> int: ...

  @staticmethod
  @overload
  def glGetActiveAtomicCounterBufferiv(arg0: int, arg1: int, arg2: int, arg3: list[int]) -> None: ...

  @staticmethod
  @overload
  def glGetActiveAtomicCounterBufferiv(arg0: int, arg1: int, arg2: int, arg3: IntBuffer) -> None: ...

  @staticmethod
  def glGetInternalformati(arg0: int, arg1: int, arg2: int) -> int: ...

  @staticmethod
  @overload
  def glGetInternalformativ(arg0: int, arg1: int, arg2: int, arg3: list[int]) -> None: ...

  @staticmethod
  @overload
  def glGetInternalformativ(arg0: int, arg1: int, arg2: int, arg3: IntBuffer) -> None: ...

  @staticmethod
  def glMemoryBarrier(arg0: int) -> None: ...

  @staticmethod
  def glTexStorage1D(arg0: int, arg1: int, arg2: int, arg3: int) -> None: ...

  @staticmethod
  def glTexStorage2D(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int) -> None: ...

  @staticmethod
  def glTexStorage3D(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int) -> None: ...

  @staticmethod
  def nglDrawElementsInstancedBaseInstance(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int) -> None: ...

  @staticmethod
  def nglDrawElementsInstancedBaseVertexBaseInstance(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int) -> None: ...

  @staticmethod
  def nglGetActiveAtomicCounterBufferiv(arg0: int, arg1: int, arg2: int, arg3: int) -> None: ...

  @staticmethod
  def nglGetInternalformativ(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int) -> None: ...


class GL43(GL42):

  GL_ACTIVE_RESOURCES: int

  GL_ACTIVE_VARIABLES: int

  GL_ANY_SAMPLES_PASSED_CONSERVATIVE: int

  GL_ARRAY_SIZE: int

  GL_ARRAY_STRIDE: int

  GL_ATOMIC_COUNTER_BUFFER_INDEX: int

  GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_COMPUTE_SHADER: int

  GL_AUTO_GENERATE_MIPMAP: int

  GL_BLOCK_INDEX: int

  GL_BUFFER: int

  GL_BUFFER_BINDING: int

  GL_BUFFER_DATA_SIZE: int

  GL_BUFFER_VARIABLE: int

  GL_CAVEAT_SUPPORT: int

  GL_CLEAR_BUFFER: int

  GL_COLOR_COMPONENTS: int

  GL_COLOR_ENCODING: int

  GL_COLOR_RENDERABLE: int

  GL_COMPRESSED_R11_EAC: int

  GL_COMPRESSED_RG11_EAC: int

  GL_COMPRESSED_RGB8_ETC2: int

  GL_COMPRESSED_RGB8_PUNCHTHROUGH_ALPHA1_ETC2: int

  GL_COMPRESSED_RGBA8_ETC2_EAC: int

  GL_COMPRESSED_SIGNED_R11_EAC: int

  GL_COMPRESSED_SIGNED_RG11_EAC: int

  GL_COMPRESSED_SRGB8_ALPHA8_ETC2_EAC: int

  GL_COMPRESSED_SRGB8_ETC2: int

  GL_COMPRESSED_SRGB8_PUNCHTHROUGH_ALPHA1_ETC2: int

  GL_COMPUTE_SHADER: int

  GL_COMPUTE_SHADER_BIT: int

  GL_COMPUTE_SUBROUTINE: int

  GL_COMPUTE_SUBROUTINE_UNIFORM: int

  GL_COMPUTE_TEXTURE: int

  GL_COMPUTE_WORK_GROUP_SIZE: int

  GL_CONTEXT_FLAG_DEBUG_BIT: int

  GL_DEBUG_CALLBACK_FUNCTION: int

  GL_DEBUG_CALLBACK_USER_PARAM: int

  GL_DEBUG_GROUP_STACK_DEPTH: int

  GL_DEBUG_LOGGED_MESSAGES: int

  GL_DEBUG_NEXT_LOGGED_MESSAGE_LENGTH: int

  GL_DEBUG_OUTPUT: int

  GL_DEBUG_OUTPUT_SYNCHRONOUS: int

  GL_DEBUG_SEVERITY_HIGH: int

  GL_DEBUG_SEVERITY_LOW: int

  GL_DEBUG_SEVERITY_MEDIUM: int

  GL_DEBUG_SEVERITY_NOTIFICATION: int

  GL_DEBUG_SOURCE_API: int

  GL_DEBUG_SOURCE_APPLICATION: int

  GL_DEBUG_SOURCE_OTHER: int

  GL_DEBUG_SOURCE_SHADER_COMPILER: int

  GL_DEBUG_SOURCE_THIRD_PARTY: int

  GL_DEBUG_SOURCE_WINDOW_SYSTEM: int

  GL_DEBUG_TYPE_DEPRECATED_BEHAVIOR: int

  GL_DEBUG_TYPE_ERROR: int

  GL_DEBUG_TYPE_MARKER: int

  GL_DEBUG_TYPE_OTHER: int

  GL_DEBUG_TYPE_PERFORMANCE: int

  GL_DEBUG_TYPE_POP_GROUP: int

  GL_DEBUG_TYPE_PORTABILITY: int

  GL_DEBUG_TYPE_PUSH_GROUP: int

  GL_DEBUG_TYPE_UNDEFINED_BEHAVIOR: int

  GL_DEPTH_COMPONENTS: int

  GL_DEPTH_RENDERABLE: int

  GL_DEPTH_STENCIL_TEXTURE_MODE: int

  GL_DISPATCH_INDIRECT_BUFFER: int

  GL_DISPATCH_INDIRECT_BUFFER_BINDING: int

  GL_DISPLAY_LIST: int

  GL_FILTER: int

  GL_FRAGMENT_SUBROUTINE: int

  GL_FRAGMENT_SUBROUTINE_UNIFORM: int

  GL_FRAGMENT_TEXTURE: int

  GL_FRAMEBUFFER_BLEND: int

  GL_FRAMEBUFFER_DEFAULT_FIXED_SAMPLE_LOCATIONS: int

  GL_FRAMEBUFFER_DEFAULT_HEIGHT: int

  GL_FRAMEBUFFER_DEFAULT_LAYERS: int

  GL_FRAMEBUFFER_DEFAULT_SAMPLES: int

  GL_FRAMEBUFFER_DEFAULT_WIDTH: int

  GL_FRAMEBUFFER_RENDERABLE: int

  GL_FRAMEBUFFER_RENDERABLE_LAYERED: int

  GL_FULL_SUPPORT: int

  GL_GEOMETRY_SUBROUTINE: int

  GL_GEOMETRY_SUBROUTINE_UNIFORM: int

  GL_GEOMETRY_TEXTURE: int

  GL_GET_TEXTURE_IMAGE_FORMAT: int

  GL_GET_TEXTURE_IMAGE_TYPE: int

  GL_IMAGE_CLASS_10_10_10_2: int

  GL_IMAGE_CLASS_11_11_10: int

  GL_IMAGE_CLASS_1_X_16: int

  GL_IMAGE_CLASS_1_X_32: int

  GL_IMAGE_CLASS_1_X_8: int

  GL_IMAGE_CLASS_2_X_16: int

  GL_IMAGE_CLASS_2_X_32: int

  GL_IMAGE_CLASS_2_X_8: int

  GL_IMAGE_CLASS_4_X_16: int

  GL_IMAGE_CLASS_4_X_32: int

  GL_IMAGE_CLASS_4_X_8: int

  GL_IMAGE_COMPATIBILITY_CLASS: int

  GL_IMAGE_PIXEL_FORMAT: int

  GL_IMAGE_PIXEL_TYPE: int

  GL_IMAGE_TEXEL_SIZE: int

  GL_INTERNALFORMAT_ALPHA_SIZE: int

  GL_INTERNALFORMAT_ALPHA_TYPE: int

  GL_INTERNALFORMAT_BLUE_SIZE: int

  GL_INTERNALFORMAT_BLUE_TYPE: int

  GL_INTERNALFORMAT_DEPTH_SIZE: int

  GL_INTERNALFORMAT_DEPTH_TYPE: int

  GL_INTERNALFORMAT_GREEN_SIZE: int

  GL_INTERNALFORMAT_GREEN_TYPE: int

  GL_INTERNALFORMAT_PREFERRED: int

  GL_INTERNALFORMAT_RED_SIZE: int

  GL_INTERNALFORMAT_RED_TYPE: int

  GL_INTERNALFORMAT_SHARED_SIZE: int

  GL_INTERNALFORMAT_STENCIL_SIZE: int

  GL_INTERNALFORMAT_STENCIL_TYPE: int

  GL_INTERNALFORMAT_SUPPORTED: int

  GL_IS_PER_PATCH: int

  GL_IS_ROW_MAJOR: int

  GL_LOCATION: int

  GL_LOCATION_INDEX: int

  GL_MANUAL_GENERATE_MIPMAP: int

  GL_MATRIX_STRIDE: int

  GL_MAX_COMBINED_COMPUTE_UNIFORM_COMPONENTS: int

  GL_MAX_COMBINED_DIMENSIONS: int

  GL_MAX_COMBINED_SHADER_OUTPUT_RESOURCES: int

  GL_MAX_COMBINED_SHADER_STORAGE_BLOCKS: int

  GL_MAX_COMPUTE_ATOMIC_COUNTER_BUFFERS: int

  GL_MAX_COMPUTE_ATOMIC_COUNTERS: int

  GL_MAX_COMPUTE_IMAGE_UNIFORMS: int

  GL_MAX_COMPUTE_SHADER_STORAGE_BLOCKS: int

  GL_MAX_COMPUTE_SHARED_MEMORY_SIZE: int

  GL_MAX_COMPUTE_TEXTURE_IMAGE_UNITS: int

  GL_MAX_COMPUTE_UNIFORM_BLOCKS: int

  GL_MAX_COMPUTE_UNIFORM_COMPONENTS: int

  GL_MAX_COMPUTE_WORK_GROUP_COUNT: int

  GL_MAX_COMPUTE_WORK_GROUP_INVOCATIONS: int

  GL_MAX_COMPUTE_WORK_GROUP_SIZE: int

  GL_MAX_DEBUG_GROUP_STACK_DEPTH: int

  GL_MAX_DEBUG_LOGGED_MESSAGES: int

  GL_MAX_DEBUG_MESSAGE_LENGTH: int

  GL_MAX_DEPTH: int

  GL_MAX_ELEMENT_INDEX: int

  GL_MAX_FRAGMENT_SHADER_STORAGE_BLOCKS: int

  GL_MAX_FRAMEBUFFER_HEIGHT: int

  GL_MAX_FRAMEBUFFER_LAYERS: int

  GL_MAX_FRAMEBUFFER_SAMPLES: int

  GL_MAX_FRAMEBUFFER_WIDTH: int

  GL_MAX_GEOMETRY_SHADER_STORAGE_BLOCKS: int

  GL_MAX_HEIGHT: int

  GL_MAX_LABEL_LENGTH: int

  GL_MAX_LAYERS: int

  GL_MAX_NAME_LENGTH: int

  GL_MAX_NUM_ACTIVE_VARIABLES: int

  GL_MAX_NUM_COMPATIBLE_SUBROUTINES: int

  GL_MAX_SHADER_STORAGE_BLOCK_SIZE: int

  GL_MAX_SHADER_STORAGE_BUFFER_BINDINGS: int

  GL_MAX_TESS_CONTROL_SHADER_STORAGE_BLOCKS: int

  GL_MAX_TESS_EVALUATION_SHADER_STORAGE_BLOCKS: int

  GL_MAX_UNIFORM_LOCATIONS: int

  GL_MAX_VERTEX_ATTRIB_BINDINGS: int

  GL_MAX_VERTEX_ATTRIB_RELATIVE_OFFSET: int

  GL_MAX_VERTEX_SHADER_STORAGE_BLOCKS: int

  GL_MAX_WIDTH: int

  GL_MIPMAP: int

  GL_NAME_LENGTH: int

  GL_NUM_ACTIVE_VARIABLES: int

  GL_NUM_SHADING_LANGUAGE_VERSIONS: int

  GL_OFFSET: int

  GL_PRIMITIVE_RESTART_FIXED_INDEX: int

  GL_PROGRAM: int

  GL_PROGRAM_INPUT: int

  GL_PROGRAM_OUTPUT: int

  GL_PROGRAM_PIPELINE: int

  GL_QUERY: int

  GL_READ_PIXELS: int

  GL_READ_PIXELS_FORMAT: int

  GL_READ_PIXELS_TYPE: int

  GL_REFERENCED_BY_COMPUTE_SHADER: int

  GL_REFERENCED_BY_FRAGMENT_SHADER: int

  GL_REFERENCED_BY_GEOMETRY_SHADER: int

  GL_REFERENCED_BY_TESS_CONTROL_SHADER: int

  GL_REFERENCED_BY_TESS_EVALUATION_SHADER: int

  GL_REFERENCED_BY_VERTEX_SHADER: int

  GL_SAMPLER: int

  GL_SHADER: int

  GL_SHADER_IMAGE_ATOMIC: int

  GL_SHADER_IMAGE_LOAD: int

  GL_SHADER_IMAGE_STORE: int

  GL_SHADER_STORAGE_BARRIER_BIT: int

  GL_SHADER_STORAGE_BLOCK: int

  GL_SHADER_STORAGE_BUFFER: int

  GL_SHADER_STORAGE_BUFFER_BINDING: int

  GL_SHADER_STORAGE_BUFFER_OFFSET_ALIGNMENT: int

  GL_SHADER_STORAGE_BUFFER_SIZE: int

  GL_SHADER_STORAGE_BUFFER_START: int

  GL_SIMULTANEOUS_TEXTURE_AND_DEPTH_TEST: int

  GL_SIMULTANEOUS_TEXTURE_AND_DEPTH_WRITE: int

  GL_SIMULTANEOUS_TEXTURE_AND_STENCIL_TEST: int

  GL_SIMULTANEOUS_TEXTURE_AND_STENCIL_WRITE: int

  GL_SRGB_READ: int

  GL_SRGB_WRITE: int

  GL_STENCIL_COMPONENTS: int

  GL_STENCIL_RENDERABLE: int

  GL_TESS_CONTROL_SUBROUTINE: int

  GL_TESS_CONTROL_SUBROUTINE_UNIFORM: int

  GL_TESS_CONTROL_TEXTURE: int

  GL_TESS_EVALUATION_SUBROUTINE: int

  GL_TESS_EVALUATION_SUBROUTINE_UNIFORM: int

  GL_TESS_EVALUATION_TEXTURE: int

  GL_TEXTURE_BUFFER_OFFSET: int

  GL_TEXTURE_BUFFER_OFFSET_ALIGNMENT: int

  GL_TEXTURE_BUFFER_SIZE: int

  GL_TEXTURE_COMPRESSED_BLOCK_HEIGHT: int

  GL_TEXTURE_COMPRESSED_BLOCK_SIZE: int

  GL_TEXTURE_COMPRESSED_BLOCK_WIDTH: int

  GL_TEXTURE_GATHER: int

  GL_TEXTURE_GATHER_SHADOW: int

  GL_TEXTURE_IMAGE_FORMAT: int

  GL_TEXTURE_IMAGE_TYPE: int

  GL_TEXTURE_IMMUTABLE_LEVELS: int

  GL_TEXTURE_SHADOW: int

  GL_TEXTURE_VIEW: int

  GL_TEXTURE_VIEW_MIN_LAYER: int

  GL_TEXTURE_VIEW_MIN_LEVEL: int

  GL_TEXTURE_VIEW_NUM_LAYERS: int

  GL_TEXTURE_VIEW_NUM_LEVELS: int

  GL_TOP_LEVEL_ARRAY_SIZE: int

  GL_TOP_LEVEL_ARRAY_STRIDE: int

  GL_TRANSFORM_FEEDBACK_VARYING: int

  GL_TYPE: int

  GL_UNIFORM: int

  GL_UNIFORM_BLOCK: int

  GL_UNIFORM_BLOCK_REFERENCED_BY_COMPUTE_SHADER: int

  GL_VERTEX_ATTRIB_ARRAY_LONG: int

  GL_VERTEX_ATTRIB_BINDING: int

  GL_VERTEX_ATTRIB_RELATIVE_OFFSET: int

  GL_VERTEX_BINDING_BUFFER: int

  GL_VERTEX_BINDING_DIVISOR: int

  GL_VERTEX_BINDING_OFFSET: int

  GL_VERTEX_BINDING_STRIDE: int

  GL_VERTEX_SUBROUTINE: int

  GL_VERTEX_SUBROUTINE_UNIFORM: int

  GL_VERTEX_TEXTURE: int

  GL_VIEW_CLASS_128_BITS: int

  GL_VIEW_CLASS_16_BITS: int

  GL_VIEW_CLASS_24_BITS: int

  GL_VIEW_CLASS_32_BITS: int

  GL_VIEW_CLASS_48_BITS: int

  GL_VIEW_CLASS_64_BITS: int

  GL_VIEW_CLASS_8_BITS: int

  GL_VIEW_CLASS_96_BITS: int

  GL_VIEW_CLASS_BPTC_FLOAT: int

  GL_VIEW_CLASS_BPTC_UNORM: int

  GL_VIEW_CLASS_RGTC1_RED: int

  GL_VIEW_CLASS_RGTC2_RG: int

  GL_VIEW_CLASS_S3TC_DXT1_RGB: int

  GL_VIEW_CLASS_S3TC_DXT1_RGBA: int

  GL_VIEW_CLASS_S3TC_DXT3_RGBA: int

  GL_VIEW_CLASS_S3TC_DXT5_RGBA: int

  GL_VIEW_COMPATIBILITY_CLASS: int

  @staticmethod
  def glBindVertexBuffer(arg0: int, arg1: int, arg2: int, arg3: int) -> None: ...

  @staticmethod
  @overload
  def glClearBufferData(arg0: int, arg1: int, arg2: int, arg3: int, arg4: list[float]) -> None: ...

  @staticmethod
  @overload
  def glClearBufferData(arg0: int, arg1: int, arg2: int, arg3: int, arg4: list[int]) -> None: ...

  @staticmethod
  @overload
  def glClearBufferData(arg0: int, arg1: int, arg2: int, arg3: int, arg4: list[int]) -> None: ...

  @staticmethod
  @overload
  def glClearBufferData(arg0: int, arg1: int, arg2: int, arg3: int, arg4: ByteBuffer) -> None: ...

  @staticmethod
  @overload
  def glClearBufferData(arg0: int, arg1: int, arg2: int, arg3: int, arg4: FloatBuffer) -> None: ...

  @staticmethod
  @overload
  def glClearBufferData(arg0: int, arg1: int, arg2: int, arg3: int, arg4: IntBuffer) -> None: ...

  @staticmethod
  @overload
  def glClearBufferData(arg0: int, arg1: int, arg2: int, arg3: int, arg4: ShortBuffer) -> None: ...

  @staticmethod
  @overload
  def glClearBufferSubData(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: list[float]) -> None: ...

  @staticmethod
  @overload
  def glClearBufferSubData(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: list[int]) -> None: ...

  @staticmethod
  @overload
  def glClearBufferSubData(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: list[int]) -> None: ...

  @staticmethod
  @overload
  def glClearBufferSubData(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: ByteBuffer) -> None: ...

  @staticmethod
  @overload
  def glClearBufferSubData(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: FloatBuffer) -> None: ...

  @staticmethod
  @overload
  def glClearBufferSubData(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: IntBuffer) -> None: ...

  @staticmethod
  @overload
  def glClearBufferSubData(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: ShortBuffer) -> None: ...

  @staticmethod
  def glCopyImageSubData(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int, arg7: int, arg8: int, arg9: int, arg10: int, arg11: int, arg12: int, arg13: int, arg14: int) -> None: ...

  @staticmethod
  def glDebugMessageCallback(arg0: GLDebugMessageCallbackI, arg1: int) -> None: ...

  @staticmethod
  @overload
  def glDebugMessageControl(arg0: int, arg1: int, arg2: int, arg3: list[int], arg4: bool) -> None: ...

  @staticmethod
  @overload
  def glDebugMessageControl(arg0: int, arg1: int, arg2: int, arg3: int, arg4: bool) -> None: ...

  @staticmethod
  @overload
  def glDebugMessageControl(arg0: int, arg1: int, arg2: int, arg3: IntBuffer, arg4: bool) -> None: ...

  @staticmethod
  @overload
  def glDebugMessageInsert(arg0: int, arg1: int, arg2: int, arg3: int, arg4: CharSequence) -> None: ...

  @staticmethod
  @overload
  def glDebugMessageInsert(arg0: int, arg1: int, arg2: int, arg3: int, arg4: ByteBuffer) -> None: ...

  @staticmethod
  def glDispatchCompute(arg0: int, arg1: int, arg2: int) -> None: ...

  @staticmethod
  def glDispatchComputeIndirect(arg0: int) -> None: ...

  @staticmethod
  def glFramebufferParameteri(arg0: int, arg1: int, arg2: int) -> None: ...

  @staticmethod
  @overload
  def glGetDebugMessageLog(arg0: int, arg1: list[int], arg2: list[int], arg3: list[int], arg4: list[int], arg5: list[int], arg6: ByteBuffer) -> int: ...

  @staticmethod
  @overload
  def glGetDebugMessageLog(arg0: int, arg1: IntBuffer, arg2: IntBuffer, arg3: IntBuffer, arg4: IntBuffer, arg5: IntBuffer, arg6: ByteBuffer) -> int: ...

  @staticmethod
  def glGetFramebufferParameteri(arg0: int, arg1: int) -> int: ...

  @staticmethod
  @overload
  def glGetFramebufferParameteriv(arg0: int, arg1: int, arg2: list[int]) -> None: ...

  @staticmethod
  @overload
  def glGetFramebufferParameteriv(arg0: int, arg1: int, arg2: IntBuffer) -> None: ...

  @staticmethod
  def glGetInternalformati64(arg0: int, arg1: int, arg2: int) -> int: ...

  @staticmethod
  @overload
  def glGetInternalformati64v(arg0: int, arg1: int, arg2: int, arg3: list[int]) -> None: ...

  @staticmethod
  @overload
  def glGetInternalformati64v(arg0: int, arg1: int, arg2: int, arg3: LongBuffer) -> None: ...

  @staticmethod
  @overload
  def glGetObjectLabel(arg0: int, arg1: int) -> str: ...

  @staticmethod
  @overload
  def glGetObjectLabel(arg0: int, arg1: int, arg2: int) -> str: ...

  @staticmethod
  @overload
  def glGetObjectLabel(arg0: int, arg1: int, arg2: list[int], arg3: ByteBuffer) -> None: ...

  @staticmethod
  @overload
  def glGetObjectLabel(arg0: int, arg1: int, arg2: IntBuffer, arg3: ByteBuffer) -> None: ...

  @staticmethod
  @overload
  def glGetObjectPtrLabel(arg0: int) -> str: ...

  @staticmethod
  @overload
  def glGetObjectPtrLabel(arg0: int, arg1: int) -> str: ...

  @staticmethod
  @overload
  def glGetObjectPtrLabel(arg0: int, arg1: list[int], arg2: ByteBuffer) -> None: ...

  @staticmethod
  @overload
  def glGetObjectPtrLabel(arg0: int, arg1: IntBuffer, arg2: ByteBuffer) -> None: ...

  @staticmethod
  def glGetProgramInterfacei(arg0: int, arg1: int, arg2: int) -> int: ...

  @staticmethod
  @overload
  def glGetProgramInterfaceiv(arg0: int, arg1: int, arg2: int, arg3: list[int]) -> None: ...

  @staticmethod
  @overload
  def glGetProgramInterfaceiv(arg0: int, arg1: int, arg2: int, arg3: IntBuffer) -> None: ...

  @staticmethod
  @overload
  def glGetProgramResourceIndex(arg0: int, arg1: int, arg2: CharSequence) -> int: ...

  @staticmethod
  @overload
  def glGetProgramResourceIndex(arg0: int, arg1: int, arg2: ByteBuffer) -> int: ...

  @staticmethod
  @overload
  def glGetProgramResourceLocation(arg0: int, arg1: int, arg2: CharSequence) -> int: ...

  @staticmethod
  @overload
  def glGetProgramResourceLocation(arg0: int, arg1: int, arg2: ByteBuffer) -> int: ...

  @staticmethod
  @overload
  def glGetProgramResourceLocationIndex(arg0: int, arg1: int, arg2: CharSequence) -> int: ...

  @staticmethod
  @overload
  def glGetProgramResourceLocationIndex(arg0: int, arg1: int, arg2: ByteBuffer) -> int: ...

  @staticmethod
  @overload
  def glGetProgramResourceName(arg0: int, arg1: int, arg2: int) -> str: ...

  @staticmethod
  @overload
  def glGetProgramResourceName(arg0: int, arg1: int, arg2: int, arg3: int) -> str: ...

  @staticmethod
  @overload
  def glGetProgramResourceName(arg0: int, arg1: int, arg2: int, arg3: list[int], arg4: ByteBuffer) -> None: ...

  @staticmethod
  @overload
  def glGetProgramResourceName(arg0: int, arg1: int, arg2: int, arg3: IntBuffer, arg4: ByteBuffer) -> None: ...

  @staticmethod
  @overload
  def glGetProgramResourceiv(arg0: int, arg1: int, arg2: int, arg3: list[int], arg4: list[int], arg5: list[int]) -> None: ...

  @staticmethod
  @overload
  def glGetProgramResourceiv(arg0: int, arg1: int, arg2: int, arg3: IntBuffer, arg4: IntBuffer, arg5: IntBuffer) -> None: ...

  @staticmethod
  def glInvalidateBufferData(arg0: int) -> None: ...

  @staticmethod
  def glInvalidateBufferSubData(arg0: int, arg1: int, arg2: int) -> None: ...

  @staticmethod
  @overload
  def glInvalidateFramebuffer(arg0: int, arg1: list[int]) -> None: ...

  @staticmethod
  @overload
  def glInvalidateFramebuffer(arg0: int, arg1: int) -> None: ...

  @staticmethod
  @overload
  def glInvalidateFramebuffer(arg0: int, arg1: IntBuffer) -> None: ...

  @staticmethod
  @overload
  def glInvalidateSubFramebuffer(arg0: int, arg1: list[int], arg2: int, arg3: int, arg4: int, arg5: int) -> None: ...

  @staticmethod
  @overload
  def glInvalidateSubFramebuffer(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int) -> None: ...

  @staticmethod
  @overload
  def glInvalidateSubFramebuffer(arg0: int, arg1: IntBuffer, arg2: int, arg3: int, arg4: int, arg5: int) -> None: ...

  @staticmethod
  def glInvalidateTexImage(arg0: int, arg1: int) -> None: ...

  @staticmethod
  def glInvalidateTexSubImage(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int, arg7: int) -> None: ...

  @staticmethod
  @overload
  def glMultiDrawArraysIndirect(arg0: int, arg1: list[int], arg2: int, arg3: int) -> None: ...

  @staticmethod
  @overload
  def glMultiDrawArraysIndirect(arg0: int, arg1: ByteBuffer, arg2: int, arg3: int) -> None: ...

  @staticmethod
  @overload
  def glMultiDrawArraysIndirect(arg0: int, arg1: IntBuffer, arg2: int, arg3: int) -> None: ...

  @staticmethod
  @overload
  def glMultiDrawArraysIndirect(arg0: int, arg1: int, arg2: int, arg3: int) -> None: ...

  @staticmethod
  @overload
  def glMultiDrawElementsIndirect(arg0: int, arg1: int, arg2: list[int], arg3: int, arg4: int) -> None: ...

  @staticmethod
  @overload
  def glMultiDrawElementsIndirect(arg0: int, arg1: int, arg2: ByteBuffer, arg3: int, arg4: int) -> None: ...

  @staticmethod
  @overload
  def glMultiDrawElementsIndirect(arg0: int, arg1: int, arg2: IntBuffer, arg3: int, arg4: int) -> None: ...

  @staticmethod
  @overload
  def glMultiDrawElementsIndirect(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int) -> None: ...

  @staticmethod
  @overload
  def glObjectLabel(arg0: int, arg1: int, arg2: CharSequence) -> None: ...

  @staticmethod
  @overload
  def glObjectLabel(arg0: int, arg1: int, arg2: ByteBuffer) -> None: ...

  @staticmethod
  @overload
  def glObjectPtrLabel(arg0: int, arg1: CharSequence) -> None: ...

  @staticmethod
  @overload
  def glObjectPtrLabel(arg0: int, arg1: ByteBuffer) -> None: ...

  @staticmethod
  def glPopDebugGroup() -> None: ...

  @staticmethod
  @overload
  def glPushDebugGroup(arg0: int, arg1: int, arg2: CharSequence) -> None: ...

  @staticmethod
  @overload
  def glPushDebugGroup(arg0: int, arg1: int, arg2: ByteBuffer) -> None: ...

  @staticmethod
  def glShaderStorageBlockBinding(arg0: int, arg1: int, arg2: int) -> None: ...

  @staticmethod
  def glTexBufferRange(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int) -> None: ...

  @staticmethod
  def glTexStorage2DMultisample(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: bool) -> None: ...

  @staticmethod
  def glTexStorage3DMultisample(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: bool) -> None: ...

  @staticmethod
  def glTextureView(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int, arg7: int) -> None: ...

  @staticmethod
  def glVertexAttribBinding(arg0: int, arg1: int) -> None: ...

  @staticmethod
  def glVertexAttribFormat(arg0: int, arg1: int, arg2: int, arg3: bool, arg4: int) -> None: ...

  @staticmethod
  def glVertexAttribIFormat(arg0: int, arg1: int, arg2: int, arg3: int) -> None: ...

  @staticmethod
  def glVertexAttribLFormat(arg0: int, arg1: int, arg2: int, arg3: int) -> None: ...

  @staticmethod
  def glVertexBindingDivisor(arg0: int, arg1: int) -> None: ...

  @staticmethod
  def nglClearBufferData(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int) -> None: ...

  @staticmethod
  def nglClearBufferSubData(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int) -> None: ...

  @staticmethod
  def nglDebugMessageCallback(arg0: int, arg1: int) -> None: ...

  @staticmethod
  def nglDebugMessageControl(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: bool) -> None: ...

  @staticmethod
  def nglDebugMessageInsert(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int) -> None: ...

  @staticmethod
  def nglGetDebugMessageLog(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int, arg7: int) -> int: ...

  @staticmethod
  def nglGetFramebufferParameteriv(arg0: int, arg1: int, arg2: int) -> None: ...

  @staticmethod
  def nglGetInternalformati64v(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int) -> None: ...

  @staticmethod
  def nglGetObjectLabel(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int) -> None: ...

  @staticmethod
  def nglGetObjectPtrLabel(arg0: int, arg1: int, arg2: int, arg3: int) -> None: ...

  @staticmethod
  def nglGetProgramInterfaceiv(arg0: int, arg1: int, arg2: int, arg3: int) -> None: ...

  @staticmethod
  def nglGetProgramResourceIndex(arg0: int, arg1: int, arg2: int) -> int: ...

  @staticmethod
  def nglGetProgramResourceLocation(arg0: int, arg1: int, arg2: int) -> int: ...

  @staticmethod
  def nglGetProgramResourceLocationIndex(arg0: int, arg1: int, arg2: int) -> int: ...

  @staticmethod
  def nglGetProgramResourceName(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int) -> None: ...

  @staticmethod
  def nglGetProgramResourceiv(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int, arg7: int) -> None: ...

  @staticmethod
  def nglInvalidateFramebuffer(arg0: int, arg1: int, arg2: int) -> None: ...

  @staticmethod
  def nglInvalidateSubFramebuffer(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int) -> None: ...

  @staticmethod
  def nglMultiDrawArraysIndirect(arg0: int, arg1: int, arg2: int, arg3: int) -> None: ...

  @staticmethod
  def nglMultiDrawElementsIndirect(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int) -> None: ...

  @staticmethod
  def nglObjectLabel(arg0: int, arg1: int, arg2: int, arg3: int) -> None: ...

  @staticmethod
  def nglObjectPtrLabel(arg0: int, arg1: int, arg2: int) -> None: ...

  @staticmethod
  def nglPushDebugGroup(arg0: int, arg1: int, arg2: int, arg3: int) -> None: ...


class GL43C(GL42C):

  GL_ACTIVE_RESOURCES: int

  GL_ACTIVE_VARIABLES: int

  GL_ANY_SAMPLES_PASSED_CONSERVATIVE: int

  GL_ARRAY_SIZE: int

  GL_ARRAY_STRIDE: int

  GL_ATOMIC_COUNTER_BUFFER_INDEX: int

  GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_COMPUTE_SHADER: int

  GL_AUTO_GENERATE_MIPMAP: int

  GL_BLOCK_INDEX: int

  GL_BUFFER: int

  GL_BUFFER_BINDING: int

  GL_BUFFER_DATA_SIZE: int

  GL_BUFFER_VARIABLE: int

  GL_CAVEAT_SUPPORT: int

  GL_CLEAR_BUFFER: int

  GL_COLOR_COMPONENTS: int

  GL_COLOR_ENCODING: int

  GL_COLOR_RENDERABLE: int

  GL_COMPRESSED_R11_EAC: int

  GL_COMPRESSED_RG11_EAC: int

  GL_COMPRESSED_RGB8_ETC2: int

  GL_COMPRESSED_RGB8_PUNCHTHROUGH_ALPHA1_ETC2: int

  GL_COMPRESSED_RGBA8_ETC2_EAC: int

  GL_COMPRESSED_SIGNED_R11_EAC: int

  GL_COMPRESSED_SIGNED_RG11_EAC: int

  GL_COMPRESSED_SRGB8_ALPHA8_ETC2_EAC: int

  GL_COMPRESSED_SRGB8_ETC2: int

  GL_COMPRESSED_SRGB8_PUNCHTHROUGH_ALPHA1_ETC2: int

  GL_COMPUTE_SHADER: int

  GL_COMPUTE_SHADER_BIT: int

  GL_COMPUTE_SUBROUTINE: int

  GL_COMPUTE_SUBROUTINE_UNIFORM: int

  GL_COMPUTE_TEXTURE: int

  GL_COMPUTE_WORK_GROUP_SIZE: int

  GL_CONTEXT_FLAG_DEBUG_BIT: int

  GL_DEBUG_CALLBACK_FUNCTION: int

  GL_DEBUG_CALLBACK_USER_PARAM: int

  GL_DEBUG_GROUP_STACK_DEPTH: int

  GL_DEBUG_LOGGED_MESSAGES: int

  GL_DEBUG_NEXT_LOGGED_MESSAGE_LENGTH: int

  GL_DEBUG_OUTPUT: int

  GL_DEBUG_OUTPUT_SYNCHRONOUS: int

  GL_DEBUG_SEVERITY_HIGH: int

  GL_DEBUG_SEVERITY_LOW: int

  GL_DEBUG_SEVERITY_MEDIUM: int

  GL_DEBUG_SEVERITY_NOTIFICATION: int

  GL_DEBUG_SOURCE_API: int

  GL_DEBUG_SOURCE_APPLICATION: int

  GL_DEBUG_SOURCE_OTHER: int

  GL_DEBUG_SOURCE_SHADER_COMPILER: int

  GL_DEBUG_SOURCE_THIRD_PARTY: int

  GL_DEBUG_SOURCE_WINDOW_SYSTEM: int

  GL_DEBUG_TYPE_DEPRECATED_BEHAVIOR: int

  GL_DEBUG_TYPE_ERROR: int

  GL_DEBUG_TYPE_MARKER: int

  GL_DEBUG_TYPE_OTHER: int

  GL_DEBUG_TYPE_PERFORMANCE: int

  GL_DEBUG_TYPE_POP_GROUP: int

  GL_DEBUG_TYPE_PORTABILITY: int

  GL_DEBUG_TYPE_PUSH_GROUP: int

  GL_DEBUG_TYPE_UNDEFINED_BEHAVIOR: int

  GL_DEPTH_COMPONENTS: int

  GL_DEPTH_RENDERABLE: int

  GL_DEPTH_STENCIL_TEXTURE_MODE: int

  GL_DISPATCH_INDIRECT_BUFFER: int

  GL_DISPATCH_INDIRECT_BUFFER_BINDING: int

  GL_FILTER: int

  GL_FRAGMENT_SUBROUTINE: int

  GL_FRAGMENT_SUBROUTINE_UNIFORM: int

  GL_FRAGMENT_TEXTURE: int

  GL_FRAMEBUFFER_BLEND: int

  GL_FRAMEBUFFER_DEFAULT_FIXED_SAMPLE_LOCATIONS: int

  GL_FRAMEBUFFER_DEFAULT_HEIGHT: int

  GL_FRAMEBUFFER_DEFAULT_LAYERS: int

  GL_FRAMEBUFFER_DEFAULT_SAMPLES: int

  GL_FRAMEBUFFER_DEFAULT_WIDTH: int

  GL_FRAMEBUFFER_RENDERABLE: int

  GL_FRAMEBUFFER_RENDERABLE_LAYERED: int

  GL_FULL_SUPPORT: int

  GL_GEOMETRY_SUBROUTINE: int

  GL_GEOMETRY_SUBROUTINE_UNIFORM: int

  GL_GEOMETRY_TEXTURE: int

  GL_GET_TEXTURE_IMAGE_FORMAT: int

  GL_GET_TEXTURE_IMAGE_TYPE: int

  GL_IMAGE_CLASS_10_10_10_2: int

  GL_IMAGE_CLASS_11_11_10: int

  GL_IMAGE_CLASS_1_X_16: int

  GL_IMAGE_CLASS_1_X_32: int

  GL_IMAGE_CLASS_1_X_8: int

  GL_IMAGE_CLASS_2_X_16: int

  GL_IMAGE_CLASS_2_X_32: int

  GL_IMAGE_CLASS_2_X_8: int

  GL_IMAGE_CLASS_4_X_16: int

  GL_IMAGE_CLASS_4_X_32: int

  GL_IMAGE_CLASS_4_X_8: int

  GL_IMAGE_COMPATIBILITY_CLASS: int

  GL_IMAGE_PIXEL_FORMAT: int

  GL_IMAGE_PIXEL_TYPE: int

  GL_IMAGE_TEXEL_SIZE: int

  GL_INTERNALFORMAT_ALPHA_SIZE: int

  GL_INTERNALFORMAT_ALPHA_TYPE: int

  GL_INTERNALFORMAT_BLUE_SIZE: int

  GL_INTERNALFORMAT_BLUE_TYPE: int

  GL_INTERNALFORMAT_DEPTH_SIZE: int

  GL_INTERNALFORMAT_DEPTH_TYPE: int

  GL_INTERNALFORMAT_GREEN_SIZE: int

  GL_INTERNALFORMAT_GREEN_TYPE: int

  GL_INTERNALFORMAT_PREFERRED: int

  GL_INTERNALFORMAT_RED_SIZE: int

  GL_INTERNALFORMAT_RED_TYPE: int

  GL_INTERNALFORMAT_SHARED_SIZE: int

  GL_INTERNALFORMAT_STENCIL_SIZE: int

  GL_INTERNALFORMAT_STENCIL_TYPE: int

  GL_INTERNALFORMAT_SUPPORTED: int

  GL_IS_PER_PATCH: int

  GL_IS_ROW_MAJOR: int

  GL_LOCATION: int

  GL_LOCATION_INDEX: int

  GL_MANUAL_GENERATE_MIPMAP: int

  GL_MATRIX_STRIDE: int

  GL_MAX_COMBINED_COMPUTE_UNIFORM_COMPONENTS: int

  GL_MAX_COMBINED_DIMENSIONS: int

  GL_MAX_COMBINED_SHADER_OUTPUT_RESOURCES: int

  GL_MAX_COMBINED_SHADER_STORAGE_BLOCKS: int

  GL_MAX_COMPUTE_ATOMIC_COUNTER_BUFFERS: int

  GL_MAX_COMPUTE_ATOMIC_COUNTERS: int

  GL_MAX_COMPUTE_IMAGE_UNIFORMS: int

  GL_MAX_COMPUTE_SHADER_STORAGE_BLOCKS: int

  GL_MAX_COMPUTE_SHARED_MEMORY_SIZE: int

  GL_MAX_COMPUTE_TEXTURE_IMAGE_UNITS: int

  GL_MAX_COMPUTE_UNIFORM_BLOCKS: int

  GL_MAX_COMPUTE_UNIFORM_COMPONENTS: int

  GL_MAX_COMPUTE_WORK_GROUP_COUNT: int

  GL_MAX_COMPUTE_WORK_GROUP_INVOCATIONS: int

  GL_MAX_COMPUTE_WORK_GROUP_SIZE: int

  GL_MAX_DEBUG_GROUP_STACK_DEPTH: int

  GL_MAX_DEBUG_LOGGED_MESSAGES: int

  GL_MAX_DEBUG_MESSAGE_LENGTH: int

  GL_MAX_DEPTH: int

  GL_MAX_ELEMENT_INDEX: int

  GL_MAX_FRAGMENT_SHADER_STORAGE_BLOCKS: int

  GL_MAX_FRAMEBUFFER_HEIGHT: int

  GL_MAX_FRAMEBUFFER_LAYERS: int

  GL_MAX_FRAMEBUFFER_SAMPLES: int

  GL_MAX_FRAMEBUFFER_WIDTH: int

  GL_MAX_GEOMETRY_SHADER_STORAGE_BLOCKS: int

  GL_MAX_HEIGHT: int

  GL_MAX_LABEL_LENGTH: int

  GL_MAX_LAYERS: int

  GL_MAX_NAME_LENGTH: int

  GL_MAX_NUM_ACTIVE_VARIABLES: int

  GL_MAX_NUM_COMPATIBLE_SUBROUTINES: int

  GL_MAX_SHADER_STORAGE_BLOCK_SIZE: int

  GL_MAX_SHADER_STORAGE_BUFFER_BINDINGS: int

  GL_MAX_TESS_CONTROL_SHADER_STORAGE_BLOCKS: int

  GL_MAX_TESS_EVALUATION_SHADER_STORAGE_BLOCKS: int

  GL_MAX_UNIFORM_LOCATIONS: int

  GL_MAX_VERTEX_ATTRIB_BINDINGS: int

  GL_MAX_VERTEX_ATTRIB_RELATIVE_OFFSET: int

  GL_MAX_VERTEX_SHADER_STORAGE_BLOCKS: int

  GL_MAX_WIDTH: int

  GL_MIPMAP: int

  GL_NAME_LENGTH: int

  GL_NUM_ACTIVE_VARIABLES: int

  GL_NUM_SHADING_LANGUAGE_VERSIONS: int

  GL_OFFSET: int

  GL_PRIMITIVE_RESTART_FIXED_INDEX: int

  GL_PROGRAM: int

  GL_PROGRAM_INPUT: int

  GL_PROGRAM_OUTPUT: int

  GL_PROGRAM_PIPELINE: int

  GL_QUERY: int

  GL_READ_PIXELS: int

  GL_READ_PIXELS_FORMAT: int

  GL_READ_PIXELS_TYPE: int

  GL_REFERENCED_BY_COMPUTE_SHADER: int

  GL_REFERENCED_BY_FRAGMENT_SHADER: int

  GL_REFERENCED_BY_GEOMETRY_SHADER: int

  GL_REFERENCED_BY_TESS_CONTROL_SHADER: int

  GL_REFERENCED_BY_TESS_EVALUATION_SHADER: int

  GL_REFERENCED_BY_VERTEX_SHADER: int

  GL_SAMPLER: int

  GL_SHADER: int

  GL_SHADER_IMAGE_ATOMIC: int

  GL_SHADER_IMAGE_LOAD: int

  GL_SHADER_IMAGE_STORE: int

  GL_SHADER_STORAGE_BARRIER_BIT: int

  GL_SHADER_STORAGE_BLOCK: int

  GL_SHADER_STORAGE_BUFFER: int

  GL_SHADER_STORAGE_BUFFER_BINDING: int

  GL_SHADER_STORAGE_BUFFER_OFFSET_ALIGNMENT: int

  GL_SHADER_STORAGE_BUFFER_SIZE: int

  GL_SHADER_STORAGE_BUFFER_START: int

  GL_SIMULTANEOUS_TEXTURE_AND_DEPTH_TEST: int

  GL_SIMULTANEOUS_TEXTURE_AND_DEPTH_WRITE: int

  GL_SIMULTANEOUS_TEXTURE_AND_STENCIL_TEST: int

  GL_SIMULTANEOUS_TEXTURE_AND_STENCIL_WRITE: int

  GL_SRGB_READ: int

  GL_SRGB_WRITE: int

  GL_STENCIL_COMPONENTS: int

  GL_STENCIL_RENDERABLE: int

  GL_TESS_CONTROL_SUBROUTINE: int

  GL_TESS_CONTROL_SUBROUTINE_UNIFORM: int

  GL_TESS_CONTROL_TEXTURE: int

  GL_TESS_EVALUATION_SUBROUTINE: int

  GL_TESS_EVALUATION_SUBROUTINE_UNIFORM: int

  GL_TESS_EVALUATION_TEXTURE: int

  GL_TEXTURE_BUFFER_OFFSET: int

  GL_TEXTURE_BUFFER_OFFSET_ALIGNMENT: int

  GL_TEXTURE_BUFFER_SIZE: int

  GL_TEXTURE_COMPRESSED_BLOCK_HEIGHT: int

  GL_TEXTURE_COMPRESSED_BLOCK_SIZE: int

  GL_TEXTURE_COMPRESSED_BLOCK_WIDTH: int

  GL_TEXTURE_GATHER: int

  GL_TEXTURE_GATHER_SHADOW: int

  GL_TEXTURE_IMAGE_FORMAT: int

  GL_TEXTURE_IMAGE_TYPE: int

  GL_TEXTURE_IMMUTABLE_LEVELS: int

  GL_TEXTURE_SHADOW: int

  GL_TEXTURE_VIEW: int

  GL_TEXTURE_VIEW_MIN_LAYER: int

  GL_TEXTURE_VIEW_MIN_LEVEL: int

  GL_TEXTURE_VIEW_NUM_LAYERS: int

  GL_TEXTURE_VIEW_NUM_LEVELS: int

  GL_TOP_LEVEL_ARRAY_SIZE: int

  GL_TOP_LEVEL_ARRAY_STRIDE: int

  GL_TRANSFORM_FEEDBACK_VARYING: int

  GL_TYPE: int

  GL_UNIFORM: int

  GL_UNIFORM_BLOCK: int

  GL_UNIFORM_BLOCK_REFERENCED_BY_COMPUTE_SHADER: int

  GL_VERTEX_ATTRIB_ARRAY_LONG: int

  GL_VERTEX_ATTRIB_BINDING: int

  GL_VERTEX_ATTRIB_RELATIVE_OFFSET: int

  GL_VERTEX_BINDING_BUFFER: int

  GL_VERTEX_BINDING_DIVISOR: int

  GL_VERTEX_BINDING_OFFSET: int

  GL_VERTEX_BINDING_STRIDE: int

  GL_VERTEX_SUBROUTINE: int

  GL_VERTEX_SUBROUTINE_UNIFORM: int

  GL_VERTEX_TEXTURE: int

  GL_VIEW_CLASS_128_BITS: int

  GL_VIEW_CLASS_16_BITS: int

  GL_VIEW_CLASS_24_BITS: int

  GL_VIEW_CLASS_32_BITS: int

  GL_VIEW_CLASS_48_BITS: int

  GL_VIEW_CLASS_64_BITS: int

  GL_VIEW_CLASS_8_BITS: int

  GL_VIEW_CLASS_96_BITS: int

  GL_VIEW_CLASS_BPTC_FLOAT: int

  GL_VIEW_CLASS_BPTC_UNORM: int

  GL_VIEW_CLASS_RGTC1_RED: int

  GL_VIEW_CLASS_RGTC2_RG: int

  GL_VIEW_CLASS_S3TC_DXT1_RGB: int

  GL_VIEW_CLASS_S3TC_DXT1_RGBA: int

  GL_VIEW_CLASS_S3TC_DXT3_RGBA: int

  GL_VIEW_CLASS_S3TC_DXT5_RGBA: int

  GL_VIEW_COMPATIBILITY_CLASS: int

  @staticmethod
  def glBindVertexBuffer(arg0: int, arg1: int, arg2: int, arg3: int) -> None: ...

  @staticmethod
  @overload
  def glClearBufferData(arg0: int, arg1: int, arg2: int, arg3: int, arg4: list[float]) -> None: ...

  @staticmethod
  @overload
  def glClearBufferData(arg0: int, arg1: int, arg2: int, arg3: int, arg4: list[int]) -> None: ...

  @staticmethod
  @overload
  def glClearBufferData(arg0: int, arg1: int, arg2: int, arg3: int, arg4: list[int]) -> None: ...

  @staticmethod
  @overload
  def glClearBufferData(arg0: int, arg1: int, arg2: int, arg3: int, arg4: ByteBuffer) -> None: ...

  @staticmethod
  @overload
  def glClearBufferData(arg0: int, arg1: int, arg2: int, arg3: int, arg4: FloatBuffer) -> None: ...

  @staticmethod
  @overload
  def glClearBufferData(arg0: int, arg1: int, arg2: int, arg3: int, arg4: IntBuffer) -> None: ...

  @staticmethod
  @overload
  def glClearBufferData(arg0: int, arg1: int, arg2: int, arg3: int, arg4: ShortBuffer) -> None: ...

  @staticmethod
  @overload
  def glClearBufferSubData(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: list[float]) -> None: ...

  @staticmethod
  @overload
  def glClearBufferSubData(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: list[int]) -> None: ...

  @staticmethod
  @overload
  def glClearBufferSubData(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: list[int]) -> None: ...

  @staticmethod
  @overload
  def glClearBufferSubData(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: ByteBuffer) -> None: ...

  @staticmethod
  @overload
  def glClearBufferSubData(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: FloatBuffer) -> None: ...

  @staticmethod
  @overload
  def glClearBufferSubData(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: IntBuffer) -> None: ...

  @staticmethod
  @overload
  def glClearBufferSubData(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: ShortBuffer) -> None: ...

  @staticmethod
  def glCopyImageSubData(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int, arg7: int, arg8: int, arg9: int, arg10: int, arg11: int, arg12: int, arg13: int, arg14: int) -> None: ...

  @staticmethod
  def glDebugMessageCallback(arg0: GLDebugMessageCallbackI, arg1: int) -> None: ...

  @staticmethod
  @overload
  def glDebugMessageControl(arg0: int, arg1: int, arg2: int, arg3: list[int], arg4: bool) -> None: ...

  @staticmethod
  @overload
  def glDebugMessageControl(arg0: int, arg1: int, arg2: int, arg3: int, arg4: bool) -> None: ...

  @staticmethod
  @overload
  def glDebugMessageControl(arg0: int, arg1: int, arg2: int, arg3: IntBuffer, arg4: bool) -> None: ...

  @staticmethod
  @overload
  def glDebugMessageInsert(arg0: int, arg1: int, arg2: int, arg3: int, arg4: CharSequence) -> None: ...

  @staticmethod
  @overload
  def glDebugMessageInsert(arg0: int, arg1: int, arg2: int, arg3: int, arg4: ByteBuffer) -> None: ...

  @staticmethod
  def glDispatchCompute(arg0: int, arg1: int, arg2: int) -> None: ...

  @staticmethod
  def glDispatchComputeIndirect(arg0: int) -> None: ...

  @staticmethod
  def glFramebufferParameteri(arg0: int, arg1: int, arg2: int) -> None: ...

  @staticmethod
  @overload
  def glGetDebugMessageLog(arg0: int, arg1: list[int], arg2: list[int], arg3: list[int], arg4: list[int], arg5: list[int], arg6: ByteBuffer) -> int: ...

  @staticmethod
  @overload
  def glGetDebugMessageLog(arg0: int, arg1: IntBuffer, arg2: IntBuffer, arg3: IntBuffer, arg4: IntBuffer, arg5: IntBuffer, arg6: ByteBuffer) -> int: ...

  @staticmethod
  def glGetFramebufferParameteri(arg0: int, arg1: int) -> int: ...

  @staticmethod
  @overload
  def glGetFramebufferParameteriv(arg0: int, arg1: int, arg2: list[int]) -> None: ...

  @staticmethod
  @overload
  def glGetFramebufferParameteriv(arg0: int, arg1: int, arg2: IntBuffer) -> None: ...

  @staticmethod
  def glGetInternalformati64(arg0: int, arg1: int, arg2: int) -> int: ...

  @staticmethod
  @overload
  def glGetInternalformati64v(arg0: int, arg1: int, arg2: int, arg3: list[int]) -> None: ...

  @staticmethod
  @overload
  def glGetInternalformati64v(arg0: int, arg1: int, arg2: int, arg3: LongBuffer) -> None: ...

  @staticmethod
  @overload
  def glGetObjectLabel(arg0: int, arg1: int) -> str: ...

  @staticmethod
  @overload
  def glGetObjectLabel(arg0: int, arg1: int, arg2: int) -> str: ...

  @staticmethod
  @overload
  def glGetObjectLabel(arg0: int, arg1: int, arg2: list[int], arg3: ByteBuffer) -> None: ...

  @staticmethod
  @overload
  def glGetObjectLabel(arg0: int, arg1: int, arg2: IntBuffer, arg3: ByteBuffer) -> None: ...

  @staticmethod
  @overload
  def glGetObjectPtrLabel(arg0: int) -> str: ...

  @staticmethod
  @overload
  def glGetObjectPtrLabel(arg0: int, arg1: int) -> str: ...

  @staticmethod
  @overload
  def glGetObjectPtrLabel(arg0: int, arg1: list[int], arg2: ByteBuffer) -> None: ...

  @staticmethod
  @overload
  def glGetObjectPtrLabel(arg0: int, arg1: IntBuffer, arg2: ByteBuffer) -> None: ...

  @staticmethod
  def glGetProgramInterfacei(arg0: int, arg1: int, arg2: int) -> int: ...

  @staticmethod
  @overload
  def glGetProgramInterfaceiv(arg0: int, arg1: int, arg2: int, arg3: list[int]) -> None: ...

  @staticmethod
  @overload
  def glGetProgramInterfaceiv(arg0: int, arg1: int, arg2: int, arg3: IntBuffer) -> None: ...

  @staticmethod
  @overload
  def glGetProgramResourceIndex(arg0: int, arg1: int, arg2: CharSequence) -> int: ...

  @staticmethod
  @overload
  def glGetProgramResourceIndex(arg0: int, arg1: int, arg2: ByteBuffer) -> int: ...

  @staticmethod
  @overload
  def glGetProgramResourceLocation(arg0: int, arg1: int, arg2: CharSequence) -> int: ...

  @staticmethod
  @overload
  def glGetProgramResourceLocation(arg0: int, arg1: int, arg2: ByteBuffer) -> int: ...

  @staticmethod
  @overload
  def glGetProgramResourceLocationIndex(arg0: int, arg1: int, arg2: CharSequence) -> int: ...

  @staticmethod
  @overload
  def glGetProgramResourceLocationIndex(arg0: int, arg1: int, arg2: ByteBuffer) -> int: ...

  @staticmethod
  @overload
  def glGetProgramResourceName(arg0: int, arg1: int, arg2: int) -> str: ...

  @staticmethod
  @overload
  def glGetProgramResourceName(arg0: int, arg1: int, arg2: int, arg3: int) -> str: ...

  @staticmethod
  @overload
  def glGetProgramResourceName(arg0: int, arg1: int, arg2: int, arg3: list[int], arg4: ByteBuffer) -> None: ...

  @staticmethod
  @overload
  def glGetProgramResourceName(arg0: int, arg1: int, arg2: int, arg3: IntBuffer, arg4: ByteBuffer) -> None: ...

  @staticmethod
  @overload
  def glGetProgramResourceiv(arg0: int, arg1: int, arg2: int, arg3: list[int], arg4: list[int], arg5: list[int]) -> None: ...

  @staticmethod
  @overload
  def glGetProgramResourceiv(arg0: int, arg1: int, arg2: int, arg3: IntBuffer, arg4: IntBuffer, arg5: IntBuffer) -> None: ...

  @staticmethod
  def glInvalidateBufferData(arg0: int) -> None: ...

  @staticmethod
  def glInvalidateBufferSubData(arg0: int, arg1: int, arg2: int) -> None: ...

  @staticmethod
  @overload
  def glInvalidateFramebuffer(arg0: int, arg1: list[int]) -> None: ...

  @staticmethod
  @overload
  def glInvalidateFramebuffer(arg0: int, arg1: int) -> None: ...

  @staticmethod
  @overload
  def glInvalidateFramebuffer(arg0: int, arg1: IntBuffer) -> None: ...

  @staticmethod
  @overload
  def glInvalidateSubFramebuffer(arg0: int, arg1: list[int], arg2: int, arg3: int, arg4: int, arg5: int) -> None: ...

  @staticmethod
  @overload
  def glInvalidateSubFramebuffer(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int) -> None: ...

  @staticmethod
  @overload
  def glInvalidateSubFramebuffer(arg0: int, arg1: IntBuffer, arg2: int, arg3: int, arg4: int, arg5: int) -> None: ...

  @staticmethod
  def glInvalidateTexImage(arg0: int, arg1: int) -> None: ...

  @staticmethod
  def glInvalidateTexSubImage(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int, arg7: int) -> None: ...

  @staticmethod
  @overload
  def glMultiDrawArraysIndirect(arg0: int, arg1: list[int], arg2: int, arg3: int) -> None: ...

  @staticmethod
  @overload
  def glMultiDrawArraysIndirect(arg0: int, arg1: ByteBuffer, arg2: int, arg3: int) -> None: ...

  @staticmethod
  @overload
  def glMultiDrawArraysIndirect(arg0: int, arg1: IntBuffer, arg2: int, arg3: int) -> None: ...

  @staticmethod
  @overload
  def glMultiDrawArraysIndirect(arg0: int, arg1: int, arg2: int, arg3: int) -> None: ...

  @staticmethod
  @overload
  def glMultiDrawElementsIndirect(arg0: int, arg1: int, arg2: list[int], arg3: int, arg4: int) -> None: ...

  @staticmethod
  @overload
  def glMultiDrawElementsIndirect(arg0: int, arg1: int, arg2: ByteBuffer, arg3: int, arg4: int) -> None: ...

  @staticmethod
  @overload
  def glMultiDrawElementsIndirect(arg0: int, arg1: int, arg2: IntBuffer, arg3: int, arg4: int) -> None: ...

  @staticmethod
  @overload
  def glMultiDrawElementsIndirect(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int) -> None: ...

  @staticmethod
  @overload
  def glObjectLabel(arg0: int, arg1: int, arg2: CharSequence) -> None: ...

  @staticmethod
  @overload
  def glObjectLabel(arg0: int, arg1: int, arg2: ByteBuffer) -> None: ...

  @staticmethod
  @overload
  def glObjectPtrLabel(arg0: int, arg1: CharSequence) -> None: ...

  @staticmethod
  @overload
  def glObjectPtrLabel(arg0: int, arg1: ByteBuffer) -> None: ...

  @staticmethod
  def glPopDebugGroup() -> None: ...

  @staticmethod
  @overload
  def glPushDebugGroup(arg0: int, arg1: int, arg2: CharSequence) -> None: ...

  @staticmethod
  @overload
  def glPushDebugGroup(arg0: int, arg1: int, arg2: ByteBuffer) -> None: ...

  @staticmethod
  def glShaderStorageBlockBinding(arg0: int, arg1: int, arg2: int) -> None: ...

  @staticmethod
  def glTexBufferRange(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int) -> None: ...

  @staticmethod
  def glTexStorage2DMultisample(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: bool) -> None: ...

  @staticmethod
  def glTexStorage3DMultisample(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: bool) -> None: ...

  @staticmethod
  def glTextureView(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int, arg7: int) -> None: ...

  @staticmethod
  def glVertexAttribBinding(arg0: int, arg1: int) -> None: ...

  @staticmethod
  def glVertexAttribFormat(arg0: int, arg1: int, arg2: int, arg3: bool, arg4: int) -> None: ...

  @staticmethod
  def glVertexAttribIFormat(arg0: int, arg1: int, arg2: int, arg3: int) -> None: ...

  @staticmethod
  def glVertexAttribLFormat(arg0: int, arg1: int, arg2: int, arg3: int) -> None: ...

  @staticmethod
  def glVertexBindingDivisor(arg0: int, arg1: int) -> None: ...

  @staticmethod
  def nglClearBufferData(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int) -> None: ...

  @staticmethod
  def nglClearBufferSubData(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int) -> None: ...

  @staticmethod
  def nglDebugMessageCallback(arg0: int, arg1: int) -> None: ...

  @staticmethod
  def nglDebugMessageControl(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: bool) -> None: ...

  @staticmethod
  def nglDebugMessageInsert(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int) -> None: ...

  @staticmethod
  def nglGetDebugMessageLog(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int, arg7: int) -> int: ...

  @staticmethod
  def nglGetFramebufferParameteriv(arg0: int, arg1: int, arg2: int) -> None: ...

  @staticmethod
  def nglGetInternalformati64v(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int) -> None: ...

  @staticmethod
  def nglGetObjectLabel(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int) -> None: ...

  @staticmethod
  def nglGetObjectPtrLabel(arg0: int, arg1: int, arg2: int, arg3: int) -> None: ...

  @staticmethod
  def nglGetProgramInterfaceiv(arg0: int, arg1: int, arg2: int, arg3: int) -> None: ...

  @staticmethod
  def nglGetProgramResourceIndex(arg0: int, arg1: int, arg2: int) -> int: ...

  @staticmethod
  def nglGetProgramResourceLocation(arg0: int, arg1: int, arg2: int) -> int: ...

  @staticmethod
  def nglGetProgramResourceLocationIndex(arg0: int, arg1: int, arg2: int) -> int: ...

  @staticmethod
  def nglGetProgramResourceName(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int) -> None: ...

  @staticmethod
  def nglGetProgramResourceiv(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int, arg7: int) -> None: ...

  @staticmethod
  def nglInvalidateFramebuffer(arg0: int, arg1: int, arg2: int) -> None: ...

  @staticmethod
  def nglInvalidateSubFramebuffer(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int) -> None: ...

  @staticmethod
  def nglMultiDrawArraysIndirect(arg0: int, arg1: int, arg2: int, arg3: int) -> None: ...

  @staticmethod
  def nglMultiDrawElementsIndirect(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int) -> None: ...

  @staticmethod
  def nglObjectLabel(arg0: int, arg1: int, arg2: int, arg3: int) -> None: ...

  @staticmethod
  def nglObjectPtrLabel(arg0: int, arg1: int, arg2: int) -> None: ...

  @staticmethod
  def nglPushDebugGroup(arg0: int, arg1: int, arg2: int, arg3: int) -> None: ...


class GL44(GL43):

  GL_BUFFER_IMMUTABLE_STORAGE: int

  GL_BUFFER_STORAGE_FLAGS: int

  GL_CLEAR_TEXTURE: int

  GL_CLIENT_MAPPED_BUFFER_BARRIER_BIT: int

  GL_CLIENT_STORAGE_BIT: int

  GL_DYNAMIC_STORAGE_BIT: int

  GL_LOCATION_COMPONENT: int

  GL_MAP_COHERENT_BIT: int

  GL_MAP_PERSISTENT_BIT: int

  GL_MAX_VERTEX_ATTRIB_STRIDE: int

  GL_MIRROR_CLAMP_TO_EDGE: int

  GL_PRIMITIVE_RESTART_FOR_PATCHES_SUPPORTED: int

  GL_QUERY_BUFFER: int

  GL_QUERY_BUFFER_BARRIER_BIT: int

  GL_QUERY_BUFFER_BINDING: int

  GL_QUERY_RESULT_NO_WAIT: int

  GL_TEXTURE_BUFFER_BINDING: int

  GL_TRANSFORM_FEEDBACK_BUFFER_INDEX: int

  GL_TRANSFORM_FEEDBACK_BUFFER_STRIDE: int

  @staticmethod
  @overload
  def glBindBuffersBase(arg0: int, arg1: int, arg2: list[int]) -> None: ...

  @staticmethod
  @overload
  def glBindBuffersBase(arg0: int, arg1: int, arg2: IntBuffer) -> None: ...

  @staticmethod
  @overload
  def glBindBuffersRange(arg0: int, arg1: int, arg2: list[int], arg3: PointerBuffer, arg4: PointerBuffer) -> None: ...

  @staticmethod
  @overload
  def glBindBuffersRange(arg0: int, arg1: int, arg2: IntBuffer, arg3: PointerBuffer, arg4: PointerBuffer) -> None: ...

  @staticmethod
  @overload
  def glBindImageTextures(arg0: int, arg1: list[int]) -> None: ...

  @staticmethod
  @overload
  def glBindImageTextures(arg0: int, arg1: IntBuffer) -> None: ...

  @staticmethod
  @overload
  def glBindSamplers(arg0: int, arg1: list[int]) -> None: ...

  @staticmethod
  @overload
  def glBindSamplers(arg0: int, arg1: IntBuffer) -> None: ...

  @staticmethod
  @overload
  def glBindTextures(arg0: int, arg1: list[int]) -> None: ...

  @staticmethod
  @overload
  def glBindTextures(arg0: int, arg1: IntBuffer) -> None: ...

  @staticmethod
  @overload
  def glBindVertexBuffers(arg0: int, arg1: list[int], arg2: PointerBuffer, arg3: list[int]) -> None: ...

  @staticmethod
  @overload
  def glBindVertexBuffers(arg0: int, arg1: IntBuffer, arg2: PointerBuffer, arg3: IntBuffer) -> None: ...

  @staticmethod
  @overload
  def glBufferStorage(arg0: int, arg1: list[float], arg2: int) -> None: ...

  @staticmethod
  @overload
  def glBufferStorage(arg0: int, arg1: list[float], arg2: int) -> None: ...

  @staticmethod
  @overload
  def glBufferStorage(arg0: int, arg1: list[int], arg2: int) -> None: ...

  @staticmethod
  @overload
  def glBufferStorage(arg0: int, arg1: list[int], arg2: int) -> None: ...

  @staticmethod
  @overload
  def glBufferStorage(arg0: int, arg1: ByteBuffer, arg2: int) -> None: ...

  @staticmethod
  @overload
  def glBufferStorage(arg0: int, arg1: DoubleBuffer, arg2: int) -> None: ...

  @staticmethod
  @overload
  def glBufferStorage(arg0: int, arg1: FloatBuffer, arg2: int) -> None: ...

  @staticmethod
  @overload
  def glBufferStorage(arg0: int, arg1: IntBuffer, arg2: int) -> None: ...

  @staticmethod
  @overload
  def glBufferStorage(arg0: int, arg1: ShortBuffer, arg2: int) -> None: ...

  @staticmethod
  @overload
  def glBufferStorage(arg0: int, arg1: int, arg2: int) -> None: ...

  @staticmethod
  @overload
  def glClearTexImage(arg0: int, arg1: int, arg2: int, arg3: int, arg4: list[float]) -> None: ...

  @staticmethod
  @overload
  def glClearTexImage(arg0: int, arg1: int, arg2: int, arg3: int, arg4: list[float]) -> None: ...

  @staticmethod
  @overload
  def glClearTexImage(arg0: int, arg1: int, arg2: int, arg3: int, arg4: list[int]) -> None: ...

  @staticmethod
  @overload
  def glClearTexImage(arg0: int, arg1: int, arg2: int, arg3: int, arg4: list[int]) -> None: ...

  @staticmethod
  @overload
  def glClearTexImage(arg0: int, arg1: int, arg2: int, arg3: int, arg4: ByteBuffer) -> None: ...

  @staticmethod
  @overload
  def glClearTexImage(arg0: int, arg1: int, arg2: int, arg3: int, arg4: DoubleBuffer) -> None: ...

  @staticmethod
  @overload
  def glClearTexImage(arg0: int, arg1: int, arg2: int, arg3: int, arg4: FloatBuffer) -> None: ...

  @staticmethod
  @overload
  def glClearTexImage(arg0: int, arg1: int, arg2: int, arg3: int, arg4: IntBuffer) -> None: ...

  @staticmethod
  @overload
  def glClearTexImage(arg0: int, arg1: int, arg2: int, arg3: int, arg4: ShortBuffer) -> None: ...

  @staticmethod
  @overload
  def glClearTexSubImage(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int, arg7: int, arg8: int, arg9: int, arg10: list[float]) -> None: ...

  @staticmethod
  @overload
  def glClearTexSubImage(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int, arg7: int, arg8: int, arg9: int, arg10: list[float]) -> None: ...

  @staticmethod
  @overload
  def glClearTexSubImage(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int, arg7: int, arg8: int, arg9: int, arg10: list[int]) -> None: ...

  @staticmethod
  @overload
  def glClearTexSubImage(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int, arg7: int, arg8: int, arg9: int, arg10: list[int]) -> None: ...

  @staticmethod
  @overload
  def glClearTexSubImage(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int, arg7: int, arg8: int, arg9: int, arg10: ByteBuffer) -> None: ...

  @staticmethod
  @overload
  def glClearTexSubImage(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int, arg7: int, arg8: int, arg9: int, arg10: DoubleBuffer) -> None: ...

  @staticmethod
  @overload
  def glClearTexSubImage(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int, arg7: int, arg8: int, arg9: int, arg10: FloatBuffer) -> None: ...

  @staticmethod
  @overload
  def glClearTexSubImage(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int, arg7: int, arg8: int, arg9: int, arg10: IntBuffer) -> None: ...

  @staticmethod
  @overload
  def glClearTexSubImage(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int, arg7: int, arg8: int, arg9: int, arg10: ShortBuffer) -> None: ...

  @staticmethod
  def nglBindBuffersBase(arg0: int, arg1: int, arg2: int, arg3: int) -> None: ...

  @staticmethod
  def nglBindBuffersRange(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int) -> None: ...

  @staticmethod
  def nglBindImageTextures(arg0: int, arg1: int, arg2: int) -> None: ...

  @staticmethod
  def nglBindSamplers(arg0: int, arg1: int, arg2: int) -> None: ...

  @staticmethod
  def nglBindTextures(arg0: int, arg1: int, arg2: int) -> None: ...

  @staticmethod
  def nglBindVertexBuffers(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int) -> None: ...

  @staticmethod
  def nglBufferStorage(arg0: int, arg1: int, arg2: int, arg3: int) -> None: ...

  @staticmethod
  def nglClearTexImage(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int) -> None: ...

  @staticmethod
  def nglClearTexSubImage(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int, arg7: int, arg8: int, arg9: int, arg10: int) -> None: ...


class GL44C(GL43C):

  GL_BUFFER_IMMUTABLE_STORAGE: int

  GL_BUFFER_STORAGE_FLAGS: int

  GL_CLEAR_TEXTURE: int

  GL_CLIENT_MAPPED_BUFFER_BARRIER_BIT: int

  GL_CLIENT_STORAGE_BIT: int

  GL_DYNAMIC_STORAGE_BIT: int

  GL_LOCATION_COMPONENT: int

  GL_MAP_COHERENT_BIT: int

  GL_MAP_PERSISTENT_BIT: int

  GL_MAX_VERTEX_ATTRIB_STRIDE: int

  GL_MIRROR_CLAMP_TO_EDGE: int

  GL_PRIMITIVE_RESTART_FOR_PATCHES_SUPPORTED: int

  GL_QUERY_BUFFER: int

  GL_QUERY_BUFFER_BARRIER_BIT: int

  GL_QUERY_BUFFER_BINDING: int

  GL_QUERY_RESULT_NO_WAIT: int

  GL_TEXTURE_BUFFER_BINDING: int

  GL_TRANSFORM_FEEDBACK_BUFFER_INDEX: int

  GL_TRANSFORM_FEEDBACK_BUFFER_STRIDE: int

  @staticmethod
  @overload
  def glBindBuffersBase(arg0: int, arg1: int, arg2: list[int]) -> None: ...

  @staticmethod
  @overload
  def glBindBuffersBase(arg0: int, arg1: int, arg2: IntBuffer) -> None: ...

  @staticmethod
  @overload
  def glBindBuffersRange(arg0: int, arg1: int, arg2: list[int], arg3: PointerBuffer, arg4: PointerBuffer) -> None: ...

  @staticmethod
  @overload
  def glBindBuffersRange(arg0: int, arg1: int, arg2: IntBuffer, arg3: PointerBuffer, arg4: PointerBuffer) -> None: ...

  @staticmethod
  @overload
  def glBindImageTextures(arg0: int, arg1: list[int]) -> None: ...

  @staticmethod
  @overload
  def glBindImageTextures(arg0: int, arg1: IntBuffer) -> None: ...

  @staticmethod
  @overload
  def glBindSamplers(arg0: int, arg1: list[int]) -> None: ...

  @staticmethod
  @overload
  def glBindSamplers(arg0: int, arg1: IntBuffer) -> None: ...

  @staticmethod
  @overload
  def glBindTextures(arg0: int, arg1: list[int]) -> None: ...

  @staticmethod
  @overload
  def glBindTextures(arg0: int, arg1: IntBuffer) -> None: ...

  @staticmethod
  @overload
  def glBindVertexBuffers(arg0: int, arg1: list[int], arg2: PointerBuffer, arg3: list[int]) -> None: ...

  @staticmethod
  @overload
  def glBindVertexBuffers(arg0: int, arg1: IntBuffer, arg2: PointerBuffer, arg3: IntBuffer) -> None: ...

  @staticmethod
  @overload
  def glBufferStorage(arg0: int, arg1: list[float], arg2: int) -> None: ...

  @staticmethod
  @overload
  def glBufferStorage(arg0: int, arg1: list[float], arg2: int) -> None: ...

  @staticmethod
  @overload
  def glBufferStorage(arg0: int, arg1: list[int], arg2: int) -> None: ...

  @staticmethod
  @overload
  def glBufferStorage(arg0: int, arg1: list[int], arg2: int) -> None: ...

  @staticmethod
  @overload
  def glBufferStorage(arg0: int, arg1: ByteBuffer, arg2: int) -> None: ...

  @staticmethod
  @overload
  def glBufferStorage(arg0: int, arg1: DoubleBuffer, arg2: int) -> None: ...

  @staticmethod
  @overload
  def glBufferStorage(arg0: int, arg1: FloatBuffer, arg2: int) -> None: ...

  @staticmethod
  @overload
  def glBufferStorage(arg0: int, arg1: IntBuffer, arg2: int) -> None: ...

  @staticmethod
  @overload
  def glBufferStorage(arg0: int, arg1: ShortBuffer, arg2: int) -> None: ...

  @staticmethod
  @overload
  def glBufferStorage(arg0: int, arg1: int, arg2: int) -> None: ...

  @staticmethod
  @overload
  def glClearTexImage(arg0: int, arg1: int, arg2: int, arg3: int, arg4: list[float]) -> None: ...

  @staticmethod
  @overload
  def glClearTexImage(arg0: int, arg1: int, arg2: int, arg3: int, arg4: list[float]) -> None: ...

  @staticmethod
  @overload
  def glClearTexImage(arg0: int, arg1: int, arg2: int, arg3: int, arg4: list[int]) -> None: ...

  @staticmethod
  @overload
  def glClearTexImage(arg0: int, arg1: int, arg2: int, arg3: int, arg4: list[int]) -> None: ...

  @staticmethod
  @overload
  def glClearTexImage(arg0: int, arg1: int, arg2: int, arg3: int, arg4: ByteBuffer) -> None: ...

  @staticmethod
  @overload
  def glClearTexImage(arg0: int, arg1: int, arg2: int, arg3: int, arg4: DoubleBuffer) -> None: ...

  @staticmethod
  @overload
  def glClearTexImage(arg0: int, arg1: int, arg2: int, arg3: int, arg4: FloatBuffer) -> None: ...

  @staticmethod
  @overload
  def glClearTexImage(arg0: int, arg1: int, arg2: int, arg3: int, arg4: IntBuffer) -> None: ...

  @staticmethod
  @overload
  def glClearTexImage(arg0: int, arg1: int, arg2: int, arg3: int, arg4: ShortBuffer) -> None: ...

  @staticmethod
  @overload
  def glClearTexSubImage(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int, arg7: int, arg8: int, arg9: int, arg10: list[float]) -> None: ...

  @staticmethod
  @overload
  def glClearTexSubImage(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int, arg7: int, arg8: int, arg9: int, arg10: list[float]) -> None: ...

  @staticmethod
  @overload
  def glClearTexSubImage(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int, arg7: int, arg8: int, arg9: int, arg10: list[int]) -> None: ...

  @staticmethod
  @overload
  def glClearTexSubImage(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int, arg7: int, arg8: int, arg9: int, arg10: list[int]) -> None: ...

  @staticmethod
  @overload
  def glClearTexSubImage(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int, arg7: int, arg8: int, arg9: int, arg10: ByteBuffer) -> None: ...

  @staticmethod
  @overload
  def glClearTexSubImage(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int, arg7: int, arg8: int, arg9: int, arg10: DoubleBuffer) -> None: ...

  @staticmethod
  @overload
  def glClearTexSubImage(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int, arg7: int, arg8: int, arg9: int, arg10: FloatBuffer) -> None: ...

  @staticmethod
  @overload
  def glClearTexSubImage(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int, arg7: int, arg8: int, arg9: int, arg10: IntBuffer) -> None: ...

  @staticmethod
  @overload
  def glClearTexSubImage(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int, arg7: int, arg8: int, arg9: int, arg10: ShortBuffer) -> None: ...

  @staticmethod
  def nglBindBuffersBase(arg0: int, arg1: int, arg2: int, arg3: int) -> None: ...

  @staticmethod
  def nglBindBuffersRange(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int) -> None: ...

  @staticmethod
  def nglBindImageTextures(arg0: int, arg1: int, arg2: int) -> None: ...

  @staticmethod
  def nglBindSamplers(arg0: int, arg1: int, arg2: int) -> None: ...

  @staticmethod
  def nglBindTextures(arg0: int, arg1: int, arg2: int) -> None: ...

  @staticmethod
  def nglBindVertexBuffers(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int) -> None: ...

  @staticmethod
  def nglBufferStorage(arg0: int, arg1: int, arg2: int, arg3: int) -> None: ...

  @staticmethod
  def nglClearTexImage(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int) -> None: ...

  @staticmethod
  def nglClearTexSubImage(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int, arg7: int, arg8: int, arg9: int, arg10: int) -> None: ...


class GL45(GL44):

  GL_CLIP_DEPTH_MODE: int

  GL_CLIP_ORIGIN: int

  GL_CONTEXT_FLAG_ROBUST_ACCESS_BIT: int

  GL_CONTEXT_LOST: int

  GL_CONTEXT_RELEASE_BEHAVIOR: int

  GL_CONTEXT_RELEASE_BEHAVIOR_FLUSH: int

  GL_GUILTY_CONTEXT_RESET: int

  GL_INNOCENT_CONTEXT_RESET: int

  GL_LOSE_CONTEXT_ON_RESET: int

  GL_MAX_COMBINED_CLIP_AND_CULL_DISTANCES: int

  GL_MAX_CULL_DISTANCES: int

  GL_NEGATIVE_ONE_TO_ONE: int

  GL_NO_RESET_NOTIFICATION: int

  GL_QUERY_BY_REGION_NO_WAIT_INVERTED: int

  GL_QUERY_BY_REGION_WAIT_INVERTED: int

  GL_QUERY_NO_WAIT_INVERTED: int

  GL_QUERY_TARGET: int

  GL_QUERY_WAIT_INVERTED: int

  GL_RESET_NOTIFICATION_STRATEGY: int

  GL_TEXTURE_TARGET: int

  GL_UNKNOWN_CONTEXT_RESET: int

  GL_ZERO_TO_ONE: int

  @staticmethod
  def glBindTextureUnit(arg0: int, arg1: int) -> None: ...

  @staticmethod
  def glBlitNamedFramebuffer(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int, arg7: int, arg8: int, arg9: int, arg10: int, arg11: int) -> None: ...

  @staticmethod
  def glCheckNamedFramebufferStatus(arg0: int, arg1: int) -> int: ...

  @staticmethod
  @overload
  def glClearNamedBufferData(arg0: int, arg1: int, arg2: int, arg3: int, arg4: list[float]) -> None: ...

  @staticmethod
  @overload
  def glClearNamedBufferData(arg0: int, arg1: int, arg2: int, arg3: int, arg4: list[int]) -> None: ...

  @staticmethod
  @overload
  def glClearNamedBufferData(arg0: int, arg1: int, arg2: int, arg3: int, arg4: list[int]) -> None: ...

  @staticmethod
  @overload
  def glClearNamedBufferData(arg0: int, arg1: int, arg2: int, arg3: int, arg4: ByteBuffer) -> None: ...

  @staticmethod
  @overload
  def glClearNamedBufferData(arg0: int, arg1: int, arg2: int, arg3: int, arg4: FloatBuffer) -> None: ...

  @staticmethod
  @overload
  def glClearNamedBufferData(arg0: int, arg1: int, arg2: int, arg3: int, arg4: IntBuffer) -> None: ...

  @staticmethod
  @overload
  def glClearNamedBufferData(arg0: int, arg1: int, arg2: int, arg3: int, arg4: ShortBuffer) -> None: ...

  @staticmethod
  @overload
  def glClearNamedBufferSubData(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: list[float]) -> None: ...

  @staticmethod
  @overload
  def glClearNamedBufferSubData(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: list[int]) -> None: ...

  @staticmethod
  @overload
  def glClearNamedBufferSubData(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: list[int]) -> None: ...

  @staticmethod
  @overload
  def glClearNamedBufferSubData(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: ByteBuffer) -> None: ...

  @staticmethod
  @overload
  def glClearNamedBufferSubData(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: FloatBuffer) -> None: ...

  @staticmethod
  @overload
  def glClearNamedBufferSubData(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: IntBuffer) -> None: ...

  @staticmethod
  @overload
  def glClearNamedBufferSubData(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: ShortBuffer) -> None: ...

  @staticmethod
  def glClearNamedFramebufferfi(arg0: int, arg1: int, arg2: int, arg3: float, arg4: int) -> None: ...

  @staticmethod
  @overload
  def glClearNamedFramebufferfv(arg0: int, arg1: int, arg2: int, arg3: list[float]) -> None: ...

  @staticmethod
  @overload
  def glClearNamedFramebufferfv(arg0: int, arg1: int, arg2: int, arg3: FloatBuffer) -> None: ...

  @staticmethod
  @overload
  def glClearNamedFramebufferiv(arg0: int, arg1: int, arg2: int, arg3: list[int]) -> None: ...

  @staticmethod
  @overload
  def glClearNamedFramebufferiv(arg0: int, arg1: int, arg2: int, arg3: IntBuffer) -> None: ...

  @staticmethod
  @overload
  def glClearNamedFramebufferuiv(arg0: int, arg1: int, arg2: int, arg3: list[int]) -> None: ...

  @staticmethod
  @overload
  def glClearNamedFramebufferuiv(arg0: int, arg1: int, arg2: int, arg3: IntBuffer) -> None: ...

  @staticmethod
  def glClipControl(arg0: int, arg1: int) -> None: ...

  @staticmethod
  @overload
  def glCompressedTextureSubImage1D(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: ByteBuffer) -> None: ...

  @staticmethod
  @overload
  def glCompressedTextureSubImage1D(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int) -> None: ...

  @staticmethod
  @overload
  def glCompressedTextureSubImage2D(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int, arg7: ByteBuffer) -> None: ...

  @staticmethod
  @overload
  def glCompressedTextureSubImage2D(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int, arg7: int, arg8: int) -> None: ...

  @staticmethod
  @overload
  def glCompressedTextureSubImage3D(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int, arg7: int, arg8: int, arg9: ByteBuffer) -> None: ...

  @staticmethod
  @overload
  def glCompressedTextureSubImage3D(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int, arg7: int, arg8: int, arg9: int, arg10: int) -> None: ...

  @staticmethod
  def glCopyNamedBufferSubData(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int) -> None: ...

  @staticmethod
  def glCopyTextureSubImage1D(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int) -> None: ...

  @staticmethod
  def glCopyTextureSubImage2D(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int, arg7: int) -> None: ...

  @staticmethod
  def glCopyTextureSubImage3D(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int, arg7: int, arg8: int) -> None: ...

  @staticmethod
  @overload
  def glCreateBuffers() -> int: ...

  @staticmethod
  @overload
  def glCreateBuffers(arg0: list[int]) -> None: ...

  @staticmethod
  @overload
  def glCreateBuffers(arg0: IntBuffer) -> None: ...

  @staticmethod
  @overload
  def glCreateFramebuffers() -> int: ...

  @staticmethod
  @overload
  def glCreateFramebuffers(arg0: list[int]) -> None: ...

  @staticmethod
  @overload
  def glCreateFramebuffers(arg0: IntBuffer) -> None: ...

  @staticmethod
  @overload
  def glCreateProgramPipelines() -> int: ...

  @staticmethod
  @overload
  def glCreateProgramPipelines(arg0: list[int]) -> None: ...

  @staticmethod
  @overload
  def glCreateProgramPipelines(arg0: IntBuffer) -> None: ...

  @staticmethod
  @overload
  def glCreateQueries(arg0: int) -> int: ...

  @staticmethod
  @overload
  def glCreateQueries(arg0: int, arg1: list[int]) -> None: ...

  @staticmethod
  @overload
  def glCreateQueries(arg0: int, arg1: IntBuffer) -> None: ...

  @staticmethod
  @overload
  def glCreateRenderbuffers() -> int: ...

  @staticmethod
  @overload
  def glCreateRenderbuffers(arg0: list[int]) -> None: ...

  @staticmethod
  @overload
  def glCreateRenderbuffers(arg0: IntBuffer) -> None: ...

  @staticmethod
  @overload
  def glCreateSamplers() -> int: ...

  @staticmethod
  @overload
  def glCreateSamplers(arg0: list[int]) -> None: ...

  @staticmethod
  @overload
  def glCreateSamplers(arg0: IntBuffer) -> None: ...

  @staticmethod
  @overload
  def glCreateTextures(arg0: int) -> int: ...

  @staticmethod
  @overload
  def glCreateTextures(arg0: int, arg1: list[int]) -> None: ...

  @staticmethod
  @overload
  def glCreateTextures(arg0: int, arg1: IntBuffer) -> None: ...

  @staticmethod
  @overload
  def glCreateTransformFeedbacks() -> int: ...

  @staticmethod
  @overload
  def glCreateTransformFeedbacks(arg0: list[int]) -> None: ...

  @staticmethod
  @overload
  def glCreateTransformFeedbacks(arg0: IntBuffer) -> None: ...

  @staticmethod
  @overload
  def glCreateVertexArrays() -> int: ...

  @staticmethod
  @overload
  def glCreateVertexArrays(arg0: list[int]) -> None: ...

  @staticmethod
  @overload
  def glCreateVertexArrays(arg0: IntBuffer) -> None: ...

  @staticmethod
  def glDisableVertexArrayAttrib(arg0: int, arg1: int) -> None: ...

  @staticmethod
  def glEnableVertexArrayAttrib(arg0: int, arg1: int) -> None: ...

  @staticmethod
  def glFlushMappedNamedBufferRange(arg0: int, arg1: int, arg2: int) -> None: ...

  @staticmethod
  def glGenerateTextureMipmap(arg0: int) -> None: ...

  @staticmethod
  @overload
  def glGetCompressedTextureImage(arg0: int, arg1: int, arg2: ByteBuffer) -> None: ...

  @staticmethod
  @overload
  def glGetCompressedTextureImage(arg0: int, arg1: int, arg2: int, arg3: int) -> None: ...

  @staticmethod
  @overload
  def glGetCompressedTextureSubImage(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int, arg7: int, arg8: list[float]) -> None: ...

  @staticmethod
  @overload
  def glGetCompressedTextureSubImage(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int, arg7: int, arg8: list[float]) -> None: ...

  @staticmethod
  @overload
  def glGetCompressedTextureSubImage(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int, arg7: int, arg8: list[int]) -> None: ...

  @staticmethod
  @overload
  def glGetCompressedTextureSubImage(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int, arg7: int, arg8: list[int]) -> None: ...

  @staticmethod
  @overload
  def glGetCompressedTextureSubImage(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int, arg7: int, arg8: ByteBuffer) -> None: ...

  @staticmethod
  @overload
  def glGetCompressedTextureSubImage(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int, arg7: int, arg8: DoubleBuffer) -> None: ...

  @staticmethod
  @overload
  def glGetCompressedTextureSubImage(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int, arg7: int, arg8: FloatBuffer) -> None: ...

  @staticmethod
  @overload
  def glGetCompressedTextureSubImage(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int, arg7: int, arg8: IntBuffer) -> None: ...

  @staticmethod
  @overload
  def glGetCompressedTextureSubImage(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int, arg7: int, arg8: ShortBuffer) -> None: ...

  @staticmethod
  @overload
  def glGetCompressedTextureSubImage(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int, arg7: int, arg8: int, arg9: int) -> None: ...

  @staticmethod
  def glGetGraphicsResetStatus() -> int: ...

  @staticmethod
  def glGetNamedBufferParameteri(arg0: int, arg1: int) -> int: ...

  @staticmethod
  def glGetNamedBufferParameteri64(arg0: int, arg1: int) -> int: ...

  @staticmethod
  @overload
  def glGetNamedBufferParameteri64v(arg0: int, arg1: int, arg2: list[int]) -> None: ...

  @staticmethod
  @overload
  def glGetNamedBufferParameteri64v(arg0: int, arg1: int, arg2: LongBuffer) -> None: ...

  @staticmethod
  @overload
  def glGetNamedBufferParameteriv(arg0: int, arg1: int, arg2: list[int]) -> None: ...

  @staticmethod
  @overload
  def glGetNamedBufferParameteriv(arg0: int, arg1: int, arg2: IntBuffer) -> None: ...

  @staticmethod
  def glGetNamedBufferPointer(arg0: int, arg1: int) -> int: ...

  @staticmethod
  def glGetNamedBufferPointerv(arg0: int, arg1: int, arg2: PointerBuffer) -> None: ...

  @staticmethod
  @overload
  def glGetNamedBufferSubData(arg0: int, arg1: int, arg2: list[float]) -> None: ...

  @staticmethod
  @overload
  def glGetNamedBufferSubData(arg0: int, arg1: int, arg2: list[float]) -> None: ...

  @staticmethod
  @overload
  def glGetNamedBufferSubData(arg0: int, arg1: int, arg2: list[int]) -> None: ...

  @staticmethod
  @overload
  def glGetNamedBufferSubData(arg0: int, arg1: int, arg2: list[int]) -> None: ...

  @staticmethod
  @overload
  def glGetNamedBufferSubData(arg0: int, arg1: int, arg2: list[int]) -> None: ...

  @staticmethod
  @overload
  def glGetNamedBufferSubData(arg0: int, arg1: int, arg2: ByteBuffer) -> None: ...

  @staticmethod
  @overload
  def glGetNamedBufferSubData(arg0: int, arg1: int, arg2: DoubleBuffer) -> None: ...

  @staticmethod
  @overload
  def glGetNamedBufferSubData(arg0: int, arg1: int, arg2: FloatBuffer) -> None: ...

  @staticmethod
  @overload
  def glGetNamedBufferSubData(arg0: int, arg1: int, arg2: IntBuffer) -> None: ...

  @staticmethod
  @overload
  def glGetNamedBufferSubData(arg0: int, arg1: int, arg2: LongBuffer) -> None: ...

  @staticmethod
  @overload
  def glGetNamedBufferSubData(arg0: int, arg1: int, arg2: ShortBuffer) -> None: ...

  @staticmethod
  def glGetNamedFramebufferAttachmentParameteri(arg0: int, arg1: int, arg2: int) -> int: ...

  @staticmethod
  @overload
  def glGetNamedFramebufferAttachmentParameteriv(arg0: int, arg1: int, arg2: int, arg3: list[int]) -> None: ...

  @staticmethod
  @overload
  def glGetNamedFramebufferAttachmentParameteriv(arg0: int, arg1: int, arg2: int, arg3: IntBuffer) -> None: ...

  @staticmethod
  def glGetNamedFramebufferParameteri(arg0: int, arg1: int) -> int: ...

  @staticmethod
  @overload
  def glGetNamedFramebufferParameteriv(arg0: int, arg1: int, arg2: list[int]) -> None: ...

  @staticmethod
  @overload
  def glGetNamedFramebufferParameteriv(arg0: int, arg1: int, arg2: IntBuffer) -> None: ...

  @staticmethod
  def glGetNamedRenderbufferParameteri(arg0: int, arg1: int) -> int: ...

  @staticmethod
  @overload
  def glGetNamedRenderbufferParameteriv(arg0: int, arg1: int, arg2: list[int]) -> None: ...

  @staticmethod
  @overload
  def glGetNamedRenderbufferParameteriv(arg0: int, arg1: int, arg2: IntBuffer) -> None: ...

  @staticmethod
  def glGetQueryBufferObjecti64v(arg0: int, arg1: int, arg2: int, arg3: int) -> None: ...

  @staticmethod
  def glGetQueryBufferObjectiv(arg0: int, arg1: int, arg2: int, arg3: int) -> None: ...

  @staticmethod
  def glGetQueryBufferObjectui64v(arg0: int, arg1: int, arg2: int, arg3: int) -> None: ...

  @staticmethod
  def glGetQueryBufferObjectuiv(arg0: int, arg1: int, arg2: int, arg3: int) -> None: ...

  @staticmethod
  @overload
  def glGetTextureImage(arg0: int, arg1: int, arg2: int, arg3: int, arg4: list[float]) -> None: ...

  @staticmethod
  @overload
  def glGetTextureImage(arg0: int, arg1: int, arg2: int, arg3: int, arg4: list[float]) -> None: ...

  @staticmethod
  @overload
  def glGetTextureImage(arg0: int, arg1: int, arg2: int, arg3: int, arg4: list[int]) -> None: ...

  @staticmethod
  @overload
  def glGetTextureImage(arg0: int, arg1: int, arg2: int, arg3: int, arg4: list[int]) -> None: ...

  @staticmethod
  @overload
  def glGetTextureImage(arg0: int, arg1: int, arg2: int, arg3: int, arg4: ByteBuffer) -> None: ...

  @staticmethod
  @overload
  def glGetTextureImage(arg0: int, arg1: int, arg2: int, arg3: int, arg4: DoubleBuffer) -> None: ...

  @staticmethod
  @overload
  def glGetTextureImage(arg0: int, arg1: int, arg2: int, arg3: int, arg4: FloatBuffer) -> None: ...

  @staticmethod
  @overload
  def glGetTextureImage(arg0: int, arg1: int, arg2: int, arg3: int, arg4: IntBuffer) -> None: ...

  @staticmethod
  @overload
  def glGetTextureImage(arg0: int, arg1: int, arg2: int, arg3: int, arg4: ShortBuffer) -> None: ...

  @staticmethod
  @overload
  def glGetTextureImage(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int) -> None: ...

  @staticmethod
  def glGetTextureLevelParameterf(arg0: int, arg1: int, arg2: int) -> float: ...

  @staticmethod
  @overload
  def glGetTextureLevelParameterfv(arg0: int, arg1: int, arg2: int, arg3: list[float]) -> None: ...

  @staticmethod
  @overload
  def glGetTextureLevelParameterfv(arg0: int, arg1: int, arg2: int, arg3: FloatBuffer) -> None: ...

  @staticmethod
  def glGetTextureLevelParameteri(arg0: int, arg1: int, arg2: int) -> int: ...

  @staticmethod
  @overload
  def glGetTextureLevelParameteriv(arg0: int, arg1: int, arg2: int, arg3: list[int]) -> None: ...

  @staticmethod
  @overload
  def glGetTextureLevelParameteriv(arg0: int, arg1: int, arg2: int, arg3: IntBuffer) -> None: ...

  @staticmethod
  def glGetTextureParameterIi(arg0: int, arg1: int) -> int: ...

  @staticmethod
  @overload
  def glGetTextureParameterIiv(arg0: int, arg1: int, arg2: list[int]) -> None: ...

  @staticmethod
  @overload
  def glGetTextureParameterIiv(arg0: int, arg1: int, arg2: IntBuffer) -> None: ...

  @staticmethod
  def glGetTextureParameterIui(arg0: int, arg1: int) -> int: ...

  @staticmethod
  @overload
  def glGetTextureParameterIuiv(arg0: int, arg1: int, arg2: list[int]) -> None: ...

  @staticmethod
  @overload
  def glGetTextureParameterIuiv(arg0: int, arg1: int, arg2: IntBuffer) -> None: ...

  @staticmethod
  def glGetTextureParameterf(arg0: int, arg1: int) -> float: ...

  @staticmethod
  @overload
  def glGetTextureParameterfv(arg0: int, arg1: int, arg2: list[float]) -> None: ...

  @staticmethod
  @overload
  def glGetTextureParameterfv(arg0: int, arg1: int, arg2: FloatBuffer) -> None: ...

  @staticmethod
  def glGetTextureParameteri(arg0: int, arg1: int) -> int: ...

  @staticmethod
  @overload
  def glGetTextureParameteriv(arg0: int, arg1: int, arg2: list[int]) -> None: ...

  @staticmethod
  @overload
  def glGetTextureParameteriv(arg0: int, arg1: int, arg2: IntBuffer) -> None: ...

  @staticmethod
  @overload
  def glGetTextureSubImage(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int, arg7: int, arg8: int, arg9: int, arg10: list[float]) -> None: ...

  @staticmethod
  @overload
  def glGetTextureSubImage(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int, arg7: int, arg8: int, arg9: int, arg10: list[float]) -> None: ...

  @staticmethod
  @overload
  def glGetTextureSubImage(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int, arg7: int, arg8: int, arg9: int, arg10: list[int]) -> None: ...

  @staticmethod
  @overload
  def glGetTextureSubImage(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int, arg7: int, arg8: int, arg9: int, arg10: list[int]) -> None: ...

  @staticmethod
  @overload
  def glGetTextureSubImage(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int, arg7: int, arg8: int, arg9: int, arg10: ByteBuffer) -> None: ...

  @staticmethod
  @overload
  def glGetTextureSubImage(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int, arg7: int, arg8: int, arg9: int, arg10: DoubleBuffer) -> None: ...

  @staticmethod
  @overload
  def glGetTextureSubImage(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int, arg7: int, arg8: int, arg9: int, arg10: FloatBuffer) -> None: ...

  @staticmethod
  @overload
  def glGetTextureSubImage(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int, arg7: int, arg8: int, arg9: int, arg10: IntBuffer) -> None: ...

  @staticmethod
  @overload
  def glGetTextureSubImage(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int, arg7: int, arg8: int, arg9: int, arg10: ShortBuffer) -> None: ...

  @staticmethod
  @overload
  def glGetTextureSubImage(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int, arg7: int, arg8: int, arg9: int, arg10: int, arg11: int) -> None: ...

  @staticmethod
  @overload
  def glGetTransformFeedbacki(arg0: int, arg1: int) -> int: ...

  @staticmethod
  @overload
  def glGetTransformFeedbacki(arg0: int, arg1: int, arg2: int) -> int: ...

  @staticmethod
  def glGetTransformFeedbacki64(arg0: int, arg1: int, arg2: int) -> int: ...

  @staticmethod
  @overload
  def glGetTransformFeedbacki64_v(arg0: int, arg1: int, arg2: int, arg3: list[int]) -> None: ...

  @staticmethod
  @overload
  def glGetTransformFeedbacki64_v(arg0: int, arg1: int, arg2: int, arg3: LongBuffer) -> None: ...

  @staticmethod
  @overload
  def glGetTransformFeedbacki_v(arg0: int, arg1: int, arg2: int, arg3: list[int]) -> None: ...

  @staticmethod
  @overload
  def glGetTransformFeedbacki_v(arg0: int, arg1: int, arg2: int, arg3: IntBuffer) -> None: ...

  @staticmethod
  @overload
  def glGetTransformFeedbackiv(arg0: int, arg1: int, arg2: list[int]) -> None: ...

  @staticmethod
  @overload
  def glGetTransformFeedbackiv(arg0: int, arg1: int, arg2: IntBuffer) -> None: ...

  @staticmethod
  def glGetVertexArrayIndexed64i(arg0: int, arg1: int, arg2: int) -> int: ...

  @staticmethod
  @overload
  def glGetVertexArrayIndexed64iv(arg0: int, arg1: int, arg2: int, arg3: list[int]) -> None: ...

  @staticmethod
  @overload
  def glGetVertexArrayIndexed64iv(arg0: int, arg1: int, arg2: int, arg3: LongBuffer) -> None: ...

  @staticmethod
  def glGetVertexArrayIndexedi(arg0: int, arg1: int, arg2: int) -> int: ...

  @staticmethod
  @overload
  def glGetVertexArrayIndexediv(arg0: int, arg1: int, arg2: int, arg3: list[int]) -> None: ...

  @staticmethod
  @overload
  def glGetVertexArrayIndexediv(arg0: int, arg1: int, arg2: int, arg3: IntBuffer) -> None: ...

  @staticmethod
  def glGetVertexArrayi(arg0: int, arg1: int) -> int: ...

  @staticmethod
  @overload
  def glGetVertexArrayiv(arg0: int, arg1: int, arg2: list[int]) -> None: ...

  @staticmethod
  @overload
  def glGetVertexArrayiv(arg0: int, arg1: int, arg2: IntBuffer) -> None: ...

  @staticmethod
  @overload
  def glGetnColorTable(arg0: int, arg1: int, arg2: int, arg3: list[float]) -> None: ...

  @staticmethod
  @overload
  def glGetnColorTable(arg0: int, arg1: int, arg2: int, arg3: list[int]) -> None: ...

  @staticmethod
  @overload
  def glGetnColorTable(arg0: int, arg1: int, arg2: int, arg3: list[int]) -> None: ...

  @staticmethod
  @overload
  def glGetnColorTable(arg0: int, arg1: int, arg2: int, arg3: ByteBuffer) -> None: ...

  @staticmethod
  @overload
  def glGetnColorTable(arg0: int, arg1: int, arg2: int, arg3: FloatBuffer) -> None: ...

  @staticmethod
  @overload
  def glGetnColorTable(arg0: int, arg1: int, arg2: int, arg3: IntBuffer) -> None: ...

  @staticmethod
  @overload
  def glGetnColorTable(arg0: int, arg1: int, arg2: int, arg3: ShortBuffer) -> None: ...

  @staticmethod
  @overload
  def glGetnColorTable(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int) -> None: ...

  @staticmethod
  @overload
  def glGetnCompressedTexImage(arg0: int, arg1: int, arg2: ByteBuffer) -> None: ...

  @staticmethod
  @overload
  def glGetnCompressedTexImage(arg0: int, arg1: int, arg2: int, arg3: int) -> None: ...

  @staticmethod
  @overload
  def glGetnConvolutionFilter(arg0: int, arg1: int, arg2: int, arg3: ByteBuffer) -> None: ...

  @staticmethod
  @overload
  def glGetnConvolutionFilter(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int) -> None: ...

  @staticmethod
  @overload
  def glGetnHistogram(arg0: int, arg1: bool, arg2: int, arg3: int, arg4: ByteBuffer) -> None: ...

  @staticmethod
  @overload
  def glGetnHistogram(arg0: int, arg1: bool, arg2: int, arg3: int, arg4: int, arg5: int) -> None: ...

  @staticmethod
  def glGetnMapd(arg0: int, arg1: int) -> float: ...

  @staticmethod
  @overload
  def glGetnMapdv(arg0: int, arg1: int, arg2: list[float]) -> None: ...

  @staticmethod
  @overload
  def glGetnMapdv(arg0: int, arg1: int, arg2: DoubleBuffer) -> None: ...

  @staticmethod
  def glGetnMapf(arg0: int, arg1: int) -> float: ...

  @staticmethod
  @overload
  def glGetnMapfv(arg0: int, arg1: int, arg2: list[float]) -> None: ...

  @staticmethod
  @overload
  def glGetnMapfv(arg0: int, arg1: int, arg2: FloatBuffer) -> None: ...

  @staticmethod
  def glGetnMapi(arg0: int, arg1: int) -> int: ...

  @staticmethod
  @overload
  def glGetnMapiv(arg0: int, arg1: int, arg2: list[int]) -> None: ...

  @staticmethod
  @overload
  def glGetnMapiv(arg0: int, arg1: int, arg2: IntBuffer) -> None: ...

  @staticmethod
  @overload
  def glGetnMinmax(arg0: int, arg1: bool, arg2: int, arg3: int, arg4: ByteBuffer) -> None: ...

  @staticmethod
  @overload
  def glGetnMinmax(arg0: int, arg1: bool, arg2: int, arg3: int, arg4: int, arg5: int) -> None: ...

  @staticmethod
  @overload
  def glGetnPixelMapfv(arg0: int, arg1: list[float]) -> None: ...

  @staticmethod
  @overload
  def glGetnPixelMapfv(arg0: int, arg1: FloatBuffer) -> None: ...

  @staticmethod
  @overload
  def glGetnPixelMapuiv(arg0: int, arg1: list[int]) -> None: ...

  @staticmethod
  @overload
  def glGetnPixelMapuiv(arg0: int, arg1: IntBuffer) -> None: ...

  @staticmethod
  @overload
  def glGetnPixelMapusv(arg0: int, arg1: list[int]) -> None: ...

  @staticmethod
  @overload
  def glGetnPixelMapusv(arg0: int, arg1: ShortBuffer) -> None: ...

  @staticmethod
  @overload
  def glGetnPolygonStipple(arg0: ByteBuffer) -> None: ...

  @staticmethod
  @overload
  def glGetnPolygonStipple(arg0: int, arg1: int) -> None: ...

  @staticmethod
  @overload
  def glGetnSeparableFilter(arg0: int, arg1: int, arg2: int, arg3: ByteBuffer, arg4: ByteBuffer, arg5: ByteBuffer) -> None: ...

  @staticmethod
  @overload
  def glGetnSeparableFilter(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int, arg7: ByteBuffer) -> None: ...

  @staticmethod
  @overload
  def glGetnTexImage(arg0: int, arg1: int, arg2: int, arg3: int, arg4: list[float]) -> None: ...

  @staticmethod
  @overload
  def glGetnTexImage(arg0: int, arg1: int, arg2: int, arg3: int, arg4: list[float]) -> None: ...

  @staticmethod
  @overload
  def glGetnTexImage(arg0: int, arg1: int, arg2: int, arg3: int, arg4: list[int]) -> None: ...

  @staticmethod
  @overload
  def glGetnTexImage(arg0: int, arg1: int, arg2: int, arg3: int, arg4: list[int]) -> None: ...

  @staticmethod
  @overload
  def glGetnTexImage(arg0: int, arg1: int, arg2: int, arg3: int, arg4: ByteBuffer) -> None: ...

  @staticmethod
  @overload
  def glGetnTexImage(arg0: int, arg1: int, arg2: int, arg3: int, arg4: DoubleBuffer) -> None: ...

  @staticmethod
  @overload
  def glGetnTexImage(arg0: int, arg1: int, arg2: int, arg3: int, arg4: FloatBuffer) -> None: ...

  @staticmethod
  @overload
  def glGetnTexImage(arg0: int, arg1: int, arg2: int, arg3: int, arg4: IntBuffer) -> None: ...

  @staticmethod
  @overload
  def glGetnTexImage(arg0: int, arg1: int, arg2: int, arg3: int, arg4: ShortBuffer) -> None: ...

  @staticmethod
  @overload
  def glGetnTexImage(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int) -> None: ...

  @staticmethod
  def glGetnUniformd(arg0: int, arg1: int) -> float: ...

  @staticmethod
  @overload
  def glGetnUniformdv(arg0: int, arg1: int, arg2: list[float]) -> None: ...

  @staticmethod
  @overload
  def glGetnUniformdv(arg0: int, arg1: int, arg2: DoubleBuffer) -> None: ...

  @staticmethod
  def glGetnUniformf(arg0: int, arg1: int) -> float: ...

  @staticmethod
  @overload
  def glGetnUniformfv(arg0: int, arg1: int, arg2: list[float]) -> None: ...

  @staticmethod
  @overload
  def glGetnUniformfv(arg0: int, arg1: int, arg2: FloatBuffer) -> None: ...

  @staticmethod
  def glGetnUniformi(arg0: int, arg1: int) -> int: ...

  @staticmethod
  @overload
  def glGetnUniformiv(arg0: int, arg1: int, arg2: list[int]) -> None: ...

  @staticmethod
  @overload
  def glGetnUniformiv(arg0: int, arg1: int, arg2: IntBuffer) -> None: ...

  @staticmethod
  def glGetnUniformui(arg0: int, arg1: int) -> int: ...

  @staticmethod
  @overload
  def glGetnUniformuiv(arg0: int, arg1: int, arg2: list[int]) -> None: ...

  @staticmethod
  @overload
  def glGetnUniformuiv(arg0: int, arg1: int, arg2: IntBuffer) -> None: ...

  @staticmethod
  @overload
  def glInvalidateNamedFramebufferData(arg0: int, arg1: list[int]) -> None: ...

  @staticmethod
  @overload
  def glInvalidateNamedFramebufferData(arg0: int, arg1: int) -> None: ...

  @staticmethod
  @overload
  def glInvalidateNamedFramebufferData(arg0: int, arg1: IntBuffer) -> None: ...

  @staticmethod
  @overload
  def glInvalidateNamedFramebufferSubData(arg0: int, arg1: list[int], arg2: int, arg3: int, arg4: int, arg5: int) -> None: ...

  @staticmethod
  @overload
  def glInvalidateNamedFramebufferSubData(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int) -> None: ...

  @staticmethod
  @overload
  def glInvalidateNamedFramebufferSubData(arg0: int, arg1: IntBuffer, arg2: int, arg3: int, arg4: int, arg5: int) -> None: ...

  @staticmethod
  @overload
  def glMapNamedBuffer(arg0: int, arg1: int) -> ByteBuffer: ...

  @staticmethod
  @overload
  def glMapNamedBuffer(arg0: int, arg1: int, arg2: ByteBuffer) -> ByteBuffer: ...

  @staticmethod
  @overload
  def glMapNamedBuffer(arg0: int, arg1: int, arg2: int, arg3: ByteBuffer) -> ByteBuffer: ...

  @staticmethod
  @overload
  def glMapNamedBufferRange(arg0: int, arg1: int, arg2: int, arg3: int) -> ByteBuffer: ...

  @staticmethod
  @overload
  def glMapNamedBufferRange(arg0: int, arg1: int, arg2: int, arg3: int, arg4: ByteBuffer) -> ByteBuffer: ...

  @staticmethod
  def glMemoryBarrierByRegion(arg0: int) -> None: ...

  @staticmethod
  @overload
  def glNamedBufferData(arg0: int, arg1: list[float], arg2: int) -> None: ...

  @staticmethod
  @overload
  def glNamedBufferData(arg0: int, arg1: list[float], arg2: int) -> None: ...

  @staticmethod
  @overload
  def glNamedBufferData(arg0: int, arg1: list[int], arg2: int) -> None: ...

  @staticmethod
  @overload
  def glNamedBufferData(arg0: int, arg1: list[int], arg2: int) -> None: ...

  @staticmethod
  @overload
  def glNamedBufferData(arg0: int, arg1: list[int], arg2: int) -> None: ...

  @staticmethod
  @overload
  def glNamedBufferData(arg0: int, arg1: ByteBuffer, arg2: int) -> None: ...

  @staticmethod
  @overload
  def glNamedBufferData(arg0: int, arg1: DoubleBuffer, arg2: int) -> None: ...

  @staticmethod
  @overload
  def glNamedBufferData(arg0: int, arg1: FloatBuffer, arg2: int) -> None: ...

  @staticmethod
  @overload
  def glNamedBufferData(arg0: int, arg1: IntBuffer, arg2: int) -> None: ...

  @staticmethod
  @overload
  def glNamedBufferData(arg0: int, arg1: LongBuffer, arg2: int) -> None: ...

  @staticmethod
  @overload
  def glNamedBufferData(arg0: int, arg1: ShortBuffer, arg2: int) -> None: ...

  @staticmethod
  @overload
  def glNamedBufferData(arg0: int, arg1: int, arg2: int) -> None: ...

  @staticmethod
  @overload
  def glNamedBufferStorage(arg0: int, arg1: list[float], arg2: int) -> None: ...

  @staticmethod
  @overload
  def glNamedBufferStorage(arg0: int, arg1: list[float], arg2: int) -> None: ...

  @staticmethod
  @overload
  def glNamedBufferStorage(arg0: int, arg1: list[int], arg2: int) -> None: ...

  @staticmethod
  @overload
  def glNamedBufferStorage(arg0: int, arg1: list[int], arg2: int) -> None: ...

  @staticmethod
  @overload
  def glNamedBufferStorage(arg0: int, arg1: ByteBuffer, arg2: int) -> None: ...

  @staticmethod
  @overload
  def glNamedBufferStorage(arg0: int, arg1: DoubleBuffer, arg2: int) -> None: ...

  @staticmethod
  @overload
  def glNamedBufferStorage(arg0: int, arg1: FloatBuffer, arg2: int) -> None: ...

  @staticmethod
  @overload
  def glNamedBufferStorage(arg0: int, arg1: IntBuffer, arg2: int) -> None: ...

  @staticmethod
  @overload
  def glNamedBufferStorage(arg0: int, arg1: ShortBuffer, arg2: int) -> None: ...

  @staticmethod
  @overload
  def glNamedBufferStorage(arg0: int, arg1: int, arg2: int) -> None: ...

  @staticmethod
  @overload
  def glNamedBufferSubData(arg0: int, arg1: int, arg2: list[float]) -> None: ...

  @staticmethod
  @overload
  def glNamedBufferSubData(arg0: int, arg1: int, arg2: list[float]) -> None: ...

  @staticmethod
  @overload
  def glNamedBufferSubData(arg0: int, arg1: int, arg2: list[int]) -> None: ...

  @staticmethod
  @overload
  def glNamedBufferSubData(arg0: int, arg1: int, arg2: list[int]) -> None: ...

  @staticmethod
  @overload
  def glNamedBufferSubData(arg0: int, arg1: int, arg2: list[int]) -> None: ...

  @staticmethod
  @overload
  def glNamedBufferSubData(arg0: int, arg1: int, arg2: ByteBuffer) -> None: ...

  @staticmethod
  @overload
  def glNamedBufferSubData(arg0: int, arg1: int, arg2: DoubleBuffer) -> None: ...

  @staticmethod
  @overload
  def glNamedBufferSubData(arg0: int, arg1: int, arg2: FloatBuffer) -> None: ...

  @staticmethod
  @overload
  def glNamedBufferSubData(arg0: int, arg1: int, arg2: IntBuffer) -> None: ...

  @staticmethod
  @overload
  def glNamedBufferSubData(arg0: int, arg1: int, arg2: LongBuffer) -> None: ...

  @staticmethod
  @overload
  def glNamedBufferSubData(arg0: int, arg1: int, arg2: ShortBuffer) -> None: ...

  @staticmethod
  def glNamedFramebufferDrawBuffer(arg0: int, arg1: int) -> None: ...

  @staticmethod
  @overload
  def glNamedFramebufferDrawBuffers(arg0: int, arg1: list[int]) -> None: ...

  @staticmethod
  @overload
  def glNamedFramebufferDrawBuffers(arg0: int, arg1: int) -> None: ...

  @staticmethod
  @overload
  def glNamedFramebufferDrawBuffers(arg0: int, arg1: IntBuffer) -> None: ...

  @staticmethod
  def glNamedFramebufferParameteri(arg0: int, arg1: int, arg2: int) -> None: ...

  @staticmethod
  def glNamedFramebufferReadBuffer(arg0: int, arg1: int) -> None: ...

  @staticmethod
  def glNamedFramebufferRenderbuffer(arg0: int, arg1: int, arg2: int, arg3: int) -> None: ...

  @staticmethod
  def glNamedFramebufferTexture(arg0: int, arg1: int, arg2: int, arg3: int) -> None: ...

  @staticmethod
  def glNamedFramebufferTextureLayer(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int) -> None: ...

  @staticmethod
  def glNamedRenderbufferStorage(arg0: int, arg1: int, arg2: int, arg3: int) -> None: ...

  @staticmethod
  def glNamedRenderbufferStorageMultisample(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int) -> None: ...

  @staticmethod
  @overload
  def glReadnPixels(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: list[float]) -> None: ...

  @staticmethod
  @overload
  def glReadnPixels(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: list[int]) -> None: ...

  @staticmethod
  @overload
  def glReadnPixels(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: list[int]) -> None: ...

  @staticmethod
  @overload
  def glReadnPixels(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: ByteBuffer) -> None: ...

  @staticmethod
  @overload
  def glReadnPixels(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: FloatBuffer) -> None: ...

  @staticmethod
  @overload
  def glReadnPixels(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: IntBuffer) -> None: ...

  @staticmethod
  @overload
  def glReadnPixels(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: ShortBuffer) -> None: ...

  @staticmethod
  @overload
  def glReadnPixels(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int, arg7: int) -> None: ...

  @staticmethod
  def glTextureBarrier() -> None: ...

  @staticmethod
  def glTextureBuffer(arg0: int, arg1: int, arg2: int) -> None: ...

  @staticmethod
  def glTextureBufferRange(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int) -> None: ...

  @staticmethod
  def glTextureParameterIi(arg0: int, arg1: int, arg2: int) -> None: ...

  @staticmethod
  @overload
  def glTextureParameterIiv(arg0: int, arg1: int, arg2: list[int]) -> None: ...

  @staticmethod
  @overload
  def glTextureParameterIiv(arg0: int, arg1: int, arg2: IntBuffer) -> None: ...

  @staticmethod
  def glTextureParameterIui(arg0: int, arg1: int, arg2: int) -> None: ...

  @staticmethod
  @overload
  def glTextureParameterIuiv(arg0: int, arg1: int, arg2: list[int]) -> None: ...

  @staticmethod
  @overload
  def glTextureParameterIuiv(arg0: int, arg1: int, arg2: IntBuffer) -> None: ...

  @staticmethod
  def glTextureParameterf(arg0: int, arg1: int, arg2: float) -> None: ...

  @staticmethod
  @overload
  def glTextureParameterfv(arg0: int, arg1: int, arg2: list[float]) -> None: ...

  @staticmethod
  @overload
  def glTextureParameterfv(arg0: int, arg1: int, arg2: FloatBuffer) -> None: ...

  @staticmethod
  def glTextureParameteri(arg0: int, arg1: int, arg2: int) -> None: ...

  @staticmethod
  @overload
  def glTextureParameteriv(arg0: int, arg1: int, arg2: list[int]) -> None: ...

  @staticmethod
  @overload
  def glTextureParameteriv(arg0: int, arg1: int, arg2: IntBuffer) -> None: ...

  @staticmethod
  def glTextureStorage1D(arg0: int, arg1: int, arg2: int, arg3: int) -> None: ...

  @staticmethod
  def glTextureStorage2D(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int) -> None: ...

  @staticmethod
  def glTextureStorage2DMultisample(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: bool) -> None: ...

  @staticmethod
  def glTextureStorage3D(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int) -> None: ...

  @staticmethod
  def glTextureStorage3DMultisample(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: bool) -> None: ...

  @staticmethod
  @overload
  def glTextureSubImage1D(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: list[float]) -> None: ...

  @staticmethod
  @overload
  def glTextureSubImage1D(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: list[float]) -> None: ...

  @staticmethod
  @overload
  def glTextureSubImage1D(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: list[int]) -> None: ...

  @staticmethod
  @overload
  def glTextureSubImage1D(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: list[int]) -> None: ...

  @staticmethod
  @overload
  def glTextureSubImage1D(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: ByteBuffer) -> None: ...

  @staticmethod
  @overload
  def glTextureSubImage1D(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: DoubleBuffer) -> None: ...

  @staticmethod
  @overload
  def glTextureSubImage1D(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: FloatBuffer) -> None: ...

  @staticmethod
  @overload
  def glTextureSubImage1D(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: IntBuffer) -> None: ...

  @staticmethod
  @overload
  def glTextureSubImage1D(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: ShortBuffer) -> None: ...

  @staticmethod
  @overload
  def glTextureSubImage1D(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int) -> None: ...

  @staticmethod
  @overload
  def glTextureSubImage2D(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int, arg7: int, arg8: list[float]) -> None: ...

  @staticmethod
  @overload
  def glTextureSubImage2D(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int, arg7: int, arg8: list[float]) -> None: ...

  @staticmethod
  @overload
  def glTextureSubImage2D(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int, arg7: int, arg8: list[int]) -> None: ...

  @staticmethod
  @overload
  def glTextureSubImage2D(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int, arg7: int, arg8: list[int]) -> None: ...

  @staticmethod
  @overload
  def glTextureSubImage2D(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int, arg7: int, arg8: ByteBuffer) -> None: ...

  @staticmethod
  @overload
  def glTextureSubImage2D(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int, arg7: int, arg8: DoubleBuffer) -> None: ...

  @staticmethod
  @overload
  def glTextureSubImage2D(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int, arg7: int, arg8: FloatBuffer) -> None: ...

  @staticmethod
  @overload
  def glTextureSubImage2D(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int, arg7: int, arg8: IntBuffer) -> None: ...

  @staticmethod
  @overload
  def glTextureSubImage2D(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int, arg7: int, arg8: ShortBuffer) -> None: ...

  @staticmethod
  @overload
  def glTextureSubImage2D(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int, arg7: int, arg8: int) -> None: ...

  @staticmethod
  @overload
  def glTextureSubImage3D(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int, arg7: int, arg8: int, arg9: int, arg10: list[float]) -> None: ...

  @staticmethod
  @overload
  def glTextureSubImage3D(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int, arg7: int, arg8: int, arg9: int, arg10: list[float]) -> None: ...

  @staticmethod
  @overload
  def glTextureSubImage3D(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int, arg7: int, arg8: int, arg9: int, arg10: list[int]) -> None: ...

  @staticmethod
  @overload
  def glTextureSubImage3D(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int, arg7: int, arg8: int, arg9: int, arg10: list[int]) -> None: ...

  @staticmethod
  @overload
  def glTextureSubImage3D(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int, arg7: int, arg8: int, arg9: int, arg10: ByteBuffer) -> None: ...

  @staticmethod
  @overload
  def glTextureSubImage3D(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int, arg7: int, arg8: int, arg9: int, arg10: DoubleBuffer) -> None: ...

  @staticmethod
  @overload
  def glTextureSubImage3D(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int, arg7: int, arg8: int, arg9: int, arg10: FloatBuffer) -> None: ...

  @staticmethod
  @overload
  def glTextureSubImage3D(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int, arg7: int, arg8: int, arg9: int, arg10: IntBuffer) -> None: ...

  @staticmethod
  @overload
  def glTextureSubImage3D(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int, arg7: int, arg8: int, arg9: int, arg10: ShortBuffer) -> None: ...

  @staticmethod
  @overload
  def glTextureSubImage3D(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int, arg7: int, arg8: int, arg9: int, arg10: int) -> None: ...

  @staticmethod
  def glTransformFeedbackBufferBase(arg0: int, arg1: int, arg2: int) -> None: ...

  @staticmethod
  def glTransformFeedbackBufferRange(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int) -> None: ...

  @staticmethod
  def glUnmapNamedBuffer(arg0: int) -> bool: ...

  @staticmethod
  def glVertexArrayAttribBinding(arg0: int, arg1: int, arg2: int) -> None: ...

  @staticmethod
  def glVertexArrayAttribFormat(arg0: int, arg1: int, arg2: int, arg3: int, arg4: bool, arg5: int) -> None: ...

  @staticmethod
  def glVertexArrayAttribIFormat(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int) -> None: ...

  @staticmethod
  def glVertexArrayAttribLFormat(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int) -> None: ...

  @staticmethod
  def glVertexArrayBindingDivisor(arg0: int, arg1: int, arg2: int) -> None: ...

  @staticmethod
  def glVertexArrayElementBuffer(arg0: int, arg1: int) -> None: ...

  @staticmethod
  def glVertexArrayVertexBuffer(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int) -> None: ...

  @staticmethod
  @overload
  def glVertexArrayVertexBuffers(arg0: int, arg1: int, arg2: list[int], arg3: PointerBuffer, arg4: list[int]) -> None: ...

  @staticmethod
  @overload
  def glVertexArrayVertexBuffers(arg0: int, arg1: int, arg2: IntBuffer, arg3: PointerBuffer, arg4: IntBuffer) -> None: ...

  @staticmethod
  def nglClearNamedBufferData(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int) -> None: ...

  @staticmethod
  def nglClearNamedBufferSubData(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int) -> None: ...

  @staticmethod
  def nglClearNamedFramebufferfv(arg0: int, arg1: int, arg2: int, arg3: int) -> None: ...

  @staticmethod
  def nglClearNamedFramebufferiv(arg0: int, arg1: int, arg2: int, arg3: int) -> None: ...

  @staticmethod
  def nglClearNamedFramebufferuiv(arg0: int, arg1: int, arg2: int, arg3: int) -> None: ...

  @staticmethod
  def nglCompressedTextureSubImage1D(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int) -> None: ...

  @staticmethod
  def nglCompressedTextureSubImage2D(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int, arg7: int, arg8: int) -> None: ...

  @staticmethod
  def nglCompressedTextureSubImage3D(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int, arg7: int, arg8: int, arg9: int, arg10: int) -> None: ...

  @staticmethod
  def nglCreateBuffers(arg0: int, arg1: int) -> None: ...

  @staticmethod
  def nglCreateFramebuffers(arg0: int, arg1: int) -> None: ...

  @staticmethod
  def nglCreateProgramPipelines(arg0: int, arg1: int) -> None: ...

  @staticmethod
  def nglCreateQueries(arg0: int, arg1: int, arg2: int) -> None: ...

  @staticmethod
  def nglCreateRenderbuffers(arg0: int, arg1: int) -> None: ...

  @staticmethod
  def nglCreateSamplers(arg0: int, arg1: int) -> None: ...

  @staticmethod
  def nglCreateTextures(arg0: int, arg1: int, arg2: int) -> None: ...

  @staticmethod
  def nglCreateTransformFeedbacks(arg0: int, arg1: int) -> None: ...

  @staticmethod
  def nglCreateVertexArrays(arg0: int, arg1: int) -> None: ...

  @staticmethod
  def nglGetCompressedTextureImage(arg0: int, arg1: int, arg2: int, arg3: int) -> None: ...

  @staticmethod
  def nglGetCompressedTextureSubImage(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int, arg7: int, arg8: int, arg9: int) -> None: ...

  @staticmethod
  def nglGetNamedBufferParameteri64v(arg0: int, arg1: int, arg2: int) -> None: ...

  @staticmethod
  def nglGetNamedBufferParameteriv(arg0: int, arg1: int, arg2: int) -> None: ...

  @staticmethod
  def nglGetNamedBufferPointerv(arg0: int, arg1: int, arg2: int) -> None: ...

  @staticmethod
  def nglGetNamedBufferSubData(arg0: int, arg1: int, arg2: int, arg3: int) -> None: ...

  @staticmethod
  def nglGetNamedFramebufferAttachmentParameteriv(arg0: int, arg1: int, arg2: int, arg3: int) -> None: ...

  @staticmethod
  def nglGetNamedFramebufferParameteriv(arg0: int, arg1: int, arg2: int) -> None: ...

  @staticmethod
  def nglGetNamedRenderbufferParameteriv(arg0: int, arg1: int, arg2: int) -> None: ...

  @staticmethod
  def nglGetTextureImage(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int) -> None: ...

  @staticmethod
  def nglGetTextureLevelParameterfv(arg0: int, arg1: int, arg2: int, arg3: int) -> None: ...

  @staticmethod
  def nglGetTextureLevelParameteriv(arg0: int, arg1: int, arg2: int, arg3: int) -> None: ...

  @staticmethod
  def nglGetTextureParameterIiv(arg0: int, arg1: int, arg2: int) -> None: ...

  @staticmethod
  def nglGetTextureParameterIuiv(arg0: int, arg1: int, arg2: int) -> None: ...

  @staticmethod
  def nglGetTextureParameterfv(arg0: int, arg1: int, arg2: int) -> None: ...

  @staticmethod
  def nglGetTextureParameteriv(arg0: int, arg1: int, arg2: int) -> None: ...

  @staticmethod
  def nglGetTextureSubImage(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int, arg7: int, arg8: int, arg9: int, arg10: int, arg11: int) -> None: ...

  @staticmethod
  def nglGetTransformFeedbacki64_v(arg0: int, arg1: int, arg2: int, arg3: int) -> None: ...

  @staticmethod
  def nglGetTransformFeedbacki_v(arg0: int, arg1: int, arg2: int, arg3: int) -> None: ...

  @staticmethod
  def nglGetTransformFeedbackiv(arg0: int, arg1: int, arg2: int) -> None: ...

  @staticmethod
  def nglGetVertexArrayIndexed64iv(arg0: int, arg1: int, arg2: int, arg3: int) -> None: ...

  @staticmethod
  def nglGetVertexArrayIndexediv(arg0: int, arg1: int, arg2: int, arg3: int) -> None: ...

  @staticmethod
  def nglGetVertexArrayiv(arg0: int, arg1: int, arg2: int) -> None: ...

  @staticmethod
  def nglGetnColorTable(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int) -> None: ...

  @staticmethod
  def nglGetnCompressedTexImage(arg0: int, arg1: int, arg2: int, arg3: int) -> None: ...

  @staticmethod
  def nglGetnConvolutionFilter(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int) -> None: ...

  @staticmethod
  def nglGetnHistogram(arg0: int, arg1: bool, arg2: int, arg3: int, arg4: int, arg5: int) -> None: ...

  @staticmethod
  def nglGetnMapdv(arg0: int, arg1: int, arg2: int, arg3: int) -> None: ...

  @staticmethod
  def nglGetnMapfv(arg0: int, arg1: int, arg2: int, arg3: int) -> None: ...

  @staticmethod
  def nglGetnMapiv(arg0: int, arg1: int, arg2: int, arg3: int) -> None: ...

  @staticmethod
  def nglGetnMinmax(arg0: int, arg1: bool, arg2: int, arg3: int, arg4: int, arg5: int) -> None: ...

  @staticmethod
  def nglGetnPixelMapfv(arg0: int, arg1: int, arg2: int) -> None: ...

  @staticmethod
  def nglGetnPixelMapuiv(arg0: int, arg1: int, arg2: int) -> None: ...

  @staticmethod
  def nglGetnPixelMapusv(arg0: int, arg1: int, arg2: int) -> None: ...

  @staticmethod
  def nglGetnPolygonStipple(arg0: int, arg1: int) -> None: ...

  @staticmethod
  def nglGetnSeparableFilter(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int, arg7: int) -> None: ...

  @staticmethod
  def nglGetnTexImage(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int) -> None: ...

  @staticmethod
  def nglGetnUniformdv(arg0: int, arg1: int, arg2: int, arg3: int) -> None: ...

  @staticmethod
  def nglGetnUniformfv(arg0: int, arg1: int, arg2: int, arg3: int) -> None: ...

  @staticmethod
  def nglGetnUniformiv(arg0: int, arg1: int, arg2: int, arg3: int) -> None: ...

  @staticmethod
  def nglGetnUniformuiv(arg0: int, arg1: int, arg2: int, arg3: int) -> None: ...

  @staticmethod
  def nglInvalidateNamedFramebufferData(arg0: int, arg1: int, arg2: int) -> None: ...

  @staticmethod
  def nglInvalidateNamedFramebufferSubData(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int) -> None: ...

  @staticmethod
  def nglMapNamedBuffer(arg0: int, arg1: int) -> int: ...

  @staticmethod
  def nglMapNamedBufferRange(arg0: int, arg1: int, arg2: int, arg3: int) -> int: ...

  @staticmethod
  def nglNamedBufferData(arg0: int, arg1: int, arg2: int, arg3: int) -> None: ...

  @staticmethod
  def nglNamedBufferStorage(arg0: int, arg1: int, arg2: int, arg3: int) -> None: ...

  @staticmethod
  def nglNamedBufferSubData(arg0: int, arg1: int, arg2: int, arg3: int) -> None: ...

  @staticmethod
  def nglNamedFramebufferDrawBuffers(arg0: int, arg1: int, arg2: int) -> None: ...

  @staticmethod
  def nglReadnPixels(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int, arg7: int) -> None: ...

  @staticmethod
  def nglTextureParameterIiv(arg0: int, arg1: int, arg2: int) -> None: ...

  @staticmethod
  def nglTextureParameterIuiv(arg0: int, arg1: int, arg2: int) -> None: ...

  @staticmethod
  def nglTextureParameterfv(arg0: int, arg1: int, arg2: int) -> None: ...

  @staticmethod
  def nglTextureParameteriv(arg0: int, arg1: int, arg2: int) -> None: ...

  @staticmethod
  def nglTextureSubImage1D(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int) -> None: ...

  @staticmethod
  def nglTextureSubImage2D(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int, arg7: int, arg8: int) -> None: ...

  @staticmethod
  def nglTextureSubImage3D(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int, arg7: int, arg8: int, arg9: int, arg10: int) -> None: ...

  @staticmethod
  def nglVertexArrayVertexBuffers(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int) -> None: ...


class GL45C(GL44C):

  GL_CLIP_DEPTH_MODE: int

  GL_CLIP_ORIGIN: int

  GL_CONTEXT_FLAG_ROBUST_ACCESS_BIT: int

  GL_CONTEXT_LOST: int

  GL_CONTEXT_RELEASE_BEHAVIOR: int

  GL_CONTEXT_RELEASE_BEHAVIOR_FLUSH: int

  GL_GUILTY_CONTEXT_RESET: int

  GL_INNOCENT_CONTEXT_RESET: int

  GL_LOSE_CONTEXT_ON_RESET: int

  GL_MAX_COMBINED_CLIP_AND_CULL_DISTANCES: int

  GL_MAX_CULL_DISTANCES: int

  GL_NEGATIVE_ONE_TO_ONE: int

  GL_NO_RESET_NOTIFICATION: int

  GL_QUERY_BY_REGION_NO_WAIT_INVERTED: int

  GL_QUERY_BY_REGION_WAIT_INVERTED: int

  GL_QUERY_NO_WAIT_INVERTED: int

  GL_QUERY_TARGET: int

  GL_QUERY_WAIT_INVERTED: int

  GL_RESET_NOTIFICATION_STRATEGY: int

  GL_TEXTURE_TARGET: int

  GL_UNKNOWN_CONTEXT_RESET: int

  GL_ZERO_TO_ONE: int

  @staticmethod
  def glBindTextureUnit(arg0: int, arg1: int) -> None: ...

  @staticmethod
  def glBlitNamedFramebuffer(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int, arg7: int, arg8: int, arg9: int, arg10: int, arg11: int) -> None: ...

  @staticmethod
  def glCheckNamedFramebufferStatus(arg0: int, arg1: int) -> int: ...

  @staticmethod
  @overload
  def glClearNamedBufferData(arg0: int, arg1: int, arg2: int, arg3: int, arg4: list[float]) -> None: ...

  @staticmethod
  @overload
  def glClearNamedBufferData(arg0: int, arg1: int, arg2: int, arg3: int, arg4: list[int]) -> None: ...

  @staticmethod
  @overload
  def glClearNamedBufferData(arg0: int, arg1: int, arg2: int, arg3: int, arg4: list[int]) -> None: ...

  @staticmethod
  @overload
  def glClearNamedBufferData(arg0: int, arg1: int, arg2: int, arg3: int, arg4: ByteBuffer) -> None: ...

  @staticmethod
  @overload
  def glClearNamedBufferData(arg0: int, arg1: int, arg2: int, arg3: int, arg4: FloatBuffer) -> None: ...

  @staticmethod
  @overload
  def glClearNamedBufferData(arg0: int, arg1: int, arg2: int, arg3: int, arg4: IntBuffer) -> None: ...

  @staticmethod
  @overload
  def glClearNamedBufferData(arg0: int, arg1: int, arg2: int, arg3: int, arg4: ShortBuffer) -> None: ...

  @staticmethod
  @overload
  def glClearNamedBufferSubData(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: list[float]) -> None: ...

  @staticmethod
  @overload
  def glClearNamedBufferSubData(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: list[int]) -> None: ...

  @staticmethod
  @overload
  def glClearNamedBufferSubData(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: list[int]) -> None: ...

  @staticmethod
  @overload
  def glClearNamedBufferSubData(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: ByteBuffer) -> None: ...

  @staticmethod
  @overload
  def glClearNamedBufferSubData(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: FloatBuffer) -> None: ...

  @staticmethod
  @overload
  def glClearNamedBufferSubData(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: IntBuffer) -> None: ...

  @staticmethod
  @overload
  def glClearNamedBufferSubData(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: ShortBuffer) -> None: ...

  @staticmethod
  def glClearNamedFramebufferfi(arg0: int, arg1: int, arg2: int, arg3: float, arg4: int) -> None: ...

  @staticmethod
  @overload
  def glClearNamedFramebufferfv(arg0: int, arg1: int, arg2: int, arg3: list[float]) -> None: ...

  @staticmethod
  @overload
  def glClearNamedFramebufferfv(arg0: int, arg1: int, arg2: int, arg3: FloatBuffer) -> None: ...

  @staticmethod
  @overload
  def glClearNamedFramebufferiv(arg0: int, arg1: int, arg2: int, arg3: list[int]) -> None: ...

  @staticmethod
  @overload
  def glClearNamedFramebufferiv(arg0: int, arg1: int, arg2: int, arg3: IntBuffer) -> None: ...

  @staticmethod
  @overload
  def glClearNamedFramebufferuiv(arg0: int, arg1: int, arg2: int, arg3: list[int]) -> None: ...

  @staticmethod
  @overload
  def glClearNamedFramebufferuiv(arg0: int, arg1: int, arg2: int, arg3: IntBuffer) -> None: ...

  @staticmethod
  def glClipControl(arg0: int, arg1: int) -> None: ...

  @staticmethod
  @overload
  def glCompressedTextureSubImage1D(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: ByteBuffer) -> None: ...

  @staticmethod
  @overload
  def glCompressedTextureSubImage1D(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int) -> None: ...

  @staticmethod
  @overload
  def glCompressedTextureSubImage2D(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int, arg7: ByteBuffer) -> None: ...

  @staticmethod
  @overload
  def glCompressedTextureSubImage2D(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int, arg7: int, arg8: int) -> None: ...

  @staticmethod
  @overload
  def glCompressedTextureSubImage3D(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int, arg7: int, arg8: int, arg9: ByteBuffer) -> None: ...

  @staticmethod
  @overload
  def glCompressedTextureSubImage3D(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int, arg7: int, arg8: int, arg9: int, arg10: int) -> None: ...

  @staticmethod
  def glCopyNamedBufferSubData(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int) -> None: ...

  @staticmethod
  def glCopyTextureSubImage1D(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int) -> None: ...

  @staticmethod
  def glCopyTextureSubImage2D(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int, arg7: int) -> None: ...

  @staticmethod
  def glCopyTextureSubImage3D(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int, arg7: int, arg8: int) -> None: ...

  @staticmethod
  @overload
  def glCreateBuffers() -> int: ...

  @staticmethod
  @overload
  def glCreateBuffers(arg0: list[int]) -> None: ...

  @staticmethod
  @overload
  def glCreateBuffers(arg0: IntBuffer) -> None: ...

  @staticmethod
  @overload
  def glCreateFramebuffers() -> int: ...

  @staticmethod
  @overload
  def glCreateFramebuffers(arg0: list[int]) -> None: ...

  @staticmethod
  @overload
  def glCreateFramebuffers(arg0: IntBuffer) -> None: ...

  @staticmethod
  @overload
  def glCreateProgramPipelines() -> int: ...

  @staticmethod
  @overload
  def glCreateProgramPipelines(arg0: list[int]) -> None: ...

  @staticmethod
  @overload
  def glCreateProgramPipelines(arg0: IntBuffer) -> None: ...

  @staticmethod
  @overload
  def glCreateQueries(arg0: int) -> int: ...

  @staticmethod
  @overload
  def glCreateQueries(arg0: int, arg1: list[int]) -> None: ...

  @staticmethod
  @overload
  def glCreateQueries(arg0: int, arg1: IntBuffer) -> None: ...

  @staticmethod
  @overload
  def glCreateRenderbuffers() -> int: ...

  @staticmethod
  @overload
  def glCreateRenderbuffers(arg0: list[int]) -> None: ...

  @staticmethod
  @overload
  def glCreateRenderbuffers(arg0: IntBuffer) -> None: ...

  @staticmethod
  @overload
  def glCreateSamplers() -> int: ...

  @staticmethod
  @overload
  def glCreateSamplers(arg0: list[int]) -> None: ...

  @staticmethod
  @overload
  def glCreateSamplers(arg0: IntBuffer) -> None: ...

  @staticmethod
  @overload
  def glCreateTextures(arg0: int) -> int: ...

  @staticmethod
  @overload
  def glCreateTextures(arg0: int, arg1: list[int]) -> None: ...

  @staticmethod
  @overload
  def glCreateTextures(arg0: int, arg1: IntBuffer) -> None: ...

  @staticmethod
  @overload
  def glCreateTransformFeedbacks() -> int: ...

  @staticmethod
  @overload
  def glCreateTransformFeedbacks(arg0: list[int]) -> None: ...

  @staticmethod
  @overload
  def glCreateTransformFeedbacks(arg0: IntBuffer) -> None: ...

  @staticmethod
  @overload
  def glCreateVertexArrays() -> int: ...

  @staticmethod
  @overload
  def glCreateVertexArrays(arg0: list[int]) -> None: ...

  @staticmethod
  @overload
  def glCreateVertexArrays(arg0: IntBuffer) -> None: ...

  @staticmethod
  def glDisableVertexArrayAttrib(arg0: int, arg1: int) -> None: ...

  @staticmethod
  def glEnableVertexArrayAttrib(arg0: int, arg1: int) -> None: ...

  @staticmethod
  def glFlushMappedNamedBufferRange(arg0: int, arg1: int, arg2: int) -> None: ...

  @staticmethod
  def glGenerateTextureMipmap(arg0: int) -> None: ...

  @staticmethod
  @overload
  def glGetCompressedTextureImage(arg0: int, arg1: int, arg2: ByteBuffer) -> None: ...

  @staticmethod
  @overload
  def glGetCompressedTextureImage(arg0: int, arg1: int, arg2: int, arg3: int) -> None: ...

  @staticmethod
  @overload
  def glGetCompressedTextureSubImage(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int, arg7: int, arg8: list[float]) -> None: ...

  @staticmethod
  @overload
  def glGetCompressedTextureSubImage(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int, arg7: int, arg8: list[float]) -> None: ...

  @staticmethod
  @overload
  def glGetCompressedTextureSubImage(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int, arg7: int, arg8: list[int]) -> None: ...

  @staticmethod
  @overload
  def glGetCompressedTextureSubImage(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int, arg7: int, arg8: list[int]) -> None: ...

  @staticmethod
  @overload
  def glGetCompressedTextureSubImage(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int, arg7: int, arg8: ByteBuffer) -> None: ...

  @staticmethod
  @overload
  def glGetCompressedTextureSubImage(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int, arg7: int, arg8: DoubleBuffer) -> None: ...

  @staticmethod
  @overload
  def glGetCompressedTextureSubImage(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int, arg7: int, arg8: FloatBuffer) -> None: ...

  @staticmethod
  @overload
  def glGetCompressedTextureSubImage(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int, arg7: int, arg8: IntBuffer) -> None: ...

  @staticmethod
  @overload
  def glGetCompressedTextureSubImage(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int, arg7: int, arg8: ShortBuffer) -> None: ...

  @staticmethod
  @overload
  def glGetCompressedTextureSubImage(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int, arg7: int, arg8: int, arg9: int) -> None: ...

  @staticmethod
  def glGetGraphicsResetStatus() -> int: ...

  @staticmethod
  def glGetNamedBufferParameteri(arg0: int, arg1: int) -> int: ...

  @staticmethod
  def glGetNamedBufferParameteri64(arg0: int, arg1: int) -> int: ...

  @staticmethod
  @overload
  def glGetNamedBufferParameteri64v(arg0: int, arg1: int, arg2: list[int]) -> None: ...

  @staticmethod
  @overload
  def glGetNamedBufferParameteri64v(arg0: int, arg1: int, arg2: LongBuffer) -> None: ...

  @staticmethod
  @overload
  def glGetNamedBufferParameteriv(arg0: int, arg1: int, arg2: list[int]) -> None: ...

  @staticmethod
  @overload
  def glGetNamedBufferParameteriv(arg0: int, arg1: int, arg2: IntBuffer) -> None: ...

  @staticmethod
  def glGetNamedBufferPointer(arg0: int, arg1: int) -> int: ...

  @staticmethod
  def glGetNamedBufferPointerv(arg0: int, arg1: int, arg2: PointerBuffer) -> None: ...

  @staticmethod
  @overload
  def glGetNamedBufferSubData(arg0: int, arg1: int, arg2: list[float]) -> None: ...

  @staticmethod
  @overload
  def glGetNamedBufferSubData(arg0: int, arg1: int, arg2: list[float]) -> None: ...

  @staticmethod
  @overload
  def glGetNamedBufferSubData(arg0: int, arg1: int, arg2: list[int]) -> None: ...

  @staticmethod
  @overload
  def glGetNamedBufferSubData(arg0: int, arg1: int, arg2: list[int]) -> None: ...

  @staticmethod
  @overload
  def glGetNamedBufferSubData(arg0: int, arg1: int, arg2: list[int]) -> None: ...

  @staticmethod
  @overload
  def glGetNamedBufferSubData(arg0: int, arg1: int, arg2: ByteBuffer) -> None: ...

  @staticmethod
  @overload
  def glGetNamedBufferSubData(arg0: int, arg1: int, arg2: DoubleBuffer) -> None: ...

  @staticmethod
  @overload
  def glGetNamedBufferSubData(arg0: int, arg1: int, arg2: FloatBuffer) -> None: ...

  @staticmethod
  @overload
  def glGetNamedBufferSubData(arg0: int, arg1: int, arg2: IntBuffer) -> None: ...

  @staticmethod
  @overload
  def glGetNamedBufferSubData(arg0: int, arg1: int, arg2: LongBuffer) -> None: ...

  @staticmethod
  @overload
  def glGetNamedBufferSubData(arg0: int, arg1: int, arg2: ShortBuffer) -> None: ...

  @staticmethod
  def glGetNamedFramebufferAttachmentParameteri(arg0: int, arg1: int, arg2: int) -> int: ...

  @staticmethod
  @overload
  def glGetNamedFramebufferAttachmentParameteriv(arg0: int, arg1: int, arg2: int, arg3: list[int]) -> None: ...

  @staticmethod
  @overload
  def glGetNamedFramebufferAttachmentParameteriv(arg0: int, arg1: int, arg2: int, arg3: IntBuffer) -> None: ...

  @staticmethod
  def glGetNamedFramebufferParameteri(arg0: int, arg1: int) -> int: ...

  @staticmethod
  @overload
  def glGetNamedFramebufferParameteriv(arg0: int, arg1: int, arg2: list[int]) -> None: ...

  @staticmethod
  @overload
  def glGetNamedFramebufferParameteriv(arg0: int, arg1: int, arg2: IntBuffer) -> None: ...

  @staticmethod
  def glGetNamedRenderbufferParameteri(arg0: int, arg1: int) -> int: ...

  @staticmethod
  @overload
  def glGetNamedRenderbufferParameteriv(arg0: int, arg1: int, arg2: list[int]) -> None: ...

  @staticmethod
  @overload
  def glGetNamedRenderbufferParameteriv(arg0: int, arg1: int, arg2: IntBuffer) -> None: ...

  @staticmethod
  def glGetQueryBufferObjecti64v(arg0: int, arg1: int, arg2: int, arg3: int) -> None: ...

  @staticmethod
  def glGetQueryBufferObjectiv(arg0: int, arg1: int, arg2: int, arg3: int) -> None: ...

  @staticmethod
  def glGetQueryBufferObjectui64v(arg0: int, arg1: int, arg2: int, arg3: int) -> None: ...

  @staticmethod
  def glGetQueryBufferObjectuiv(arg0: int, arg1: int, arg2: int, arg3: int) -> None: ...

  @staticmethod
  @overload
  def glGetTextureImage(arg0: int, arg1: int, arg2: int, arg3: int, arg4: list[float]) -> None: ...

  @staticmethod
  @overload
  def glGetTextureImage(arg0: int, arg1: int, arg2: int, arg3: int, arg4: list[float]) -> None: ...

  @staticmethod
  @overload
  def glGetTextureImage(arg0: int, arg1: int, arg2: int, arg3: int, arg4: list[int]) -> None: ...

  @staticmethod
  @overload
  def glGetTextureImage(arg0: int, arg1: int, arg2: int, arg3: int, arg4: list[int]) -> None: ...

  @staticmethod
  @overload
  def glGetTextureImage(arg0: int, arg1: int, arg2: int, arg3: int, arg4: ByteBuffer) -> None: ...

  @staticmethod
  @overload
  def glGetTextureImage(arg0: int, arg1: int, arg2: int, arg3: int, arg4: DoubleBuffer) -> None: ...

  @staticmethod
  @overload
  def glGetTextureImage(arg0: int, arg1: int, arg2: int, arg3: int, arg4: FloatBuffer) -> None: ...

  @staticmethod
  @overload
  def glGetTextureImage(arg0: int, arg1: int, arg2: int, arg3: int, arg4: IntBuffer) -> None: ...

  @staticmethod
  @overload
  def glGetTextureImage(arg0: int, arg1: int, arg2: int, arg3: int, arg4: ShortBuffer) -> None: ...

  @staticmethod
  @overload
  def glGetTextureImage(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int) -> None: ...

  @staticmethod
  def glGetTextureLevelParameterf(arg0: int, arg1: int, arg2: int) -> float: ...

  @staticmethod
  @overload
  def glGetTextureLevelParameterfv(arg0: int, arg1: int, arg2: int, arg3: list[float]) -> None: ...

  @staticmethod
  @overload
  def glGetTextureLevelParameterfv(arg0: int, arg1: int, arg2: int, arg3: FloatBuffer) -> None: ...

  @staticmethod
  def glGetTextureLevelParameteri(arg0: int, arg1: int, arg2: int) -> int: ...

  @staticmethod
  @overload
  def glGetTextureLevelParameteriv(arg0: int, arg1: int, arg2: int, arg3: list[int]) -> None: ...

  @staticmethod
  @overload
  def glGetTextureLevelParameteriv(arg0: int, arg1: int, arg2: int, arg3: IntBuffer) -> None: ...

  @staticmethod
  def glGetTextureParameterIi(arg0: int, arg1: int) -> int: ...

  @staticmethod
  @overload
  def glGetTextureParameterIiv(arg0: int, arg1: int, arg2: list[int]) -> None: ...

  @staticmethod
  @overload
  def glGetTextureParameterIiv(arg0: int, arg1: int, arg2: IntBuffer) -> None: ...

  @staticmethod
  def glGetTextureParameterIui(arg0: int, arg1: int) -> int: ...

  @staticmethod
  @overload
  def glGetTextureParameterIuiv(arg0: int, arg1: int, arg2: list[int]) -> None: ...

  @staticmethod
  @overload
  def glGetTextureParameterIuiv(arg0: int, arg1: int, arg2: IntBuffer) -> None: ...

  @staticmethod
  def glGetTextureParameterf(arg0: int, arg1: int) -> float: ...

  @staticmethod
  @overload
  def glGetTextureParameterfv(arg0: int, arg1: int, arg2: list[float]) -> None: ...

  @staticmethod
  @overload
  def glGetTextureParameterfv(arg0: int, arg1: int, arg2: FloatBuffer) -> None: ...

  @staticmethod
  def glGetTextureParameteri(arg0: int, arg1: int) -> int: ...

  @staticmethod
  @overload
  def glGetTextureParameteriv(arg0: int, arg1: int, arg2: list[int]) -> None: ...

  @staticmethod
  @overload
  def glGetTextureParameteriv(arg0: int, arg1: int, arg2: IntBuffer) -> None: ...

  @staticmethod
  @overload
  def glGetTextureSubImage(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int, arg7: int, arg8: int, arg9: int, arg10: list[float]) -> None: ...

  @staticmethod
  @overload
  def glGetTextureSubImage(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int, arg7: int, arg8: int, arg9: int, arg10: list[float]) -> None: ...

  @staticmethod
  @overload
  def glGetTextureSubImage(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int, arg7: int, arg8: int, arg9: int, arg10: list[int]) -> None: ...

  @staticmethod
  @overload
  def glGetTextureSubImage(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int, arg7: int, arg8: int, arg9: int, arg10: list[int]) -> None: ...

  @staticmethod
  @overload
  def glGetTextureSubImage(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int, arg7: int, arg8: int, arg9: int, arg10: ByteBuffer) -> None: ...

  @staticmethod
  @overload
  def glGetTextureSubImage(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int, arg7: int, arg8: int, arg9: int, arg10: DoubleBuffer) -> None: ...

  @staticmethod
  @overload
  def glGetTextureSubImage(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int, arg7: int, arg8: int, arg9: int, arg10: FloatBuffer) -> None: ...

  @staticmethod
  @overload
  def glGetTextureSubImage(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int, arg7: int, arg8: int, arg9: int, arg10: IntBuffer) -> None: ...

  @staticmethod
  @overload
  def glGetTextureSubImage(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int, arg7: int, arg8: int, arg9: int, arg10: ShortBuffer) -> None: ...

  @staticmethod
  @overload
  def glGetTextureSubImage(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int, arg7: int, arg8: int, arg9: int, arg10: int, arg11: int) -> None: ...

  @staticmethod
  @overload
  def glGetTransformFeedbacki(arg0: int, arg1: int) -> int: ...

  @staticmethod
  @overload
  def glGetTransformFeedbacki(arg0: int, arg1: int, arg2: int) -> int: ...

  @staticmethod
  def glGetTransformFeedbacki64(arg0: int, arg1: int, arg2: int) -> int: ...

  @staticmethod
  @overload
  def glGetTransformFeedbacki64_v(arg0: int, arg1: int, arg2: int, arg3: list[int]) -> None: ...

  @staticmethod
  @overload
  def glGetTransformFeedbacki64_v(arg0: int, arg1: int, arg2: int, arg3: LongBuffer) -> None: ...

  @staticmethod
  @overload
  def glGetTransformFeedbacki_v(arg0: int, arg1: int, arg2: int, arg3: list[int]) -> None: ...

  @staticmethod
  @overload
  def glGetTransformFeedbacki_v(arg0: int, arg1: int, arg2: int, arg3: IntBuffer) -> None: ...

  @staticmethod
  @overload
  def glGetTransformFeedbackiv(arg0: int, arg1: int, arg2: list[int]) -> None: ...

  @staticmethod
  @overload
  def glGetTransformFeedbackiv(arg0: int, arg1: int, arg2: IntBuffer) -> None: ...

  @staticmethod
  def glGetVertexArrayIndexed64i(arg0: int, arg1: int, arg2: int) -> int: ...

  @staticmethod
  @overload
  def glGetVertexArrayIndexed64iv(arg0: int, arg1: int, arg2: int, arg3: list[int]) -> None: ...

  @staticmethod
  @overload
  def glGetVertexArrayIndexed64iv(arg0: int, arg1: int, arg2: int, arg3: LongBuffer) -> None: ...

  @staticmethod
  def glGetVertexArrayIndexedi(arg0: int, arg1: int, arg2: int) -> int: ...

  @staticmethod
  @overload
  def glGetVertexArrayIndexediv(arg0: int, arg1: int, arg2: int, arg3: list[int]) -> None: ...

  @staticmethod
  @overload
  def glGetVertexArrayIndexediv(arg0: int, arg1: int, arg2: int, arg3: IntBuffer) -> None: ...

  @staticmethod
  def glGetVertexArrayi(arg0: int, arg1: int) -> int: ...

  @staticmethod
  @overload
  def glGetVertexArrayiv(arg0: int, arg1: int, arg2: list[int]) -> None: ...

  @staticmethod
  @overload
  def glGetVertexArrayiv(arg0: int, arg1: int, arg2: IntBuffer) -> None: ...

  @staticmethod
  @overload
  def glGetnCompressedTexImage(arg0: int, arg1: int, arg2: ByteBuffer) -> None: ...

  @staticmethod
  @overload
  def glGetnCompressedTexImage(arg0: int, arg1: int, arg2: int, arg3: int) -> None: ...

  @staticmethod
  @overload
  def glGetnTexImage(arg0: int, arg1: int, arg2: int, arg3: int, arg4: list[float]) -> None: ...

  @staticmethod
  @overload
  def glGetnTexImage(arg0: int, arg1: int, arg2: int, arg3: int, arg4: list[float]) -> None: ...

  @staticmethod
  @overload
  def glGetnTexImage(arg0: int, arg1: int, arg2: int, arg3: int, arg4: list[int]) -> None: ...

  @staticmethod
  @overload
  def glGetnTexImage(arg0: int, arg1: int, arg2: int, arg3: int, arg4: list[int]) -> None: ...

  @staticmethod
  @overload
  def glGetnTexImage(arg0: int, arg1: int, arg2: int, arg3: int, arg4: ByteBuffer) -> None: ...

  @staticmethod
  @overload
  def glGetnTexImage(arg0: int, arg1: int, arg2: int, arg3: int, arg4: DoubleBuffer) -> None: ...

  @staticmethod
  @overload
  def glGetnTexImage(arg0: int, arg1: int, arg2: int, arg3: int, arg4: FloatBuffer) -> None: ...

  @staticmethod
  @overload
  def glGetnTexImage(arg0: int, arg1: int, arg2: int, arg3: int, arg4: IntBuffer) -> None: ...

  @staticmethod
  @overload
  def glGetnTexImage(arg0: int, arg1: int, arg2: int, arg3: int, arg4: ShortBuffer) -> None: ...

  @staticmethod
  @overload
  def glGetnTexImage(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int) -> None: ...

  @staticmethod
  def glGetnUniformd(arg0: int, arg1: int) -> float: ...

  @staticmethod
  @overload
  def glGetnUniformdv(arg0: int, arg1: int, arg2: list[float]) -> None: ...

  @staticmethod
  @overload
  def glGetnUniformdv(arg0: int, arg1: int, arg2: DoubleBuffer) -> None: ...

  @staticmethod
  def glGetnUniformf(arg0: int, arg1: int) -> float: ...

  @staticmethod
  @overload
  def glGetnUniformfv(arg0: int, arg1: int, arg2: list[float]) -> None: ...

  @staticmethod
  @overload
  def glGetnUniformfv(arg0: int, arg1: int, arg2: FloatBuffer) -> None: ...

  @staticmethod
  def glGetnUniformi(arg0: int, arg1: int) -> int: ...

  @staticmethod
  @overload
  def glGetnUniformiv(arg0: int, arg1: int, arg2: list[int]) -> None: ...

  @staticmethod
  @overload
  def glGetnUniformiv(arg0: int, arg1: int, arg2: IntBuffer) -> None: ...

  @staticmethod
  def glGetnUniformui(arg0: int, arg1: int) -> int: ...

  @staticmethod
  @overload
  def glGetnUniformuiv(arg0: int, arg1: int, arg2: list[int]) -> None: ...

  @staticmethod
  @overload
  def glGetnUniformuiv(arg0: int, arg1: int, arg2: IntBuffer) -> None: ...

  @staticmethod
  @overload
  def glInvalidateNamedFramebufferData(arg0: int, arg1: list[int]) -> None: ...

  @staticmethod
  @overload
  def glInvalidateNamedFramebufferData(arg0: int, arg1: int) -> None: ...

  @staticmethod
  @overload
  def glInvalidateNamedFramebufferData(arg0: int, arg1: IntBuffer) -> None: ...

  @staticmethod
  @overload
  def glInvalidateNamedFramebufferSubData(arg0: int, arg1: list[int], arg2: int, arg3: int, arg4: int, arg5: int) -> None: ...

  @staticmethod
  @overload
  def glInvalidateNamedFramebufferSubData(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int) -> None: ...

  @staticmethod
  @overload
  def glInvalidateNamedFramebufferSubData(arg0: int, arg1: IntBuffer, arg2: int, arg3: int, arg4: int, arg5: int) -> None: ...

  @staticmethod
  @overload
  def glMapNamedBuffer(arg0: int, arg1: int) -> ByteBuffer: ...

  @staticmethod
  @overload
  def glMapNamedBuffer(arg0: int, arg1: int, arg2: ByteBuffer) -> ByteBuffer: ...

  @staticmethod
  @overload
  def glMapNamedBuffer(arg0: int, arg1: int, arg2: int, arg3: ByteBuffer) -> ByteBuffer: ...

  @staticmethod
  @overload
  def glMapNamedBufferRange(arg0: int, arg1: int, arg2: int, arg3: int) -> ByteBuffer: ...

  @staticmethod
  @overload
  def glMapNamedBufferRange(arg0: int, arg1: int, arg2: int, arg3: int, arg4: ByteBuffer) -> ByteBuffer: ...

  @staticmethod
  def glMemoryBarrierByRegion(arg0: int) -> None: ...

  @staticmethod
  @overload
  def glNamedBufferData(arg0: int, arg1: list[float], arg2: int) -> None: ...

  @staticmethod
  @overload
  def glNamedBufferData(arg0: int, arg1: list[float], arg2: int) -> None: ...

  @staticmethod
  @overload
  def glNamedBufferData(arg0: int, arg1: list[int], arg2: int) -> None: ...

  @staticmethod
  @overload
  def glNamedBufferData(arg0: int, arg1: list[int], arg2: int) -> None: ...

  @staticmethod
  @overload
  def glNamedBufferData(arg0: int, arg1: list[int], arg2: int) -> None: ...

  @staticmethod
  @overload
  def glNamedBufferData(arg0: int, arg1: ByteBuffer, arg2: int) -> None: ...

  @staticmethod
  @overload
  def glNamedBufferData(arg0: int, arg1: DoubleBuffer, arg2: int) -> None: ...

  @staticmethod
  @overload
  def glNamedBufferData(arg0: int, arg1: FloatBuffer, arg2: int) -> None: ...

  @staticmethod
  @overload
  def glNamedBufferData(arg0: int, arg1: IntBuffer, arg2: int) -> None: ...

  @staticmethod
  @overload
  def glNamedBufferData(arg0: int, arg1: LongBuffer, arg2: int) -> None: ...

  @staticmethod
  @overload
  def glNamedBufferData(arg0: int, arg1: ShortBuffer, arg2: int) -> None: ...

  @staticmethod
  @overload
  def glNamedBufferData(arg0: int, arg1: int, arg2: int) -> None: ...

  @staticmethod
  @overload
  def glNamedBufferStorage(arg0: int, arg1: list[float], arg2: int) -> None: ...

  @staticmethod
  @overload
  def glNamedBufferStorage(arg0: int, arg1: list[float], arg2: int) -> None: ...

  @staticmethod
  @overload
  def glNamedBufferStorage(arg0: int, arg1: list[int], arg2: int) -> None: ...

  @staticmethod
  @overload
  def glNamedBufferStorage(arg0: int, arg1: list[int], arg2: int) -> None: ...

  @staticmethod
  @overload
  def glNamedBufferStorage(arg0: int, arg1: ByteBuffer, arg2: int) -> None: ...

  @staticmethod
  @overload
  def glNamedBufferStorage(arg0: int, arg1: DoubleBuffer, arg2: int) -> None: ...

  @staticmethod
  @overload
  def glNamedBufferStorage(arg0: int, arg1: FloatBuffer, arg2: int) -> None: ...

  @staticmethod
  @overload
  def glNamedBufferStorage(arg0: int, arg1: IntBuffer, arg2: int) -> None: ...

  @staticmethod
  @overload
  def glNamedBufferStorage(arg0: int, arg1: ShortBuffer, arg2: int) -> None: ...

  @staticmethod
  @overload
  def glNamedBufferStorage(arg0: int, arg1: int, arg2: int) -> None: ...

  @staticmethod
  @overload
  def glNamedBufferSubData(arg0: int, arg1: int, arg2: list[float]) -> None: ...

  @staticmethod
  @overload
  def glNamedBufferSubData(arg0: int, arg1: int, arg2: list[float]) -> None: ...

  @staticmethod
  @overload
  def glNamedBufferSubData(arg0: int, arg1: int, arg2: list[int]) -> None: ...

  @staticmethod
  @overload
  def glNamedBufferSubData(arg0: int, arg1: int, arg2: list[int]) -> None: ...

  @staticmethod
  @overload
  def glNamedBufferSubData(arg0: int, arg1: int, arg2: list[int]) -> None: ...

  @staticmethod
  @overload
  def glNamedBufferSubData(arg0: int, arg1: int, arg2: ByteBuffer) -> None: ...

  @staticmethod
  @overload
  def glNamedBufferSubData(arg0: int, arg1: int, arg2: DoubleBuffer) -> None: ...

  @staticmethod
  @overload
  def glNamedBufferSubData(arg0: int, arg1: int, arg2: FloatBuffer) -> None: ...

  @staticmethod
  @overload
  def glNamedBufferSubData(arg0: int, arg1: int, arg2: IntBuffer) -> None: ...

  @staticmethod
  @overload
  def glNamedBufferSubData(arg0: int, arg1: int, arg2: LongBuffer) -> None: ...

  @staticmethod
  @overload
  def glNamedBufferSubData(arg0: int, arg1: int, arg2: ShortBuffer) -> None: ...

  @staticmethod
  def glNamedFramebufferDrawBuffer(arg0: int, arg1: int) -> None: ...

  @staticmethod
  @overload
  def glNamedFramebufferDrawBuffers(arg0: int, arg1: list[int]) -> None: ...

  @staticmethod
  @overload
  def glNamedFramebufferDrawBuffers(arg0: int, arg1: int) -> None: ...

  @staticmethod
  @overload
  def glNamedFramebufferDrawBuffers(arg0: int, arg1: IntBuffer) -> None: ...

  @staticmethod
  def glNamedFramebufferParameteri(arg0: int, arg1: int, arg2: int) -> None: ...

  @staticmethod
  def glNamedFramebufferReadBuffer(arg0: int, arg1: int) -> None: ...

  @staticmethod
  def glNamedFramebufferRenderbuffer(arg0: int, arg1: int, arg2: int, arg3: int) -> None: ...

  @staticmethod
  def glNamedFramebufferTexture(arg0: int, arg1: int, arg2: int, arg3: int) -> None: ...

  @staticmethod
  def glNamedFramebufferTextureLayer(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int) -> None: ...

  @staticmethod
  def glNamedRenderbufferStorage(arg0: int, arg1: int, arg2: int, arg3: int) -> None: ...

  @staticmethod
  def glNamedRenderbufferStorageMultisample(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int) -> None: ...

  @staticmethod
  @overload
  def glReadnPixels(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: list[float]) -> None: ...

  @staticmethod
  @overload
  def glReadnPixels(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: list[int]) -> None: ...

  @staticmethod
  @overload
  def glReadnPixels(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: list[int]) -> None: ...

  @staticmethod
  @overload
  def glReadnPixels(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: ByteBuffer) -> None: ...

  @staticmethod
  @overload
  def glReadnPixels(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: FloatBuffer) -> None: ...

  @staticmethod
  @overload
  def glReadnPixels(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: IntBuffer) -> None: ...

  @staticmethod
  @overload
  def glReadnPixels(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: ShortBuffer) -> None: ...

  @staticmethod
  @overload
  def glReadnPixels(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int, arg7: int) -> None: ...

  @staticmethod
  def glTextureBarrier() -> None: ...

  @staticmethod
  def glTextureBuffer(arg0: int, arg1: int, arg2: int) -> None: ...

  @staticmethod
  def glTextureBufferRange(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int) -> None: ...

  @staticmethod
  def glTextureParameterIi(arg0: int, arg1: int, arg2: int) -> None: ...

  @staticmethod
  @overload
  def glTextureParameterIiv(arg0: int, arg1: int, arg2: list[int]) -> None: ...

  @staticmethod
  @overload
  def glTextureParameterIiv(arg0: int, arg1: int, arg2: IntBuffer) -> None: ...

  @staticmethod
  def glTextureParameterIui(arg0: int, arg1: int, arg2: int) -> None: ...

  @staticmethod
  @overload
  def glTextureParameterIuiv(arg0: int, arg1: int, arg2: list[int]) -> None: ...

  @staticmethod
  @overload
  def glTextureParameterIuiv(arg0: int, arg1: int, arg2: IntBuffer) -> None: ...

  @staticmethod
  def glTextureParameterf(arg0: int, arg1: int, arg2: float) -> None: ...

  @staticmethod
  @overload
  def glTextureParameterfv(arg0: int, arg1: int, arg2: list[float]) -> None: ...

  @staticmethod
  @overload
  def glTextureParameterfv(arg0: int, arg1: int, arg2: FloatBuffer) -> None: ...

  @staticmethod
  def glTextureParameteri(arg0: int, arg1: int, arg2: int) -> None: ...

  @staticmethod
  @overload
  def glTextureParameteriv(arg0: int, arg1: int, arg2: list[int]) -> None: ...

  @staticmethod
  @overload
  def glTextureParameteriv(arg0: int, arg1: int, arg2: IntBuffer) -> None: ...

  @staticmethod
  def glTextureStorage1D(arg0: int, arg1: int, arg2: int, arg3: int) -> None: ...

  @staticmethod
  def glTextureStorage2D(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int) -> None: ...

  @staticmethod
  def glTextureStorage2DMultisample(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: bool) -> None: ...

  @staticmethod
  def glTextureStorage3D(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int) -> None: ...

  @staticmethod
  def glTextureStorage3DMultisample(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: bool) -> None: ...

  @staticmethod
  @overload
  def glTextureSubImage1D(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: list[float]) -> None: ...

  @staticmethod
  @overload
  def glTextureSubImage1D(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: list[float]) -> None: ...

  @staticmethod
  @overload
  def glTextureSubImage1D(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: list[int]) -> None: ...

  @staticmethod
  @overload
  def glTextureSubImage1D(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: list[int]) -> None: ...

  @staticmethod
  @overload
  def glTextureSubImage1D(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: ByteBuffer) -> None: ...

  @staticmethod
  @overload
  def glTextureSubImage1D(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: DoubleBuffer) -> None: ...

  @staticmethod
  @overload
  def glTextureSubImage1D(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: FloatBuffer) -> None: ...

  @staticmethod
  @overload
  def glTextureSubImage1D(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: IntBuffer) -> None: ...

  @staticmethod
  @overload
  def glTextureSubImage1D(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: ShortBuffer) -> None: ...

  @staticmethod
  @overload
  def glTextureSubImage1D(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int) -> None: ...

  @staticmethod
  @overload
  def glTextureSubImage2D(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int, arg7: int, arg8: list[float]) -> None: ...

  @staticmethod
  @overload
  def glTextureSubImage2D(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int, arg7: int, arg8: list[float]) -> None: ...

  @staticmethod
  @overload
  def glTextureSubImage2D(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int, arg7: int, arg8: list[int]) -> None: ...

  @staticmethod
  @overload
  def glTextureSubImage2D(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int, arg7: int, arg8: list[int]) -> None: ...

  @staticmethod
  @overload
  def glTextureSubImage2D(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int, arg7: int, arg8: ByteBuffer) -> None: ...

  @staticmethod
  @overload
  def glTextureSubImage2D(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int, arg7: int, arg8: DoubleBuffer) -> None: ...

  @staticmethod
  @overload
  def glTextureSubImage2D(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int, arg7: int, arg8: FloatBuffer) -> None: ...

  @staticmethod
  @overload
  def glTextureSubImage2D(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int, arg7: int, arg8: IntBuffer) -> None: ...

  @staticmethod
  @overload
  def glTextureSubImage2D(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int, arg7: int, arg8: ShortBuffer) -> None: ...

  @staticmethod
  @overload
  def glTextureSubImage2D(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int, arg7: int, arg8: int) -> None: ...

  @staticmethod
  @overload
  def glTextureSubImage3D(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int, arg7: int, arg8: int, arg9: int, arg10: list[float]) -> None: ...

  @staticmethod
  @overload
  def glTextureSubImage3D(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int, arg7: int, arg8: int, arg9: int, arg10: list[float]) -> None: ...

  @staticmethod
  @overload
  def glTextureSubImage3D(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int, arg7: int, arg8: int, arg9: int, arg10: list[int]) -> None: ...

  @staticmethod
  @overload
  def glTextureSubImage3D(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int, arg7: int, arg8: int, arg9: int, arg10: list[int]) -> None: ...

  @staticmethod
  @overload
  def glTextureSubImage3D(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int, arg7: int, arg8: int, arg9: int, arg10: ByteBuffer) -> None: ...

  @staticmethod
  @overload
  def glTextureSubImage3D(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int, arg7: int, arg8: int, arg9: int, arg10: DoubleBuffer) -> None: ...

  @staticmethod
  @overload
  def glTextureSubImage3D(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int, arg7: int, arg8: int, arg9: int, arg10: FloatBuffer) -> None: ...

  @staticmethod
  @overload
  def glTextureSubImage3D(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int, arg7: int, arg8: int, arg9: int, arg10: IntBuffer) -> None: ...

  @staticmethod
  @overload
  def glTextureSubImage3D(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int, arg7: int, arg8: int, arg9: int, arg10: ShortBuffer) -> None: ...

  @staticmethod
  @overload
  def glTextureSubImage3D(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int, arg7: int, arg8: int, arg9: int, arg10: int) -> None: ...

  @staticmethod
  def glTransformFeedbackBufferBase(arg0: int, arg1: int, arg2: int) -> None: ...

  @staticmethod
  def glTransformFeedbackBufferRange(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int) -> None: ...

  @staticmethod
  def glUnmapNamedBuffer(arg0: int) -> bool: ...

  @staticmethod
  def glVertexArrayAttribBinding(arg0: int, arg1: int, arg2: int) -> None: ...

  @staticmethod
  def glVertexArrayAttribFormat(arg0: int, arg1: int, arg2: int, arg3: int, arg4: bool, arg5: int) -> None: ...

  @staticmethod
  def glVertexArrayAttribIFormat(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int) -> None: ...

  @staticmethod
  def glVertexArrayAttribLFormat(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int) -> None: ...

  @staticmethod
  def glVertexArrayBindingDivisor(arg0: int, arg1: int, arg2: int) -> None: ...

  @staticmethod
  def glVertexArrayElementBuffer(arg0: int, arg1: int) -> None: ...

  @staticmethod
  def glVertexArrayVertexBuffer(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int) -> None: ...

  @staticmethod
  @overload
  def glVertexArrayVertexBuffers(arg0: int, arg1: int, arg2: list[int], arg3: PointerBuffer, arg4: list[int]) -> None: ...

  @staticmethod
  @overload
  def glVertexArrayVertexBuffers(arg0: int, arg1: int, arg2: IntBuffer, arg3: PointerBuffer, arg4: IntBuffer) -> None: ...

  @staticmethod
  def nglClearNamedBufferData(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int) -> None: ...

  @staticmethod
  def nglClearNamedBufferSubData(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int) -> None: ...

  @staticmethod
  def nglClearNamedFramebufferfv(arg0: int, arg1: int, arg2: int, arg3: int) -> None: ...

  @staticmethod
  def nglClearNamedFramebufferiv(arg0: int, arg1: int, arg2: int, arg3: int) -> None: ...

  @staticmethod
  def nglClearNamedFramebufferuiv(arg0: int, arg1: int, arg2: int, arg3: int) -> None: ...

  @staticmethod
  def nglCompressedTextureSubImage1D(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int) -> None: ...

  @staticmethod
  def nglCompressedTextureSubImage2D(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int, arg7: int, arg8: int) -> None: ...

  @staticmethod
  def nglCompressedTextureSubImage3D(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int, arg7: int, arg8: int, arg9: int, arg10: int) -> None: ...

  @staticmethod
  def nglCreateBuffers(arg0: int, arg1: int) -> None: ...

  @staticmethod
  def nglCreateFramebuffers(arg0: int, arg1: int) -> None: ...

  @staticmethod
  def nglCreateProgramPipelines(arg0: int, arg1: int) -> None: ...

  @staticmethod
  def nglCreateQueries(arg0: int, arg1: int, arg2: int) -> None: ...

  @staticmethod
  def nglCreateRenderbuffers(arg0: int, arg1: int) -> None: ...

  @staticmethod
  def nglCreateSamplers(arg0: int, arg1: int) -> None: ...

  @staticmethod
  def nglCreateTextures(arg0: int, arg1: int, arg2: int) -> None: ...

  @staticmethod
  def nglCreateTransformFeedbacks(arg0: int, arg1: int) -> None: ...

  @staticmethod
  def nglCreateVertexArrays(arg0: int, arg1: int) -> None: ...

  @staticmethod
  def nglGetCompressedTextureImage(arg0: int, arg1: int, arg2: int, arg3: int) -> None: ...

  @staticmethod
  def nglGetCompressedTextureSubImage(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int, arg7: int, arg8: int, arg9: int) -> None: ...

  @staticmethod
  def nglGetNamedBufferParameteri64v(arg0: int, arg1: int, arg2: int) -> None: ...

  @staticmethod
  def nglGetNamedBufferParameteriv(arg0: int, arg1: int, arg2: int) -> None: ...

  @staticmethod
  def nglGetNamedBufferPointerv(arg0: int, arg1: int, arg2: int) -> None: ...

  @staticmethod
  def nglGetNamedBufferSubData(arg0: int, arg1: int, arg2: int, arg3: int) -> None: ...

  @staticmethod
  def nglGetNamedFramebufferAttachmentParameteriv(arg0: int, arg1: int, arg2: int, arg3: int) -> None: ...

  @staticmethod
  def nglGetNamedFramebufferParameteriv(arg0: int, arg1: int, arg2: int) -> None: ...

  @staticmethod
  def nglGetNamedRenderbufferParameteriv(arg0: int, arg1: int, arg2: int) -> None: ...

  @staticmethod
  def nglGetTextureImage(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int) -> None: ...

  @staticmethod
  def nglGetTextureLevelParameterfv(arg0: int, arg1: int, arg2: int, arg3: int) -> None: ...

  @staticmethod
  def nglGetTextureLevelParameteriv(arg0: int, arg1: int, arg2: int, arg3: int) -> None: ...

  @staticmethod
  def nglGetTextureParameterIiv(arg0: int, arg1: int, arg2: int) -> None: ...

  @staticmethod
  def nglGetTextureParameterIuiv(arg0: int, arg1: int, arg2: int) -> None: ...

  @staticmethod
  def nglGetTextureParameterfv(arg0: int, arg1: int, arg2: int) -> None: ...

  @staticmethod
  def nglGetTextureParameteriv(arg0: int, arg1: int, arg2: int) -> None: ...

  @staticmethod
  def nglGetTextureSubImage(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int, arg7: int, arg8: int, arg9: int, arg10: int, arg11: int) -> None: ...

  @staticmethod
  def nglGetTransformFeedbacki64_v(arg0: int, arg1: int, arg2: int, arg3: int) -> None: ...

  @staticmethod
  def nglGetTransformFeedbacki_v(arg0: int, arg1: int, arg2: int, arg3: int) -> None: ...

  @staticmethod
  def nglGetTransformFeedbackiv(arg0: int, arg1: int, arg2: int) -> None: ...

  @staticmethod
  def nglGetVertexArrayIndexed64iv(arg0: int, arg1: int, arg2: int, arg3: int) -> None: ...

  @staticmethod
  def nglGetVertexArrayIndexediv(arg0: int, arg1: int, arg2: int, arg3: int) -> None: ...

  @staticmethod
  def nglGetVertexArrayiv(arg0: int, arg1: int, arg2: int) -> None: ...

  @staticmethod
  def nglGetnCompressedTexImage(arg0: int, arg1: int, arg2: int, arg3: int) -> None: ...

  @staticmethod
  def nglGetnTexImage(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int) -> None: ...

  @staticmethod
  def nglGetnUniformdv(arg0: int, arg1: int, arg2: int, arg3: int) -> None: ...

  @staticmethod
  def nglGetnUniformfv(arg0: int, arg1: int, arg2: int, arg3: int) -> None: ...

  @staticmethod
  def nglGetnUniformiv(arg0: int, arg1: int, arg2: int, arg3: int) -> None: ...

  @staticmethod
  def nglGetnUniformuiv(arg0: int, arg1: int, arg2: int, arg3: int) -> None: ...

  @staticmethod
  def nglInvalidateNamedFramebufferData(arg0: int, arg1: int, arg2: int) -> None: ...

  @staticmethod
  def nglInvalidateNamedFramebufferSubData(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int) -> None: ...

  @staticmethod
  def nglMapNamedBuffer(arg0: int, arg1: int) -> int: ...

  @staticmethod
  def nglMapNamedBufferRange(arg0: int, arg1: int, arg2: int, arg3: int) -> int: ...

  @staticmethod
  def nglNamedBufferData(arg0: int, arg1: int, arg2: int, arg3: int) -> None: ...

  @staticmethod
  def nglNamedBufferStorage(arg0: int, arg1: int, arg2: int, arg3: int) -> None: ...

  @staticmethod
  def nglNamedBufferSubData(arg0: int, arg1: int, arg2: int, arg3: int) -> None: ...

  @staticmethod
  def nglNamedFramebufferDrawBuffers(arg0: int, arg1: int, arg2: int) -> None: ...

  @staticmethod
  def nglReadnPixels(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int, arg7: int) -> None: ...

  @staticmethod
  def nglTextureParameterIiv(arg0: int, arg1: int, arg2: int) -> None: ...

  @staticmethod
  def nglTextureParameterIuiv(arg0: int, arg1: int, arg2: int) -> None: ...

  @staticmethod
  def nglTextureParameterfv(arg0: int, arg1: int, arg2: int) -> None: ...

  @staticmethod
  def nglTextureParameteriv(arg0: int, arg1: int, arg2: int) -> None: ...

  @staticmethod
  def nglTextureSubImage1D(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int) -> None: ...

  @staticmethod
  def nglTextureSubImage2D(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int, arg7: int, arg8: int) -> None: ...

  @staticmethod
  def nglTextureSubImage3D(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int, arg7: int, arg8: int, arg9: int, arg10: int) -> None: ...

  @staticmethod
  def nglVertexArrayVertexBuffers(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int) -> None: ...


class GL46(GL45):

  GL_CLIPPING_INPUT_PRIMITIVES: int

  GL_CLIPPING_OUTPUT_PRIMITIVES: int

  GL_COMPUTE_SHADER_INVOCATIONS: int

  GL_CONTEXT_FLAG_NO_ERROR_BIT: int

  GL_FRAGMENT_SHADER_INVOCATIONS: int

  GL_GEOMETRY_SHADER_PRIMITIVES_EMITTED: int

  GL_MAX_TEXTURE_MAX_ANISOTROPY: int

  GL_NUM_SPIR_V_EXTENSIONS: int

  GL_PARAMETER_BUFFER: int

  GL_PARAMETER_BUFFER_BINDING: int

  GL_POLYGON_OFFSET_CLAMP: int

  GL_PRIMITIVES_SUBMITTED: int

  GL_SHADER_BINARY_FORMAT_SPIR_V: int

  GL_SPIR_V_BINARY: int

  GL_SPIR_V_EXTENSIONS: int

  GL_TESS_CONTROL_SHADER_PATCHES: int

  GL_TESS_EVALUATION_SHADER_INVOCATIONS: int

  GL_TEXTURE_MAX_ANISOTROPY: int

  GL_TRANSFORM_FEEDBACK_OVERFLOW: int

  GL_TRANSFORM_FEEDBACK_STREAM_OVERFLOW: int

  GL_VERTEX_SHADER_INVOCATIONS: int

  GL_VERTICES_SUBMITTED: int

  @staticmethod
  @overload
  def glMultiDrawArraysIndirectCount(arg0: int, arg1: list[int], arg2: int, arg3: int, arg4: int) -> None: ...

  @staticmethod
  @overload
  def glMultiDrawArraysIndirectCount(arg0: int, arg1: ByteBuffer, arg2: int, arg3: int, arg4: int) -> None: ...

  @staticmethod
  @overload
  def glMultiDrawArraysIndirectCount(arg0: int, arg1: IntBuffer, arg2: int, arg3: int, arg4: int) -> None: ...

  @staticmethod
  @overload
  def glMultiDrawArraysIndirectCount(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int) -> None: ...

  @staticmethod
  @overload
  def glMultiDrawElementsIndirectCount(arg0: int, arg1: int, arg2: list[int], arg3: int, arg4: int, arg5: int) -> None: ...

  @staticmethod
  @overload
  def glMultiDrawElementsIndirectCount(arg0: int, arg1: int, arg2: ByteBuffer, arg3: int, arg4: int, arg5: int) -> None: ...

  @staticmethod
  @overload
  def glMultiDrawElementsIndirectCount(arg0: int, arg1: int, arg2: IntBuffer, arg3: int, arg4: int, arg5: int) -> None: ...

  @staticmethod
  @overload
  def glMultiDrawElementsIndirectCount(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int) -> None: ...

  @staticmethod
  def glPolygonOffsetClamp(arg0: float, arg1: float, arg2: float) -> None: ...

  @staticmethod
  @overload
  def glSpecializeShader(arg0: int, arg1: CharSequence, arg2: list[int], arg3: list[int]) -> None: ...

  @staticmethod
  @overload
  def glSpecializeShader(arg0: int, arg1: CharSequence, arg2: IntBuffer, arg3: IntBuffer) -> None: ...

  @staticmethod
  @overload
  def glSpecializeShader(arg0: int, arg1: ByteBuffer, arg2: list[int], arg3: list[int]) -> None: ...

  @staticmethod
  @overload
  def glSpecializeShader(arg0: int, arg1: ByteBuffer, arg2: IntBuffer, arg3: IntBuffer) -> None: ...

  @staticmethod
  def nglMultiDrawArraysIndirectCount(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int) -> None: ...

  @staticmethod
  def nglMultiDrawElementsIndirectCount(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int) -> None: ...

  @staticmethod
  def nglSpecializeShader(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int) -> None: ...


class GL46C(GL45C):

  GL_CLIPPING_INPUT_PRIMITIVES: int

  GL_CLIPPING_OUTPUT_PRIMITIVES: int

  GL_COMPUTE_SHADER_INVOCATIONS: int

  GL_CONTEXT_FLAG_NO_ERROR_BIT: int

  GL_FRAGMENT_SHADER_INVOCATIONS: int

  GL_GEOMETRY_SHADER_PRIMITIVES_EMITTED: int

  GL_MAX_TEXTURE_MAX_ANISOTROPY: int

  GL_NUM_SPIR_V_EXTENSIONS: int

  GL_PARAMETER_BUFFER: int

  GL_PARAMETER_BUFFER_BINDING: int

  GL_POLYGON_OFFSET_CLAMP: int

  GL_PRIMITIVES_SUBMITTED: int

  GL_SHADER_BINARY_FORMAT_SPIR_V: int

  GL_SPIR_V_BINARY: int

  GL_SPIR_V_EXTENSIONS: int

  GL_TESS_CONTROL_SHADER_PATCHES: int

  GL_TESS_EVALUATION_SHADER_INVOCATIONS: int

  GL_TEXTURE_MAX_ANISOTROPY: int

  GL_TRANSFORM_FEEDBACK_OVERFLOW: int

  GL_TRANSFORM_FEEDBACK_STREAM_OVERFLOW: int

  GL_VERTEX_SHADER_INVOCATIONS: int

  GL_VERTICES_SUBMITTED: int

  @staticmethod
  @overload
  def glMultiDrawArraysIndirectCount(arg0: int, arg1: list[int], arg2: int, arg3: int, arg4: int) -> None: ...

  @staticmethod
  @overload
  def glMultiDrawArraysIndirectCount(arg0: int, arg1: ByteBuffer, arg2: int, arg3: int, arg4: int) -> None: ...

  @staticmethod
  @overload
  def glMultiDrawArraysIndirectCount(arg0: int, arg1: IntBuffer, arg2: int, arg3: int, arg4: int) -> None: ...

  @staticmethod
  @overload
  def glMultiDrawArraysIndirectCount(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int) -> None: ...

  @staticmethod
  @overload
  def glMultiDrawElementsIndirectCount(arg0: int, arg1: int, arg2: list[int], arg3: int, arg4: int, arg5: int) -> None: ...

  @staticmethod
  @overload
  def glMultiDrawElementsIndirectCount(arg0: int, arg1: int, arg2: ByteBuffer, arg3: int, arg4: int, arg5: int) -> None: ...

  @staticmethod
  @overload
  def glMultiDrawElementsIndirectCount(arg0: int, arg1: int, arg2: IntBuffer, arg3: int, arg4: int, arg5: int) -> None: ...

  @staticmethod
  @overload
  def glMultiDrawElementsIndirectCount(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int) -> None: ...

  @staticmethod
  def glPolygonOffsetClamp(arg0: float, arg1: float, arg2: float) -> None: ...

  @staticmethod
  @overload
  def glSpecializeShader(arg0: int, arg1: CharSequence, arg2: list[int], arg3: list[int]) -> None: ...

  @staticmethod
  @overload
  def glSpecializeShader(arg0: int, arg1: CharSequence, arg2: IntBuffer, arg3: IntBuffer) -> None: ...

  @staticmethod
  @overload
  def glSpecializeShader(arg0: int, arg1: ByteBuffer, arg2: list[int], arg3: list[int]) -> None: ...

  @staticmethod
  @overload
  def glSpecializeShader(arg0: int, arg1: ByteBuffer, arg2: IntBuffer, arg3: IntBuffer) -> None: ...

  @staticmethod
  def nglMultiDrawArraysIndirectCount(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int) -> None: ...

  @staticmethod
  def nglMultiDrawElementsIndirectCount(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int) -> None: ...

  @staticmethod
  def nglSpecializeShader(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int) -> None: ...


class GLCapabilities: ...


class GLDebugMessageAMDCallback(Callback):

  SIGNATURE: str

  def callback(self, arg0: int) -> None: ...

  def getSignature(self) -> str: ...

  def invoke(self, arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int) -> None: ...

  @staticmethod
  @overload
  def create(arg0: int) -> GLDebugMessageAMDCallback: ...

  @staticmethod
  @overload
  def create(arg0: GLDebugMessageAMDCallbackI) -> GLDebugMessageAMDCallback: ...

  @staticmethod
  def createSafe(arg0: int) -> GLDebugMessageAMDCallback: ...

  @staticmethod
  def getMessage(arg0: int, arg1: int) -> str: ...

  class Container(GLDebugMessageAMDCallback):

    def invoke(self, arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int) -> None: ...


class GLDebugMessageAMDCallbackI:

  SIGNATURE: str

  @overload
  def callback(self, arg0: int) -> None: ...

  @overload
  def callback(self, arg0: int) -> None: ...

  def getSignature(self) -> str: ...

  def invoke(self, arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int) -> None: ...


class GLDebugMessageARBCallback(Callback):

  SIGNATURE: str

  def callback(self, arg0: int) -> None: ...

  def getSignature(self) -> str: ...

  def invoke(self, arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int) -> None: ...

  @staticmethod
  @overload
  def create(arg0: int) -> GLDebugMessageARBCallback: ...

  @staticmethod
  @overload
  def create(arg0: GLDebugMessageARBCallbackI) -> GLDebugMessageARBCallback: ...

  @staticmethod
  def createSafe(arg0: int) -> GLDebugMessageARBCallback: ...

  @staticmethod
  def getMessage(arg0: int, arg1: int) -> str: ...

  class Container(GLDebugMessageARBCallback):

    def invoke(self, arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int) -> None: ...


class GLDebugMessageARBCallbackI:

  SIGNATURE: str

  @overload
  def callback(self, arg0: int) -> None: ...

  @overload
  def callback(self, arg0: int) -> None: ...

  def getSignature(self) -> str: ...

  def invoke(self, arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int) -> None: ...


class GLDebugMessageCallback(Callback):

  SIGNATURE: str

  def callback(self, arg0: int) -> None: ...

  def getSignature(self) -> str: ...

  def invoke(self, arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int) -> None: ...

  @staticmethod
  @overload
  def create(arg0: int) -> GLDebugMessageCallback: ...

  @staticmethod
  @overload
  def create(arg0: GLDebugMessageCallbackI) -> GLDebugMessageCallback: ...

  @staticmethod
  def createSafe(arg0: int) -> GLDebugMessageCallback: ...

  @staticmethod
  def getMessage(arg0: int, arg1: int) -> str: ...

  class Container(GLDebugMessageCallback):

    def invoke(self, arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int) -> None: ...


class GLDebugMessageCallbackI:

  SIGNATURE: str

  @overload
  def callback(self, arg0: int) -> None: ...

  @overload
  def callback(self, arg0: int) -> None: ...

  def getSignature(self) -> str: ...

  def invoke(self, arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int) -> None: ...


class GLUtil:

  @staticmethod
  @overload
  def setupDebugMessageCallback() -> Callback: ...

  @staticmethod
  @overload
  def setupDebugMessageCallback(arg0: PrintStream) -> Callback: ...


class GLX:

  GLX_ACCUM_ALPHA_SIZE: int

  GLX_ACCUM_BLUE_SIZE: int

  GLX_ACCUM_GREEN_SIZE: int

  GLX_ACCUM_RED_SIZE: int

  GLX_ALPHA_SIZE: int

  GLX_AUX_BUFFERS: int

  GLX_BAD_ATTRIBUTE: int

  GLX_BAD_CONTEXT: int

  GLX_BAD_ENUM: int

  GLX_BAD_SCREEN: int

  GLX_BAD_VALUE: int

  GLX_BAD_VISUAL: int

  GLX_BLUE_SIZE: int

  GLX_BUFFER_SIZE: int

  GLX_DEPTH_SIZE: int

  GLX_DOUBLEBUFFER: int

  GLX_GREEN_SIZE: int

  GLX_LEVEL: int

  GLX_NO_EXTENSION: int

  GLX_RED_SIZE: int

  GLX_RGBA: int

  GLX_STENCIL_SIZE: int

  GLX_STEREO: int

  GLX_USE_GL: int

  GLXBadContext: int

  GLXBadContextState: int

  GLXBadContextTag: int

  GLXBadCurrentDrawable: int

  GLXBadCurrentWindow: int

  GLXBadDrawable: int

  GLXBadFBConfig: int

  GLXBadLargeRequest: int

  GLXBadPbuffer: int

  GLXBadPixmap: int

  GLXBadRenderRequest: int

  GLXBadWindow: int

  GLXUnsupportedPrivateRequest: int

  @staticmethod
  @overload
  def glXChooseVisual(arg0: int, arg1: int, arg2: list[int]) -> XVisualInfo: ...

  @staticmethod
  @overload
  def glXChooseVisual(arg0: int, arg1: int, arg2: IntBuffer) -> XVisualInfo: ...

  @staticmethod
  def glXCopyContext(arg0: int, arg1: int, arg2: int, arg3: int) -> None: ...

  @staticmethod
  def glXCreateContext(arg0: int, arg1: XVisualInfo, arg2: int, arg3: bool) -> int: ...

  @staticmethod
  def glXCreateGLXPixmap(arg0: int, arg1: XVisualInfo, arg2: int) -> int: ...

  @staticmethod
  def glXDestroyContext(arg0: int, arg1: int) -> None: ...

  @staticmethod
  def glXDestroyGLXPixmap(arg0: int, arg1: int) -> None: ...

  @staticmethod
  @overload
  def glXGetConfig(arg0: int, arg1: XVisualInfo, arg2: int, arg3: list[int]) -> int: ...

  @staticmethod
  @overload
  def glXGetConfig(arg0: int, arg1: XVisualInfo, arg2: int, arg3: IntBuffer) -> int: ...

  @staticmethod
  def glXGetCurrentContext() -> int: ...

  @staticmethod
  def glXGetCurrentDrawable() -> int: ...

  @staticmethod
  def glXIsDirect(arg0: int, arg1: int) -> bool: ...

  @staticmethod
  def glXMakeCurrent(arg0: int, arg1: int, arg2: int) -> bool: ...

  @staticmethod
  @overload
  def glXQueryExtension(arg0: int, arg1: list[int], arg2: list[int]) -> bool: ...

  @staticmethod
  @overload
  def glXQueryExtension(arg0: int, arg1: IntBuffer, arg2: IntBuffer) -> bool: ...

  @staticmethod
  @overload
  def glXQueryVersion(arg0: int, arg1: list[int], arg2: list[int]) -> bool: ...

  @staticmethod
  @overload
  def glXQueryVersion(arg0: int, arg1: IntBuffer, arg2: IntBuffer) -> bool: ...

  @staticmethod
  def glXSwapBuffers(arg0: int, arg1: int) -> None: ...

  @staticmethod
  def glXUseXFont(arg0: int, arg1: int, arg2: int, arg3: int) -> None: ...

  @staticmethod
  def glXWaitGL() -> None: ...

  @staticmethod
  def glXWaitX() -> None: ...

  @staticmethod
  def nglXChooseVisual(arg0: int, arg1: int, arg2: int) -> int: ...

  @staticmethod
  def nglXCreateContext(arg0: int, arg1: int, arg2: int, arg3: int) -> int: ...

  @staticmethod
  def nglXCreateGLXPixmap(arg0: int, arg1: int, arg2: int) -> int: ...

  @staticmethod
  def nglXGetConfig(arg0: int, arg1: int, arg2: int, arg3: int) -> int: ...

  @staticmethod
  def nglXQueryExtension(arg0: int, arg1: int, arg2: int) -> int: ...

  @staticmethod
  def nglXQueryVersion(arg0: int, arg1: int, arg2: int) -> int: ...

  class Functions:

    ChooseVisual: int

    CopyContext: int

    CreateContext: int

    CreateGLXPixmap: int

    DestroyContext: int

    DestroyGLXPixmap: int

    GetConfig: int

    GetCurrentContext: int

    GetCurrentDrawable: int

    IsDirect: int

    MakeCurrent: int

    QueryExtension: int

    QueryVersion: int

    SwapBuffers: int

    UseXFont: int

    WaitGL: int

    WaitX: int


class GLX11(GLX):

  GLX_EXTENSIONS: int

  GLX_VENDOR: int

  GLX_VERSION: int

  @staticmethod
  def glXGetClientString(arg0: int, arg1: int) -> str: ...

  @staticmethod
  def glXQueryExtensionsString(arg0: int, arg1: int) -> str: ...

  @staticmethod
  def glXQueryServerString(arg0: int, arg1: int, arg2: int) -> str: ...

  @staticmethod
  def nglXGetClientString(arg0: int, arg1: int) -> int: ...

  @staticmethod
  def nglXQueryExtensionsString(arg0: int, arg1: int) -> int: ...

  @staticmethod
  def nglXQueryServerString(arg0: int, arg1: int, arg2: int) -> int: ...


class GLX12(GLX11):

  @staticmethod
  def glXGetCurrentDisplay() -> int: ...


class GLX13(GLX12):

  GLX_ACCUM_BUFFER_BIT: int

  GLX_AUX_BUFFERS_BIT: int

  GLX_BACK_LEFT_BUFFER_BIT: int

  GLX_BACK_RIGHT_BUFFER_BIT: int

  GLX_COLOR_INDEX_BIT: int

  GLX_COLOR_INDEX_TYPE: int

  GLX_CONFIG_CAVEAT: int

  GLX_DAMAGED: int

  GLX_DEPTH_BUFFER_BIT: int

  GLX_DIRECT_COLOR: int

  GLX_DONT_CARE: int

  GLX_DRAWABLE_TYPE: int

  GLX_EVENT_MASK: int

  GLX_FBCONFIG_ID: int

  GLX_FRONT_LEFT_BUFFER_BIT: int

  GLX_FRONT_RIGHT_BUFFER_BIT: int

  GLX_GRAY_SCALE: int

  GLX_HEIGHT: int

  GLX_LARGEST_PBUFFER: int

  GLX_MAX_PBUFFER_HEIGHT: int

  GLX_MAX_PBUFFER_PIXELS: int

  GLX_MAX_PBUFFER_WIDTH: int

  GLX_NON_CONFORMANT_CONFIG: int

  GLX_NONE: int

  GLX_PBUFFER: int

  GLX_PBUFFER_BIT: int

  GLX_PBUFFER_CLOBBER_MASK: int

  GLX_PBUFFER_HEIGHT: int

  GLX_PBUFFER_WIDTH: int

  GLX_PIXMAP_BIT: int

  GLX_PRESERVED_CONTENTS: int

  GLX_PSEUDO_COLOR: int

  GLX_RENDER_TYPE: int

  GLX_RGBA_BIT: int

  GLX_RGBA_TYPE: int

  GLX_SAVED: int

  GLX_SCREEN: int

  GLX_SLOW_CONFIG: int

  GLX_STATIC_COLOR: int

  GLX_STATIC_GRAY: int

  GLX_STENCIL_BUFFER_BIT: int

  GLX_TRANSPARENT_ALPHA_VALUE: int

  GLX_TRANSPARENT_BLUE_VALUE: int

  GLX_TRANSPARENT_GREEN_VALUE: int

  GLX_TRANSPARENT_INDEX: int

  GLX_TRANSPARENT_INDEX_VALUE: int

  GLX_TRANSPARENT_RED_VALUE: int

  GLX_TRANSPARENT_RGB: int

  GLX_TRANSPARENT_TYPE: int

  GLX_TRUE_COLOR: int

  GLX_VISUAL_ID: int

  GLX_WIDTH: int

  GLX_WINDOW: int

  GLX_WINDOW_BIT: int

  GLX_X_RENDERABLE: int

  GLX_X_VISUAL_TYPE: int

  @staticmethod
  @overload
  def glXChooseFBConfig(arg0: int, arg1: int, arg2: list[int]) -> PointerBuffer: ...

  @staticmethod
  @overload
  def glXChooseFBConfig(arg0: int, arg1: int, arg2: IntBuffer) -> PointerBuffer: ...

  @staticmethod
  def glXCreateNewContext(arg0: int, arg1: int, arg2: int, arg3: int, arg4: bool) -> int: ...

  @staticmethod
  @overload
  def glXCreatePbuffer(arg0: int, arg1: int, arg2: list[int]) -> int: ...

  @staticmethod
  @overload
  def glXCreatePbuffer(arg0: int, arg1: int, arg2: IntBuffer) -> int: ...

  @staticmethod
  @overload
  def glXCreatePixmap(arg0: int, arg1: int, arg2: int, arg3: list[int]) -> int: ...

  @staticmethod
  @overload
  def glXCreatePixmap(arg0: int, arg1: int, arg2: int, arg3: IntBuffer) -> int: ...

  @staticmethod
  @overload
  def glXCreateWindow(arg0: int, arg1: int, arg2: int, arg3: list[int]) -> int: ...

  @staticmethod
  @overload
  def glXCreateWindow(arg0: int, arg1: int, arg2: int, arg3: IntBuffer) -> int: ...

  @staticmethod
  def glXDestroyPbuffer(arg0: int, arg1: int) -> None: ...

  @staticmethod
  def glXDestroyPixmap(arg0: int, arg1: int) -> None: ...

  @staticmethod
  def glXGetCurrentReadDrawable() -> int: ...

  @staticmethod
  @overload
  def glXGetFBConfigAttrib(arg0: int, arg1: int, arg2: int, arg3: list[int]) -> int: ...

  @staticmethod
  @overload
  def glXGetFBConfigAttrib(arg0: int, arg1: int, arg2: int, arg3: IntBuffer) -> int: ...

  @staticmethod
  def glXGetFBConfigs(arg0: int, arg1: int) -> PointerBuffer: ...

  @staticmethod
  def glXGetSelectedEvent(arg0: int, arg1: int, arg2: CLongBuffer) -> None: ...

  @staticmethod
  def glXGetVisualFromFBConfig(arg0: int, arg1: int) -> XVisualInfo: ...

  @staticmethod
  def glXMakeContextCurrent(arg0: int, arg1: int, arg2: int, arg3: int) -> bool: ...

  @staticmethod
  @overload
  def glXQueryContext(arg0: int, arg1: int, arg2: int, arg3: list[int]) -> int: ...

  @staticmethod
  @overload
  def glXQueryContext(arg0: int, arg1: int, arg2: int, arg3: IntBuffer) -> int: ...

  @staticmethod
  @overload
  def glXQueryDrawable(arg0: int, arg1: int, arg2: int) -> int: ...

  @staticmethod
  @overload
  def glXQueryDrawable(arg0: int, arg1: int, arg2: int, arg3: list[int]) -> None: ...

  @staticmethod
  @overload
  def glXQueryDrawable(arg0: int, arg1: int, arg2: int, arg3: IntBuffer) -> None: ...

  @staticmethod
  def glXSelectEvent(arg0: int, arg1: int, arg2: int) -> None: ...

  @staticmethod
  def nglXChooseFBConfig(arg0: int, arg1: int, arg2: int, arg3: int) -> int: ...

  @staticmethod
  def nglXCreatePbuffer(arg0: int, arg1: int, arg2: int) -> int: ...

  @staticmethod
  def nglXCreatePixmap(arg0: int, arg1: int, arg2: int, arg3: int) -> int: ...

  @staticmethod
  def nglXCreateWindow(arg0: int, arg1: int, arg2: int, arg3: int) -> int: ...

  @staticmethod
  def nglXGetFBConfigAttrib(arg0: int, arg1: int, arg2: int, arg3: int) -> int: ...

  @staticmethod
  def nglXGetFBConfigs(arg0: int, arg1: int, arg2: int) -> int: ...

  @staticmethod
  def nglXGetSelectedEvent(arg0: int, arg1: int, arg2: int) -> None: ...

  @staticmethod
  def nglXGetVisualFromFBConfig(arg0: int, arg1: int) -> int: ...

  @staticmethod
  def nglXQueryContext(arg0: int, arg1: int, arg2: int, arg3: int) -> int: ...

  @staticmethod
  def nglXQueryDrawable(arg0: int, arg1: int, arg2: int, arg3: int) -> None: ...


class GLX14(GLX13):

  GLX_SAMPLE_BUFFERS: int

  GLX_SAMPLES: int

  @staticmethod
  @overload
  def glXGetProcAddress(arg0: CharSequence) -> int: ...

  @staticmethod
  @overload
  def glXGetProcAddress(arg0: ByteBuffer) -> int: ...

  @staticmethod
  def nglXGetProcAddress(arg0: int) -> int: ...


class GLXAMDGPUAssociation:

  GLX_GPU_CLOCK_AMD: int

  GLX_GPU_FASTEST_TARGET_GPUS_AMD: int

  GLX_GPU_NUM_PIPES_AMD: int

  GLX_GPU_NUM_RB_AMD: int

  GLX_GPU_NUM_SIMD_AMD: int

  GLX_GPU_NUM_SPI_AMD: int

  GLX_GPU_OPENGL_VERSION_STRING_AMD: int

  GLX_GPU_RAM_AMD: int

  GLX_GPU_RENDERER_STRING_AMD: int

  GLX_GPU_VENDOR_AMD: int

  @staticmethod
  def glXBlitContextFramebufferAMD(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int, arg7: int, arg8: int, arg9: int, arg10: int) -> None: ...

  @staticmethod
  def glXCreateAssociatedContextAMD(arg0: int, arg1: int) -> int: ...

  @staticmethod
  @overload
  def glXCreateAssociatedContextAttribsAMD(arg0: int, arg1: int, arg2: list[int]) -> int: ...

  @staticmethod
  @overload
  def glXCreateAssociatedContextAttribsAMD(arg0: int, arg1: int, arg2: IntBuffer) -> int: ...

  @staticmethod
  def glXDeleteAssociatedContextAMD(arg0: int) -> bool: ...

  @staticmethod
  def glXGetContextGPUIDAMD(arg0: int) -> int: ...

  @staticmethod
  def glXGetCurrentAssociatedContextAMD() -> int: ...

  @staticmethod
  def glXGetGPUIDsAMD(arg0: int, arg1: int) -> int: ...

  @staticmethod
  def glXGetGPUInfoAMD(arg0: int, arg1: int, arg2: int, arg3: ByteBuffer) -> int: ...

  @staticmethod
  def glXMakeAssociatedContextCurrentAMD(arg0: int) -> bool: ...

  @staticmethod
  def nglXCreateAssociatedContextAttribsAMD(arg0: int, arg1: int, arg2: int) -> int: ...

  @staticmethod
  def nglXGetGPUInfoAMD(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int) -> int: ...


class GLXARBContextFlushControl:

  GLX_CONTEXT_RELEASE_BEHAVIOR_ARB: int

  GLX_CONTEXT_RELEASE_BEHAVIOR_FLUSH_ARB: int

  GLX_CONTEXT_RELEASE_BEHAVIOR_NONE_ARB: int


class GLXARBCreateContext:

  GLX_CONTEXT_DEBUG_BIT_ARB: int

  GLX_CONTEXT_FLAGS_ARB: int

  GLX_CONTEXT_FORWARD_COMPATIBLE_BIT_ARB: int

  GLX_CONTEXT_MAJOR_VERSION_ARB: int

  GLX_CONTEXT_MINOR_VERSION_ARB: int

  @staticmethod
  @overload
  def glXCreateContextAttribsARB(arg0: int, arg1: int, arg2: int, arg3: bool, arg4: list[int]) -> int: ...

  @staticmethod
  @overload
  def glXCreateContextAttribsARB(arg0: int, arg1: int, arg2: int, arg3: bool, arg4: IntBuffer) -> int: ...

  @staticmethod
  def nglXCreateContextAttribsARB(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int) -> int: ...


class GLXARBCreateContextNoError:

  GLX_CONTEXT_OPENGL_NO_ERROR_ARB: int


class GLXARBCreateContextProfile:

  GLX_CONTEXT_COMPATIBILITY_PROFILE_BIT_ARB: int

  GLX_CONTEXT_CORE_PROFILE_BIT_ARB: int

  GLX_CONTEXT_PROFILE_MASK_ARB: int

  GLXBadProfileARB: int


class GLXARBCreateContextRobustness:

  GLX_CONTEXT_RESET_NOTIFICATION_STRATEGY_ARB: int

  GLX_CONTEXT_ROBUST_ACCESS_BIT_ARB: int

  GLX_LOSE_CONTEXT_ON_RESET_ARB: int

  GLX_NO_RESET_NOTIFICATION_ARB: int


class GLXARBFBConfigFloat:

  GLX_RGBA_FLOAT_BIT_ARB: int

  GLX_RGBA_FLOAT_TYPE_ARB: int


class GLXARBFramebufferSRGB:

  GLX_FRAMEBUFFER_SRGB_CAPABLE_ARB: int


class GLXARBGetProcAddress:

  @staticmethod
  @overload
  def glXGetProcAddressARB(arg0: CharSequence) -> int: ...

  @staticmethod
  @overload
  def glXGetProcAddressARB(arg0: ByteBuffer) -> int: ...

  @staticmethod
  def nglXGetProcAddressARB(arg0: int) -> int: ...


class GLXARBMultisample:

  GLX_SAMPLE_BUFFERS_ARB: int

  GLX_SAMPLES_ARB: int


class GLXARBRobustnessApplicationIsolation:

  GLX_CONTEXT_RESET_ISOLATION_BIT_ARB: int


class GLXARBVertexBufferObject:

  GLX_CONTEXT_ALLOW_BUFFER_BYTE_ORDER_MISMATCH_ARB: int


class GLXCapabilities: ...


class GLXEXTBufferAge:

  GLX_BACK_BUFFER_AGE_EXT: int


class GLXEXTContextPriority:

  GLX_CONTEXT_PRIORITY_HIGH_EXT: int

  GLX_CONTEXT_PRIORITY_LEVEL_EXT: int

  GLX_CONTEXT_PRIORITY_LOW_EXT: int

  GLX_CONTEXT_PRIORITY_MEDIUM_EXT: int


class GLXEXTCreateContextES2Profile:

  GLX_CONTEXT_ES2_PROFILE_BIT_EXT: int


class GLXEXTCreateContextESProfile:

  GLX_CONTEXT_ES_PROFILE_BIT_EXT: int


class GLXEXTFBConfigPackedFloat:

  GLX_RGBA_UNSIGNED_FLOAT_BIT_EXT: int

  GLX_RGBA_UNSIGNED_FLOAT_TYPE_EXT: int


class GLXEXTFramebufferSRGB:

  GLX_FRAMEBUFFER_SRGB_CAPABLE_EXT: int


class GLXEXTImportContext:

  GLX_SCREEN_EXT: int

  GLX_SHARE_CONTEXT_EXT: int

  GLX_VISUAL_ID_EXT: int

  @staticmethod
  def glXFreeContextEXT(arg0: int, arg1: int) -> None: ...

  @staticmethod
  def glXGetContextIDEXT(arg0: int) -> int: ...

  @staticmethod
  def glXGetCurrentDisplayEXT() -> int: ...

  @staticmethod
  def glXImportContextEXT(arg0: int, arg1: int) -> int: ...

  @staticmethod
  @overload
  def glXQueryContextInfoEXT(arg0: int, arg1: int, arg2: int, arg3: list[int]) -> int: ...

  @staticmethod
  @overload
  def glXQueryContextInfoEXT(arg0: int, arg1: int, arg2: int, arg3: IntBuffer) -> int: ...

  @staticmethod
  def nglXQueryContextInfoEXT(arg0: int, arg1: int, arg2: int, arg3: int) -> int: ...


class GLXEXTStereoTree:

  GLX_STEREO_NOTIFY_EXT: int

  GLX_STEREO_NOTIFY_MASK_EXT: int

  GLX_STEREO_TREE_EXT: int


class GLXEXTSwapControl:

  GLX_MAX_SWAP_INTERVAL_EXT: int

  GLX_SWAP_INTERVAL_EXT: int

  @staticmethod
  def glXSwapIntervalEXT(arg0: int, arg1: int, arg2: int) -> None: ...


class GLXEXTSwapControlTear:

  GLX_LATE_SWAPS_TEAR_EXT: int


class GLXEXTTextureFromPixmap:

  GLX_AUX0_EXT: int

  GLX_AUX1_EXT: int

  GLX_AUX2_EXT: int

  GLX_AUX3_EXT: int

  GLX_AUX4_EXT: int

  GLX_AUX5_EXT: int

  GLX_AUX6_EXT: int

  GLX_AUX7_EXT: int

  GLX_AUX8_EXT: int

  GLX_AUX9_EXT: int

  GLX_BACK_EXT: int

  GLX_BACK_LEFT_EXT: int

  GLX_BACK_RIGHT_EXT: int

  GLX_BIND_TO_MIPMAP_TEXTURE_EXT: int

  GLX_BIND_TO_TEXTURE_RGB_EXT: int

  GLX_BIND_TO_TEXTURE_RGBA_EXT: int

  GLX_BIND_TO_TEXTURE_TARGETS_EXT: int

  GLX_FRONT_EXT: int

  GLX_FRONT_LEFT_EXT: int

  GLX_FRONT_RIGHT_EXT: int

  GLX_MIPMAP_TEXTURE_EXT: int

  GLX_TEXTURE_1D_BIT_EXT: int

  GLX_TEXTURE_1D_EXT: int

  GLX_TEXTURE_2D_BIT_EXT: int

  GLX_TEXTURE_2D_EXT: int

  GLX_TEXTURE_FORMAT_EXT: int

  GLX_TEXTURE_FORMAT_NONE_EXT: int

  GLX_TEXTURE_FORMAT_RGB_EXT: int

  GLX_TEXTURE_FORMAT_RGBA_EXT: int

  GLX_TEXTURE_RECTANGLE_BIT_EXT: int

  GLX_TEXTURE_RECTANGLE_EXT: int

  GLX_TEXTURE_TARGET_EXT: int

  GLX_Y_INVERTED_EXT: int

  @staticmethod
  @overload
  def glXBindTexImageEXT(arg0: int, arg1: int, arg2: int, arg3: list[int]) -> None: ...

  @staticmethod
  @overload
  def glXBindTexImageEXT(arg0: int, arg1: int, arg2: int, arg3: IntBuffer) -> None: ...

  @staticmethod
  def glXReleaseTexImageEXT(arg0: int, arg1: int, arg2: int) -> None: ...

  @staticmethod
  def nglXBindTexImageEXT(arg0: int, arg1: int, arg2: int, arg3: int) -> None: ...


class GLXEXTVisualInfo:

  GLX_DIRECT_COLOR_EXT: int

  GLX_GRAY_SCALE_EXT: int

  GLX_NONE_EXT: int

  GLX_PSEUDO_COLOR_EXT: int

  GLX_STATIC_COLOR_EXT: int

  GLX_STATIC_GRAY_EXT: int

  GLX_TRANSPARENT_ALPHA_VALUE_EXT: int

  GLX_TRANSPARENT_BLUE_VALUE_EXT: int

  GLX_TRANSPARENT_GREEN_VALUE_EXT: int

  GLX_TRANSPARENT_INDEX_EXT: int

  GLX_TRANSPARENT_INDEX_VALUE_EXT: int

  GLX_TRANSPARENT_RED_VALUE_EXT: int

  GLX_TRANSPARENT_RGB_EXT: int

  GLX_TRANSPARENT_TYPE_EXT: int

  GLX_TRUE_COLOR_EXT: int

  GLX_X_VISUAL_TYPE_EXT: int


class GLXEXTVisualRating:

  GLX_NON_CONFORMANT_VISUAL_EXT: int

  GLX_NONE_EXT: int

  GLX_SLOW_VISUAL_EXT: int

  GLX_VISUAL_CAVEAT_EXT: int


class GLXINTELSwapEvent:

  GLX_BUFFER_SWAP_COMPLETE_INTEL_MASK: int

  GLX_COPY_COMPLETE_INTEL: int

  GLX_EXCHANGE_COMPLETE_INTEL: int

  GLX_FLIP_COMPLETE_INTEL: int


class GLXNVCopyBuffer:

  @staticmethod
  def glXCopyBufferSubDataNV(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int, arg7: int) -> None: ...

  @staticmethod
  def glXNamedCopyBufferSubDataNV(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int, arg7: int) -> None: ...


class GLXNVCopyImage:

  @staticmethod
  def glXCopyImageSubDataNV(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int, arg7: int, arg8: int, arg9: int, arg10: int, arg11: int, arg12: int, arg13: int, arg14: int, arg15: int, arg16: int, arg17: int) -> None: ...


class GLXNVDelayBeforeSwap:

  @staticmethod
  def glXDelayBeforeSwapNV(arg0: int, arg1: int, arg2: float) -> bool: ...


class GLXNVFloatBuffer:

  GLX_FLOAT_COMPONENTS_NV: int


class GLXNVMultisampleCoverage:

  GLX_COLOR_SAMPLES_NV: int

  GLX_COVERAGE_SAMPLES_NV: int


class GLXNVRobustnessVideoMemoryPurge:

  GLX_GENERATE_RESET_ON_VIDEO_MEMORY_PURGE_NV: int


class GLXNVSwapGroup:

  @staticmethod
  def glXBindSwapBarrierNV(arg0: int, arg1: int, arg2: int) -> bool: ...

  @staticmethod
  def glXJoinSwapGroupNV(arg0: int, arg1: int, arg2: int) -> bool: ...

  @staticmethod
  @overload
  def glXQueryFrameCountNV(arg0: int, arg1: int, arg2: list[int]) -> bool: ...

  @staticmethod
  @overload
  def glXQueryFrameCountNV(arg0: int, arg1: int, arg2: IntBuffer) -> bool: ...

  @staticmethod
  @overload
  def glXQueryMaxSwapGroupsNV(arg0: int, arg1: int, arg2: list[int], arg3: list[int]) -> bool: ...

  @staticmethod
  @overload
  def glXQueryMaxSwapGroupsNV(arg0: int, arg1: int, arg2: IntBuffer, arg3: IntBuffer) -> bool: ...

  @staticmethod
  @overload
  def glXQuerySwapGroupNV(arg0: int, arg1: int, arg2: list[int], arg3: list[int]) -> bool: ...

  @staticmethod
  @overload
  def glXQuerySwapGroupNV(arg0: int, arg1: int, arg2: IntBuffer, arg3: IntBuffer) -> bool: ...

  @staticmethod
  def glXResetFrameCountNV(arg0: int, arg1: int) -> bool: ...

  @staticmethod
  def nglXQueryFrameCountNV(arg0: int, arg1: int, arg2: int) -> int: ...

  @staticmethod
  def nglXQueryMaxSwapGroupsNV(arg0: int, arg1: int, arg2: int, arg3: int) -> int: ...

  @staticmethod
  def nglXQuerySwapGroupNV(arg0: int, arg1: int, arg2: int, arg3: int) -> int: ...


class GLXSGIMakeCurrentRead:

  @staticmethod
  def glXGetCurrentReadDrawableSGI() -> int: ...

  @staticmethod
  def glXMakeCurrentReadSGI(arg0: int, arg1: int, arg2: int, arg3: int) -> bool: ...


class GLXSGISwapControl:

  @staticmethod
  def glXSwapIntervalSGI(arg0: int) -> int: ...


class GLXSGIVideoSync:

  @staticmethod
  @overload
  def glXGetVideoSyncSGI(arg0: list[int]) -> int: ...

  @staticmethod
  @overload
  def glXGetVideoSyncSGI(arg0: IntBuffer) -> int: ...

  @staticmethod
  @overload
  def glXWaitVideoSyncSGI(arg0: int, arg1: int, arg2: list[int]) -> int: ...

  @staticmethod
  @overload
  def glXWaitVideoSyncSGI(arg0: int, arg1: int, arg2: IntBuffer) -> int: ...

  @staticmethod
  def nglXGetVideoSyncSGI(arg0: int) -> int: ...

  @staticmethod
  def nglXWaitVideoSyncSGI(arg0: int, arg1: int, arg2: int) -> int: ...


class GLXSGIXFBConfig:

  GLX_COLOR_INDEX_BIT_SGIX: int

  GLX_COLOR_INDEX_TYPE_SGIX: int

  GLX_DRAWABLE_TYPE_SGIX: int

  GLX_FBCONFIG_ID_SGIX: int

  GLX_PIXMAP_BIT_SGIX: int

  GLX_RENDER_TYPE_SGIX: int

  GLX_RGBA_BIT_SGIX: int

  GLX_RGBA_TYPE_SGIX: int

  GLX_SCREEN_EXT: int

  GLX_WINDOW_BIT_SGIX: int

  GLX_X_RENDERABLE_SGIX: int

  @staticmethod
  @overload
  def glXChooseFBConfigSGIX(arg0: int, arg1: int, arg2: list[int]) -> PointerBuffer: ...

  @staticmethod
  @overload
  def glXChooseFBConfigSGIX(arg0: int, arg1: int, arg2: IntBuffer) -> PointerBuffer: ...

  @staticmethod
  def glXCreateContextWithConfigSGIX(arg0: int, arg1: int, arg2: int, arg3: int, arg4: bool) -> int: ...

  @staticmethod
  def glXCreateGLXPixmapWithConfigSGIX(arg0: int, arg1: int, arg2: int) -> int: ...

  @staticmethod
  @overload
  def glXGetFBConfigAttribSGIX(arg0: int, arg1: int, arg2: int, arg3: list[int]) -> int: ...

  @staticmethod
  @overload
  def glXGetFBConfigAttribSGIX(arg0: int, arg1: int, arg2: int, arg3: IntBuffer) -> int: ...

  @staticmethod
  def glXGetFBConfigFromVisualSGIX(arg0: int, arg1: XVisualInfo) -> int: ...

  @staticmethod
  def glXGetVisualFromFBConfigSGIX(arg0: int, arg1: int) -> XVisualInfo: ...

  @staticmethod
  def nglXChooseFBConfigSGIX(arg0: int, arg1: int, arg2: int, arg3: int) -> int: ...

  @staticmethod
  def nglXGetFBConfigAttribSGIX(arg0: int, arg1: int, arg2: int, arg3: int) -> int: ...

  @staticmethod
  def nglXGetFBConfigFromVisualSGIX(arg0: int, arg1: int) -> int: ...

  @staticmethod
  def nglXGetVisualFromFBConfigSGIX(arg0: int, arg1: int) -> int: ...


class GLXSGIXPbuffer:

  GLX_ACCUM_BUFFER_BIT_SGIX: int

  GLX_AUX_BUFFERS_BIT_SGIX: int

  GLX_BACK_LEFT_BUFFER_BIT_SGIX: int

  GLX_BACK_RIGHT_BUFFER_BIT_SGIX: int

  GLX_BUFFER_CLOBBER_MASK_SGIX: int

  GLX_DAMAGED_SGIX: int

  GLX_DEPTH_BUFFER_BIT_SGIX: int

  GLX_EVENT_MASK_SGIX: int

  GLX_FRONT_LEFT_BUFFER_BIT_SGIX: int

  GLX_FRONT_RIGHT_BUFFER_BIT_SGIX: int

  GLX_HEIGHT_SGIX: int

  GLX_LARGEST_PBUFFER_SGIX: int

  GLX_MAX_PBUFFER_HEIGHT_SGIX: int

  GLX_MAX_PBUFFER_PIXELS_SGIX: int

  GLX_MAX_PBUFFER_WIDTH_SGIX: int

  GLX_OPTIMAL_PBUFFER_HEIGHT_SGIX: int

  GLX_OPTIMAL_PBUFFER_WIDTH_SGIX: int

  GLX_PBUFFER_BIT_SGIX: int

  GLX_PBUFFER_SGIX: int

  GLX_PRESERVED_CONTENTS_SGIX: int

  GLX_SAMPLE_BUFFERS_BIT_SGIX: int

  GLX_SAVED_SGIX: int

  GLX_STENCIL_BUFFER_BIT_SGIX: int

  GLX_WIDTH_SGIX: int

  GLX_WINDOW_SGIX: int

  @staticmethod
  @overload
  def glXCreateGLXPbufferSGIX(arg0: int, arg1: int, arg2: int, arg3: int, arg4: list[int]) -> int: ...

  @staticmethod
  @overload
  def glXCreateGLXPbufferSGIX(arg0: int, arg1: int, arg2: int, arg3: int, arg4: IntBuffer) -> int: ...

  @staticmethod
  def glXDestroyGLXPbufferSGIX(arg0: int, arg1: int) -> None: ...

  @staticmethod
  def glXGetSelectedEventSGIX(arg0: int, arg1: int, arg2: CLongBuffer) -> None: ...

  @staticmethod
  @overload
  def glXQueryGLXPbufferSGIX(arg0: int, arg1: int, arg2: int, arg3: list[int]) -> None: ...

  @staticmethod
  @overload
  def glXQueryGLXPbufferSGIX(arg0: int, arg1: int, arg2: int, arg3: IntBuffer) -> None: ...

  @staticmethod
  def glXSelectEventSGIX(arg0: int, arg1: int, arg2: int) -> None: ...

  @staticmethod
  def nglXCreateGLXPbufferSGIX(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int) -> int: ...

  @staticmethod
  def nglXGetSelectedEventSGIX(arg0: int, arg1: int, arg2: int) -> None: ...

  @staticmethod
  def nglXQueryGLXPbufferSGIX(arg0: int, arg1: int, arg2: int, arg3: int) -> None: ...


class GLXSGIXSwapBarrier:

  @staticmethod
  def glXBindSwapBarrierSGIX(arg0: int, arg1: int, arg2: int) -> None: ...

  @staticmethod
  @overload
  def glXQueryMaxSwapBarriersSGIX(arg0: int, arg1: int, arg2: list[int]) -> bool: ...

  @staticmethod
  @overload
  def glXQueryMaxSwapBarriersSGIX(arg0: int, arg1: int, arg2: IntBuffer) -> bool: ...

  @staticmethod
  def nglXQueryMaxSwapBarriersSGIX(arg0: int, arg1: int, arg2: int) -> int: ...


class GLXSGIXSwapGroup:

  @staticmethod
  def glXJoinSwapGroupSGIX(arg0: int, arg1: int, arg2: int) -> None: ...


class GLXStereoNotifyEventEXT(Struct):

  ALIGNOF: int

  def display(self) -> int: ...

  def evtype(self) -> int: ...

  def extension(self) -> int: ...

  def send_event(self) -> bool: ...

  def serial(self) -> int: ...

  def sizeof(self) -> int: ...

  def stereo_tree(self) -> bool: ...

  def type(self) -> int: ...

  def window(self) -> int: ...

  @staticmethod
  @overload
  def create(arg0: int) -> GLXStereoNotifyEventEXT: ...

  @staticmethod
  @overload
  def create(arg0: int, arg1: int) -> GLXStereoNotifyEventEXT.Buffer: ...

  @staticmethod
  @overload
  def createSafe(arg0: int) -> GLXStereoNotifyEventEXT: ...

  @staticmethod
  @overload
  def createSafe(arg0: int, arg1: int) -> GLXStereoNotifyEventEXT.Buffer: ...

  @staticmethod
  def ndisplay(arg0: int) -> int: ...

  @staticmethod
  def nevtype(arg0: int) -> int: ...

  @staticmethod
  def nextension(arg0: int) -> int: ...

  @staticmethod
  def nsend_event(arg0: int) -> int: ...

  @staticmethod
  def nserial(arg0: int) -> int: ...

  @staticmethod
  def nstereo_tree(arg0: int) -> int: ...

  @staticmethod
  def ntype(arg0: int) -> int: ...

  @staticmethod
  def nwindow(arg0: int) -> int: ...

  def __init__(self, arg0: ByteBuffer): ...

  class Buffer(StructBuffer):

    def display(self) -> int: ...

    def evtype(self) -> int: ...

    def extension(self) -> int: ...

    def send_event(self) -> bool: ...

    def serial(self) -> int: ...

    def stereo_tree(self) -> bool: ...

    def type(self) -> int: ...

    def window(self) -> int: ...

    @overload
    def __init__(self, arg0: ByteBuffer): ...
    @overload
    def __init__(self, arg0: int, arg1: int): ...


class GPU_DEVICE(Struct):

  ALIGNOF: int

  DEVICENAME: int

  DEVICESTRING: int

  FLAGS: int

  RCVIRTUALSCREEN: int

  def DeviceName(self) -> ByteBuffer: ...

  def DeviceNameString(self) -> str: ...

  def DeviceString(self) -> ByteBuffer: ...

  def DeviceStringString(self) -> str: ...

  def Flags(self) -> int: ...

  def cb(self) -> int: ...

  def close(self) -> None: ...

  def free(self) -> None: ...

  def rcVirtualScreen(self) -> RECT: ...

  def sizeof(self) -> int: ...

  @staticmethod
  @overload
  def calloc() -> GPU_DEVICE: ...

  @staticmethod
  @overload
  def calloc(arg0: int) -> GPU_DEVICE.Buffer: ...

  @staticmethod
  @overload
  def callocStack() -> GPU_DEVICE: ...

  @staticmethod
  @overload
  def callocStack(arg0: int) -> GPU_DEVICE.Buffer: ...

  @staticmethod
  @overload
  def callocStack(arg0: MemoryStack) -> GPU_DEVICE: ...

  @staticmethod
  @overload
  def callocStack(arg0: int, arg1: MemoryStack) -> GPU_DEVICE.Buffer: ...

  @staticmethod
  @overload
  def create() -> GPU_DEVICE: ...

  @staticmethod
  @overload
  def create(arg0: int) -> GPU_DEVICE.Buffer: ...

  @staticmethod
  @overload
  def create(arg0: int) -> GPU_DEVICE: ...

  @staticmethod
  @overload
  def create(arg0: int, arg1: int) -> GPU_DEVICE.Buffer: ...

  @staticmethod
  @overload
  def createSafe(arg0: int) -> GPU_DEVICE: ...

  @staticmethod
  @overload
  def createSafe(arg0: int, arg1: int) -> GPU_DEVICE.Buffer: ...

  @staticmethod
  @overload
  def malloc() -> GPU_DEVICE: ...

  @staticmethod
  @overload
  def malloc(arg0: int) -> GPU_DEVICE.Buffer: ...

  @staticmethod
  @overload
  def mallocStack() -> GPU_DEVICE: ...

  @staticmethod
  @overload
  def mallocStack(arg0: int) -> GPU_DEVICE.Buffer: ...

  @staticmethod
  @overload
  def mallocStack(arg0: MemoryStack) -> GPU_DEVICE: ...

  @staticmethod
  @overload
  def mallocStack(arg0: int, arg1: MemoryStack) -> GPU_DEVICE.Buffer: ...

  @staticmethod
  def nDeviceName(arg0: int) -> ByteBuffer: ...

  @staticmethod
  def nDeviceNameString(arg0: int) -> str: ...

  @staticmethod
  def nDeviceString(arg0: int) -> ByteBuffer: ...

  @staticmethod
  def nDeviceStringString(arg0: int) -> str: ...

  @staticmethod
  def nFlags(arg0: int) -> int: ...

  @staticmethod
  def ncb(arg0: int) -> int: ...

  @staticmethod
  def nrcVirtualScreen(arg0: int) -> RECT: ...

  def __init__(self, arg0: ByteBuffer): ...

  class Buffer(StructBuffer):

    def DeviceName(self) -> ByteBuffer: ...

    def DeviceNameString(self) -> str: ...

    def DeviceString(self) -> ByteBuffer: ...

    def DeviceStringString(self) -> str: ...

    def Flags(self) -> int: ...

    def cb(self) -> int: ...

    def close(self) -> None: ...

    def free(self) -> None: ...

    def rcVirtualScreen(self) -> RECT: ...

    @overload
    def __init__(self, arg0: ByteBuffer): ...
    @overload
    def __init__(self, arg0: int, arg1: int): ...


class GREMEDYFrameTerminator:

  @staticmethod
  def glFrameTerminatorGREMEDY() -> None: ...


class GREMEDYStringMarker:

  @staticmethod
  @overload
  def glStringMarkerGREMEDY(arg0: CharSequence) -> None: ...

  @staticmethod
  @overload
  def glStringMarkerGREMEDY(arg0: ByteBuffer) -> None: ...

  @staticmethod
  def nglStringMarkerGREMEDY(arg0: int, arg1: int) -> None: ...


class INTELBlackholeRender:

  GL_BLACKHOLE_RENDER_INTEL: int


class INTELConservativeRasterization:

  GL_CONSERVATIVE_RASTERIZATION_INTEL: int


class INTELFramebufferCMAA:

  @staticmethod
  def glApplyFramebufferAttachmentCMAAINTEL() -> None: ...


class INTELMapTexture:

  GL_LAYOUT_DEFAULT_INTEL: int

  GL_LAYOUT_LINEAR_CPU_CACHED_INTEL: int

  GL_LAYOUT_LINEAR_INTEL: int

  GL_TEXTURE_MEMORY_LAYOUT_INTEL: int

  @staticmethod
  @overload
  def glMapTexture2DINTEL(arg0: int, arg1: int, arg2: int, arg3: list[int], arg4: list[int]) -> ByteBuffer: ...

  @staticmethod
  @overload
  def glMapTexture2DINTEL(arg0: int, arg1: int, arg2: int, arg3: IntBuffer, arg4: IntBuffer) -> ByteBuffer: ...

  @staticmethod
  @overload
  def glMapTexture2DINTEL(arg0: int, arg1: int, arg2: int, arg3: list[int], arg4: list[int], arg5: ByteBuffer) -> ByteBuffer: ...

  @staticmethod
  @overload
  def glMapTexture2DINTEL(arg0: int, arg1: int, arg2: int, arg3: IntBuffer, arg4: IntBuffer, arg5: ByteBuffer) -> ByteBuffer: ...

  @staticmethod
  @overload
  def glMapTexture2DINTEL(arg0: int, arg1: int, arg2: int, arg3: list[int], arg4: list[int], arg5: int, arg6: ByteBuffer) -> ByteBuffer: ...

  @staticmethod
  @overload
  def glMapTexture2DINTEL(arg0: int, arg1: int, arg2: int, arg3: IntBuffer, arg4: IntBuffer, arg5: int, arg6: ByteBuffer) -> ByteBuffer: ...

  @staticmethod
  def glSyncTextureINTEL(arg0: int) -> None: ...

  @staticmethod
  def glUnmapTexture2DINTEL(arg0: int, arg1: int) -> None: ...

  @staticmethod
  def nglMapTexture2DINTEL(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int) -> int: ...


class INTELPerformanceQuery:

  GL_PERFQUERY_COUNTER_DATA_BOOL32_INTEL: int

  GL_PERFQUERY_COUNTER_DATA_DOUBLE_INTEL: int

  GL_PERFQUERY_COUNTER_DATA_FLOAT_INTEL: int

  GL_PERFQUERY_COUNTER_DATA_UINT32_INTEL: int

  GL_PERFQUERY_COUNTER_DATA_UINT64_INTEL: int

  GL_PERFQUERY_COUNTER_DESC_LENGTH_MAX_INTEL: int

  GL_PERFQUERY_COUNTER_DURATION_NORM_INTEL: int

  GL_PERFQUERY_COUNTER_DURATION_RAW_INTEL: int

  GL_PERFQUERY_COUNTER_EVENT_INTEL: int

  GL_PERFQUERY_COUNTER_NAME_LENGTH_MAX_INTEL: int

  GL_PERFQUERY_COUNTER_RAW_INTEL: int

  GL_PERFQUERY_COUNTER_THROUGHPUT_INTEL: int

  GL_PERFQUERY_COUNTER_TIMESTAMP_INTEL: int

  GL_PERFQUERY_DONOT_FLUSH_INTEL: int

  GL_PERFQUERY_FLUSH_INTEL: int

  GL_PERFQUERY_GLOBAL_CONTEXT_INTEL: int

  GL_PERFQUERY_GPA_EXTENDED_COUNTERS_INTEL: int

  GL_PERFQUERY_QUERY_NAME_LENGTH_MAX_INTEL: int

  GL_PERFQUERY_SINGLE_CONTEXT_INTEL: int

  GL_PERFQUERY_WAIT_INTEL: int

  @staticmethod
  def glBeginPerfQueryINTEL(arg0: int) -> None: ...

  @staticmethod
  @overload
  def glCreatePerfQueryINTEL(arg0: int) -> int: ...

  @staticmethod
  @overload
  def glCreatePerfQueryINTEL(arg0: int, arg1: list[int]) -> None: ...

  @staticmethod
  @overload
  def glCreatePerfQueryINTEL(arg0: int, arg1: IntBuffer) -> None: ...

  @staticmethod
  def glDeletePerfQueryINTEL(arg0: int) -> None: ...

  @staticmethod
  def glEndPerfQueryINTEL(arg0: int) -> None: ...

  @staticmethod
  @overload
  def glGetFirstPerfQueryIdINTEL() -> int: ...

  @staticmethod
  @overload
  def glGetFirstPerfQueryIdINTEL(arg0: list[int]) -> None: ...

  @staticmethod
  @overload
  def glGetFirstPerfQueryIdINTEL(arg0: IntBuffer) -> None: ...

  @staticmethod
  @overload
  def glGetNextPerfQueryIdINTEL(arg0: int) -> int: ...

  @staticmethod
  @overload
  def glGetNextPerfQueryIdINTEL(arg0: int, arg1: list[int]) -> None: ...

  @staticmethod
  @overload
  def glGetNextPerfQueryIdINTEL(arg0: int, arg1: IntBuffer) -> None: ...

  @staticmethod
  @overload
  def glGetPerfCounterInfoINTEL(arg0: int, arg1: int, arg2: ByteBuffer, arg3: ByteBuffer, arg4: list[int], arg5: list[int], arg6: list[int], arg7: list[int], arg8: list[int]) -> None: ...

  @staticmethod
  @overload
  def glGetPerfCounterInfoINTEL(arg0: int, arg1: int, arg2: ByteBuffer, arg3: ByteBuffer, arg4: IntBuffer, arg5: IntBuffer, arg6: IntBuffer, arg7: IntBuffer, arg8: LongBuffer) -> None: ...

  @staticmethod
  @overload
  def glGetPerfQueryDataINTEL(arg0: int, arg1: int, arg2: ByteBuffer, arg3: list[int]) -> None: ...

  @staticmethod
  @overload
  def glGetPerfQueryDataINTEL(arg0: int, arg1: int, arg2: ByteBuffer, arg3: IntBuffer) -> None: ...

  @staticmethod
  @overload
  def glGetPerfQueryIdByNameINTEL(arg0: CharSequence) -> int: ...

  @staticmethod
  @overload
  def glGetPerfQueryIdByNameINTEL(arg0: CharSequence, arg1: list[int]) -> None: ...

  @staticmethod
  @overload
  def glGetPerfQueryIdByNameINTEL(arg0: CharSequence, arg1: IntBuffer) -> None: ...

  @staticmethod
  @overload
  def glGetPerfQueryIdByNameINTEL(arg0: ByteBuffer, arg1: list[int]) -> None: ...

  @staticmethod
  @overload
  def glGetPerfQueryIdByNameINTEL(arg0: ByteBuffer, arg1: IntBuffer) -> None: ...

  @staticmethod
  @overload
  def glGetPerfQueryInfoINTEL(arg0: int, arg1: ByteBuffer, arg2: list[int], arg3: list[int], arg4: list[int], arg5: list[int]) -> None: ...

  @staticmethod
  @overload
  def glGetPerfQueryInfoINTEL(arg0: int, arg1: ByteBuffer, arg2: IntBuffer, arg3: IntBuffer, arg4: IntBuffer, arg5: IntBuffer) -> None: ...

  @staticmethod
  def nglCreatePerfQueryINTEL(arg0: int, arg1: int) -> None: ...

  @staticmethod
  def nglGetFirstPerfQueryIdINTEL(arg0: int) -> None: ...

  @staticmethod
  def nglGetNextPerfQueryIdINTEL(arg0: int, arg1: int) -> None: ...

  @staticmethod
  def nglGetPerfCounterInfoINTEL(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int, arg7: int, arg8: int, arg9: int, arg10: int) -> None: ...

  @staticmethod
  def nglGetPerfQueryDataINTEL(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int) -> None: ...

  @staticmethod
  def nglGetPerfQueryIdByNameINTEL(arg0: int, arg1: int) -> None: ...

  @staticmethod
  def nglGetPerfQueryInfoINTEL(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int) -> None: ...


class KHRBlendEquationAdvanced:

  GL_COLORBURN_KHR: int

  GL_COLORDODGE_KHR: int

  GL_DARKEN_KHR: int

  GL_DIFFERENCE_KHR: int

  GL_EXCLUSION_KHR: int

  GL_HARDLIGHT_KHR: int

  GL_HSL_COLOR_KHR: int

  GL_HSL_HUE_KHR: int

  GL_HSL_LUMINOSITY_KHR: int

  GL_HSL_SATURATION_KHR: int

  GL_LIGHTEN_KHR: int

  GL_MULTIPLY_KHR: int

  GL_OVERLAY_KHR: int

  GL_SCREEN_KHR: int

  GL_SOFTLIGHT_KHR: int

  @staticmethod
  def glBlendBarrierKHR() -> None: ...


class KHRBlendEquationAdvancedCoherent:

  GL_BLEND_ADVANCED_COHERENT_KHR: int


class KHRContextFlushControl:

  GL_CONTEXT_RELEASE_BEHAVIOR: int

  GL_CONTEXT_RELEASE_BEHAVIOR_FLUSH: int


class KHRDebug:

  GL_BUFFER: int

  GL_CONTEXT_FLAG_DEBUG_BIT: int

  GL_DEBUG_CALLBACK_FUNCTION: int

  GL_DEBUG_CALLBACK_USER_PARAM: int

  GL_DEBUG_GROUP_STACK_DEPTH: int

  GL_DEBUG_LOGGED_MESSAGES: int

  GL_DEBUG_NEXT_LOGGED_MESSAGE_LENGTH: int

  GL_DEBUG_OUTPUT: int

  GL_DEBUG_OUTPUT_SYNCHRONOUS: int

  GL_DEBUG_SEVERITY_HIGH: int

  GL_DEBUG_SEVERITY_LOW: int

  GL_DEBUG_SEVERITY_MEDIUM: int

  GL_DEBUG_SEVERITY_NOTIFICATION: int

  GL_DEBUG_SOURCE_API: int

  GL_DEBUG_SOURCE_APPLICATION: int

  GL_DEBUG_SOURCE_OTHER: int

  GL_DEBUG_SOURCE_SHADER_COMPILER: int

  GL_DEBUG_SOURCE_THIRD_PARTY: int

  GL_DEBUG_SOURCE_WINDOW_SYSTEM: int

  GL_DEBUG_TYPE_DEPRECATED_BEHAVIOR: int

  GL_DEBUG_TYPE_ERROR: int

  GL_DEBUG_TYPE_MARKER: int

  GL_DEBUG_TYPE_OTHER: int

  GL_DEBUG_TYPE_PERFORMANCE: int

  GL_DEBUG_TYPE_POP_GROUP: int

  GL_DEBUG_TYPE_PORTABILITY: int

  GL_DEBUG_TYPE_PUSH_GROUP: int

  GL_DEBUG_TYPE_UNDEFINED_BEHAVIOR: int

  GL_DISPLAY_LIST: int

  GL_MAX_DEBUG_GROUP_STACK_DEPTH: int

  GL_MAX_DEBUG_LOGGED_MESSAGES: int

  GL_MAX_DEBUG_MESSAGE_LENGTH: int

  GL_MAX_LABEL_LENGTH: int

  GL_PROGRAM: int

  GL_PROGRAM_PIPELINE: int

  GL_QUERY: int

  GL_SAMPLER: int

  GL_SHADER: int

  @staticmethod
  def glDebugMessageCallback(arg0: GLDebugMessageCallbackI, arg1: int) -> None: ...

  @staticmethod
  @overload
  def glDebugMessageControl(arg0: int, arg1: int, arg2: int, arg3: list[int], arg4: bool) -> None: ...

  @staticmethod
  @overload
  def glDebugMessageControl(arg0: int, arg1: int, arg2: int, arg3: int, arg4: bool) -> None: ...

  @staticmethod
  @overload
  def glDebugMessageControl(arg0: int, arg1: int, arg2: int, arg3: IntBuffer, arg4: bool) -> None: ...

  @staticmethod
  @overload
  def glDebugMessageInsert(arg0: int, arg1: int, arg2: int, arg3: int, arg4: CharSequence) -> None: ...

  @staticmethod
  @overload
  def glDebugMessageInsert(arg0: int, arg1: int, arg2: int, arg3: int, arg4: ByteBuffer) -> None: ...

  @staticmethod
  @overload
  def glGetDebugMessageLog(arg0: int, arg1: list[int], arg2: list[int], arg3: list[int], arg4: list[int], arg5: list[int], arg6: ByteBuffer) -> int: ...

  @staticmethod
  @overload
  def glGetDebugMessageLog(arg0: int, arg1: IntBuffer, arg2: IntBuffer, arg3: IntBuffer, arg4: IntBuffer, arg5: IntBuffer, arg6: ByteBuffer) -> int: ...

  @staticmethod
  @overload
  def glGetObjectLabel(arg0: int, arg1: int) -> str: ...

  @staticmethod
  @overload
  def glGetObjectLabel(arg0: int, arg1: int, arg2: int) -> str: ...

  @staticmethod
  @overload
  def glGetObjectLabel(arg0: int, arg1: int, arg2: list[int], arg3: ByteBuffer) -> None: ...

  @staticmethod
  @overload
  def glGetObjectLabel(arg0: int, arg1: int, arg2: IntBuffer, arg3: ByteBuffer) -> None: ...

  @staticmethod
  @overload
  def glGetObjectPtrLabel(arg0: int) -> str: ...

  @staticmethod
  @overload
  def glGetObjectPtrLabel(arg0: int, arg1: int) -> str: ...

  @staticmethod
  @overload
  def glGetObjectPtrLabel(arg0: int, arg1: list[int], arg2: ByteBuffer) -> None: ...

  @staticmethod
  @overload
  def glGetObjectPtrLabel(arg0: int, arg1: IntBuffer, arg2: ByteBuffer) -> None: ...

  @staticmethod
  @overload
  def glObjectLabel(arg0: int, arg1: int, arg2: CharSequence) -> None: ...

  @staticmethod
  @overload
  def glObjectLabel(arg0: int, arg1: int, arg2: ByteBuffer) -> None: ...

  @staticmethod
  @overload
  def glObjectPtrLabel(arg0: int, arg1: CharSequence) -> None: ...

  @staticmethod
  @overload
  def glObjectPtrLabel(arg0: int, arg1: ByteBuffer) -> None: ...

  @staticmethod
  def glPopDebugGroup() -> None: ...

  @staticmethod
  @overload
  def glPushDebugGroup(arg0: int, arg1: int, arg2: CharSequence) -> None: ...

  @staticmethod
  @overload
  def glPushDebugGroup(arg0: int, arg1: int, arg2: ByteBuffer) -> None: ...

  @staticmethod
  def nglDebugMessageCallback(arg0: int, arg1: int) -> None: ...

  @staticmethod
  def nglDebugMessageControl(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: bool) -> None: ...

  @staticmethod
  def nglDebugMessageInsert(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int) -> None: ...

  @staticmethod
  def nglGetDebugMessageLog(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int, arg7: int) -> int: ...

  @staticmethod
  def nglGetObjectLabel(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int) -> None: ...

  @staticmethod
  def nglGetObjectPtrLabel(arg0: int, arg1: int, arg2: int, arg3: int) -> None: ...

  @staticmethod
  def nglObjectLabel(arg0: int, arg1: int, arg2: int, arg3: int) -> None: ...

  @staticmethod
  def nglObjectPtrLabel(arg0: int, arg1: int, arg2: int) -> None: ...

  @staticmethod
  def nglPushDebugGroup(arg0: int, arg1: int, arg2: int, arg3: int) -> None: ...


class KHRNoError:

  GL_CONTEXT_FLAG_NO_ERROR_BIT_KHR: int


class KHRParallelShaderCompile:

  GL_COMPLETION_STATUS_KHR: int

  GL_MAX_SHADER_COMPILER_THREADS_KHR: int

  @staticmethod
  def glMaxShaderCompilerThreadsKHR(arg0: int) -> None: ...


class KHRRobustness:

  GL_CONTEXT_LOST: int

  GL_CONTEXT_ROBUST_ACCESS: int

  GL_GUILTY_CONTEXT_RESET: int

  GL_INNOCENT_CONTEXT_RESET: int

  GL_LOSE_CONTEXT_ON_RESET: int

  GL_NO_ERROR: int

  GL_NO_RESET_NOTIFICATION: int

  GL_RESET_NOTIFICATION_STRATEGY: int

  GL_UNKNOWN_CONTEXT_RESET: int

  @staticmethod
  def glGetGraphicsResetStatus() -> int: ...

  @staticmethod
  def glGetnUniformf(arg0: int, arg1: int) -> float: ...

  @staticmethod
  @overload
  def glGetnUniformfv(arg0: int, arg1: int, arg2: list[float]) -> None: ...

  @staticmethod
  @overload
  def glGetnUniformfv(arg0: int, arg1: int, arg2: FloatBuffer) -> None: ...

  @staticmethod
  def glGetnUniformi(arg0: int, arg1: int) -> int: ...

  @staticmethod
  @overload
  def glGetnUniformiv(arg0: int, arg1: int, arg2: list[int]) -> None: ...

  @staticmethod
  @overload
  def glGetnUniformiv(arg0: int, arg1: int, arg2: IntBuffer) -> None: ...

  @staticmethod
  def glGetnUniformui(arg0: int, arg1: int) -> int: ...

  @staticmethod
  @overload
  def glGetnUniformuiv(arg0: int, arg1: int, arg2: list[int]) -> None: ...

  @staticmethod
  @overload
  def glGetnUniformuiv(arg0: int, arg1: int, arg2: IntBuffer) -> None: ...

  @staticmethod
  @overload
  def glReadnPixels(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: list[float]) -> None: ...

  @staticmethod
  @overload
  def glReadnPixels(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: list[int]) -> None: ...

  @staticmethod
  @overload
  def glReadnPixels(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: list[int]) -> None: ...

  @staticmethod
  @overload
  def glReadnPixels(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: ByteBuffer) -> None: ...

  @staticmethod
  @overload
  def glReadnPixels(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: FloatBuffer) -> None: ...

  @staticmethod
  @overload
  def glReadnPixels(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: IntBuffer) -> None: ...

  @staticmethod
  @overload
  def glReadnPixels(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: ShortBuffer) -> None: ...

  @staticmethod
  @overload
  def glReadnPixels(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int, arg7: int) -> None: ...

  @staticmethod
  def nglGetnUniformfv(arg0: int, arg1: int, arg2: int, arg3: int) -> None: ...

  @staticmethod
  def nglGetnUniformiv(arg0: int, arg1: int, arg2: int, arg3: int) -> None: ...

  @staticmethod
  def nglGetnUniformuiv(arg0: int, arg1: int, arg2: int, arg3: int) -> None: ...

  @staticmethod
  def nglReadnPixels(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int, arg7: int) -> None: ...


class KHRShaderSubgroup:

  GL_SUBGROUP_FEATURE_ARITHMETIC_BIT_KHR: int

  GL_SUBGROUP_FEATURE_BALLOT_BIT_KHR: int

  GL_SUBGROUP_FEATURE_BASIC_BIT_KHR: int

  GL_SUBGROUP_FEATURE_CLUSTERED_BIT_KHR: int

  GL_SUBGROUP_FEATURE_QUAD_BIT_KHR: int

  GL_SUBGROUP_FEATURE_SHUFFLE_BIT_KHR: int

  GL_SUBGROUP_FEATURE_SHUFFLE_RELATIVE_BIT_KHR: int

  GL_SUBGROUP_FEATURE_VOTE_BIT_KHR: int

  GL_SUBGROUP_QUAD_ALL_STAGES_KHR: int

  GL_SUBGROUP_SIZE_KHR: int

  GL_SUBGROUP_SUPPORTED_FEATURES_KHR: int

  GL_SUBGROUP_SUPPORTED_STAGES_KHR: int


class KHRTextureCompressionASTCLDR:

  GL_COMPRESSED_RGBA_ASTC_10x10_KHR: int

  GL_COMPRESSED_RGBA_ASTC_10x5_KHR: int

  GL_COMPRESSED_RGBA_ASTC_10x6_KHR: int

  GL_COMPRESSED_RGBA_ASTC_10x8_KHR: int

  GL_COMPRESSED_RGBA_ASTC_12x10_KHR: int

  GL_COMPRESSED_RGBA_ASTC_12x12_KHR: int

  GL_COMPRESSED_RGBA_ASTC_4x4_KHR: int

  GL_COMPRESSED_RGBA_ASTC_5x4_KHR: int

  GL_COMPRESSED_RGBA_ASTC_5x5_KHR: int

  GL_COMPRESSED_RGBA_ASTC_6x5_KHR: int

  GL_COMPRESSED_RGBA_ASTC_6x6_KHR: int

  GL_COMPRESSED_RGBA_ASTC_8x5_KHR: int

  GL_COMPRESSED_RGBA_ASTC_8x6_KHR: int

  GL_COMPRESSED_RGBA_ASTC_8x8_KHR: int

  GL_COMPRESSED_SRGB8_ALPHA8_ASTC_10x10_KHR: int

  GL_COMPRESSED_SRGB8_ALPHA8_ASTC_10x5_KHR: int

  GL_COMPRESSED_SRGB8_ALPHA8_ASTC_10x6_KHR: int

  GL_COMPRESSED_SRGB8_ALPHA8_ASTC_10x8_KHR: int

  GL_COMPRESSED_SRGB8_ALPHA8_ASTC_12x10_KHR: int

  GL_COMPRESSED_SRGB8_ALPHA8_ASTC_12x12_KHR: int

  GL_COMPRESSED_SRGB8_ALPHA8_ASTC_4x4_KHR: int

  GL_COMPRESSED_SRGB8_ALPHA8_ASTC_5x4_KHR: int

  GL_COMPRESSED_SRGB8_ALPHA8_ASTC_5x5_KHR: int

  GL_COMPRESSED_SRGB8_ALPHA8_ASTC_6x5_KHR: int

  GL_COMPRESSED_SRGB8_ALPHA8_ASTC_6x6_KHR: int

  GL_COMPRESSED_SRGB8_ALPHA8_ASTC_8x5_KHR: int

  GL_COMPRESSED_SRGB8_ALPHA8_ASTC_8x6_KHR: int

  GL_COMPRESSED_SRGB8_ALPHA8_ASTC_8x8_KHR: int


class NVAlphaToCoverageDitherControl:

  GL_ALPHA_TO_COVERAGE_DITHER_DEFAULT_NV: int

  GL_ALPHA_TO_COVERAGE_DITHER_DISABLE_NV: int

  GL_ALPHA_TO_COVERAGE_DITHER_ENABLE_NV: int

  GL_ALPHA_TO_COVERAGE_DITHER_MODE_NV: int

  @staticmethod
  def glAlphaToCoverageDitherControlNV(arg0: int) -> None: ...


class NVBindlessMultiDrawIndirect:

  @staticmethod
  @overload
  def glMultiDrawArraysIndirectBindlessNV(arg0: int, arg1: ByteBuffer, arg2: int, arg3: int, arg4: int) -> None: ...

  @staticmethod
  @overload
  def glMultiDrawArraysIndirectBindlessNV(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int) -> None: ...

  @staticmethod
  @overload
  def glMultiDrawElementsIndirectBindlessNV(arg0: int, arg1: int, arg2: ByteBuffer, arg3: int, arg4: int, arg5: int) -> None: ...

  @staticmethod
  @overload
  def glMultiDrawElementsIndirectBindlessNV(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int) -> None: ...

  @staticmethod
  def nglMultiDrawArraysIndirectBindlessNV(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int) -> None: ...

  @staticmethod
  def nglMultiDrawElementsIndirectBindlessNV(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int) -> None: ...


class NVBindlessMultiDrawIndirectCount:

  @staticmethod
  @overload
  def glMultiDrawArraysIndirectBindlessCountNV(arg0: int, arg1: ByteBuffer, arg2: int, arg3: int, arg4: int, arg5: int) -> None: ...

  @staticmethod
  @overload
  def glMultiDrawArraysIndirectBindlessCountNV(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int) -> None: ...

  @staticmethod
  @overload
  def glMultiDrawElementsIndirectBindlessCountNV(arg0: int, arg1: int, arg2: ByteBuffer, arg3: int, arg4: int, arg5: int, arg6: int) -> None: ...

  @staticmethod
  @overload
  def glMultiDrawElementsIndirectBindlessCountNV(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int) -> None: ...

  @staticmethod
  def nglMultiDrawArraysIndirectBindlessCountNV(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int) -> None: ...

  @staticmethod
  def nglMultiDrawElementsIndirectBindlessCountNV(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int) -> None: ...


class NVBindlessTexture:

  @staticmethod
  def glGetImageHandleNV(arg0: int, arg1: int, arg2: bool, arg3: int, arg4: int) -> int: ...

  @staticmethod
  def glGetTextureHandleNV(arg0: int) -> int: ...

  @staticmethod
  def glGetTextureSamplerHandleNV(arg0: int, arg1: int) -> int: ...

  @staticmethod
  def glIsImageHandleResidentNV(arg0: int) -> bool: ...

  @staticmethod
  def glIsTextureHandleResidentNV(arg0: int) -> bool: ...

  @staticmethod
  def glMakeImageHandleNonResidentNV(arg0: int) -> None: ...

  @staticmethod
  def glMakeImageHandleResidentNV(arg0: int, arg1: int) -> None: ...

  @staticmethod
  def glMakeTextureHandleNonResidentNV(arg0: int) -> None: ...

  @staticmethod
  def glMakeTextureHandleResidentNV(arg0: int) -> None: ...

  @staticmethod
  def glProgramUniformHandleui64NV(arg0: int, arg1: int, arg2: int) -> None: ...

  @staticmethod
  @overload
  def glProgramUniformHandleui64vNV(arg0: int, arg1: int, arg2: list[int]) -> None: ...

  @staticmethod
  @overload
  def glProgramUniformHandleui64vNV(arg0: int, arg1: int, arg2: LongBuffer) -> None: ...

  @staticmethod
  def glUniformHandleui64NV(arg0: int, arg1: int) -> None: ...

  @staticmethod
  @overload
  def glUniformHandleui64vNV(arg0: int, arg1: list[int]) -> None: ...

  @staticmethod
  @overload
  def glUniformHandleui64vNV(arg0: int, arg1: LongBuffer) -> None: ...

  @staticmethod
  def nglProgramUniformHandleui64vNV(arg0: int, arg1: int, arg2: int, arg3: int) -> None: ...

  @staticmethod
  def nglUniformHandleui64vNV(arg0: int, arg1: int, arg2: int) -> None: ...


class NVBlendEquationAdvanced:

  GL_BLEND_OVERLAP_NV: int

  GL_BLEND_PREMULTIPLIED_SRC_NV: int

  GL_BLUE_NV: int

  GL_COLORBURN_NV: int

  GL_COLORDODGE_NV: int

  GL_CONJOINT_NV: int

  GL_CONTRAST_NV: int

  GL_DARKEN_NV: int

  GL_DIFFERENCE_NV: int

  GL_DISJOINT_NV: int

  GL_DST_ATOP_NV: int

  GL_DST_IN_NV: int

  GL_DST_NV: int

  GL_DST_OUT_NV: int

  GL_DST_OVER_NV: int

  GL_EXCLUSION_NV: int

  GL_GREEN_NV: int

  GL_HARDLIGHT_NV: int

  GL_HARDMIX_NV: int

  GL_HSL_COLOR_NV: int

  GL_HSL_HUE_NV: int

  GL_HSL_LUMINOSITY_NV: int

  GL_HSL_SATURATION_NV: int

  GL_INVERT_OVG_NV: int

  GL_INVERT_RGB_NV: int

  GL_LIGHTEN_NV: int

  GL_LINEARBURN_NV: int

  GL_LINEARDODGE_NV: int

  GL_LINEARLIGHT_NV: int

  GL_MINUS_CLAMPED_NV: int

  GL_MINUS_NV: int

  GL_MULTIPLY_NV: int

  GL_OVERLAY_NV: int

  GL_PINLIGHT_NV: int

  GL_PLUS_CLAMPED_ALPHA_NV: int

  GL_PLUS_CLAMPED_NV: int

  GL_PLUS_DARKER_NV: int

  GL_PLUS_NV: int

  GL_RED_NV: int

  GL_SCREEN_NV: int

  GL_SOFTLIGHT_NV: int

  GL_SRC_ATOP_NV: int

  GL_SRC_IN_NV: int

  GL_SRC_NV: int

  GL_SRC_OUT_NV: int

  GL_SRC_OVER_NV: int

  GL_UNCORRELATED_NV: int

  GL_VIVIDLIGHT_NV: int

  GL_XOR_NV: int

  @staticmethod
  def glBlendBarrierNV() -> None: ...

  @staticmethod
  def glBlendParameteriNV(arg0: int, arg1: int) -> None: ...


class NVBlendEquationAdvancedCoherent:

  GL_BLEND_ADVANCED_COHERENT_NV: int


class NVBlendMinmaxFactor:

  GL_FACTOR_MAX_AMD: int

  GL_FACTOR_MIN_AMD: int


class NVClipSpaceWScaling:

  GL_VIEWPORT_POSITION_W_SCALE_NV: int

  GL_VIEWPORT_POSITION_W_SCALE_X_COEFF: int

  GL_VIEWPORT_POSITION_W_SCALE_Y_COEFF: int

  @staticmethod
  def glViewportPositionWScaleNV(arg0: int, arg1: float, arg2: float) -> None: ...


class NVCommandList:

  GL_ALPHA_REF_COMMAND_NV: int

  GL_ATTRIBUTE_ADDRESS_COMMAND_NV: int

  GL_BLEND_COLOR_COMMAND_NV: int

  GL_DRAW_ARRAYS_COMMAND_NV: int

  GL_DRAW_ARRAYS_INSTANCED_COMMAND_NV: int

  GL_DRAW_ARRAYS_STRIP_COMMAND_NV: int

  GL_DRAW_ELEMENTS_COMMAND_NV: int

  GL_DRAW_ELEMENTS_INSTANCED_COMMAND_NV: int

  GL_DRAW_ELEMENTS_STRIP_COMMAND_NV: int

  GL_ELEMENT_ADDRESS_COMMAND_NV: int

  GL_FRONT_FACE_COMMAND_NV: int

  GL_LINE_WIDTH_COMMAND_NV: int

  GL_NOP_COMMAND_NV: int

  GL_POLYGON_OFFSET_COMMAND_NV: int

  GL_SCISSOR_COMMAND_NV: int

  GL_STENCIL_REF_COMMAND_NV: int

  GL_TERMINATE_SEQUENCE_COMMAND_NV: int

  GL_UNIFORM_ADDRESS_COMMAND_NV: int

  GL_VIEWPORT_COMMAND_NV: int

  @staticmethod
  def glCallCommandListNV(arg0: int) -> None: ...

  @staticmethod
  def glCommandListSegmentsNV(arg0: int, arg1: int) -> None: ...

  @staticmethod
  def glCompileCommandListNV(arg0: int) -> None: ...

  @staticmethod
  @overload
  def glCreateCommandListsNV() -> int: ...

  @staticmethod
  @overload
  def glCreateCommandListsNV(arg0: list[int]) -> None: ...

  @staticmethod
  @overload
  def glCreateCommandListsNV(arg0: IntBuffer) -> None: ...

  @staticmethod
  @overload
  def glCreateStatesNV() -> int: ...

  @staticmethod
  @overload
  def glCreateStatesNV(arg0: list[int]) -> None: ...

  @staticmethod
  @overload
  def glCreateStatesNV(arg0: IntBuffer) -> None: ...

  @staticmethod
  @overload
  def glDeleteCommandListsNV(arg0: list[int]) -> None: ...

  @staticmethod
  @overload
  def glDeleteCommandListsNV(arg0: int) -> None: ...

  @staticmethod
  @overload
  def glDeleteCommandListsNV(arg0: IntBuffer) -> None: ...

  @staticmethod
  @overload
  def glDeleteStatesNV(arg0: list[int]) -> None: ...

  @staticmethod
  @overload
  def glDeleteStatesNV(arg0: int) -> None: ...

  @staticmethod
  @overload
  def glDeleteStatesNV(arg0: IntBuffer) -> None: ...

  @staticmethod
  @overload
  def glDrawCommandsAddressNV(arg0: int, arg1: list[int], arg2: list[int]) -> None: ...

  @staticmethod
  @overload
  def glDrawCommandsAddressNV(arg0: int, arg1: LongBuffer, arg2: IntBuffer) -> None: ...

  @staticmethod
  @overload
  def glDrawCommandsNV(arg0: int, arg1: int, arg2: PointerBuffer, arg3: list[int]) -> None: ...

  @staticmethod
  @overload
  def glDrawCommandsNV(arg0: int, arg1: int, arg2: PointerBuffer, arg3: IntBuffer) -> None: ...

  @staticmethod
  @overload
  def glDrawCommandsStatesAddressNV(arg0: list[int], arg1: list[int], arg2: list[int], arg3: list[int]) -> None: ...

  @staticmethod
  @overload
  def glDrawCommandsStatesAddressNV(arg0: LongBuffer, arg1: IntBuffer, arg2: IntBuffer, arg3: IntBuffer) -> None: ...

  @staticmethod
  @overload
  def glDrawCommandsStatesNV(arg0: int, arg1: PointerBuffer, arg2: list[int], arg3: list[int], arg4: list[int]) -> None: ...

  @staticmethod
  @overload
  def glDrawCommandsStatesNV(arg0: int, arg1: PointerBuffer, arg2: IntBuffer, arg3: IntBuffer, arg4: IntBuffer) -> None: ...

  @staticmethod
  def glGetCommandHeaderNV(arg0: int, arg1: int) -> int: ...

  @staticmethod
  def glGetStageIndexNV(arg0: int) -> int: ...

  @staticmethod
  def glIsCommandListNV(arg0: int) -> bool: ...

  @staticmethod
  def glIsStateNV(arg0: int) -> bool: ...

  @staticmethod
  @overload
  def glListDrawCommandsStatesClientNV(arg0: int, arg1: int, arg2: PointerBuffer, arg3: PointerBuffer, arg4: list[int], arg5: list[int]) -> None: ...

  @staticmethod
  @overload
  def glListDrawCommandsStatesClientNV(arg0: int, arg1: int, arg2: PointerBuffer, arg3: PointerBuffer, arg4: IntBuffer, arg5: IntBuffer) -> None: ...

  @staticmethod
  def glStateCaptureNV(arg0: int, arg1: int) -> None: ...

  @staticmethod
  def nglCreateCommandListsNV(arg0: int, arg1: int) -> None: ...

  @staticmethod
  def nglCreateStatesNV(arg0: int, arg1: int) -> None: ...

  @staticmethod
  def nglDeleteCommandListsNV(arg0: int, arg1: int) -> None: ...

  @staticmethod
  def nglDeleteStatesNV(arg0: int, arg1: int) -> None: ...

  @staticmethod
  def nglDrawCommandsAddressNV(arg0: int, arg1: int, arg2: int, arg3: int) -> None: ...

  @staticmethod
  def nglDrawCommandsNV(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int) -> None: ...

  @staticmethod
  def nglDrawCommandsStatesAddressNV(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int) -> None: ...

  @staticmethod
  def nglDrawCommandsStatesNV(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int) -> None: ...

  @staticmethod
  def nglListDrawCommandsStatesClientNV(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int) -> None: ...


class NVConditionalRender:

  GL_QUERY_BY_REGION_NO_WAIT_NV: int

  GL_QUERY_BY_REGION_WAIT_NV: int

  GL_QUERY_NO_WAIT_NV: int

  GL_QUERY_WAIT_NV: int

  @staticmethod
  def glBeginConditionalRenderNV(arg0: int, arg1: int) -> None: ...

  @staticmethod
  def glEndConditionalRenderNV() -> None: ...


class NVConservativeRaster:

  GL_CONSERVATIVE_RASTERIZATION_NV: int

  GL_MAX_SUBPIXEL_PRECISION_BIAS_BITS_NV: int

  GL_SUBPIXEL_PRECISION_BIAS_X_BITS_NV: int

  GL_SUBPIXEL_PRECISION_BIAS_Y_BITS_NV: int

  @staticmethod
  def glSubpixelPrecisionBiasNV(arg0: int, arg1: int) -> None: ...


class NVConservativeRasterDilate:

  GL_CONSERVATIVE_RASTER_DILATE_GRANULARITY_NV: int

  GL_CONSERVATIVE_RASTER_DILATE_NV: int

  GL_CONSERVATIVE_RASTER_DILATE_RANGE_NV: int

  @staticmethod
  def glConservativeRasterParameterfNV(arg0: int, arg1: float) -> None: ...


class NVConservativeRasterPreSnap:

  GL_CONSERVATIVE_RASTER_MODE_PRE_SNAP_NV: int


class NVConservativeRasterPreSnapTriangles:

  GL_CONSERVATIVE_RASTER_MODE_NV: int

  GL_CONSERVATIVE_RASTER_MODE_POST_SNAP_NV: int

  GL_CONSERVATIVE_RASTER_MODE_PRE_SNAP_TRIANGLES_NV: int

  @staticmethod
  def glConservativeRasterParameteriNV(arg0: int, arg1: int) -> None: ...


class NVCopyDepthToColor:

  GL_DEPTH_STENCIL_TO_BGRA_NV: int

  GL_DEPTH_STENCIL_TO_RGBA_NV: int


class NVCopyImage:

  @staticmethod
  def glCopyImageSubDataNV(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int, arg7: int, arg8: int, arg9: int, arg10: int, arg11: int, arg12: int, arg13: int, arg14: int) -> None: ...


class NVDeepTexture3D:

  GL_MAX_DEEP_3D_TEXTURE_DEPTH_NV: int

  GL_MAX_DEEP_3D_TEXTURE_WIDTH_HEIGHT_NV: int


class NVDepthBufferFloat:

  GL_DEPTH32F_STENCIL8_NV: int

  GL_DEPTH_BUFFER_FLOAT_MODE_NV: int

  GL_DEPTH_COMPONENT32F_NV: int

  GL_FLOAT_32_UNSIGNED_INT_24_8_REV_NV: int

  @staticmethod
  def glClearDepthdNV(arg0: float) -> None: ...

  @staticmethod
  def glDepthBoundsdNV(arg0: float, arg1: float) -> None: ...

  @staticmethod
  def glDepthRangedNV(arg0: float, arg1: float) -> None: ...


class NVDepthClamp:

  GL_DEPTH_CLAMP_NV: int


class NVDrawTexture:

  @staticmethod
  def glDrawTextureNV(arg0: int, arg1: int, arg2: float, arg3: float, arg4: float, arg5: float, arg6: float, arg7: float, arg8: float, arg9: float, arg10: float) -> None: ...


class NVDrawVulkanImage:

  @staticmethod
  def glDrawVkImageNV(arg0: int, arg1: int, arg2: float, arg3: float, arg4: float, arg5: float, arg6: float, arg7: float, arg8: float, arg9: float, arg10: float) -> None: ...

  @staticmethod
  @overload
  def glGetVkProcAddrNV(arg0: CharSequence) -> int: ...

  @staticmethod
  @overload
  def glGetVkProcAddrNV(arg0: ByteBuffer) -> int: ...

  @staticmethod
  def glSignalVkFenceNV(arg0: int) -> None: ...

  @staticmethod
  def glSignalVkSemaphoreNV(arg0: int) -> None: ...

  @staticmethod
  def glWaitVkSemaphoreNV(arg0: int) -> None: ...

  @staticmethod
  def nglGetVkProcAddrNV(arg0: int) -> int: ...


class NVExplicitMultisample:

  GL_INT_SAMPLER_RENDERBUFFER_NV: int

  GL_MAX_SAMPLE_MASK_WORDS_NV: int

  GL_SAMPLE_MASK_NV: int

  GL_SAMPLE_MASK_VALUE_NV: int

  GL_SAMPLE_POSITION_NV: int

  GL_SAMPLER_RENDERBUFFER_NV: int

  GL_TEXTURE_BINDING_RENDERBUFFER_NV: int

  GL_TEXTURE_RENDERBUFFER_DATA_STORE_BINDING_NV: int

  GL_TEXTURE_RENDERBUFFER_NV: int

  GL_UNSIGNED_INT_SAMPLER_RENDERBUFFER_NV: int

  @staticmethod
  @overload
  def glGetMultisamplefvNV(arg0: int, arg1: int, arg2: list[float]) -> None: ...

  @staticmethod
  @overload
  def glGetMultisamplefvNV(arg0: int, arg1: int, arg2: FloatBuffer) -> None: ...

  @staticmethod
  def glSampleMaskIndexedNV(arg0: int, arg1: int) -> None: ...

  @staticmethod
  def glTexRenderbufferNV(arg0: int, arg1: int) -> None: ...

  @staticmethod
  def nglGetMultisamplefvNV(arg0: int, arg1: int, arg2: int) -> None: ...


class NVFence:

  GL_ALL_COMPLETED_NV: int

  GL_FENCE_CONDITION_NV: int

  GL_FENCE_STATUS_NV: int

  @staticmethod
  @overload
  def glDeleteFencesNV(arg0: list[int]) -> None: ...

  @staticmethod
  @overload
  def glDeleteFencesNV(arg0: int) -> None: ...

  @staticmethod
  @overload
  def glDeleteFencesNV(arg0: IntBuffer) -> None: ...

  @staticmethod
  def glFinishFenceNV(arg0: int) -> None: ...

  @staticmethod
  @overload
  def glGenFencesNV() -> int: ...

  @staticmethod
  @overload
  def glGenFencesNV(arg0: list[int]) -> None: ...

  @staticmethod
  @overload
  def glGenFencesNV(arg0: IntBuffer) -> None: ...

  @staticmethod
  def glGetFenceiNV(arg0: int, arg1: int) -> int: ...

  @staticmethod
  @overload
  def glGetFenceivNV(arg0: int, arg1: int, arg2: list[int]) -> None: ...

  @staticmethod
  @overload
  def glGetFenceivNV(arg0: int, arg1: int, arg2: IntBuffer) -> None: ...

  @staticmethod
  def glIsFenceNV(arg0: int) -> bool: ...

  @staticmethod
  def glSetFenceNV(arg0: int, arg1: int) -> None: ...

  @staticmethod
  def glTestFenceNV(arg0: int) -> bool: ...

  @staticmethod
  def nglDeleteFencesNV(arg0: int, arg1: int) -> None: ...

  @staticmethod
  def nglGenFencesNV(arg0: int, arg1: int) -> None: ...

  @staticmethod
  def nglGetFenceivNV(arg0: int, arg1: int, arg2: int) -> None: ...


class NVFillRectangle:

  GL_FILL_RECTANGLE_NV: int


class NVFloatBuffer:

  GL_FLOAT_CLEAR_COLOR_VALUE_NV: int

  GL_FLOAT_R16_NV: int

  GL_FLOAT_R32_NV: int

  GL_FLOAT_R_NV: int

  GL_FLOAT_RG16_NV: int

  GL_FLOAT_RG32_NV: int

  GL_FLOAT_RG_NV: int

  GL_FLOAT_RGB16_NV: int

  GL_FLOAT_RGB32_NV: int

  GL_FLOAT_RGB_NV: int

  GL_FLOAT_RGBA16_NV: int

  GL_FLOAT_RGBA32_NV: int

  GL_FLOAT_RGBA_MODE_NV: int

  GL_FLOAT_RGBA_NV: int

  GL_TEXTURE_FLOAT_COMPONENTS_NV: int


class NVFogDistance:

  GL_EYE_PLANE_ABSOLUTE_NV: int

  GL_EYE_RADIAL_NV: int

  GL_FOG_DISTANCE_MODE_NV: int


class NVFragmentCoverageToColor:

  GL_FRAGMENT_COVERAGE_COLOR_NV: int

  GL_FRAGMENT_COVERAGE_TO_COLOR_NV: int

  @staticmethod
  def glFragmentCoverageColorNV(arg0: int) -> None: ...


class NVFramebufferMixedSamples:

  GL_COLOR_SAMPLES_NV: int

  GL_COVERAGE_MODULATION_NV: int

  GL_COVERAGE_MODULATION_TABLE_NV: int

  GL_COVERAGE_MODULATION_TABLE_SIZE_NV: int

  GL_DEPTH_SAMPLES_NV: int

  GL_EFFECTIVE_RASTER_SAMPLES_EXT: int

  GL_MAX_RASTER_SAMPLES_EXT: int

  GL_MIXED_DEPTH_SAMPLES_SUPPORTED_NV: int

  GL_MIXED_STENCIL_SAMPLES_SUPPORTED_NV: int

  GL_MULTISAMPLE_RASTERIZATION_ALLOWED_EXT: int

  GL_RASTER_FIXED_SAMPLE_LOCATIONS_EXT: int

  GL_RASTER_MULTISAMPLE_EXT: int

  GL_RASTER_SAMPLES_EXT: int

  GL_STENCIL_SAMPLES_NV: int

  @staticmethod
  def glCoverageModulationNV(arg0: int) -> None: ...

  @staticmethod
  @overload
  def glCoverageModulationTableNV(arg0: list[float]) -> None: ...

  @staticmethod
  @overload
  def glCoverageModulationTableNV(arg0: FloatBuffer) -> None: ...

  @staticmethod
  @overload
  def glGetCoverageModulationTableNV(arg0: list[float]) -> None: ...

  @staticmethod
  @overload
  def glGetCoverageModulationTableNV(arg0: FloatBuffer) -> None: ...

  @staticmethod
  def glRasterSamplesEXT(arg0: int, arg1: bool) -> None: ...

  @staticmethod
  def nglCoverageModulationTableNV(arg0: int, arg1: int) -> None: ...

  @staticmethod
  def nglGetCoverageModulationTableNV(arg0: int, arg1: int) -> None: ...


class NVFramebufferMultisampleCoverage:

  GL_MAX_MULTISAMPLE_COVERAGE_MODES_NV: int

  GL_MULTISAMPLE_COVERAGE_MODES_NV: int

  GL_RENDERBUFFER_COLOR_SAMPLES_NV: int

  GL_RENDERBUFFER_COVERAGE_SAMPLES_NV: int

  @staticmethod
  def glRenderbufferStorageMultisampleCoverageNV(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int) -> None: ...


class NVGPUMulticast:

  GL_MULTICAST_GPUS_NV: int

  GL_MULTICAST_PROGRAMMABLE_SAMPLE_LOCATION_NV: int

  GL_PER_GPU_STORAGE_BIT_NV: int

  GL_PER_GPU_STORAGE_NV: int

  GL_RENDER_GPU_MASK_NV: int

  @staticmethod
  def glMulticastBarrierNV() -> None: ...

  @staticmethod
  def glMulticastBlitFramebufferNV(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int, arg7: int, arg8: int, arg9: int, arg10: int, arg11: int) -> None: ...

  @staticmethod
  @overload
  def glMulticastBufferSubDataNV(arg0: int, arg1: int, arg2: int, arg3: list[float]) -> None: ...

  @staticmethod
  @overload
  def glMulticastBufferSubDataNV(arg0: int, arg1: int, arg2: int, arg3: list[float]) -> None: ...

  @staticmethod
  @overload
  def glMulticastBufferSubDataNV(arg0: int, arg1: int, arg2: int, arg3: list[int]) -> None: ...

  @staticmethod
  @overload
  def glMulticastBufferSubDataNV(arg0: int, arg1: int, arg2: int, arg3: list[int]) -> None: ...

  @staticmethod
  @overload
  def glMulticastBufferSubDataNV(arg0: int, arg1: int, arg2: int, arg3: ByteBuffer) -> None: ...

  @staticmethod
  @overload
  def glMulticastBufferSubDataNV(arg0: int, arg1: int, arg2: int, arg3: DoubleBuffer) -> None: ...

  @staticmethod
  @overload
  def glMulticastBufferSubDataNV(arg0: int, arg1: int, arg2: int, arg3: FloatBuffer) -> None: ...

  @staticmethod
  @overload
  def glMulticastBufferSubDataNV(arg0: int, arg1: int, arg2: int, arg3: IntBuffer) -> None: ...

  @staticmethod
  @overload
  def glMulticastBufferSubDataNV(arg0: int, arg1: int, arg2: int, arg3: ShortBuffer) -> None: ...

  @staticmethod
  def glMulticastCopyBufferSubDataNV(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int) -> None: ...

  @staticmethod
  def glMulticastCopyImageSubDataNV(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int, arg7: int, arg8: int, arg9: int, arg10: int, arg11: int, arg12: int, arg13: int, arg14: int, arg15: int, arg16: int) -> None: ...

  @staticmethod
  @overload
  def glMulticastFramebufferSampleLocationsfvNV(arg0: int, arg1: int, arg2: int, arg3: list[float]) -> None: ...

  @staticmethod
  @overload
  def glMulticastFramebufferSampleLocationsfvNV(arg0: int, arg1: int, arg2: int, arg3: FloatBuffer) -> None: ...

  @staticmethod
  def glMulticastGetQueryObjecti64NV(arg0: int, arg1: int, arg2: int) -> int: ...

  @staticmethod
  @overload
  def glMulticastGetQueryObjecti64vNV(arg0: int, arg1: int, arg2: int, arg3: list[int]) -> None: ...

  @staticmethod
  @overload
  def glMulticastGetQueryObjecti64vNV(arg0: int, arg1: int, arg2: int, arg3: LongBuffer) -> None: ...

  @staticmethod
  def glMulticastGetQueryObjectiNV(arg0: int, arg1: int, arg2: int) -> int: ...

  @staticmethod
  @overload
  def glMulticastGetQueryObjectivNV(arg0: int, arg1: int, arg2: int, arg3: list[int]) -> None: ...

  @staticmethod
  @overload
  def glMulticastGetQueryObjectivNV(arg0: int, arg1: int, arg2: int, arg3: IntBuffer) -> None: ...

  @staticmethod
  def glMulticastGetQueryObjectui64NV(arg0: int, arg1: int, arg2: int) -> int: ...

  @staticmethod
  @overload
  def glMulticastGetQueryObjectui64vNV(arg0: int, arg1: int, arg2: int, arg3: list[int]) -> None: ...

  @staticmethod
  @overload
  def glMulticastGetQueryObjectui64vNV(arg0: int, arg1: int, arg2: int, arg3: LongBuffer) -> None: ...

  @staticmethod
  def glMulticastGetQueryObjectuiNV(arg0: int, arg1: int, arg2: int) -> int: ...

  @staticmethod
  @overload
  def glMulticastGetQueryObjectuivNV(arg0: int, arg1: int, arg2: int, arg3: list[int]) -> None: ...

  @staticmethod
  @overload
  def glMulticastGetQueryObjectuivNV(arg0: int, arg1: int, arg2: int, arg3: IntBuffer) -> None: ...

  @staticmethod
  def glMulticastWaitSyncNV(arg0: int, arg1: int) -> None: ...

  @staticmethod
  def glRenderGpuMaskNV(arg0: int) -> None: ...

  @staticmethod
  def nglMulticastBufferSubDataNV(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int) -> None: ...

  @staticmethod
  def nglMulticastFramebufferSampleLocationsfvNV(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int) -> None: ...

  @staticmethod
  def nglMulticastGetQueryObjecti64vNV(arg0: int, arg1: int, arg2: int, arg3: int) -> None: ...

  @staticmethod
  def nglMulticastGetQueryObjectivNV(arg0: int, arg1: int, arg2: int, arg3: int) -> None: ...

  @staticmethod
  def nglMulticastGetQueryObjectui64vNV(arg0: int, arg1: int, arg2: int, arg3: int) -> None: ...

  @staticmethod
  def nglMulticastGetQueryObjectuivNV(arg0: int, arg1: int, arg2: int, arg3: int) -> None: ...


class NVGPUShader5:

  GL_FLOAT16_NV: int

  GL_FLOAT16_VEC2_NV: int

  GL_FLOAT16_VEC3_NV: int

  GL_FLOAT16_VEC4_NV: int

  GL_INT16_NV: int

  GL_INT16_VEC2_NV: int

  GL_INT16_VEC3_NV: int

  GL_INT16_VEC4_NV: int

  GL_INT64_NV: int

  GL_INT64_VEC2_NV: int

  GL_INT64_VEC3_NV: int

  GL_INT64_VEC4_NV: int

  GL_INT8_NV: int

  GL_INT8_VEC2_NV: int

  GL_INT8_VEC3_NV: int

  GL_INT8_VEC4_NV: int

  GL_UNSIGNED_INT16_NV: int

  GL_UNSIGNED_INT16_VEC2_NV: int

  GL_UNSIGNED_INT16_VEC3_NV: int

  GL_UNSIGNED_INT16_VEC4_NV: int

  GL_UNSIGNED_INT64_NV: int

  GL_UNSIGNED_INT64_VEC2_NV: int

  GL_UNSIGNED_INT64_VEC3_NV: int

  GL_UNSIGNED_INT64_VEC4_NV: int

  GL_UNSIGNED_INT8_NV: int

  GL_UNSIGNED_INT8_VEC2_NV: int

  GL_UNSIGNED_INT8_VEC3_NV: int

  GL_UNSIGNED_INT8_VEC4_NV: int

  @staticmethod
  def glGetUniformi64NV(arg0: int, arg1: int) -> int: ...

  @staticmethod
  @overload
  def glGetUniformi64vNV(arg0: int, arg1: int, arg2: list[int]) -> None: ...

  @staticmethod
  @overload
  def glGetUniformi64vNV(arg0: int, arg1: int, arg2: LongBuffer) -> None: ...

  @staticmethod
  def glGetUniformui64NV(arg0: int, arg1: int) -> int: ...

  @staticmethod
  @overload
  def glGetUniformui64vNV(arg0: int, arg1: int, arg2: list[int]) -> None: ...

  @staticmethod
  @overload
  def glGetUniformui64vNV(arg0: int, arg1: int, arg2: LongBuffer) -> None: ...

  @staticmethod
  def glProgramUniform1i64NV(arg0: int, arg1: int, arg2: int) -> None: ...

  @staticmethod
  @overload
  def glProgramUniform1i64vNV(arg0: int, arg1: int, arg2: list[int]) -> None: ...

  @staticmethod
  @overload
  def glProgramUniform1i64vNV(arg0: int, arg1: int, arg2: LongBuffer) -> None: ...

  @staticmethod
  def glProgramUniform1ui64NV(arg0: int, arg1: int, arg2: int) -> None: ...

  @staticmethod
  @overload
  def glProgramUniform1ui64vNV(arg0: int, arg1: int, arg2: list[int]) -> None: ...

  @staticmethod
  @overload
  def glProgramUniform1ui64vNV(arg0: int, arg1: int, arg2: LongBuffer) -> None: ...

  @staticmethod
  def glProgramUniform2i64NV(arg0: int, arg1: int, arg2: int, arg3: int) -> None: ...

  @staticmethod
  @overload
  def glProgramUniform2i64vNV(arg0: int, arg1: int, arg2: list[int]) -> None: ...

  @staticmethod
  @overload
  def glProgramUniform2i64vNV(arg0: int, arg1: int, arg2: LongBuffer) -> None: ...

  @staticmethod
  def glProgramUniform2ui64NV(arg0: int, arg1: int, arg2: int, arg3: int) -> None: ...

  @staticmethod
  @overload
  def glProgramUniform2ui64vNV(arg0: int, arg1: int, arg2: list[int]) -> None: ...

  @staticmethod
  @overload
  def glProgramUniform2ui64vNV(arg0: int, arg1: int, arg2: LongBuffer) -> None: ...

  @staticmethod
  def glProgramUniform3i64NV(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int) -> None: ...

  @staticmethod
  @overload
  def glProgramUniform3i64vNV(arg0: int, arg1: int, arg2: list[int]) -> None: ...

  @staticmethod
  @overload
  def glProgramUniform3i64vNV(arg0: int, arg1: int, arg2: LongBuffer) -> None: ...

  @staticmethod
  def glProgramUniform3ui64NV(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int) -> None: ...

  @staticmethod
  @overload
  def glProgramUniform3ui64vNV(arg0: int, arg1: int, arg2: list[int]) -> None: ...

  @staticmethod
  @overload
  def glProgramUniform3ui64vNV(arg0: int, arg1: int, arg2: LongBuffer) -> None: ...

  @staticmethod
  def glProgramUniform4i64NV(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int) -> None: ...

  @staticmethod
  @overload
  def glProgramUniform4i64vNV(arg0: int, arg1: int, arg2: list[int]) -> None: ...

  @staticmethod
  @overload
  def glProgramUniform4i64vNV(arg0: int, arg1: int, arg2: LongBuffer) -> None: ...

  @staticmethod
  def glProgramUniform4ui64NV(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int) -> None: ...

  @staticmethod
  @overload
  def glProgramUniform4ui64vNV(arg0: int, arg1: int, arg2: list[int]) -> None: ...

  @staticmethod
  @overload
  def glProgramUniform4ui64vNV(arg0: int, arg1: int, arg2: LongBuffer) -> None: ...

  @staticmethod
  def glUniform1i64NV(arg0: int, arg1: int) -> None: ...

  @staticmethod
  @overload
  def glUniform1i64vNV(arg0: int, arg1: list[int]) -> None: ...

  @staticmethod
  @overload
  def glUniform1i64vNV(arg0: int, arg1: LongBuffer) -> None: ...

  @staticmethod
  def glUniform1ui64NV(arg0: int, arg1: int) -> None: ...

  @staticmethod
  @overload
  def glUniform1ui64vNV(arg0: int, arg1: list[int]) -> None: ...

  @staticmethod
  @overload
  def glUniform1ui64vNV(arg0: int, arg1: LongBuffer) -> None: ...

  @staticmethod
  def glUniform2i64NV(arg0: int, arg1: int, arg2: int) -> None: ...

  @staticmethod
  @overload
  def glUniform2i64vNV(arg0: int, arg1: list[int]) -> None: ...

  @staticmethod
  @overload
  def glUniform2i64vNV(arg0: int, arg1: LongBuffer) -> None: ...

  @staticmethod
  def glUniform2ui64NV(arg0: int, arg1: int, arg2: int) -> None: ...

  @staticmethod
  @overload
  def glUniform2ui64vNV(arg0: int, arg1: list[int]) -> None: ...

  @staticmethod
  @overload
  def glUniform2ui64vNV(arg0: int, arg1: LongBuffer) -> None: ...

  @staticmethod
  def glUniform3i64NV(arg0: int, arg1: int, arg2: int, arg3: int) -> None: ...

  @staticmethod
  @overload
  def glUniform3i64vNV(arg0: int, arg1: list[int]) -> None: ...

  @staticmethod
  @overload
  def glUniform3i64vNV(arg0: int, arg1: LongBuffer) -> None: ...

  @staticmethod
  def glUniform3ui64NV(arg0: int, arg1: int, arg2: int, arg3: int) -> None: ...

  @staticmethod
  @overload
  def glUniform3ui64vNV(arg0: int, arg1: list[int]) -> None: ...

  @staticmethod
  @overload
  def glUniform3ui64vNV(arg0: int, arg1: LongBuffer) -> None: ...

  @staticmethod
  def glUniform4i64NV(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int) -> None: ...

  @staticmethod
  @overload
  def glUniform4i64vNV(arg0: int, arg1: list[int]) -> None: ...

  @staticmethod
  @overload
  def glUniform4i64vNV(arg0: int, arg1: LongBuffer) -> None: ...

  @staticmethod
  def glUniform4ui64NV(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int) -> None: ...

  @staticmethod
  @overload
  def glUniform4ui64vNV(arg0: int, arg1: list[int]) -> None: ...

  @staticmethod
  @overload
  def glUniform4ui64vNV(arg0: int, arg1: LongBuffer) -> None: ...

  @staticmethod
  def nglGetUniformi64vNV(arg0: int, arg1: int, arg2: int) -> None: ...

  @staticmethod
  def nglGetUniformui64vNV(arg0: int, arg1: int, arg2: int) -> None: ...

  @staticmethod
  def nglProgramUniform1i64vNV(arg0: int, arg1: int, arg2: int, arg3: int) -> None: ...

  @staticmethod
  def nglProgramUniform1ui64vNV(arg0: int, arg1: int, arg2: int, arg3: int) -> None: ...

  @staticmethod
  def nglProgramUniform2i64vNV(arg0: int, arg1: int, arg2: int, arg3: int) -> None: ...

  @staticmethod
  def nglProgramUniform2ui64vNV(arg0: int, arg1: int, arg2: int, arg3: int) -> None: ...

  @staticmethod
  def nglProgramUniform3i64vNV(arg0: int, arg1: int, arg2: int, arg3: int) -> None: ...

  @staticmethod
  def nglProgramUniform3ui64vNV(arg0: int, arg1: int, arg2: int, arg3: int) -> None: ...

  @staticmethod
  def nglProgramUniform4i64vNV(arg0: int, arg1: int, arg2: int, arg3: int) -> None: ...

  @staticmethod
  def nglProgramUniform4ui64vNV(arg0: int, arg1: int, arg2: int, arg3: int) -> None: ...

  @staticmethod
  def nglUniform1i64vNV(arg0: int, arg1: int, arg2: int) -> None: ...

  @staticmethod
  def nglUniform1ui64vNV(arg0: int, arg1: int, arg2: int) -> None: ...

  @staticmethod
  def nglUniform2i64vNV(arg0: int, arg1: int, arg2: int) -> None: ...

  @staticmethod
  def nglUniform2ui64vNV(arg0: int, arg1: int, arg2: int) -> None: ...

  @staticmethod
  def nglUniform3i64vNV(arg0: int, arg1: int, arg2: int) -> None: ...

  @staticmethod
  def nglUniform3ui64vNV(arg0: int, arg1: int, arg2: int) -> None: ...

  @staticmethod
  def nglUniform4i64vNV(arg0: int, arg1: int, arg2: int) -> None: ...

  @staticmethod
  def nglUniform4ui64vNV(arg0: int, arg1: int, arg2: int) -> None: ...


class NVHalfFloat:

  GL_HALF_FLOAT_NV: int

  @staticmethod
  def glColor3hNV(arg0: int, arg1: int, arg2: int) -> None: ...

  @staticmethod
  @overload
  def glColor3hvNV(arg0: list[int]) -> None: ...

  @staticmethod
  @overload
  def glColor3hvNV(arg0: ShortBuffer) -> None: ...

  @staticmethod
  def glColor4hNV(arg0: int, arg1: int, arg2: int, arg3: int) -> None: ...

  @staticmethod
  @overload
  def glColor4hvNV(arg0: list[int]) -> None: ...

  @staticmethod
  @overload
  def glColor4hvNV(arg0: ShortBuffer) -> None: ...

  @staticmethod
  def glFogCoordhNV(arg0: int) -> None: ...

  @staticmethod
  @overload
  def glFogCoordhvNV(arg0: list[int]) -> None: ...

  @staticmethod
  @overload
  def glFogCoordhvNV(arg0: ShortBuffer) -> None: ...

  @staticmethod
  def glMultiTexCoord1hNV(arg0: int, arg1: int) -> None: ...

  @staticmethod
  @overload
  def glMultiTexCoord1hvNV(arg0: int, arg1: list[int]) -> None: ...

  @staticmethod
  @overload
  def glMultiTexCoord1hvNV(arg0: int, arg1: ShortBuffer) -> None: ...

  @staticmethod
  def glMultiTexCoord2hNV(arg0: int, arg1: int, arg2: int) -> None: ...

  @staticmethod
  @overload
  def glMultiTexCoord2hvNV(arg0: int, arg1: list[int]) -> None: ...

  @staticmethod
  @overload
  def glMultiTexCoord2hvNV(arg0: int, arg1: ShortBuffer) -> None: ...

  @staticmethod
  def glMultiTexCoord3hNV(arg0: int, arg1: int, arg2: int, arg3: int) -> None: ...

  @staticmethod
  @overload
  def glMultiTexCoord3hvNV(arg0: int, arg1: list[int]) -> None: ...

  @staticmethod
  @overload
  def glMultiTexCoord3hvNV(arg0: int, arg1: ShortBuffer) -> None: ...

  @staticmethod
  def glMultiTexCoord4hNV(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int) -> None: ...

  @staticmethod
  @overload
  def glMultiTexCoord4hvNV(arg0: int, arg1: list[int]) -> None: ...

  @staticmethod
  @overload
  def glMultiTexCoord4hvNV(arg0: int, arg1: ShortBuffer) -> None: ...

  @staticmethod
  def glNormal3hNV(arg0: int, arg1: int, arg2: int) -> None: ...

  @staticmethod
  @overload
  def glNormal3hvNV(arg0: list[int]) -> None: ...

  @staticmethod
  @overload
  def glNormal3hvNV(arg0: ShortBuffer) -> None: ...

  @staticmethod
  def glSecondaryColor3hNV(arg0: int, arg1: int, arg2: int) -> None: ...

  @staticmethod
  @overload
  def glSecondaryColor3hvNV(arg0: list[int]) -> None: ...

  @staticmethod
  @overload
  def glSecondaryColor3hvNV(arg0: ShortBuffer) -> None: ...

  @staticmethod
  def glTexCoord1hNV(arg0: int) -> None: ...

  @staticmethod
  @overload
  def glTexCoord1hvNV(arg0: list[int]) -> None: ...

  @staticmethod
  @overload
  def glTexCoord1hvNV(arg0: ShortBuffer) -> None: ...

  @staticmethod
  def glTexCoord2hNV(arg0: int, arg1: int) -> None: ...

  @staticmethod
  @overload
  def glTexCoord2hvNV(arg0: list[int]) -> None: ...

  @staticmethod
  @overload
  def glTexCoord2hvNV(arg0: ShortBuffer) -> None: ...

  @staticmethod
  def glTexCoord3hNV(arg0: int, arg1: int, arg2: int) -> None: ...

  @staticmethod
  @overload
  def glTexCoord3hvNV(arg0: list[int]) -> None: ...

  @staticmethod
  @overload
  def glTexCoord3hvNV(arg0: ShortBuffer) -> None: ...

  @staticmethod
  def glTexCoord4hNV(arg0: int, arg1: int, arg2: int, arg3: int) -> None: ...

  @staticmethod
  @overload
  def glTexCoord4hvNV(arg0: list[int]) -> None: ...

  @staticmethod
  @overload
  def glTexCoord4hvNV(arg0: ShortBuffer) -> None: ...

  @staticmethod
  def glVertex2hNV(arg0: int, arg1: int) -> None: ...

  @staticmethod
  @overload
  def glVertex2hvNV(arg0: list[int]) -> None: ...

  @staticmethod
  @overload
  def glVertex2hvNV(arg0: ShortBuffer) -> None: ...

  @staticmethod
  def glVertex3hNV(arg0: int, arg1: int, arg2: int) -> None: ...

  @staticmethod
  @overload
  def glVertex3hvNV(arg0: list[int]) -> None: ...

  @staticmethod
  @overload
  def glVertex3hvNV(arg0: ShortBuffer) -> None: ...

  @staticmethod
  def glVertex4hNV(arg0: int, arg1: int, arg2: int, arg3: int) -> None: ...

  @staticmethod
  @overload
  def glVertex4hvNV(arg0: list[int]) -> None: ...

  @staticmethod
  @overload
  def glVertex4hvNV(arg0: ShortBuffer) -> None: ...

  @staticmethod
  def glVertexAttrib1hNV(arg0: int, arg1: int) -> None: ...

  @staticmethod
  @overload
  def glVertexAttrib1hvNV(arg0: int, arg1: list[int]) -> None: ...

  @staticmethod
  @overload
  def glVertexAttrib1hvNV(arg0: int, arg1: ShortBuffer) -> None: ...

  @staticmethod
  def glVertexAttrib2hNV(arg0: int, arg1: int, arg2: int) -> None: ...

  @staticmethod
  @overload
  def glVertexAttrib2hvNV(arg0: int, arg1: list[int]) -> None: ...

  @staticmethod
  @overload
  def glVertexAttrib2hvNV(arg0: int, arg1: ShortBuffer) -> None: ...

  @staticmethod
  def glVertexAttrib3hNV(arg0: int, arg1: int, arg2: int, arg3: int) -> None: ...

  @staticmethod
  @overload
  def glVertexAttrib3hvNV(arg0: int, arg1: list[int]) -> None: ...

  @staticmethod
  @overload
  def glVertexAttrib3hvNV(arg0: int, arg1: ShortBuffer) -> None: ...

  @staticmethod
  def glVertexAttrib4hNV(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int) -> None: ...

  @staticmethod
  @overload
  def glVertexAttrib4hvNV(arg0: int, arg1: list[int]) -> None: ...

  @staticmethod
  @overload
  def glVertexAttrib4hvNV(arg0: int, arg1: ShortBuffer) -> None: ...

  @staticmethod
  @overload
  def glVertexAttribs1hvNV(arg0: int, arg1: list[int]) -> None: ...

  @staticmethod
  @overload
  def glVertexAttribs1hvNV(arg0: int, arg1: ShortBuffer) -> None: ...

  @staticmethod
  @overload
  def glVertexAttribs2hvNV(arg0: int, arg1: list[int]) -> None: ...

  @staticmethod
  @overload
  def glVertexAttribs2hvNV(arg0: int, arg1: ShortBuffer) -> None: ...

  @staticmethod
  @overload
  def glVertexAttribs3hvNV(arg0: int, arg1: list[int]) -> None: ...

  @staticmethod
  @overload
  def glVertexAttribs3hvNV(arg0: int, arg1: ShortBuffer) -> None: ...

  @staticmethod
  @overload
  def glVertexAttribs4hvNV(arg0: int, arg1: list[int]) -> None: ...

  @staticmethod
  @overload
  def glVertexAttribs4hvNV(arg0: int, arg1: ShortBuffer) -> None: ...

  @staticmethod
  def glVertexWeighthNV(arg0: int) -> None: ...

  @staticmethod
  @overload
  def glVertexWeighthvNV(arg0: list[int]) -> None: ...

  @staticmethod
  @overload
  def glVertexWeighthvNV(arg0: ShortBuffer) -> None: ...

  @staticmethod
  def nglColor3hvNV(arg0: int) -> None: ...

  @staticmethod
  def nglColor4hvNV(arg0: int) -> None: ...

  @staticmethod
  def nglFogCoordhvNV(arg0: int) -> None: ...

  @staticmethod
  def nglMultiTexCoord1hvNV(arg0: int, arg1: int) -> None: ...

  @staticmethod
  def nglMultiTexCoord2hvNV(arg0: int, arg1: int) -> None: ...

  @staticmethod
  def nglMultiTexCoord3hvNV(arg0: int, arg1: int) -> None: ...

  @staticmethod
  def nglMultiTexCoord4hvNV(arg0: int, arg1: int) -> None: ...

  @staticmethod
  def nglNormal3hvNV(arg0: int) -> None: ...

  @staticmethod
  def nglSecondaryColor3hvNV(arg0: int) -> None: ...

  @staticmethod
  def nglTexCoord1hvNV(arg0: int) -> None: ...

  @staticmethod
  def nglTexCoord2hvNV(arg0: int) -> None: ...

  @staticmethod
  def nglTexCoord3hvNV(arg0: int) -> None: ...

  @staticmethod
  def nglTexCoord4hvNV(arg0: int) -> None: ...

  @staticmethod
  def nglVertex2hvNV(arg0: int) -> None: ...

  @staticmethod
  def nglVertex3hvNV(arg0: int) -> None: ...

  @staticmethod
  def nglVertex4hvNV(arg0: int) -> None: ...

  @staticmethod
  def nglVertexAttrib1hvNV(arg0: int, arg1: int) -> None: ...

  @staticmethod
  def nglVertexAttrib2hvNV(arg0: int, arg1: int) -> None: ...

  @staticmethod
  def nglVertexAttrib3hvNV(arg0: int, arg1: int) -> None: ...

  @staticmethod
  def nglVertexAttrib4hvNV(arg0: int, arg1: int) -> None: ...

  @staticmethod
  def nglVertexAttribs1hvNV(arg0: int, arg1: int, arg2: int) -> None: ...

  @staticmethod
  def nglVertexAttribs2hvNV(arg0: int, arg1: int, arg2: int) -> None: ...

  @staticmethod
  def nglVertexAttribs3hvNV(arg0: int, arg1: int, arg2: int) -> None: ...

  @staticmethod
  def nglVertexAttribs4hvNV(arg0: int, arg1: int, arg2: int) -> None: ...

  @staticmethod
  def nglVertexWeighthvNV(arg0: int) -> None: ...


class NVInternalformatSampleQuery:

  GL_CONFORMANT_NV: int

  GL_MULTISAMPLES_NV: int

  GL_SUPERSAMPLE_SCALE_X_NV: int

  GL_SUPERSAMPLE_SCALE_Y_NV: int

  @staticmethod
  @overload
  def glGetInternalformatSampleivNV(arg0: int, arg1: int, arg2: int, arg3: int, arg4: list[int]) -> None: ...

  @staticmethod
  @overload
  def glGetInternalformatSampleivNV(arg0: int, arg1: int, arg2: int, arg3: int, arg4: IntBuffer) -> None: ...

  @staticmethod
  def nglGetInternalformatSampleivNV(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int) -> None: ...


class NVLightMaxExponent:

  GL_MAX_SHININESS_NV: int

  GL_MAX_SPOT_EXPONENT_NV: int


class NVMemoryAttachment:

  GL_ATTACHED_MEMORY_OBJECT_NV: int

  GL_ATTACHED_MEMORY_OFFSET_NV: int

  GL_DETACHED_BUFFERS_NV: int

  GL_DETACHED_MEMORY_INCARNATION_NV: int

  GL_DETACHED_TEXTURES_NV: int

  GL_MAX_DETACHED_BUFFERS_NV: int

  GL_MAX_DETACHED_TEXTURES_NV: int

  GL_MEMORY_ATTACHABLE_ALIGNMENT_NV: int

  GL_MEMORY_ATTACHABLE_NV: int

  GL_MEMORY_ATTACHABLE_SIZE_NV: int

  @staticmethod
  def glBufferAttachMemoryNV(arg0: int, arg1: int, arg2: int) -> None: ...

  @staticmethod
  @overload
  def glGetMemoryObjectDetachedResourcesuivNV(arg0: int, arg1: int, arg2: int, arg3: list[int]) -> None: ...

  @staticmethod
  @overload
  def glGetMemoryObjectDetachedResourcesuivNV(arg0: int, arg1: int, arg2: int, arg3: IntBuffer) -> None: ...

  @staticmethod
  def glNamedBufferAttachMemoryNV(arg0: int, arg1: int, arg2: int) -> None: ...

  @staticmethod
  def glResetMemoryObjectParameterNV(arg0: int, arg1: int) -> None: ...

  @staticmethod
  def glTexAttachMemoryNV(arg0: int, arg1: int, arg2: int) -> None: ...

  @staticmethod
  def glTextureAttachMemoryNV(arg0: int, arg1: int, arg2: int) -> None: ...

  @staticmethod
  def nglGetMemoryObjectDetachedResourcesuivNV(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int) -> None: ...


class NVMeshShader:

  GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_MESH_SHADER_NV: int

  GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_TASK_SHADER_NV: int

  GL_MAX_COMBINED_MESH_UNIFORM_COMPONENTS_NV: int

  GL_MAX_COMBINED_TASK_UNIFORM_COMPONENTS_NV: int

  GL_MAX_DRAW_MESH_TASKS_COUNT_NV: int

  GL_MAX_MESH_ATOMIC_COUNTER_BUFFERS_NV: int

  GL_MAX_MESH_ATOMIC_COUNTERS_NV: int

  GL_MAX_MESH_IMAGE_UNIFORMS_NV: int

  GL_MAX_MESH_OUTPUT_PRIMITIVES_NV: int

  GL_MAX_MESH_OUTPUT_VERTICES_NV: int

  GL_MAX_MESH_SHADER_STORAGE_BLOCKS_NV: int

  GL_MAX_MESH_TEXTURE_IMAGE_UNITS_NV: int

  GL_MAX_MESH_TOTAL_MEMORY_SIZE_NV: int

  GL_MAX_MESH_UNIFORM_BLOCKS_NV: int

  GL_MAX_MESH_UNIFORM_COMPONENTS_NV: int

  GL_MAX_MESH_VIEWS_NV: int

  GL_MAX_MESH_WORK_GROUP_INVOCATIONS_NV: int

  GL_MAX_MESH_WORK_GROUP_SIZE_NV: int

  GL_MAX_TASK_ATOMIC_COUNTER_BUFFERS_NV: int

  GL_MAX_TASK_ATOMIC_COUNTERS_NV: int

  GL_MAX_TASK_IMAGE_UNIFORMS_NV: int

  GL_MAX_TASK_OUTPUT_COUNT_NV: int

  GL_MAX_TASK_SHADER_STORAGE_BLOCKS_NV: int

  GL_MAX_TASK_TEXTURE_IMAGE_UNITS_NV: int

  GL_MAX_TASK_TOTAL_MEMORY_SIZE_NV: int

  GL_MAX_TASK_UNIFORM_BLOCKS_NV: int

  GL_MAX_TASK_UNIFORM_COMPONENTS_NV: int

  GL_MAX_TASK_WORK_GROUP_INVOCATIONS_NV: int

  GL_MAX_TASK_WORK_GROUP_SIZE_NV: int

  GL_MESH_OUTPUT_PER_PRIMITIVE_GRANULARITY_NV: int

  GL_MESH_OUTPUT_PER_VERTEX_GRANULARITY_NV: int

  GL_MESH_OUTPUT_TYPE_NV: int

  GL_MESH_PRIMITIVES_OUT_NV: int

  GL_MESH_SHADER_BIT_NV: int

  GL_MESH_SHADER_NV: int

  GL_MESH_SUBROUTINE_NV: int

  GL_MESH_SUBROUTINE_UNIFORM_NV: int

  GL_MESH_VERTICES_OUT_NV: int

  GL_MESH_WORK_GROUP_SIZE_NV: int

  GL_REFERENCED_BY_MESH_SHADER_NV: int

  GL_REFERENCED_BY_TASK_SHADER_NV: int

  GL_TASK_SHADER_BIT_NV: int

  GL_TASK_SHADER_NV: int

  GL_TASK_SUBROUTINE_NV: int

  GL_TASK_SUBROUTINE_UNIFORM_NV: int

  GL_TASK_WORK_GROUP_SIZE_NV: int

  GL_UNIFORM_BLOCK_REFERENCED_BY_MESH_SHADER_NV: int

  GL_UNIFORM_BLOCK_REFERENCED_BY_TASK_SHADER_NV: int

  @staticmethod
  def glDrawMeshTasksIndirectNV(arg0: int) -> None: ...

  @staticmethod
  def glDrawMeshTasksNV(arg0: int, arg1: int) -> None: ...

  @staticmethod
  def glMultiDrawMeshTasksIndirectCountNV(arg0: int, arg1: int, arg2: int, arg3: int) -> None: ...

  @staticmethod
  def glMultiDrawMeshTasksIndirectNV(arg0: int, arg1: int, arg2: int) -> None: ...


class NVMultisampleCoverage:

  GL_COLOR_SAMPLES_NV: int


class NVMultisampleFilterHint:

  GL_MULTISAMPLE_FILTER_HINT_NV: int


class NVPackedDepthStencil:

  GL_DEPTH_STENCIL_NV: int

  GL_UNSIGNED_INT_24_8_NV: int


class NVPathRendering:

  GL_2_BYTES_NV: int

  GL_3_BYTES_NV: int

  GL_4_BYTES_NV: int

  GL_ACCUM_ADJACENT_PAIRS_NV: int

  GL_ADJACENT_PAIRS_NV: int

  GL_AFFINE_2D_NV: int

  GL_AFFINE_3D_NV: int

  GL_ARC_TO_NV: int

  GL_BEVEL_NV: int

  GL_BOLD_BIT_NV: int

  GL_BOUNDING_BOX_NV: int

  GL_BOUNDING_BOX_OF_BOUNDING_BOXES_NV: int

  GL_CIRCULAR_CCW_ARC_TO_NV: int

  GL_CIRCULAR_CW_ARC_TO_NV: int

  GL_CIRCULAR_TANGENT_ARC_TO_NV: int

  GL_CLOSE_PATH_NV: int

  GL_CONIC_CURVE_TO_NV: int

  GL_CONSTANT_NV: int

  GL_CONVEX_HULL_NV: int

  GL_COUNT_DOWN_NV: int

  GL_COUNT_UP_NV: int

  GL_CUBIC_CURVE_TO_NV: int

  GL_DUP_FIRST_CUBIC_CURVE_TO_NV: int

  GL_DUP_LAST_CUBIC_CURVE_TO_NV: int

  GL_EYE_LINEAR_NV: int

  GL_FILE_NAME_NV: int

  GL_FIRST_TO_REST_NV: int

  GL_FONT_ASCENDER_BIT_NV: int

  GL_FONT_DESCENDER_BIT_NV: int

  GL_FONT_GLYPHS_AVAILABLE_NV: int

  GL_FONT_HAS_KERNING_BIT_NV: int

  GL_FONT_HEIGHT_BIT_NV: int

  GL_FONT_MAX_ADVANCE_HEIGHT_BIT_NV: int

  GL_FONT_MAX_ADVANCE_WIDTH_BIT_NV: int

  GL_FONT_NUM_GLYPH_INDICES_BIT_NV: int

  GL_FONT_TARGET_UNAVAILABLE_NV: int

  GL_FONT_UNAVAILABLE_NV: int

  GL_FONT_UNDERLINE_POSITION_BIT_NV: int

  GL_FONT_UNDERLINE_THICKNESS_BIT_NV: int

  GL_FONT_UNINTELLIGIBLE_NV: int

  GL_FONT_UNITS_PER_EM_BIT_NV: int

  GL_FONT_X_MAX_BOUNDS_BIT_NV: int

  GL_FONT_X_MIN_BOUNDS_BIT_NV: int

  GL_FONT_Y_MAX_BOUNDS_BIT_NV: int

  GL_FONT_Y_MIN_BOUNDS_BIT_NV: int

  GL_FRAGMENT_INPUT_NV: int

  GL_GLYPH_HAS_KERNING_BIT_NV: int

  GL_GLYPH_HEIGHT_BIT_NV: int

  GL_GLYPH_HORIZONTAL_BEARING_ADVANCE_BIT_NV: int

  GL_GLYPH_HORIZONTAL_BEARING_X_BIT_NV: int

  GL_GLYPH_HORIZONTAL_BEARING_Y_BIT_NV: int

  GL_GLYPH_VERTICAL_BEARING_ADVANCE_BIT_NV: int

  GL_GLYPH_VERTICAL_BEARING_X_BIT_NV: int

  GL_GLYPH_VERTICAL_BEARING_Y_BIT_NV: int

  GL_GLYPH_WIDTH_BIT_NV: int

  GL_HORIZONTAL_LINE_TO_NV: int

  GL_ITALIC_BIT_NV: int

  GL_LARGE_CCW_ARC_TO_NV: int

  GL_LARGE_CW_ARC_TO_NV: int

  GL_LINE_TO_NV: int

  GL_MITER_REVERT_NV: int

  GL_MITER_TRUNCATE_NV: int

  GL_MOVE_TO_CONTINUES_NV: int

  GL_MOVE_TO_NV: int

  GL_MOVE_TO_RESETS_NV: int

  GL_OBJECT_LINEAR_NV: int

  GL_PATH_CLIENT_LENGTH_NV: int

  GL_PATH_COMMAND_COUNT_NV: int

  GL_PATH_COMPUTED_LENGTH_NV: int

  GL_PATH_COORD_COUNT_NV: int

  GL_PATH_COVER_DEPTH_FUNC_NV: int

  GL_PATH_DASH_ARRAY_COUNT_NV: int

  GL_PATH_DASH_CAPS_NV: int

  GL_PATH_DASH_OFFSET_NV: int

  GL_PATH_DASH_OFFSET_RESET_NV: int

  GL_PATH_END_CAPS_NV: int

  GL_PATH_ERROR_POSITION_NV: int

  GL_PATH_FILL_BOUNDING_BOX_NV: int

  GL_PATH_FILL_COVER_MODE_NV: int

  GL_PATH_FILL_MASK_NV: int

  GL_PATH_FILL_MODE_NV: int

  GL_PATH_FOG_GEN_MODE_NV: int

  GL_PATH_FORMAT_PS_NV: int

  GL_PATH_FORMAT_SVG_NV: int

  GL_PATH_GEN_COEFF_NV: int

  GL_PATH_GEN_COLOR_FORMAT_NV: int

  GL_PATH_GEN_COMPONENTS_NV: int

  GL_PATH_GEN_MODE_NV: int

  GL_PATH_INITIAL_DASH_CAP_NV: int

  GL_PATH_INITIAL_END_CAP_NV: int

  GL_PATH_JOIN_STYLE_NV: int

  GL_PATH_MAX_MODELVIEW_STACK_DEPTH_NV: int

  GL_PATH_MAX_PROJECTION_STACK_DEPTH_NV: int

  GL_PATH_MITER_LIMIT_NV: int

  GL_PATH_MODELVIEW_MATRIX_NV: int

  GL_PATH_MODELVIEW_NV: int

  GL_PATH_MODELVIEW_STACK_DEPTH_NV: int

  GL_PATH_OBJECT_BOUNDING_BOX_NV: int

  GL_PATH_PROJECTION_MATRIX_NV: int

  GL_PATH_PROJECTION_NV: int

  GL_PATH_PROJECTION_STACK_DEPTH_NV: int

  GL_PATH_STENCIL_DEPTH_OFFSET_FACTOR_NV: int

  GL_PATH_STENCIL_DEPTH_OFFSET_UNITS_NV: int

  GL_PATH_STENCIL_FUNC_NV: int

  GL_PATH_STENCIL_REF_NV: int

  GL_PATH_STENCIL_VALUE_MASK_NV: int

  GL_PATH_STROKE_BOUND_NV: int

  GL_PATH_STROKE_BOUNDING_BOX_NV: int

  GL_PATH_STROKE_COVER_MODE_NV: int

  GL_PATH_STROKE_MASK_NV: int

  GL_PATH_STROKE_WIDTH_NV: int

  GL_PATH_TERMINAL_DASH_CAP_NV: int

  GL_PATH_TERMINAL_END_CAP_NV: int

  GL_PATH_TRANSPOSE_MODELVIEW_MATRIX_NV: int

  GL_PATH_TRANSPOSE_PROJECTION_MATRIX_NV: int

  GL_PRIMARY_COLOR_NV: int

  GL_QUADRATIC_CURVE_TO_NV: int

  GL_RECT_NV: int

  GL_RELATIVE_ARC_TO_NV: int

  GL_RELATIVE_CONIC_CURVE_TO_NV: int

  GL_RELATIVE_CUBIC_CURVE_TO_NV: int

  GL_RELATIVE_HORIZONTAL_LINE_TO_NV: int

  GL_RELATIVE_LARGE_CCW_ARC_TO_NV: int

  GL_RELATIVE_LARGE_CW_ARC_TO_NV: int

  GL_RELATIVE_LINE_TO_NV: int

  GL_RELATIVE_MOVE_TO_NV: int

  GL_RELATIVE_QUADRATIC_CURVE_TO_NV: int

  GL_RELATIVE_RECT_NV: int

  GL_RELATIVE_ROUNDED_RECT2_NV: int

  GL_RELATIVE_ROUNDED_RECT4_NV: int

  GL_RELATIVE_ROUNDED_RECT8_NV: int

  GL_RELATIVE_ROUNDED_RECT_NV: int

  GL_RELATIVE_SMALL_CCW_ARC_TO_NV: int

  GL_RELATIVE_SMALL_CW_ARC_TO_NV: int

  GL_RELATIVE_SMOOTH_CUBIC_CURVE_TO_NV: int

  GL_RELATIVE_SMOOTH_QUADRATIC_CURVE_TO_NV: int

  GL_RELATIVE_VERTICAL_LINE_TO_NV: int

  GL_RESTART_PATH_NV: int

  GL_ROUND_NV: int

  GL_ROUNDED_RECT2_NV: int

  GL_ROUNDED_RECT4_NV: int

  GL_ROUNDED_RECT8_NV: int

  GL_ROUNDED_RECT_NV: int

  GL_SECONDARY_COLOR_NV: int

  GL_SKIP_MISSING_GLYPH_NV: int

  GL_SMALL_CCW_ARC_TO_NV: int

  GL_SMALL_CW_ARC_TO_NV: int

  GL_SMOOTH_CUBIC_CURVE_TO_NV: int

  GL_SMOOTH_QUADRATIC_CURVE_TO_NV: int

  GL_SQUARE_NV: int

  GL_STANDARD_FONT_FORMAT_NV: int

  GL_STANDARD_FONT_NAME_NV: int

  GL_SYSTEM_FONT_NAME_NV: int

  GL_TRANSLATE_2D_NV: int

  GL_TRANSLATE_3D_NV: int

  GL_TRANSLATE_X_NV: int

  GL_TRANSLATE_Y_NV: int

  GL_TRANSPOSE_AFFINE_2D_NV: int

  GL_TRANSPOSE_AFFINE_3D_NV: int

  GL_TRIANGULAR_NV: int

  GL_USE_MISSING_GLYPH_NV: int

  GL_UTF16_NV: int

  GL_UTF8_NV: int

  GL_VERTICAL_LINE_TO_NV: int

  @staticmethod
  def glCopyPathNV(arg0: int, arg1: int) -> None: ...

  @staticmethod
  @overload
  def glCoverFillPathInstancedNV(arg0: int, arg1: ByteBuffer, arg2: int, arg3: int, arg4: int, arg5: list[float]) -> None: ...

  @staticmethod
  @overload
  def glCoverFillPathInstancedNV(arg0: int, arg1: ByteBuffer, arg2: int, arg3: int, arg4: int, arg5: FloatBuffer) -> None: ...

  @staticmethod
  def glCoverFillPathNV(arg0: int, arg1: int) -> None: ...

  @staticmethod
  @overload
  def glCoverStrokePathInstancedNV(arg0: int, arg1: ByteBuffer, arg2: int, arg3: int, arg4: int, arg5: list[float]) -> None: ...

  @staticmethod
  @overload
  def glCoverStrokePathInstancedNV(arg0: int, arg1: ByteBuffer, arg2: int, arg3: int, arg4: int, arg5: FloatBuffer) -> None: ...

  @staticmethod
  def glCoverStrokePathNV(arg0: int, arg1: int) -> None: ...

  @staticmethod
  def glDeletePathsNV(arg0: int, arg1: int) -> None: ...

  @staticmethod
  def glGenPathsNV(arg0: int) -> int: ...

  @staticmethod
  def glGetPathColorGenfNV(arg0: int, arg1: int) -> float: ...

  @staticmethod
  @overload
  def glGetPathColorGenfvNV(arg0: int, arg1: int, arg2: list[float]) -> None: ...

  @staticmethod
  @overload
  def glGetPathColorGenfvNV(arg0: int, arg1: int, arg2: FloatBuffer) -> None: ...

  @staticmethod
  def glGetPathColorGeniNV(arg0: int, arg1: int) -> int: ...

  @staticmethod
  @overload
  def glGetPathColorGenivNV(arg0: int, arg1: int, arg2: list[int]) -> None: ...

  @staticmethod
  @overload
  def glGetPathColorGenivNV(arg0: int, arg1: int, arg2: IntBuffer) -> None: ...

  @staticmethod
  def glGetPathCommandsNV(arg0: int, arg1: ByteBuffer) -> None: ...

  @staticmethod
  @overload
  def glGetPathCoordsNV(arg0: int, arg1: list[float]) -> None: ...

  @staticmethod
  @overload
  def glGetPathCoordsNV(arg0: int, arg1: FloatBuffer) -> None: ...

  @staticmethod
  @overload
  def glGetPathDashArrayNV(arg0: int, arg1: list[float]) -> None: ...

  @staticmethod
  @overload
  def glGetPathDashArrayNV(arg0: int, arg1: FloatBuffer) -> None: ...

  @staticmethod
  def glGetPathLengthNV(arg0: int, arg1: int, arg2: int) -> float: ...

  @staticmethod
  @overload
  def glGetPathMetricRangeNV(arg0: int, arg1: int, arg2: int, arg3: int, arg4: list[float]) -> None: ...

  @staticmethod
  @overload
  def glGetPathMetricRangeNV(arg0: int, arg1: int, arg2: int, arg3: int, arg4: FloatBuffer) -> None: ...

  @staticmethod
  @overload
  def glGetPathMetricsNV(arg0: int, arg1: int, arg2: ByteBuffer, arg3: int, arg4: int, arg5: list[float]) -> None: ...

  @staticmethod
  @overload
  def glGetPathMetricsNV(arg0: int, arg1: int, arg2: ByteBuffer, arg3: int, arg4: int, arg5: FloatBuffer) -> None: ...

  @staticmethod
  def glGetPathParameterfNV(arg0: int, arg1: int) -> float: ...

  @staticmethod
  @overload
  def glGetPathParameterfvNV(arg0: int, arg1: int, arg2: list[float]) -> None: ...

  @staticmethod
  @overload
  def glGetPathParameterfvNV(arg0: int, arg1: int, arg2: FloatBuffer) -> None: ...

  @staticmethod
  def glGetPathParameteriNV(arg0: int, arg1: int) -> int: ...

  @staticmethod
  @overload
  def glGetPathParameterivNV(arg0: int, arg1: int, arg2: list[int]) -> None: ...

  @staticmethod
  @overload
  def glGetPathParameterivNV(arg0: int, arg1: int, arg2: IntBuffer) -> None: ...

  @staticmethod
  @overload
  def glGetPathSpacingNV(arg0: int, arg1: int, arg2: ByteBuffer, arg3: int, arg4: float, arg5: float, arg6: int, arg7: list[float]) -> None: ...

  @staticmethod
  @overload
  def glGetPathSpacingNV(arg0: int, arg1: int, arg2: ByteBuffer, arg3: int, arg4: float, arg5: float, arg6: int, arg7: FloatBuffer) -> None: ...

  @staticmethod
  def glGetPathTexGenfNV(arg0: int, arg1: int) -> float: ...

  @staticmethod
  @overload
  def glGetPathTexGenfvNV(arg0: int, arg1: int, arg2: list[float]) -> None: ...

  @staticmethod
  @overload
  def glGetPathTexGenfvNV(arg0: int, arg1: int, arg2: FloatBuffer) -> None: ...

  @staticmethod
  def glGetPathTexGeniNV(arg0: int, arg1: int) -> int: ...

  @staticmethod
  @overload
  def glGetPathTexGenivNV(arg0: int, arg1: int, arg2: list[int]) -> None: ...

  @staticmethod
  @overload
  def glGetPathTexGenivNV(arg0: int, arg1: int, arg2: IntBuffer) -> None: ...

  @staticmethod
  @overload
  def glGetProgramResourcefvNV(arg0: int, arg1: int, arg2: int, arg3: list[int], arg4: list[int], arg5: list[float]) -> None: ...

  @staticmethod
  @overload
  def glGetProgramResourcefvNV(arg0: int, arg1: int, arg2: int, arg3: IntBuffer, arg4: IntBuffer, arg5: FloatBuffer) -> None: ...

  @staticmethod
  def glInterpolatePathsNV(arg0: int, arg1: int, arg2: int, arg3: float) -> None: ...

  @staticmethod
  def glIsPathNV(arg0: int) -> bool: ...

  @staticmethod
  def glIsPointInFillPathNV(arg0: int, arg1: int, arg2: float, arg3: float) -> bool: ...

  @staticmethod
  def glIsPointInStrokePathNV(arg0: int, arg1: float, arg2: float) -> bool: ...

  @staticmethod
  @overload
  def glMatrixLoad3x2fNV(arg0: int, arg1: list[float]) -> None: ...

  @staticmethod
  @overload
  def glMatrixLoad3x2fNV(arg0: int, arg1: FloatBuffer) -> None: ...

  @staticmethod
  @overload
  def glMatrixLoad3x3fNV(arg0: int, arg1: list[float]) -> None: ...

  @staticmethod
  @overload
  def glMatrixLoad3x3fNV(arg0: int, arg1: FloatBuffer) -> None: ...

  @staticmethod
  @overload
  def glMatrixLoadTranspose3x3fNV(arg0: int, arg1: list[float]) -> None: ...

  @staticmethod
  @overload
  def glMatrixLoadTranspose3x3fNV(arg0: int, arg1: FloatBuffer) -> None: ...

  @staticmethod
  @overload
  def glMatrixMult3x2fNV(arg0: int, arg1: list[float]) -> None: ...

  @staticmethod
  @overload
  def glMatrixMult3x2fNV(arg0: int, arg1: FloatBuffer) -> None: ...

  @staticmethod
  @overload
  def glMatrixMult3x3fNV(arg0: int, arg1: list[float]) -> None: ...

  @staticmethod
  @overload
  def glMatrixMult3x3fNV(arg0: int, arg1: FloatBuffer) -> None: ...

  @staticmethod
  @overload
  def glMatrixMultTranspose3x3fNV(arg0: int, arg1: list[float]) -> None: ...

  @staticmethod
  @overload
  def glMatrixMultTranspose3x3fNV(arg0: int, arg1: FloatBuffer) -> None: ...

  @staticmethod
  @overload
  def glPathColorGenNV(arg0: int, arg1: int, arg2: int, arg3: list[float]) -> None: ...

  @staticmethod
  @overload
  def glPathColorGenNV(arg0: int, arg1: int, arg2: int, arg3: FloatBuffer) -> None: ...

  @staticmethod
  @overload
  def glPathCommandsNV(arg0: int, arg1: ByteBuffer, arg2: int, arg3: list[float]) -> None: ...

  @staticmethod
  @overload
  def glPathCommandsNV(arg0: int, arg1: ByteBuffer, arg2: int, arg3: list[int]) -> None: ...

  @staticmethod
  @overload
  def glPathCommandsNV(arg0: int, arg1: ByteBuffer, arg2: int, arg3: ByteBuffer) -> None: ...

  @staticmethod
  @overload
  def glPathCommandsNV(arg0: int, arg1: ByteBuffer, arg2: int, arg3: FloatBuffer) -> None: ...

  @staticmethod
  @overload
  def glPathCommandsNV(arg0: int, arg1: ByteBuffer, arg2: int, arg3: ShortBuffer) -> None: ...

  @staticmethod
  @overload
  def glPathCoordsNV(arg0: int, arg1: int, arg2: list[float]) -> None: ...

  @staticmethod
  @overload
  def glPathCoordsNV(arg0: int, arg1: int, arg2: list[int]) -> None: ...

  @staticmethod
  @overload
  def glPathCoordsNV(arg0: int, arg1: int, arg2: ByteBuffer) -> None: ...

  @staticmethod
  @overload
  def glPathCoordsNV(arg0: int, arg1: int, arg2: FloatBuffer) -> None: ...

  @staticmethod
  @overload
  def glPathCoordsNV(arg0: int, arg1: int, arg2: ShortBuffer) -> None: ...

  @staticmethod
  def glPathCoverDepthFuncNV(arg0: int) -> None: ...

  @staticmethod
  @overload
  def glPathDashArrayNV(arg0: int, arg1: list[float]) -> None: ...

  @staticmethod
  @overload
  def glPathDashArrayNV(arg0: int, arg1: FloatBuffer) -> None: ...

  @staticmethod
  def glPathFogGenNV(arg0: int) -> None: ...

  @staticmethod
  def glPathGlyphIndexArrayNV(arg0: int, arg1: int, arg2: ByteBuffer, arg3: int, arg4: int, arg5: int, arg6: int, arg7: float) -> int: ...

  @staticmethod
  def glPathGlyphIndexRangeNV(arg0: int, arg1: ByteBuffer, arg2: int, arg3: int, arg4: float, arg5: int) -> int: ...

  @staticmethod
  def glPathGlyphRangeNV(arg0: int, arg1: int, arg2: ByteBuffer, arg3: int, arg4: int, arg5: int, arg6: int, arg7: int, arg8: float) -> None: ...

  @staticmethod
  def glPathGlyphsNV(arg0: int, arg1: int, arg2: ByteBuffer, arg3: int, arg4: int, arg5: ByteBuffer, arg6: int, arg7: int, arg8: float) -> None: ...

  @staticmethod
  def glPathMemoryGlyphIndexArrayNV(arg0: int, arg1: int, arg2: ByteBuffer, arg3: int, arg4: int, arg5: int, arg6: int, arg7: float) -> int: ...

  @staticmethod
  def glPathParameterfNV(arg0: int, arg1: int, arg2: float) -> None: ...

  @staticmethod
  @overload
  def glPathParameterfvNV(arg0: int, arg1: int, arg2: list[float]) -> None: ...

  @staticmethod
  @overload
  def glPathParameterfvNV(arg0: int, arg1: int, arg2: FloatBuffer) -> None: ...

  @staticmethod
  def glPathParameteriNV(arg0: int, arg1: int, arg2: int) -> None: ...

  @staticmethod
  @overload
  def glPathParameterivNV(arg0: int, arg1: int, arg2: list[int]) -> None: ...

  @staticmethod
  @overload
  def glPathParameterivNV(arg0: int, arg1: int, arg2: IntBuffer) -> None: ...

  @staticmethod
  def glPathStencilDepthOffsetNV(arg0: float, arg1: float) -> None: ...

  @staticmethod
  def glPathStencilFuncNV(arg0: int, arg1: int, arg2: int) -> None: ...

  @staticmethod
  def glPathStringNV(arg0: int, arg1: int, arg2: ByteBuffer) -> None: ...

  @staticmethod
  @overload
  def glPathSubCommandsNV(arg0: int, arg1: int, arg2: int, arg3: ByteBuffer, arg4: int, arg5: list[float]) -> None: ...

  @staticmethod
  @overload
  def glPathSubCommandsNV(arg0: int, arg1: int, arg2: int, arg3: ByteBuffer, arg4: int, arg5: list[int]) -> None: ...

  @staticmethod
  @overload
  def glPathSubCommandsNV(arg0: int, arg1: int, arg2: int, arg3: ByteBuffer, arg4: int, arg5: ByteBuffer) -> None: ...

  @staticmethod
  @overload
  def glPathSubCommandsNV(arg0: int, arg1: int, arg2: int, arg3: ByteBuffer, arg4: int, arg5: FloatBuffer) -> None: ...

  @staticmethod
  @overload
  def glPathSubCommandsNV(arg0: int, arg1: int, arg2: int, arg3: ByteBuffer, arg4: int, arg5: ShortBuffer) -> None: ...

  @staticmethod
  @overload
  def glPathSubCoordsNV(arg0: int, arg1: int, arg2: int, arg3: list[float]) -> None: ...

  @staticmethod
  @overload
  def glPathSubCoordsNV(arg0: int, arg1: int, arg2: int, arg3: list[int]) -> None: ...

  @staticmethod
  @overload
  def glPathSubCoordsNV(arg0: int, arg1: int, arg2: int, arg3: ByteBuffer) -> None: ...

  @staticmethod
  @overload
  def glPathSubCoordsNV(arg0: int, arg1: int, arg2: int, arg3: FloatBuffer) -> None: ...

  @staticmethod
  @overload
  def glPathSubCoordsNV(arg0: int, arg1: int, arg2: int, arg3: ShortBuffer) -> None: ...

  @staticmethod
  @overload
  def glPathTexGenNV(arg0: int, arg1: int, arg2: int, arg3: list[float]) -> None: ...

  @staticmethod
  @overload
  def glPathTexGenNV(arg0: int, arg1: int, arg2: int, arg3: FloatBuffer) -> None: ...

  @staticmethod
  @overload
  def glPointAlongPathNV(arg0: int, arg1: int, arg2: int, arg3: float, arg4: list[float], arg5: list[float], arg6: list[float], arg7: list[float]) -> bool: ...

  @staticmethod
  @overload
  def glPointAlongPathNV(arg0: int, arg1: int, arg2: int, arg3: float, arg4: FloatBuffer, arg5: FloatBuffer, arg6: FloatBuffer, arg7: FloatBuffer) -> bool: ...

  @staticmethod
  @overload
  def glProgramPathFragmentInputGenNV(arg0: int, arg1: int, arg2: int, arg3: int, arg4: list[float]) -> None: ...

  @staticmethod
  @overload
  def glProgramPathFragmentInputGenNV(arg0: int, arg1: int, arg2: int, arg3: int, arg4: FloatBuffer) -> None: ...

  @staticmethod
  @overload
  def glStencilFillPathInstancedNV(arg0: int, arg1: ByteBuffer, arg2: int, arg3: int, arg4: int, arg5: int, arg6: list[float]) -> None: ...

  @staticmethod
  @overload
  def glStencilFillPathInstancedNV(arg0: int, arg1: ByteBuffer, arg2: int, arg3: int, arg4: int, arg5: int, arg6: FloatBuffer) -> None: ...

  @staticmethod
  def glStencilFillPathNV(arg0: int, arg1: int, arg2: int) -> None: ...

  @staticmethod
  @overload
  def glStencilStrokePathInstancedNV(arg0: int, arg1: ByteBuffer, arg2: int, arg3: int, arg4: int, arg5: int, arg6: list[float]) -> None: ...

  @staticmethod
  @overload
  def glStencilStrokePathInstancedNV(arg0: int, arg1: ByteBuffer, arg2: int, arg3: int, arg4: int, arg5: int, arg6: FloatBuffer) -> None: ...

  @staticmethod
  def glStencilStrokePathNV(arg0: int, arg1: int, arg2: int) -> None: ...

  @staticmethod
  @overload
  def glStencilThenCoverFillPathInstancedNV(arg0: int, arg1: ByteBuffer, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int, arg7: list[float]) -> None: ...

  @staticmethod
  @overload
  def glStencilThenCoverFillPathInstancedNV(arg0: int, arg1: ByteBuffer, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int, arg7: FloatBuffer) -> None: ...

  @staticmethod
  def glStencilThenCoverFillPathNV(arg0: int, arg1: int, arg2: int, arg3: int) -> None: ...

  @staticmethod
  @overload
  def glStencilThenCoverStrokePathInstancedNV(arg0: int, arg1: ByteBuffer, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int, arg7: list[float]) -> None: ...

  @staticmethod
  @overload
  def glStencilThenCoverStrokePathInstancedNV(arg0: int, arg1: ByteBuffer, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int, arg7: FloatBuffer) -> None: ...

  @staticmethod
  def glStencilThenCoverStrokePathNV(arg0: int, arg1: int, arg2: int, arg3: int) -> None: ...

  @staticmethod
  @overload
  def glTransformPathNV(arg0: int, arg1: int, arg2: int, arg3: list[float]) -> None: ...

  @staticmethod
  @overload
  def glTransformPathNV(arg0: int, arg1: int, arg2: int, arg3: FloatBuffer) -> None: ...

  @staticmethod
  @overload
  def glWeightPathsNV(arg0: int, arg1: list[int], arg2: list[float]) -> None: ...

  @staticmethod
  @overload
  def glWeightPathsNV(arg0: int, arg1: IntBuffer, arg2: FloatBuffer) -> None: ...

  @staticmethod
  def nglCoverFillPathInstancedNV(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int) -> None: ...

  @staticmethod
  def nglCoverStrokePathInstancedNV(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int) -> None: ...

  @staticmethod
  def nglGetPathColorGenfvNV(arg0: int, arg1: int, arg2: int) -> None: ...

  @staticmethod
  def nglGetPathColorGenivNV(arg0: int, arg1: int, arg2: int) -> None: ...

  @staticmethod
  def nglGetPathCommandsNV(arg0: int, arg1: int) -> None: ...

  @staticmethod
  def nglGetPathCoordsNV(arg0: int, arg1: int) -> None: ...

  @staticmethod
  def nglGetPathDashArrayNV(arg0: int, arg1: int) -> None: ...

  @staticmethod
  def nglGetPathMetricRangeNV(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int) -> None: ...

  @staticmethod
  def nglGetPathMetricsNV(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int) -> None: ...

  @staticmethod
  def nglGetPathParameterfvNV(arg0: int, arg1: int, arg2: int) -> None: ...

  @staticmethod
  def nglGetPathParameterivNV(arg0: int, arg1: int, arg2: int) -> None: ...

  @staticmethod
  def nglGetPathSpacingNV(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: float, arg6: float, arg7: int, arg8: int) -> None: ...

  @staticmethod
  def nglGetPathTexGenfvNV(arg0: int, arg1: int, arg2: int) -> None: ...

  @staticmethod
  def nglGetPathTexGenivNV(arg0: int, arg1: int, arg2: int) -> None: ...

  @staticmethod
  def nglGetProgramResourcefvNV(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int, arg7: int) -> None: ...

  @staticmethod
  def nglMatrixLoad3x2fNV(arg0: int, arg1: int) -> None: ...

  @staticmethod
  def nglMatrixLoad3x3fNV(arg0: int, arg1: int) -> None: ...

  @staticmethod
  def nglMatrixLoadTranspose3x3fNV(arg0: int, arg1: int) -> None: ...

  @staticmethod
  def nglMatrixMult3x2fNV(arg0: int, arg1: int) -> None: ...

  @staticmethod
  def nglMatrixMult3x3fNV(arg0: int, arg1: int) -> None: ...

  @staticmethod
  def nglMatrixMultTranspose3x3fNV(arg0: int, arg1: int) -> None: ...

  @staticmethod
  def nglPathColorGenNV(arg0: int, arg1: int, arg2: int, arg3: int) -> None: ...

  @staticmethod
  def nglPathCommandsNV(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int) -> None: ...

  @staticmethod
  def nglPathCoordsNV(arg0: int, arg1: int, arg2: int, arg3: int) -> None: ...

  @staticmethod
  def nglPathDashArrayNV(arg0: int, arg1: int, arg2: int) -> None: ...

  @staticmethod
  def nglPathGlyphIndexArrayNV(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int, arg7: float) -> int: ...

  @staticmethod
  def nglPathGlyphIndexRangeNV(arg0: int, arg1: int, arg2: int, arg3: int, arg4: float, arg5: int) -> int: ...

  @staticmethod
  def nglPathGlyphRangeNV(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int, arg7: int, arg8: float) -> None: ...

  @staticmethod
  def nglPathGlyphsNV(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int, arg7: int, arg8: int, arg9: float) -> None: ...

  @staticmethod
  def nglPathMemoryGlyphIndexArrayNV(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int, arg7: int, arg8: float) -> int: ...

  @staticmethod
  def nglPathParameterfvNV(arg0: int, arg1: int, arg2: int) -> None: ...

  @staticmethod
  def nglPathParameterivNV(arg0: int, arg1: int, arg2: int) -> None: ...

  @staticmethod
  def nglPathStringNV(arg0: int, arg1: int, arg2: int, arg3: int) -> None: ...

  @staticmethod
  def nglPathSubCommandsNV(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int, arg7: int) -> None: ...

  @staticmethod
  def nglPathSubCoordsNV(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int) -> None: ...

  @staticmethod
  def nglPathTexGenNV(arg0: int, arg1: int, arg2: int, arg3: int) -> None: ...

  @staticmethod
  def nglPointAlongPathNV(arg0: int, arg1: int, arg2: int, arg3: float, arg4: int, arg5: int, arg6: int, arg7: int) -> bool: ...

  @staticmethod
  def nglProgramPathFragmentInputGenNV(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int) -> None: ...

  @staticmethod
  def nglStencilFillPathInstancedNV(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int, arg7: int) -> None: ...

  @staticmethod
  def nglStencilStrokePathInstancedNV(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int, arg7: int) -> None: ...

  @staticmethod
  def nglStencilThenCoverFillPathInstancedNV(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int, arg7: int, arg8: int) -> None: ...

  @staticmethod
  def nglStencilThenCoverStrokePathInstancedNV(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int, arg7: int, arg8: int) -> None: ...

  @staticmethod
  def nglTransformPathNV(arg0: int, arg1: int, arg2: int, arg3: int) -> None: ...

  @staticmethod
  def nglWeightPathsNV(arg0: int, arg1: int, arg2: int, arg3: int) -> None: ...


class NVPathRenderingSharedEdge:

  GL_SHARED_EDGE_NV: int


class NVPixelDataRange:

  GL_READ_PIXEL_DATA_RANGE_LENGTH_NV: int

  GL_READ_PIXEL_DATA_RANGE_NV: int

  GL_READ_PIXEL_DATA_RANGE_POINTER_NV: int

  GL_WRITE_PIXEL_DATA_RANGE_LENGTH_NV: int

  GL_WRITE_PIXEL_DATA_RANGE_NV: int

  GL_WRITE_PIXEL_DATA_RANGE_POINTER_NV: int

  @staticmethod
  def glFlushPixelDataRangeNV(arg0: int) -> None: ...

  @staticmethod
  def glPixelDataRangeNV(arg0: int, arg1: ByteBuffer) -> None: ...

  @staticmethod
  def nglPixelDataRangeNV(arg0: int, arg1: int, arg2: int) -> None: ...


class NVPointSprite:

  GL_COORD_REPLACE_NV: int

  GL_POINT_SPRITE_NV: int

  GL_POINT_SPRITE_R_MODE_NV: int

  @staticmethod
  def glPointParameteriNV(arg0: int, arg1: int) -> None: ...

  @staticmethod
  @overload
  def glPointParameterivNV(arg0: int, arg1: list[int]) -> None: ...

  @staticmethod
  @overload
  def glPointParameterivNV(arg0: int, arg1: IntBuffer) -> None: ...

  @staticmethod
  def nglPointParameterivNV(arg0: int, arg1: int) -> None: ...


class NVPrimitiveRestart:

  GL_PRIMITIVE_RESTART_INDEX_NV: int

  GL_PRIMITIVE_RESTART_NV: int

  @staticmethod
  def glPrimitiveRestartIndexNV(arg0: int) -> None: ...

  @staticmethod
  def glPrimitiveRestartNV() -> None: ...


class NVQueryResource:

  GL_QUERY_RESOURCE_BUFFEROBJECT_NV: int

  GL_QUERY_RESOURCE_MEMTYPE_VIDMEM_NV: int

  GL_QUERY_RESOURCE_RENDERBUFFER_NV: int

  GL_QUERY_RESOURCE_SYS_RESERVED_NV: int

  GL_QUERY_RESOURCE_TEXTURE_NV: int

  GL_QUERY_RESOURCE_TYPE_VIDMEM_ALLOC_NV: int

  @staticmethod
  @overload
  def glQueryResourceNV(arg0: int, arg1: int, arg2: list[int]) -> int: ...

  @staticmethod
  @overload
  def glQueryResourceNV(arg0: int, arg1: int, arg2: IntBuffer) -> int: ...

  @staticmethod
  def nglQueryResourceNV(arg0: int, arg1: int, arg2: int, arg3: int) -> int: ...


class NVQueryResourceTag:

  @staticmethod
  @overload
  def glDeleteQueryResourceTagNV(arg0: list[int]) -> None: ...

  @staticmethod
  @overload
  def glDeleteQueryResourceTagNV(arg0: int) -> None: ...

  @staticmethod
  @overload
  def glDeleteQueryResourceTagNV(arg0: IntBuffer) -> None: ...

  @staticmethod
  @overload
  def glGenQueryResourceTagNV() -> int: ...

  @staticmethod
  @overload
  def glGenQueryResourceTagNV(arg0: list[int]) -> None: ...

  @staticmethod
  @overload
  def glGenQueryResourceTagNV(arg0: IntBuffer) -> None: ...

  @staticmethod
  @overload
  def glQueryResourceTagNV(arg0: int, arg1: CharSequence) -> None: ...

  @staticmethod
  @overload
  def glQueryResourceTagNV(arg0: int, arg1: ByteBuffer) -> None: ...

  @staticmethod
  def nglDeleteQueryResourceTagNV(arg0: int, arg1: int) -> None: ...

  @staticmethod
  def nglGenQueryResourceTagNV(arg0: int, arg1: int) -> None: ...

  @staticmethod
  def nglQueryResourceTagNV(arg0: int, arg1: int) -> None: ...


class NVRepresentativeFragmentTest:

  GL_REPRESENTATIVE_FRAGMENT_TEST_NV: int


class NVRobustnessVideoMemoryPurge:

  GL_PURGED_CONTEXT_RESET_NV: int


class NVSampleLocations:

  GL_FRAMEBUFFER_PROGRAMMABLE_SAMPLE_LOCATIONS_NV: int

  GL_FRAMEBUFFER_SAMPLE_LOCATION_PIXEL_GRID_NV: int

  GL_PROGRAMMABLE_SAMPLE_LOCATION_NV: int

  GL_PROGRAMMABLE_SAMPLE_LOCATION_TABLE_SIZE_NV: int

  GL_SAMPLE_LOCATION_NV: int

  GL_SAMPLE_LOCATION_PIXEL_GRID_HEIGHT_NV: int

  GL_SAMPLE_LOCATION_PIXEL_GRID_WIDTH_NV: int

  GL_SAMPLE_LOCATION_SUBPIXEL_BITS_NV: int

  @staticmethod
  @overload
  def glFramebufferSampleLocationsfvNV(arg0: int, arg1: int, arg2: list[float]) -> None: ...

  @staticmethod
  @overload
  def glFramebufferSampleLocationsfvNV(arg0: int, arg1: int, arg2: FloatBuffer) -> None: ...

  @staticmethod
  @overload
  def glNamedFramebufferSampleLocationsfvNV(arg0: int, arg1: int, arg2: list[float]) -> None: ...

  @staticmethod
  @overload
  def glNamedFramebufferSampleLocationsfvNV(arg0: int, arg1: int, arg2: FloatBuffer) -> None: ...

  @staticmethod
  def glResolveDepthValuesNV() -> None: ...

  @staticmethod
  def nglFramebufferSampleLocationsfvNV(arg0: int, arg1: int, arg2: int, arg3: int) -> None: ...

  @staticmethod
  def nglNamedFramebufferSampleLocationsfvNV(arg0: int, arg1: int, arg2: int, arg3: int) -> None: ...


class NVScissorExclusive:

  GL_SCISSOR_BOX_EXCLUSIVE_NV: int

  GL_SCISSOR_TEST_EXCLUSIVE_NV: int

  @staticmethod
  @overload
  def glScissorExclusiveArrayvNV(arg0: int, arg1: list[int]) -> None: ...

  @staticmethod
  @overload
  def glScissorExclusiveArrayvNV(arg0: int, arg1: IntBuffer) -> None: ...

  @staticmethod
  def glScissorExclusiveNV(arg0: int, arg1: int, arg2: int, arg3: int) -> None: ...

  @staticmethod
  def nglScissorExclusiveArrayvNV(arg0: int, arg1: int, arg2: int) -> None: ...


class NVShaderBufferLoad:

  GL_BUFFER_GPU_ADDRESS_NV: int

  GL_GPU_ADDRESS_NV: int

  GL_MAX_SHADER_BUFFER_ADDRESS_NV: int

  @staticmethod
  def glGetBufferParameterui64NV(arg0: int, arg1: int) -> int: ...

  @staticmethod
  @overload
  def glGetBufferParameterui64vNV(arg0: int, arg1: int, arg2: list[int]) -> None: ...

  @staticmethod
  @overload
  def glGetBufferParameterui64vNV(arg0: int, arg1: int, arg2: LongBuffer) -> None: ...

  @staticmethod
  def glGetIntegerui64NV(arg0: int) -> int: ...

  @staticmethod
  @overload
  def glGetIntegerui64vNV(arg0: int, arg1: list[int]) -> None: ...

  @staticmethod
  @overload
  def glGetIntegerui64vNV(arg0: int, arg1: LongBuffer) -> None: ...

  @staticmethod
  def glGetNamedBufferParameterui64NV(arg0: int, arg1: int) -> int: ...

  @staticmethod
  @overload
  def glGetNamedBufferParameterui64vNV(arg0: int, arg1: int, arg2: list[int]) -> None: ...

  @staticmethod
  @overload
  def glGetNamedBufferParameterui64vNV(arg0: int, arg1: int, arg2: LongBuffer) -> None: ...

  @staticmethod
  def glGetUniformui64NV(arg0: int, arg1: int) -> int: ...

  @staticmethod
  @overload
  def glGetUniformui64vNV(arg0: int, arg1: int, arg2: list[int]) -> None: ...

  @staticmethod
  @overload
  def glGetUniformui64vNV(arg0: int, arg1: int, arg2: LongBuffer) -> None: ...

  @staticmethod
  def glIsBufferResidentNV(arg0: int) -> bool: ...

  @staticmethod
  def glIsNamedBufferResidentNV(arg0: int) -> bool: ...

  @staticmethod
  def glMakeBufferNonResidentNV(arg0: int) -> None: ...

  @staticmethod
  def glMakeBufferResidentNV(arg0: int, arg1: int) -> None: ...

  @staticmethod
  def glMakeNamedBufferNonResidentNV(arg0: int) -> None: ...

  @staticmethod
  def glMakeNamedBufferResidentNV(arg0: int, arg1: int) -> None: ...

  @staticmethod
  def glProgramUniformui64NV(arg0: int, arg1: int, arg2: int) -> None: ...

  @staticmethod
  @overload
  def glProgramUniformui64vNV(arg0: int, arg1: int, arg2: list[int]) -> None: ...

  @staticmethod
  @overload
  def glProgramUniformui64vNV(arg0: int, arg1: int, arg2: LongBuffer) -> None: ...

  @staticmethod
  def glUniformui64NV(arg0: int, arg1: int) -> None: ...

  @staticmethod
  @overload
  def glUniformui64vNV(arg0: int, arg1: list[int]) -> None: ...

  @staticmethod
  @overload
  def glUniformui64vNV(arg0: int, arg1: LongBuffer) -> None: ...

  @staticmethod
  def nglGetBufferParameterui64vNV(arg0: int, arg1: int, arg2: int) -> None: ...

  @staticmethod
  def nglGetIntegerui64vNV(arg0: int, arg1: int) -> None: ...

  @staticmethod
  def nglGetNamedBufferParameterui64vNV(arg0: int, arg1: int, arg2: int) -> None: ...

  @staticmethod
  def nglGetUniformui64vNV(arg0: int, arg1: int, arg2: int) -> None: ...

  @staticmethod
  def nglProgramUniformui64vNV(arg0: int, arg1: int, arg2: int, arg3: int) -> None: ...

  @staticmethod
  def nglUniformui64vNV(arg0: int, arg1: int, arg2: int) -> None: ...


class NVShaderBufferStore:

  GL_SHADER_GLOBAL_ACCESS_BARRIER_BIT_NV: int


class NVShaderSubgroupPartitioned:

  GL_SUBGROUP_FEATURE_PARTITIONED_BIT_NV: int


class NVShaderThreadGroup:

  GL_SM_COUNT_NV: int

  GL_WARP_SIZE_NV: int

  GL_WARPS_PER_SM_NV: int


class NVShadingRateImage:

  GL_MAX_COARSE_FRAGMENT_SAMPLES_NV: int

  GL_SHADING_RATE_16_INVOCATIONS_PER_PIXEL_NV: int

  GL_SHADING_RATE_1_INVOCATION_PER_1X2_PIXELS_NV: int

  GL_SHADING_RATE_1_INVOCATION_PER_2X1_PIXELS_NV: int

  GL_SHADING_RATE_1_INVOCATION_PER_2X2_PIXELS_NV: int

  GL_SHADING_RATE_1_INVOCATION_PER_2X4_PIXELS_NV: int

  GL_SHADING_RATE_1_INVOCATION_PER_4X2_PIXELS_NV: int

  GL_SHADING_RATE_1_INVOCATION_PER_4X4_PIXELS_NV: int

  GL_SHADING_RATE_1_INVOCATION_PER_PIXEL_NV: int

  GL_SHADING_RATE_2_INVOCATIONS_PER_PIXEL_NV: int

  GL_SHADING_RATE_4_INVOCATIONS_PER_PIXEL_NV: int

  GL_SHADING_RATE_8_INVOCATIONS_PER_PIXEL_NV: int

  GL_SHADING_RATE_IMAGE_BINDING_NV: int

  GL_SHADING_RATE_IMAGE_NV: int

  GL_SHADING_RATE_IMAGE_PALETTE_SIZE_NV: int

  GL_SHADING_RATE_IMAGE_TEXEL_HEIGHT_NV: int

  GL_SHADING_RATE_IMAGE_TEXEL_WIDTH_NV: int

  GL_SHADING_RATE_NO_INVOCATIONS_NV: int

  GL_SHADING_RATE_SAMPLE_ORDER_DEFAULT_NV: int

  GL_SHADING_RATE_SAMPLE_ORDER_PIXEL_MAJOR_NV: int

  GL_SHADING_RATE_SAMPLE_ORDER_SAMPLE_MAJOR_NV: int

  @staticmethod
  def glBindShadingRateImageNV(arg0: int) -> None: ...

  @staticmethod
  @overload
  def glGetShadingRateImagePaletteNV(arg0: int, arg1: int, arg2: list[int]) -> None: ...

  @staticmethod
  @overload
  def glGetShadingRateImagePaletteNV(arg0: int, arg1: int, arg2: IntBuffer) -> None: ...

  @staticmethod
  @overload
  def glGetShadingRateSampleLocationivNV(arg0: int, arg1: int, arg2: int, arg3: list[int]) -> None: ...

  @staticmethod
  @overload
  def glGetShadingRateSampleLocationivNV(arg0: int, arg1: int, arg2: int, arg3: IntBuffer) -> None: ...

  @staticmethod
  def glShadingRateImageBarrierNV(arg0: bool) -> None: ...

  @staticmethod
  @overload
  def glShadingRateImagePaletteNV(arg0: int, arg1: int, arg2: list[int]) -> None: ...

  @staticmethod
  @overload
  def glShadingRateImagePaletteNV(arg0: int, arg1: int, arg2: IntBuffer) -> None: ...

  @staticmethod
  @overload
  def glShadingRateSampleOrderCustomNV(arg0: int, arg1: int, arg2: list[int]) -> None: ...

  @staticmethod
  @overload
  def glShadingRateSampleOrderCustomNV(arg0: int, arg1: int, arg2: IntBuffer) -> None: ...

  @staticmethod
  def glShadingRateSampleOrderNV(arg0: int) -> None: ...

  @staticmethod
  def nglGetShadingRateImagePaletteNV(arg0: int, arg1: int, arg2: int) -> None: ...

  @staticmethod
  def nglGetShadingRateSampleLocationivNV(arg0: int, arg1: int, arg2: int, arg3: int) -> None: ...

  @staticmethod
  def nglShadingRateImagePaletteNV(arg0: int, arg1: int, arg2: int, arg3: int) -> None: ...

  @staticmethod
  def nglShadingRateSampleOrderCustomNV(arg0: int, arg1: int, arg2: int) -> None: ...


class NVTexgenReflection:

  GL_NORMAL_MAP_NV: int

  GL_REFLECTION_MAP_NV: int


class NVTextureBarrier:

  @staticmethod
  def glTextureBarrierNV() -> None: ...


class NVTextureMultisample:

  GL_TEXTURE_COLOR_SAMPLES_NV: int

  GL_TEXTURE_COVERAGE_SAMPLES_NV: int

  @staticmethod
  def glTexImage2DMultisampleCoverageNV(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: bool) -> None: ...

  @staticmethod
  def glTexImage3DMultisampleCoverageNV(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int, arg7: bool) -> None: ...

  @staticmethod
  def glTextureImage2DMultisampleCoverageNV(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int, arg7: bool) -> None: ...

  @staticmethod
  def glTextureImage2DMultisampleNV(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: bool) -> None: ...

  @staticmethod
  def glTextureImage3DMultisampleCoverageNV(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int, arg7: int, arg8: bool) -> None: ...

  @staticmethod
  def glTextureImage3DMultisampleNV(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int, arg7: bool) -> None: ...


class NVTransformFeedback:

  GL_ACTIVE_VARYING_MAX_LENGTH_NV: int

  GL_ACTIVE_VARYINGS_NV: int

  GL_BACK_PRIMARY_COLOR_NV: int

  GL_BACK_SECONDARY_COLOR_NV: int

  GL_CLIP_DISTANCE_NV: int

  GL_GENERIC_ATTRIB_NV: int

  GL_INTERLEAVED_ATTRIBS_NV: int

  GL_LAYER_NV: int

  GL_MAX_TRANSFORM_FEEDBACK_INTERLEAVED_COMPONENTS_NV: int

  GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS_NV: int

  GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_COMPONENTS_NV: int

  GL_PRIMITIVE_ID_NV: int

  GL_PRIMITIVES_GENERATED_NV: int

  GL_RASTERIZER_DISCARD_NV: int

  GL_SECONDARY_COLOR_NV: int

  GL_SEPARATE_ATTRIBS_NV: int

  GL_TEXTURE_COORD_NV: int

  GL_TRANSFORM_FEEDBACK_ATTRIBS_NV: int

  GL_TRANSFORM_FEEDBACK_BUFFER_BINDING_NV: int

  GL_TRANSFORM_FEEDBACK_BUFFER_MODE_NV: int

  GL_TRANSFORM_FEEDBACK_BUFFER_NV: int

  GL_TRANSFORM_FEEDBACK_BUFFER_SIZE_NV: int

  GL_TRANSFORM_FEEDBACK_BUFFER_START_NV: int

  GL_TRANSFORM_FEEDBACK_PRIMITIVES_WRITTEN_NV: int

  GL_TRANSFORM_FEEDBACK_RECORD_NV: int

  GL_TRANSFORM_FEEDBACK_VARYINGS_NV: int

  GL_VERTEX_ID_NV: int

  @staticmethod
  @overload
  def glActiveVaryingNV(arg0: int, arg1: CharSequence) -> None: ...

  @staticmethod
  @overload
  def glActiveVaryingNV(arg0: int, arg1: ByteBuffer) -> None: ...

  @staticmethod
  def glBeginTransformFeedbackNV(arg0: int) -> None: ...

  @staticmethod
  def glBindBufferBaseNV(arg0: int, arg1: int, arg2: int) -> None: ...

  @staticmethod
  def glBindBufferOffsetNV(arg0: int, arg1: int, arg2: int, arg3: int) -> None: ...

  @staticmethod
  def glBindBufferRangeNV(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int) -> None: ...

  @staticmethod
  def glEndTransformFeedbackNV() -> None: ...

  @staticmethod
  @overload
  def glGetActiveVaryingNV(arg0: int, arg1: int, arg2: list[int], arg3: list[int], arg4: list[int], arg5: ByteBuffer) -> None: ...

  @staticmethod
  @overload
  def glGetActiveVaryingNV(arg0: int, arg1: int, arg2: IntBuffer, arg3: IntBuffer, arg4: IntBuffer, arg5: ByteBuffer) -> None: ...

  @staticmethod
  @overload
  def glGetTransformFeedbackVaryingNV(arg0: int, arg1: int) -> int: ...

  @staticmethod
  @overload
  def glGetTransformFeedbackVaryingNV(arg0: int, arg1: int, arg2: list[int]) -> None: ...

  @staticmethod
  @overload
  def glGetTransformFeedbackVaryingNV(arg0: int, arg1: int, arg2: IntBuffer) -> None: ...

  @staticmethod
  @overload
  def glGetVaryingLocationNV(arg0: int, arg1: CharSequence) -> int: ...

  @staticmethod
  @overload
  def glGetVaryingLocationNV(arg0: int, arg1: ByteBuffer) -> int: ...

  @staticmethod
  @overload
  def glTransformFeedbackAttribsNV(arg0: list[int], arg1: int) -> None: ...

  @staticmethod
  @overload
  def glTransformFeedbackAttribsNV(arg0: IntBuffer, arg1: int) -> None: ...

  @staticmethod
  @overload
  def glTransformFeedbackStreamAttribsNV(arg0: list[int], arg1: list[int], arg2: int) -> None: ...

  @staticmethod
  @overload
  def glTransformFeedbackStreamAttribsNV(arg0: IntBuffer, arg1: IntBuffer, arg2: int) -> None: ...

  @staticmethod
  @overload
  def glTransformFeedbackVaryingsNV(arg0: int, arg1: list[int], arg2: int) -> None: ...

  @staticmethod
  @overload
  def glTransformFeedbackVaryingsNV(arg0: int, arg1: IntBuffer, arg2: int) -> None: ...

  @staticmethod
  def nglActiveVaryingNV(arg0: int, arg1: int) -> None: ...

  @staticmethod
  def nglGetActiveVaryingNV(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int) -> None: ...

  @staticmethod
  def nglGetTransformFeedbackVaryingNV(arg0: int, arg1: int, arg2: int) -> None: ...

  @staticmethod
  def nglGetVaryingLocationNV(arg0: int, arg1: int) -> int: ...

  @staticmethod
  def nglTransformFeedbackAttribsNV(arg0: int, arg1: int, arg2: int) -> None: ...

  @staticmethod
  def nglTransformFeedbackStreamAttribsNV(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int) -> None: ...

  @staticmethod
  def nglTransformFeedbackVaryingsNV(arg0: int, arg1: int, arg2: int, arg3: int) -> None: ...


class NVTransformFeedback2:

  GL_TRANSFORM_FEEDBACK_BINDING_NV: int

  GL_TRANSFORM_FEEDBACK_BUFFER_ACTIVE_NV: int

  GL_TRANSFORM_FEEDBACK_BUFFER_PAUSED_NV: int

  GL_TRANSFORM_FEEDBACK_NV: int

  @staticmethod
  def glBindTransformFeedbackNV(arg0: int, arg1: int) -> None: ...

  @staticmethod
  @overload
  def glDeleteTransformFeedbacksNV(arg0: list[int]) -> None: ...

  @staticmethod
  @overload
  def glDeleteTransformFeedbacksNV(arg0: int) -> None: ...

  @staticmethod
  @overload
  def glDeleteTransformFeedbacksNV(arg0: IntBuffer) -> None: ...

  @staticmethod
  def glDrawTransformFeedbackNV(arg0: int, arg1: int) -> None: ...

  @staticmethod
  @overload
  def glGenTransformFeedbacksNV() -> int: ...

  @staticmethod
  @overload
  def glGenTransformFeedbacksNV(arg0: list[int]) -> None: ...

  @staticmethod
  @overload
  def glGenTransformFeedbacksNV(arg0: IntBuffer) -> None: ...

  @staticmethod
  def glIsTransformFeedbackNV(arg0: int) -> bool: ...

  @staticmethod
  def glPauseTransformFeedbackNV() -> None: ...

  @staticmethod
  def glResumeTransformFeedbackNV() -> None: ...

  @staticmethod
  def nglDeleteTransformFeedbacksNV(arg0: int, arg1: int) -> None: ...

  @staticmethod
  def nglGenTransformFeedbacksNV(arg0: int, arg1: int) -> None: ...


class NVUniformBufferUnifiedMemory:

  GL_UNIFORM_BUFFER_ADDRESS_NV: int

  GL_UNIFORM_BUFFER_LENGTH_NV: int

  GL_UNIFORM_BUFFER_UNIFIED_NV: int


class NVVertexArrayRange:

  GL_MAX_VERTEX_ARRAY_RANGE_ELEMENT_NV: int

  GL_VERTEX_ARRAY_RANGE_LENGTH_NV: int

  GL_VERTEX_ARRAY_RANGE_NV: int

  GL_VERTEX_ARRAY_RANGE_POINTER_NV: int

  GL_VERTEX_ARRAY_RANGE_VALID_NV: int

  @staticmethod
  def glFlushVertexArrayRangeNV() -> None: ...

  @staticmethod
  def glVertexArrayRangeNV(arg0: ByteBuffer) -> None: ...

  @staticmethod
  def nglVertexArrayRangeNV(arg0: int, arg1: int) -> None: ...


class NVVertexArrayRange2:

  GL_VERTEX_ARRAY_RANGE_WITHOUT_FLUSH_NV: int


class NVVertexAttribInteger64bit:

  GL_INT64_NV: int

  GL_UNSIGNED_INT64_NV: int

  @staticmethod
  def glGetVertexAttribLi64NV(arg0: int, arg1: int) -> int: ...

  @staticmethod
  @overload
  def glGetVertexAttribLi64vNV(arg0: int, arg1: int, arg2: list[int]) -> None: ...

  @staticmethod
  @overload
  def glGetVertexAttribLi64vNV(arg0: int, arg1: int, arg2: LongBuffer) -> None: ...

  @staticmethod
  def glGetVertexAttribLui64NV(arg0: int, arg1: int) -> int: ...

  @staticmethod
  @overload
  def glGetVertexAttribLui64vNV(arg0: int, arg1: int, arg2: list[int]) -> None: ...

  @staticmethod
  @overload
  def glGetVertexAttribLui64vNV(arg0: int, arg1: int, arg2: LongBuffer) -> None: ...

  @staticmethod
  def glVertexAttribL1i64NV(arg0: int, arg1: int) -> None: ...

  @staticmethod
  @overload
  def glVertexAttribL1i64vNV(arg0: int, arg1: list[int]) -> None: ...

  @staticmethod
  @overload
  def glVertexAttribL1i64vNV(arg0: int, arg1: LongBuffer) -> None: ...

  @staticmethod
  def glVertexAttribL1ui64NV(arg0: int, arg1: int) -> None: ...

  @staticmethod
  @overload
  def glVertexAttribL1ui64vNV(arg0: int, arg1: list[int]) -> None: ...

  @staticmethod
  @overload
  def glVertexAttribL1ui64vNV(arg0: int, arg1: LongBuffer) -> None: ...

  @staticmethod
  def glVertexAttribL2i64NV(arg0: int, arg1: int, arg2: int) -> None: ...

  @staticmethod
  @overload
  def glVertexAttribL2i64vNV(arg0: int, arg1: list[int]) -> None: ...

  @staticmethod
  @overload
  def glVertexAttribL2i64vNV(arg0: int, arg1: LongBuffer) -> None: ...

  @staticmethod
  def glVertexAttribL2ui64NV(arg0: int, arg1: int, arg2: int) -> None: ...

  @staticmethod
  @overload
  def glVertexAttribL2ui64vNV(arg0: int, arg1: list[int]) -> None: ...

  @staticmethod
  @overload
  def glVertexAttribL2ui64vNV(arg0: int, arg1: LongBuffer) -> None: ...

  @staticmethod
  def glVertexAttribL3i64NV(arg0: int, arg1: int, arg2: int, arg3: int) -> None: ...

  @staticmethod
  @overload
  def glVertexAttribL3i64vNV(arg0: int, arg1: list[int]) -> None: ...

  @staticmethod
  @overload
  def glVertexAttribL3i64vNV(arg0: int, arg1: LongBuffer) -> None: ...

  @staticmethod
  def glVertexAttribL3ui64NV(arg0: int, arg1: int, arg2: int, arg3: int) -> None: ...

  @staticmethod
  @overload
  def glVertexAttribL3ui64vNV(arg0: int, arg1: list[int]) -> None: ...

  @staticmethod
  @overload
  def glVertexAttribL3ui64vNV(arg0: int, arg1: LongBuffer) -> None: ...

  @staticmethod
  def glVertexAttribL4i64NV(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int) -> None: ...

  @staticmethod
  @overload
  def glVertexAttribL4i64vNV(arg0: int, arg1: list[int]) -> None: ...

  @staticmethod
  @overload
  def glVertexAttribL4i64vNV(arg0: int, arg1: LongBuffer) -> None: ...

  @staticmethod
  def glVertexAttribL4ui64NV(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int) -> None: ...

  @staticmethod
  @overload
  def glVertexAttribL4ui64vNV(arg0: int, arg1: list[int]) -> None: ...

  @staticmethod
  @overload
  def glVertexAttribL4ui64vNV(arg0: int, arg1: LongBuffer) -> None: ...

  @staticmethod
  def glVertexAttribLFormatNV(arg0: int, arg1: int, arg2: int, arg3: int) -> None: ...

  @staticmethod
  def nglGetVertexAttribLi64vNV(arg0: int, arg1: int, arg2: int) -> None: ...

  @staticmethod
  def nglGetVertexAttribLui64vNV(arg0: int, arg1: int, arg2: int) -> None: ...

  @staticmethod
  def nglVertexAttribL1i64vNV(arg0: int, arg1: int) -> None: ...

  @staticmethod
  def nglVertexAttribL1ui64vNV(arg0: int, arg1: int) -> None: ...

  @staticmethod
  def nglVertexAttribL2i64vNV(arg0: int, arg1: int) -> None: ...

  @staticmethod
  def nglVertexAttribL2ui64vNV(arg0: int, arg1: int) -> None: ...

  @staticmethod
  def nglVertexAttribL3i64vNV(arg0: int, arg1: int) -> None: ...

  @staticmethod
  def nglVertexAttribL3ui64vNV(arg0: int, arg1: int) -> None: ...

  @staticmethod
  def nglVertexAttribL4i64vNV(arg0: int, arg1: int) -> None: ...

  @staticmethod
  def nglVertexAttribL4ui64vNV(arg0: int, arg1: int) -> None: ...


class NVVertexBufferUnifiedMemory:

  GL_COLOR_ARRAY_ADDRESS_NV: int

  GL_COLOR_ARRAY_LENGTH_NV: int

  GL_EDGE_FLAG_ARRAY_ADDRESS_NV: int

  GL_EDGE_FLAG_ARRAY_LENGTH_NV: int

  GL_ELEMENT_ARRAY_ADDRESS_NV: int

  GL_ELEMENT_ARRAY_LENGTH_NV: int

  GL_ELEMENT_ARRAY_UNIFIED_NV: int

  GL_FOG_COORD_ARRAY_ADDRESS_NV: int

  GL_FOG_COORD_ARRAY_LENGTH_NV: int

  GL_INDEX_ARRAY_ADDRESS_NV: int

  GL_INDEX_ARRAY_LENGTH_NV: int

  GL_NORMAL_ARRAY_ADDRESS_NV: int

  GL_NORMAL_ARRAY_LENGTH_NV: int

  GL_SECONDARY_COLOR_ARRAY_ADDRESS_NV: int

  GL_SECONDARY_COLOR_ARRAY_LENGTH_NV: int

  GL_TEXTURE_COORD_ARRAY_ADDRESS_NV: int

  GL_TEXTURE_COORD_ARRAY_LENGTH_NV: int

  GL_VERTEX_ARRAY_ADDRESS_NV: int

  GL_VERTEX_ARRAY_LENGTH_NV: int

  GL_VERTEX_ATTRIB_ARRAY_ADDRESS_NV: int

  GL_VERTEX_ATTRIB_ARRAY_LENGTH_NV: int

  GL_VERTEX_ATTRIB_ARRAY_UNIFIED_NV: int

  @staticmethod
  def glBufferAddressRangeNV(arg0: int, arg1: int, arg2: int, arg3: int) -> None: ...

  @staticmethod
  def glColorFormatNV(arg0: int, arg1: int, arg2: int) -> None: ...

  @staticmethod
  def glEdgeFlagFormatNV(arg0: int) -> None: ...

  @staticmethod
  def glFogCoordFormatNV(arg0: int, arg1: int) -> None: ...

  @staticmethod
  def glGetIntegerui64iNV(arg0: int, arg1: int) -> int: ...

  @staticmethod
  @overload
  def glGetIntegerui64i_vNV(arg0: int, arg1: int, arg2: list[int]) -> None: ...

  @staticmethod
  @overload
  def glGetIntegerui64i_vNV(arg0: int, arg1: int, arg2: LongBuffer) -> None: ...

  @staticmethod
  def glIndexFormatNV(arg0: int, arg1: int) -> None: ...

  @staticmethod
  def glNormalFormatNV(arg0: int, arg1: int) -> None: ...

  @staticmethod
  def glSecondaryColorFormatNV(arg0: int, arg1: int, arg2: int) -> None: ...

  @staticmethod
  def glTexCoordFormatNV(arg0: int, arg1: int, arg2: int) -> None: ...

  @staticmethod
  def glVertexAttribFormatNV(arg0: int, arg1: int, arg2: int, arg3: bool, arg4: int) -> None: ...

  @staticmethod
  def glVertexAttribIFormatNV(arg0: int, arg1: int, arg2: int, arg3: int) -> None: ...

  @staticmethod
  def glVertexFormatNV(arg0: int, arg1: int, arg2: int) -> None: ...

  @staticmethod
  def nglGetIntegerui64i_vNV(arg0: int, arg1: int, arg2: int) -> None: ...


class NVViewportSwizzle:

  GL_VIEWPORT_SWIZZLE_NEGATIVE_W_NV: int

  GL_VIEWPORT_SWIZZLE_NEGATIVE_X_NV: int

  GL_VIEWPORT_SWIZZLE_NEGATIVE_Y_NV: int

  GL_VIEWPORT_SWIZZLE_NEGATIVE_Z_NV: int

  GL_VIEWPORT_SWIZZLE_POSITIVE_W_NV: int

  GL_VIEWPORT_SWIZZLE_POSITIVE_X_NV: int

  GL_VIEWPORT_SWIZZLE_POSITIVE_Y_NV: int

  GL_VIEWPORT_SWIZZLE_POSITIVE_Z_NV: int

  GL_VIEWPORT_SWIZZLE_W_NV: int

  GL_VIEWPORT_SWIZZLE_X_NV: int

  GL_VIEWPORT_SWIZZLE_Y_NV: int

  GL_VIEWPORT_SWIZZLE_Z_NV: int

  @staticmethod
  def glViewportSwizzleNV(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int) -> None: ...


class NVXConditionalRender:

  @staticmethod
  def glBeginConditionalRenderNVX(arg0: int) -> None: ...

  @staticmethod
  def glEndConditionalRenderNVX() -> None: ...


class NVXGPUMemoryInfo:

  GL_GPU_MEMORY_INFO_CURRENT_AVAILABLE_VIDMEM_NVX: int

  GL_GPU_MEMORY_INFO_DEDICATED_VIDMEM_NVX: int

  GL_GPU_MEMORY_INFO_EVICTED_MEMORY_NVX: int

  GL_GPU_MEMORY_INFO_EVICTION_COUNT_NVX: int

  GL_GPU_MEMORY_INFO_TOTAL_AVAILABLE_MEMORY_NVX: int


class NVXGpuMulticast2:

  @staticmethod
  @overload
  def glAsyncCopyBufferSubDataNVX(arg0: list[int], arg1: list[int], arg2: int, arg3: int, arg4: int, arg5: int, arg6: int, arg7: int, arg8: int, arg9: list[int], arg10: list[int]) -> int: ...

  @staticmethod
  @overload
  def glAsyncCopyBufferSubDataNVX(arg0: IntBuffer, arg1: LongBuffer, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int, arg7: int, arg8: int, arg9: IntBuffer, arg10: LongBuffer) -> int: ...

  @staticmethod
  @overload
  def glAsyncCopyImageSubDataNVX(arg0: list[int], arg1: list[int], arg2: int, arg3: int, arg4: int, arg5: int, arg6: int, arg7: int, arg8: int, arg9: int, arg10: int, arg11: int, arg12: int, arg13: int, arg14: int, arg15: int, arg16: int, arg17: int, arg18: int, arg19: list[int], arg20: list[int]) -> int: ...

  @staticmethod
  @overload
  def glAsyncCopyImageSubDataNVX(arg0: IntBuffer, arg1: LongBuffer, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int, arg7: int, arg8: int, arg9: int, arg10: int, arg11: int, arg12: int, arg13: int, arg14: int, arg15: int, arg16: int, arg17: int, arg18: int, arg19: IntBuffer, arg20: LongBuffer) -> int: ...

  @staticmethod
  @overload
  def glMulticastScissorArrayvNVX(arg0: int, arg1: int, arg2: list[int]) -> None: ...

  @staticmethod
  @overload
  def glMulticastScissorArrayvNVX(arg0: int, arg1: int, arg2: IntBuffer) -> None: ...

  @staticmethod
  @overload
  def glMulticastViewportArrayvNVX(arg0: int, arg1: int, arg2: list[float]) -> None: ...

  @staticmethod
  @overload
  def glMulticastViewportArrayvNVX(arg0: int, arg1: int, arg2: FloatBuffer) -> None: ...

  @staticmethod
  def glMulticastViewportPositionWScaleNVX(arg0: int, arg1: int, arg2: float, arg3: float) -> None: ...

  @staticmethod
  def glUploadGpuMaskNVX(arg0: int) -> None: ...

  @staticmethod
  def nglAsyncCopyBufferSubDataNVX(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int, arg7: int, arg8: int, arg9: int, arg10: int, arg11: int, arg12: int) -> int: ...

  @staticmethod
  def nglAsyncCopyImageSubDataNVX(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int, arg7: int, arg8: int, arg9: int, arg10: int, arg11: int, arg12: int, arg13: int, arg14: int, arg15: int, arg16: int, arg17: int, arg18: int, arg19: int, arg20: int, arg21: int, arg22: int) -> int: ...

  @staticmethod
  def nglMulticastScissorArrayvNVX(arg0: int, arg1: int, arg2: int, arg3: int) -> None: ...

  @staticmethod
  def nglMulticastViewportArrayvNVX(arg0: int, arg1: int, arg2: int, arg3: int) -> None: ...


class NVXProgressFence:

  @staticmethod
  @overload
  def glClientWaitSemaphoreui64NVX(arg0: list[int], arg1: list[int]) -> None: ...

  @staticmethod
  @overload
  def glClientWaitSemaphoreui64NVX(arg0: IntBuffer, arg1: LongBuffer) -> None: ...

  @staticmethod
  def glCreateProgressFenceNVX() -> int: ...

  @staticmethod
  @overload
  def glSignalSemaphoreui64NVX(arg0: int, arg1: list[int], arg2: list[int]) -> None: ...

  @staticmethod
  @overload
  def glSignalSemaphoreui64NVX(arg0: int, arg1: IntBuffer, arg2: LongBuffer) -> None: ...

  @staticmethod
  @overload
  def glWaitSemaphoreui64NVX(arg0: int, arg1: list[int], arg2: list[int]) -> None: ...

  @staticmethod
  @overload
  def glWaitSemaphoreui64NVX(arg0: int, arg1: IntBuffer, arg2: LongBuffer) -> None: ...

  @staticmethod
  def nglClientWaitSemaphoreui64NVX(arg0: int, arg1: int, arg2: int) -> None: ...

  @staticmethod
  def nglSignalSemaphoreui64NVX(arg0: int, arg1: int, arg2: int, arg3: int) -> None: ...

  @staticmethod
  def nglWaitSemaphoreui64NVX(arg0: int, arg1: int, arg2: int, arg3: int) -> None: ...


class OVRMultiview:

  GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_BASE_VIEW_INDEX_OVR: int

  GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_NUM_VIEWS_OVR: int

  GL_FRAMEBUFFER_INCOMPLETE_VIEW_TARGETS_OVR: int

  GL_MAX_VIEWS_OVR: int

  @staticmethod
  def glFramebufferTextureMultiviewOVR(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int) -> None: ...

  @staticmethod
  def glNamedFramebufferTextureMultiviewOVR(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int) -> None: ...


class WGL:

  WGL_FONT_LINES: int

  WGL_FONT_POLYGONS: int

  WGL_SWAP_MAIN_PLANE: int

  WGL_SWAP_OVERLAY1: int

  WGL_SWAP_OVERLAY10: int

  WGL_SWAP_OVERLAY11: int

  WGL_SWAP_OVERLAY12: int

  WGL_SWAP_OVERLAY13: int

  WGL_SWAP_OVERLAY14: int

  WGL_SWAP_OVERLAY15: int

  WGL_SWAP_OVERLAY2: int

  WGL_SWAP_OVERLAY3: int

  WGL_SWAP_OVERLAY4: int

  WGL_SWAP_OVERLAY5: int

  WGL_SWAP_OVERLAY6: int

  WGL_SWAP_OVERLAY7: int

  WGL_SWAP_OVERLAY8: int

  WGL_SWAP_OVERLAY9: int

  WGL_SWAP_UNDERLAY1: int

  WGL_SWAP_UNDERLAY10: int

  WGL_SWAP_UNDERLAY11: int

  WGL_SWAP_UNDERLAY12: int

  WGL_SWAP_UNDERLAY13: int

  WGL_SWAP_UNDERLAY14: int

  WGL_SWAP_UNDERLAY15: int

  WGL_SWAP_UNDERLAY2: int

  WGL_SWAP_UNDERLAY3: int

  WGL_SWAP_UNDERLAY4: int

  WGL_SWAP_UNDERLAY5: int

  WGL_SWAP_UNDERLAY6: int

  WGL_SWAP_UNDERLAY7: int

  WGL_SWAP_UNDERLAY8: int

  WGL_SWAP_UNDERLAY9: int

  @staticmethod
  def nwglGetProcAddress(arg0: int) -> int: ...

  @staticmethod
  def wglCopyContext(arg0: int, arg1: int, arg2: int) -> bool: ...

  @staticmethod
  def wglCreateContext(arg0: int) -> int: ...

  @staticmethod
  def wglCreateLayerContext(arg0: int, arg1: int) -> int: ...

  @staticmethod
  def wglDeleteContext(arg0: int) -> bool: ...

  @staticmethod
  def wglGetCurrentContext() -> int: ...

  @staticmethod
  def wglGetCurrentDC() -> int: ...

  @staticmethod
  @overload
  def wglGetProcAddress(arg0: CharSequence) -> int: ...

  @staticmethod
  @overload
  def wglGetProcAddress(arg0: ByteBuffer) -> int: ...

  @staticmethod
  def wglMakeCurrent(arg0: int, arg1: int) -> bool: ...

  @staticmethod
  def wglShareLists(arg0: int, arg1: int) -> bool: ...

  class Functions:

    CopyContext: int

    CreateContext: int

    CreateLayerContext: int

    DeleteContext: int

    GetCurrentContext: int

    GetCurrentDC: int

    GetProcAddress: int

    MakeCurrent: int

    ShareLists: int


class WGLAMDGPUAssociation:

  WGL_GPU_CLOCK_AMD: int

  WGL_GPU_FASTEST_TARGET_GPUS_AMD: int

  WGL_GPU_NUM_PIPES_AMD: int

  WGL_GPU_NUM_RB_AMD: int

  WGL_GPU_NUM_SIMD_AMD: int

  WGL_GPU_NUM_SPI_AMD: int

  WGL_GPU_OPENGL_VERSION_STRING_AMD: int

  WGL_GPU_RAM_AMD: int

  WGL_GPU_RENDERER_STRING_AMD: int

  WGL_GPU_VENDOR_AMD: int

  @staticmethod
  def nwglCreateAssociatedContextAttribsAMD(arg0: int, arg1: int, arg2: int) -> int: ...

  @staticmethod
  def nwglGetGPUIDsAMD(arg0: int, arg1: int) -> int: ...

  @staticmethod
  def nwglGetGPUInfoAMD(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int) -> int: ...

  @staticmethod
  def wglBlitContextFramebufferAMD(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int, arg7: int, arg8: int, arg9: int, arg10: int) -> None: ...

  @staticmethod
  def wglCreateAssociatedContextAMD(arg0: int) -> int: ...

  @staticmethod
  @overload
  def wglCreateAssociatedContextAttribsAMD(arg0: int, arg1: int, arg2: list[int]) -> int: ...

  @staticmethod
  @overload
  def wglCreateAssociatedContextAttribsAMD(arg0: int, arg1: int, arg2: IntBuffer) -> int: ...

  @staticmethod
  def wglDeleteAssociatedContextAMD(arg0: int) -> bool: ...

  @staticmethod
  def wglGetContextGPUIDAMD(arg0: int) -> int: ...

  @staticmethod
  def wglGetCurrentAssociatedContextAMD() -> int: ...

  @staticmethod
  @overload
  def wglGetGPUIDsAMD(arg0: list[int]) -> int: ...

  @staticmethod
  @overload
  def wglGetGPUIDsAMD(arg0: IntBuffer) -> int: ...

  @staticmethod
  @overload
  def wglGetGPUInfoAMD(arg0: int, arg1: int, arg2: int, arg3: list[float]) -> int: ...

  @staticmethod
  @overload
  def wglGetGPUInfoAMD(arg0: int, arg1: int, arg2: int, arg3: list[int]) -> int: ...

  @staticmethod
  @overload
  def wglGetGPUInfoAMD(arg0: int, arg1: int, arg2: int, arg3: ByteBuffer) -> int: ...

  @staticmethod
  @overload
  def wglGetGPUInfoAMD(arg0: int, arg1: int, arg2: int, arg3: FloatBuffer) -> int: ...

  @staticmethod
  @overload
  def wglGetGPUInfoAMD(arg0: int, arg1: int, arg2: int, arg3: IntBuffer) -> int: ...

  @staticmethod
  def wglMakeAssociatedContextCurrentAMD(arg0: int) -> bool: ...


class WGLARBBufferRegion:

  WGL_BACK_COLOR_BUFFER_BIT_ARB: int

  WGL_DEPTH_BUFFER_BIT_ARB: int

  WGL_FRONT_COLOR_BUFFER_BIT_ARB: int

  WGL_STENCIL_BUFFER_BIT_ARB: int

  @staticmethod
  def wglCreateBufferRegionARB(arg0: int, arg1: int, arg2: int) -> int: ...

  @staticmethod
  def wglDeleteBufferRegionARB(arg0: int) -> None: ...

  @staticmethod
  def wglRestoreBufferRegionARB(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int) -> bool: ...

  @staticmethod
  def wglSaveBufferRegionARB(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int) -> bool: ...


class WGLARBContextFlushControl:

  WGL_CONTEXT_RELEASE_BEHAVIOR_ARB: int

  WGL_CONTEXT_RELEASE_BEHAVIOR_FLUSH_ARB: int

  WGL_CONTEXT_RELEASE_BEHAVIOR_NONE_ARB: int


class WGLARBCreateContext:

  ERROR_INVALID_VERSION_ARB: int

  WGL_CONTEXT_DEBUG_BIT_ARB: int

  WGL_CONTEXT_FLAGS_ARB: int

  WGL_CONTEXT_FORWARD_COMPATIBLE_BIT_ARB: int

  WGL_CONTEXT_LAYER_PLANE_ARB: int

  WGL_CONTEXT_MAJOR_VERSION_ARB: int

  WGL_CONTEXT_MINOR_VERSION_ARB: int

  @staticmethod
  def nwglCreateContextAttribsARB(arg0: int, arg1: int, arg2: int) -> int: ...

  @staticmethod
  @overload
  def wglCreateContextAttribsARB(arg0: int, arg1: int, arg2: list[int]) -> int: ...

  @staticmethod
  @overload
  def wglCreateContextAttribsARB(arg0: int, arg1: int, arg2: IntBuffer) -> int: ...


class WGLARBCreateContextNoError:

  WGL_CONTEXT_OPENGL_NO_ERROR_ARB: int


class WGLARBCreateContextProfile:

  ERROR_INVALID_PROFILE_ARB: int

  WGL_CONTEXT_COMPATIBILITY_PROFILE_BIT_ARB: int

  WGL_CONTEXT_CORE_PROFILE_BIT_ARB: int

  WGL_CONTEXT_PROFILE_MASK_ARB: int


class WGLARBCreateContextRobustness:

  WGL_CONTEXT_RESET_NOTIFICATION_STRATEGY_ARB: int

  WGL_CONTEXT_ROBUST_ACCESS_BIT_ARB: int

  WGL_LOSE_CONTEXT_ON_RESET_ARB: int

  WGL_NO_RESET_NOTIFICATION_ARB: int


class WGLARBExtensionsString:

  @staticmethod
  def nwglGetExtensionsStringARB(arg0: int) -> int: ...

  @staticmethod
  def wglGetExtensionsStringARB(arg0: int) -> str: ...


class WGLARBFramebufferSRGB:

  WGL_FRAMEBUFFER_SRGB_CAPABLE_ARB: int


class WGLARBMakeCurrentRead:

  ERROR_INCOMPATIBLE_DEVICE_CONTEXTS_ARB: int

  ERROR_INVALID_PIXEL_TYPE_ARB: int

  @staticmethod
  def wglGetCurrentReadDCARB() -> int: ...

  @staticmethod
  def wglMakeContextCurrentARB(arg0: int, arg1: int, arg2: int) -> bool: ...


class WGLARBMultisample:

  WGL_SAMPLE_BUFFERS_ARB: int

  WGL_SAMPLES_ARB: int


class WGLARBPbuffer:

  WGL_DRAW_TO_PBUFFER_ARB: int

  WGL_MAX_PBUFFER_HEIGHT_ARB: int

  WGL_MAX_PBUFFER_PIXELS_ARB: int

  WGL_MAX_PBUFFER_WIDTH_ARB: int

  WGL_PBUFFER_HEIGHT_ARB: int

  WGL_PBUFFER_LARGEST_ARB: int

  WGL_PBUFFER_LOST_ARB: int

  WGL_PBUFFER_WIDTH_ARB: int

  @staticmethod
  def nwglCreatePbufferARB(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int) -> int: ...

  @staticmethod
  def nwglQueryPbufferARB(arg0: int, arg1: int, arg2: int) -> int: ...

  @staticmethod
  @overload
  def wglCreatePbufferARB(arg0: int, arg1: int, arg2: int, arg3: int, arg4: list[int]) -> int: ...

  @staticmethod
  @overload
  def wglCreatePbufferARB(arg0: int, arg1: int, arg2: int, arg3: int, arg4: IntBuffer) -> int: ...

  @staticmethod
  def wglDestroyPbufferARB(arg0: int) -> bool: ...

  @staticmethod
  def wglGetPbufferDCARB(arg0: int) -> int: ...

  @staticmethod
  @overload
  def wglQueryPbufferARB(arg0: int, arg1: int, arg2: list[int]) -> bool: ...

  @staticmethod
  @overload
  def wglQueryPbufferARB(arg0: int, arg1: int, arg2: IntBuffer) -> bool: ...

  @staticmethod
  def wglReleasePbufferDCARB(arg0: int, arg1: int) -> int: ...


class WGLARBPixelFormat:

  WGL_ACCELERATION_ARB: int

  WGL_ACCUM_ALPHA_BITS_ARB: int

  WGL_ACCUM_BITS_ARB: int

  WGL_ACCUM_BLUE_BITS_ARB: int

  WGL_ACCUM_GREEN_BITS_ARB: int

  WGL_ACCUM_RED_BITS_ARB: int

  WGL_ALPHA_BITS_ARB: int

  WGL_ALPHA_SHIFT_ARB: int

  WGL_AUX_BUFFERS_ARB: int

  WGL_BLUE_BITS_ARB: int

  WGL_BLUE_SHIFT_ARB: int

  WGL_COLOR_BITS_ARB: int

  WGL_DEPTH_BITS_ARB: int

  WGL_DOUBLE_BUFFER_ARB: int

  WGL_DRAW_TO_BITMAP_ARB: int

  WGL_DRAW_TO_WINDOW_ARB: int

  WGL_FULL_ACCELERATION_ARB: int

  WGL_GENERIC_ACCELERATION_ARB: int

  WGL_GREEN_BITS_ARB: int

  WGL_GREEN_SHIFT_ARB: int

  WGL_NEED_PALETTE_ARB: int

  WGL_NEED_SYSTEM_PALETTE_ARB: int

  WGL_NO_ACCELERATION_ARB: int

  WGL_NUMBER_OVERLAYS_ARB: int

  WGL_NUMBER_PIXEL_FORMATS_ARB: int

  WGL_NUMBER_UNDERLAYS_ARB: int

  WGL_PIXEL_TYPE_ARB: int

  WGL_RED_BITS_ARB: int

  WGL_RED_SHIFT_ARB: int

  WGL_SHARE_ACCUM_ARB: int

  WGL_SHARE_DEPTH_ARB: int

  WGL_SHARE_STENCIL_ARB: int

  WGL_STENCIL_BITS_ARB: int

  WGL_STEREO_ARB: int

  WGL_SUPPORT_GDI_ARB: int

  WGL_SUPPORT_OPENGL_ARB: int

  WGL_SWAP_COPY_ARB: int

  WGL_SWAP_EXCHANGE_ARB: int

  WGL_SWAP_LAYER_BUFFERS_ARB: int

  WGL_SWAP_METHOD_ARB: int

  WGL_SWAP_UNDEFINED_ARB: int

  WGL_TRANSPARENT_ALPHA_VALUE_ARB: int

  WGL_TRANSPARENT_ARB: int

  WGL_TRANSPARENT_BLUE_VALUE_ARB: int

  WGL_TRANSPARENT_GREEN_VALUE_ARB: int

  WGL_TRANSPARENT_INDEX_VALUE_ARB: int

  WGL_TRANSPARENT_RED_VALUE_ARB: int

  WGL_TYPE_COLORINDEX_ARB: int

  WGL_TYPE_RGBA_ARB: int

  @staticmethod
  def nwglChoosePixelFormatARB(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int) -> int: ...

  @staticmethod
  def nwglGetPixelFormatAttribfvARB(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int) -> int: ...

  @staticmethod
  def nwglGetPixelFormatAttribivARB(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int) -> int: ...

  @staticmethod
  @overload
  def wglChoosePixelFormatARB(arg0: int, arg1: list[int], arg2: list[float], arg3: list[int], arg4: list[int]) -> bool: ...

  @staticmethod
  @overload
  def wglChoosePixelFormatARB(arg0: int, arg1: IntBuffer, arg2: FloatBuffer, arg3: IntBuffer, arg4: IntBuffer) -> bool: ...

  @staticmethod
  def wglGetPixelFormatAttribfARB(arg0: int, arg1: int, arg2: int, arg3: int, arg4: FloatBuffer) -> bool: ...

  @staticmethod
  @overload
  def wglGetPixelFormatAttribfvARB(arg0: int, arg1: int, arg2: int, arg3: list[int], arg4: list[float]) -> bool: ...

  @staticmethod
  @overload
  def wglGetPixelFormatAttribfvARB(arg0: int, arg1: int, arg2: int, arg3: IntBuffer, arg4: FloatBuffer) -> bool: ...

  @staticmethod
  def wglGetPixelFormatAttribiARB(arg0: int, arg1: int, arg2: int, arg3: int, arg4: IntBuffer) -> bool: ...

  @staticmethod
  @overload
  def wglGetPixelFormatAttribivARB(arg0: int, arg1: int, arg2: int, arg3: list[int], arg4: list[int]) -> bool: ...

  @staticmethod
  @overload
  def wglGetPixelFormatAttribivARB(arg0: int, arg1: int, arg2: int, arg3: IntBuffer, arg4: IntBuffer) -> bool: ...


class WGLARBPixelFormatFloat:

  WGL_TYPE_RGBA_FLOAT_ARB: int


class WGLARBRenderTexture:

  WGL_AUX0_ARB: int

  WGL_AUX1_ARB: int

  WGL_AUX2_ARB: int

  WGL_AUX3_ARB: int

  WGL_AUX4_ARB: int

  WGL_AUX5_ARB: int

  WGL_AUX6_ARB: int

  WGL_AUX7_ARB: int

  WGL_AUX8_ARB: int

  WGL_AUX9_ARB: int

  WGL_BACK_LEFT_ARB: int

  WGL_BACK_RIGHT_ARB: int

  WGL_BIND_TO_TEXTURE_RGB_ARB: int

  WGL_BIND_TO_TEXTURE_RGBA_ARB: int

  WGL_CUBE_MAP_FACE_ARB: int

  WGL_FRONT_LEFT_ARB: int

  WGL_FRONT_RIGHT_ARB: int

  WGL_MIPMAP_LEVEL_ARB: int

  WGL_MIPMAP_TEXTURE_ARB: int

  WGL_NO_TEXTURE_ARB: int

  WGL_TEXTURE_1D_ARB: int

  WGL_TEXTURE_2D_ARB: int

  WGL_TEXTURE_CUBE_MAP_ARB: int

  WGL_TEXTURE_CUBE_MAP_NEGATIVE_X_ARB: int

  WGL_TEXTURE_CUBE_MAP_NEGATIVE_Y_ARB: int

  WGL_TEXTURE_CUBE_MAP_NEGATIVE_Z_ARB: int

  WGL_TEXTURE_CUBE_MAP_POSITIVE_X_ARB: int

  WGL_TEXTURE_CUBE_MAP_POSITIVE_Y_ARB: int

  WGL_TEXTURE_CUBE_MAP_POSITIVE_Z_ARB: int

  WGL_TEXTURE_FORMAT_ARB: int

  WGL_TEXTURE_RGB_ARB: int

  WGL_TEXTURE_RGBA_ARB: int

  WGL_TEXTURE_TARGET_ARB: int

  @staticmethod
  def nwglSetPbufferAttribARB(arg0: int, arg1: int) -> int: ...

  @staticmethod
  def wglBindTexImageARB(arg0: int, arg1: int) -> bool: ...

  @staticmethod
  def wglReleaseTexImageARB(arg0: int, arg1: int) -> bool: ...

  @staticmethod
  @overload
  def wglSetPbufferAttribARB(arg0: int, arg1: list[int]) -> bool: ...

  @staticmethod
  @overload
  def wglSetPbufferAttribARB(arg0: int, arg1: IntBuffer) -> bool: ...


class WGLARBRobustnessApplicationIsolation:

  WGL_CONTEXT_RESET_ISOLATION_BIT_ARB: int


class WGLATIPixelFormatFloat:

  WGL_COLOR_CLEAR_UNCLAMPED_VALUE_ATI: int

  WGL_RGBA_FLOAT_MODE_ATI: int

  WGL_TYPE_RGBA_FLOAT_ATI: int


class WGLATIRenderTextureRectangle:

  WGL_TEXTURE_RECTANGLE_ATI: int


class WGLCapabilities: ...


class WGLEXTColorspace:

  WGL_COLORSPACE_EXT: int

  WGL_COLORSPACE_LINEAR_EXT: int

  WGL_COLORSPACE_SRGB_EXT: int


class WGLEXTCreateContextES2Profile:

  WGL_CONTEXT_ES2_PROFILE_BIT_EXT: int


class WGLEXTCreateContextESProfile:

  WGL_CONTEXT_ES_PROFILE_BIT_EXT: int


class WGLEXTDepthFloat:

  WGL_DEPTH_FLOAT_EXT: int


class WGLEXTExtensionsString:

  @staticmethod
  def nwglGetExtensionsStringEXT() -> int: ...

  @staticmethod
  def wglGetExtensionsStringEXT() -> str: ...


class WGLEXTFramebufferSRGB:

  WGL_FRAMEBUFFER_SRGB_CAPABLE_EXT: int


class WGLEXTPixelFormatPackedFloat:

  WGL_TYPE_RGBA_UNSIGNED_FLOAT_EXT: int


class WGLEXTSwapControl:

  @staticmethod
  def wglGetSwapIntervalEXT() -> int: ...

  @staticmethod
  def wglSwapIntervalEXT(arg0: int) -> bool: ...


class WGLNVCopyImage:

  @staticmethod
  def wglCopyImageSubDataNV(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int, arg5: int, arg6: int, arg7: int, arg8: int, arg9: int, arg10: int, arg11: int, arg12: int, arg13: int, arg14: int, arg15: int, arg16: int) -> bool: ...


class WGLNVDXInterop:

  WGL_ACCESS_READ_ONLY_NV: int

  WGL_ACCESS_READ_WRITE_NV: int

  WGL_ACCESS_WRITE_DISCARD_NV: int

  @staticmethod
  def nwglDXLockObjectsNV(arg0: int, arg1: int, arg2: int) -> int: ...

  @staticmethod
  def nwglDXUnlockObjectsNV(arg0: int, arg1: int, arg2: int) -> int: ...

  @staticmethod
  def wglDXCloseDeviceNV(arg0: int) -> bool: ...

  @staticmethod
  def wglDXLockObjectsNV(arg0: int, arg1: PointerBuffer) -> bool: ...

  @staticmethod
  def wglDXObjectAccessNV(arg0: int, arg1: int) -> bool: ...

  @staticmethod
  def wglDXOpenDeviceNV(arg0: int) -> int: ...

  @staticmethod
  def wglDXRegisterObjectNV(arg0: int, arg1: int, arg2: int, arg3: int, arg4: int) -> int: ...

  @staticmethod
  def wglDXSetResourceShareHandleNV(arg0: int, arg1: int) -> bool: ...

  @staticmethod
  def wglDXUnlockObjectsNV(arg0: int, arg1: PointerBuffer) -> bool: ...

  @staticmethod
  def wglDXUnregisterObjectNV(arg0: int, arg1: int) -> bool: ...


class WGLNVDelayBeforeSwap:

  @staticmethod
  def wglDelayBeforeSwapNV(arg0: int, arg1: float) -> bool: ...


class WGLNVFloatBuffer:

  WGL_BIND_TO_TEXTURE_RECTANGLE_FLOAT_R_NV: int

  WGL_BIND_TO_TEXTURE_RECTANGLE_FLOAT_RG_NV: int

  WGL_BIND_TO_TEXTURE_RECTANGLE_FLOAT_RGB_NV: int

  WGL_BIND_TO_TEXTURE_RECTANGLE_FLOAT_RGBA_NV: int

  WGL_FLOAT_COMPONENTS_NV: int

  WGL_TEXTURE_FLOAT_R_NV: int

  WGL_TEXTURE_FLOAT_RG_NV: int

  WGL_TEXTURE_FLOAT_RGB_NV: int

  WGL_TEXTURE_FLOAT_RGBA_NV: int


class WGLNVGPUAffinity:

  ERROR_INCOMPATIBLE_AFFINITY_MASKS_NV: int

  ERROR_MISSING_AFFINITY_MASK_NV: int

  @staticmethod
  def nwglCreateAffinityDCNV(arg0: int) -> int: ...

  @staticmethod
  def nwglEnumGpuDevicesNV(arg0: int, arg1: int, arg2: int) -> int: ...

  @staticmethod
  def nwglEnumGpusFromAffinityDCNV(arg0: int, arg1: int, arg2: int) -> int: ...

  @staticmethod
  def nwglEnumGpusNV(arg0: int, arg1: int) -> int: ...

  @staticmethod
  def wglCreateAffinityDCNV(arg0: PointerBuffer) -> int: ...

  @staticmethod
  def wglDeleteDCNV(arg0: int) -> bool: ...

  @staticmethod
  def wglEnumGpuDevicesNV(arg0: int, arg1: int, arg2: GPU_DEVICE) -> bool: ...

  @staticmethod
  def wglEnumGpusFromAffinityDCNV(arg0: int, arg1: int, arg2: PointerBuffer) -> bool: ...

  @staticmethod
  def wglEnumGpusNV(arg0: int, arg1: PointerBuffer) -> bool: ...


class WGLNVMultigpuContext:

  WGL_CONTEXT_MULTIGPU_ATTRIB_AFR_NV: int

  WGL_CONTEXT_MULTIGPU_ATTRIB_MULTI_DISPLAY_MULTICAST_NV: int

  WGL_CONTEXT_MULTIGPU_ATTRIB_MULTICAST_NV: int

  WGL_CONTEXT_MULTIGPU_ATTRIB_NV: int

  WGL_CONTEXT_MULTIGPU_ATTRIB_SINGLE_NV: int


class WGLNVMultisampleCoverage:

  WGL_COLOR_SAMPLES_NV: int

  WGL_COVERAGE_SAMPLES_NV: int


class WGLNVRenderDepthTexture:

  WGL_BIND_TO_TEXTURE_DEPTH_NV: int

  WGL_BIND_TO_TEXTURE_RECTANGLE_DEPTH_NV: int

  WGL_DEPTH_COMPONENT_NV: int

  WGL_DEPTH_TEXTURE_FORMAT_NV: int

  WGL_NO_TEXTURE_ARB: int

  WGL_TEXTURE_DEPTH_COMPONENT_NV: int


class WGLNVRenderTextureRectangle:

  WGL_BIND_TO_TEXTURE_RECTANGLE_RGB_NV: int

  WGL_BIND_TO_TEXTURE_RECTANGLE_RGBA_NV: int

  WGL_TEXTURE_RECTANGLE_NV: int


class WGLNVSwapGroup:

  @staticmethod
  def nwglQueryFrameCountNV(arg0: int, arg1: int) -> int: ...

  @staticmethod
  def nwglQueryMaxSwapGroupsNV(arg0: int, arg1: int, arg2: int) -> int: ...

  @staticmethod
  def nwglQuerySwapGroupNV(arg0: int, arg1: int, arg2: int) -> int: ...

  @staticmethod
  def wglBindSwapBarrierNV(arg0: int, arg1: int) -> bool: ...

  @staticmethod
  def wglJoinSwapGroupNV(arg0: int, arg1: int) -> bool: ...

  @staticmethod
  @overload
  def wglQueryFrameCountNV(arg0: int, arg1: list[int]) -> bool: ...

  @staticmethod
  @overload
  def wglQueryFrameCountNV(arg0: int, arg1: IntBuffer) -> bool: ...

  @staticmethod
  @overload
  def wglQueryMaxSwapGroupsNV(arg0: int, arg1: list[int], arg2: list[int]) -> bool: ...

  @staticmethod
  @overload
  def wglQueryMaxSwapGroupsNV(arg0: int, arg1: IntBuffer, arg2: IntBuffer) -> bool: ...

  @staticmethod
  @overload
  def wglQuerySwapGroupNV(arg0: int, arg1: list[int], arg2: list[int]) -> bool: ...

  @staticmethod
  @overload
  def wglQuerySwapGroupNV(arg0: int, arg1: IntBuffer, arg2: IntBuffer) -> bool: ...

  @staticmethod
  def wglResetFrameCountNV(arg0: int) -> bool: ...


class WGLNVVertexArrayRange:

  @staticmethod
  def nwglAllocateMemoryNV(arg0: int, arg1: float, arg2: float, arg3: float) -> int: ...

  @staticmethod
  def nwglFreeMemoryNV(arg0: int) -> None: ...

  @staticmethod
  def wglAllocateMemoryNV(arg0: int, arg1: float, arg2: float, arg3: float) -> ByteBuffer: ...

  @staticmethod
  def wglFreeMemoryNV(arg0: ByteBuffer) -> None: ...

