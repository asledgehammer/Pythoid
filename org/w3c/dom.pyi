from typing import Any, overload, TypeVar
from java.lang.annotation import Annotation
from java.lang import RuntimeException

class Attr:

  ATTRIBUTE_NODE: int

  CDATA_SECTION_NODE: int

  COMMENT_NODE: int

  DOCUMENT_FRAGMENT_NODE: int

  DOCUMENT_NODE: int

  DOCUMENT_POSITION_CONTAINED_BY: int

  DOCUMENT_POSITION_CONTAINS: int

  DOCUMENT_POSITION_DISCONNECTED: int

  DOCUMENT_POSITION_FOLLOWING: int

  DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC: int

  DOCUMENT_POSITION_PRECEDING: int

  DOCUMENT_TYPE_NODE: int

  ELEMENT_NODE: int

  ENTITY_NODE: int

  ENTITY_REFERENCE_NODE: int

  NOTATION_NODE: int

  PROCESSING_INSTRUCTION_NODE: int

  TEXT_NODE: int

  def appendChild(self, arg0: Node) -> Node: ...

  def cloneNode(self, arg0: bool) -> Node: ...

  def compareDocumentPosition(self, arg0: Node) -> int: ...

  def getAttributes(self) -> NamedNodeMap: ...

  def getBaseURI(self) -> str: ...

  def getChildNodes(self) -> NodeList: ...

  def getFeature(self, arg0: str, arg1: str) -> object: ...

  def getFirstChild(self) -> Node: ...

  def getLastChild(self) -> Node: ...

  def getLocalName(self) -> str: ...

  def getName(self) -> str: ...

  def getNamespaceURI(self) -> str: ...

  def getNextSibling(self) -> Node: ...

  def getNodeName(self) -> str: ...

  def getNodeType(self) -> int: ...

  def getNodeValue(self) -> str: ...

  def getOwnerDocument(self) -> Document: ...

  def getOwnerElement(self) -> Element: ...

  def getParentNode(self) -> Node: ...

  def getPrefix(self) -> str: ...

  def getPreviousSibling(self) -> Node: ...

  def getSchemaTypeInfo(self) -> TypeInfo: ...

  def getSpecified(self) -> bool: ...

  def getTextContent(self) -> str: ...

  def getUserData(self, arg0: str) -> object: ...

  def getValue(self) -> str: ...

  def hasAttributes(self) -> bool: ...

  def hasChildNodes(self) -> bool: ...

  def insertBefore(self, arg0: Node, arg1: Node) -> Node: ...

  def isDefaultNamespace(self, arg0: str) -> bool: ...

  def isEqualNode(self, arg0: Node) -> bool: ...

  def isId(self) -> bool: ...

  def isSameNode(self, arg0: Node) -> bool: ...

  def isSupported(self, arg0: str, arg1: str) -> bool: ...

  def lookupNamespaceURI(self, arg0: str) -> str: ...

  def lookupPrefix(self, arg0: str) -> str: ...

  def normalize(self) -> None: ...

  def removeChild(self, arg0: Node) -> Node: ...

  def replaceChild(self, arg0: Node, arg1: Node) -> Node: ...

  def setNodeValue(self, arg0: str) -> None: ...

  def setPrefix(self, arg0: str) -> None: ...

  def setTextContent(self, arg0: str) -> None: ...

  def setUserData(self, arg0: str, arg1: object, arg2: UserDataHandler) -> object: ...

  def setValue(self, arg0: str) -> None: ...


class CDATASection:

  def getWholeText(self) -> str: ...

  def isElementContentWhitespace(self) -> bool: ...

  def replaceWholeText(self, arg0: str) -> Text: ...

  def splitText(self, arg0: int) -> Text: ...


class CharacterData:

  ATTRIBUTE_NODE: int

  CDATA_SECTION_NODE: int

  COMMENT_NODE: int

  DOCUMENT_FRAGMENT_NODE: int

  DOCUMENT_NODE: int

  DOCUMENT_POSITION_CONTAINED_BY: int

  DOCUMENT_POSITION_CONTAINS: int

  DOCUMENT_POSITION_DISCONNECTED: int

  DOCUMENT_POSITION_FOLLOWING: int

  DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC: int

  DOCUMENT_POSITION_PRECEDING: int

  DOCUMENT_TYPE_NODE: int

  ELEMENT_NODE: int

  ENTITY_NODE: int

  ENTITY_REFERENCE_NODE: int

  NOTATION_NODE: int

  PROCESSING_INSTRUCTION_NODE: int

  TEXT_NODE: int

  def appendChild(self, arg0: Node) -> Node: ...

  def appendData(self, arg0: str) -> None: ...

  def cloneNode(self, arg0: bool) -> Node: ...

  def compareDocumentPosition(self, arg0: Node) -> int: ...

  def deleteData(self, arg0: int, arg1: int) -> None: ...

  def getAttributes(self) -> NamedNodeMap: ...

  def getBaseURI(self) -> str: ...

  def getChildNodes(self) -> NodeList: ...

  def getData(self) -> str: ...

  def getFeature(self, arg0: str, arg1: str) -> object: ...

  def getFirstChild(self) -> Node: ...

  def getLastChild(self) -> Node: ...

  def getLength(self) -> int: ...

  def getLocalName(self) -> str: ...

  def getNamespaceURI(self) -> str: ...

  def getNextSibling(self) -> Node: ...

  def getNodeName(self) -> str: ...

  def getNodeType(self) -> int: ...

  def getNodeValue(self) -> str: ...

  def getOwnerDocument(self) -> Document: ...

  def getParentNode(self) -> Node: ...

  def getPrefix(self) -> str: ...

  def getPreviousSibling(self) -> Node: ...

  def getTextContent(self) -> str: ...

  def getUserData(self, arg0: str) -> object: ...

  def hasAttributes(self) -> bool: ...

  def hasChildNodes(self) -> bool: ...

  def insertBefore(self, arg0: Node, arg1: Node) -> Node: ...

  def insertData(self, arg0: int, arg1: str) -> None: ...

  def isDefaultNamespace(self, arg0: str) -> bool: ...

  def isEqualNode(self, arg0: Node) -> bool: ...

  def isSameNode(self, arg0: Node) -> bool: ...

  def isSupported(self, arg0: str, arg1: str) -> bool: ...

  def lookupNamespaceURI(self, arg0: str) -> str: ...

  def lookupPrefix(self, arg0: str) -> str: ...

  def normalize(self) -> None: ...

  def removeChild(self, arg0: Node) -> Node: ...

  def replaceChild(self, arg0: Node, arg1: Node) -> Node: ...

  def replaceData(self, arg0: int, arg1: int, arg2: str) -> None: ...

  def setData(self, arg0: str) -> None: ...

  def setNodeValue(self, arg0: str) -> None: ...

  def setPrefix(self, arg0: str) -> None: ...

  def setTextContent(self, arg0: str) -> None: ...

  def setUserData(self, arg0: str, arg1: object, arg2: UserDataHandler) -> object: ...

  def substringData(self, arg0: int, arg1: int) -> str: ...


class Comment:

  def appendData(self, arg0: str) -> None: ...

  def deleteData(self, arg0: int, arg1: int) -> None: ...

  def getData(self) -> str: ...

  def getLength(self) -> int: ...

  def insertData(self, arg0: int, arg1: str) -> None: ...

  def replaceData(self, arg0: int, arg1: int, arg2: str) -> None: ...

  def setData(self, arg0: str) -> None: ...

  def substringData(self, arg0: int, arg1: int) -> str: ...


class DOMConfiguration:

  def canSetParameter(self, arg0: str, arg1: object) -> bool: ...

  def getParameter(self, arg0: str) -> object: ...

  def getParameterNames(self) -> DOMStringList: ...

  def setParameter(self, arg0: str, arg1: object) -> None: ...


class DOMException(RuntimeException):

  DOMSTRING_SIZE_ERR: int

  HIERARCHY_REQUEST_ERR: int

  INDEX_SIZE_ERR: int

  INUSE_ATTRIBUTE_ERR: int

  INVALID_ACCESS_ERR: int

  INVALID_CHARACTER_ERR: int

  INVALID_MODIFICATION_ERR: int

  INVALID_STATE_ERR: int

  NAMESPACE_ERR: int

  NO_DATA_ALLOWED_ERR: int

  NO_MODIFICATION_ALLOWED_ERR: int

  NOT_FOUND_ERR: int

  NOT_SUPPORTED_ERR: int

  SYNTAX_ERR: int

  TYPE_MISMATCH_ERR: int

  VALIDATION_ERR: int

  WRONG_DOCUMENT_ERR: int

  def __init__(self, arg0: int, arg1: str):
    self.code: int


class DOMImplementation:

  def createDocument(self, arg0: str, arg1: str, arg2: DocumentType) -> Document: ...

  def createDocumentType(self, arg0: str, arg1: str, arg2: str) -> DocumentType: ...

  def getFeature(self, arg0: str, arg1: str) -> object: ...

  def hasFeature(self, arg0: str, arg1: str) -> bool: ...


class DOMStringList:

  def contains(self, arg0: str) -> bool: ...

  def getLength(self) -> int: ...

  def item(self, arg0: int) -> str: ...


class Document:

  ATTRIBUTE_NODE: int

  CDATA_SECTION_NODE: int

  COMMENT_NODE: int

  DOCUMENT_FRAGMENT_NODE: int

  DOCUMENT_NODE: int

  DOCUMENT_POSITION_CONTAINED_BY: int

  DOCUMENT_POSITION_CONTAINS: int

  DOCUMENT_POSITION_DISCONNECTED: int

  DOCUMENT_POSITION_FOLLOWING: int

  DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC: int

  DOCUMENT_POSITION_PRECEDING: int

  DOCUMENT_TYPE_NODE: int

  ELEMENT_NODE: int

  ENTITY_NODE: int

  ENTITY_REFERENCE_NODE: int

  NOTATION_NODE: int

  PROCESSING_INSTRUCTION_NODE: int

  TEXT_NODE: int

  def adoptNode(self, arg0: Node) -> Node: ...

  def appendChild(self, arg0: Node) -> Node: ...

  def cloneNode(self, arg0: bool) -> Node: ...

  def compareDocumentPosition(self, arg0: Node) -> int: ...

  def createAttribute(self, arg0: str) -> Attr: ...

  def createAttributeNS(self, arg0: str, arg1: str) -> Attr: ...

  def createCDATASection(self, arg0: str) -> CDATASection: ...

  def createComment(self, arg0: str) -> Comment: ...

  def createDocumentFragment(self) -> DocumentFragment: ...

  def createElement(self, arg0: str) -> Element: ...

  def createElementNS(self, arg0: str, arg1: str) -> Element: ...

  def createEntityReference(self, arg0: str) -> EntityReference: ...

  def createProcessingInstruction(self, arg0: str, arg1: str) -> ProcessingInstruction: ...

  def createTextNode(self, arg0: str) -> Text: ...

  def getAttributes(self) -> NamedNodeMap: ...

  def getBaseURI(self) -> str: ...

  def getChildNodes(self) -> NodeList: ...

  def getDoctype(self) -> DocumentType: ...

  def getDocumentElement(self) -> Element: ...

  def getDocumentURI(self) -> str: ...

  def getDomConfig(self) -> DOMConfiguration: ...

  def getElementById(self, arg0: str) -> Element: ...

  def getElementsByTagName(self, arg0: str) -> NodeList: ...

  def getElementsByTagNameNS(self, arg0: str, arg1: str) -> NodeList: ...

  def getFeature(self, arg0: str, arg1: str) -> object: ...

  def getFirstChild(self) -> Node: ...

  def getImplementation(self) -> DOMImplementation: ...

  def getInputEncoding(self) -> str: ...

  def getLastChild(self) -> Node: ...

  def getLocalName(self) -> str: ...

  def getNamespaceURI(self) -> str: ...

  def getNextSibling(self) -> Node: ...

  def getNodeName(self) -> str: ...

  def getNodeType(self) -> int: ...

  def getNodeValue(self) -> str: ...

  def getOwnerDocument(self) -> Document: ...

  def getParentNode(self) -> Node: ...

  def getPrefix(self) -> str: ...

  def getPreviousSibling(self) -> Node: ...

  def getStrictErrorChecking(self) -> bool: ...

  def getTextContent(self) -> str: ...

  def getUserData(self, arg0: str) -> object: ...

  def getXmlEncoding(self) -> str: ...

  def getXmlStandalone(self) -> bool: ...

  def getXmlVersion(self) -> str: ...

  def hasAttributes(self) -> bool: ...

  def hasChildNodes(self) -> bool: ...

  def importNode(self, arg0: Node, arg1: bool) -> Node: ...

  def insertBefore(self, arg0: Node, arg1: Node) -> Node: ...

  def isDefaultNamespace(self, arg0: str) -> bool: ...

  def isEqualNode(self, arg0: Node) -> bool: ...

  def isSameNode(self, arg0: Node) -> bool: ...

  def isSupported(self, arg0: str, arg1: str) -> bool: ...

  def lookupNamespaceURI(self, arg0: str) -> str: ...

  def lookupPrefix(self, arg0: str) -> str: ...

  def normalize(self) -> None: ...

  def normalizeDocument(self) -> None: ...

  def removeChild(self, arg0: Node) -> Node: ...

  def renameNode(self, arg0: Node, arg1: str, arg2: str) -> Node: ...

  def replaceChild(self, arg0: Node, arg1: Node) -> Node: ...

  def setDocumentURI(self, arg0: str) -> None: ...

  def setNodeValue(self, arg0: str) -> None: ...

  def setPrefix(self, arg0: str) -> None: ...

  def setStrictErrorChecking(self, arg0: bool) -> None: ...

  def setTextContent(self, arg0: str) -> None: ...

  def setUserData(self, arg0: str, arg1: object, arg2: UserDataHandler) -> object: ...

  def setXmlStandalone(self, arg0: bool) -> None: ...

  def setXmlVersion(self, arg0: str) -> None: ...


class DocumentFragment:

  ATTRIBUTE_NODE: int

  CDATA_SECTION_NODE: int

  COMMENT_NODE: int

  DOCUMENT_FRAGMENT_NODE: int

  DOCUMENT_NODE: int

  DOCUMENT_POSITION_CONTAINED_BY: int

  DOCUMENT_POSITION_CONTAINS: int

  DOCUMENT_POSITION_DISCONNECTED: int

  DOCUMENT_POSITION_FOLLOWING: int

  DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC: int

  DOCUMENT_POSITION_PRECEDING: int

  DOCUMENT_TYPE_NODE: int

  ELEMENT_NODE: int

  ENTITY_NODE: int

  ENTITY_REFERENCE_NODE: int

  NOTATION_NODE: int

  PROCESSING_INSTRUCTION_NODE: int

  TEXT_NODE: int

  def appendChild(self, arg0: Node) -> Node: ...

  def cloneNode(self, arg0: bool) -> Node: ...

  def compareDocumentPosition(self, arg0: Node) -> int: ...

  def getAttributes(self) -> NamedNodeMap: ...

  def getBaseURI(self) -> str: ...

  def getChildNodes(self) -> NodeList: ...

  def getFeature(self, arg0: str, arg1: str) -> object: ...

  def getFirstChild(self) -> Node: ...

  def getLastChild(self) -> Node: ...

  def getLocalName(self) -> str: ...

  def getNamespaceURI(self) -> str: ...

  def getNextSibling(self) -> Node: ...

  def getNodeName(self) -> str: ...

  def getNodeType(self) -> int: ...

  def getNodeValue(self) -> str: ...

  def getOwnerDocument(self) -> Document: ...

  def getParentNode(self) -> Node: ...

  def getPrefix(self) -> str: ...

  def getPreviousSibling(self) -> Node: ...

  def getTextContent(self) -> str: ...

  def getUserData(self, arg0: str) -> object: ...

  def hasAttributes(self) -> bool: ...

  def hasChildNodes(self) -> bool: ...

  def insertBefore(self, arg0: Node, arg1: Node) -> Node: ...

  def isDefaultNamespace(self, arg0: str) -> bool: ...

  def isEqualNode(self, arg0: Node) -> bool: ...

  def isSameNode(self, arg0: Node) -> bool: ...

  def isSupported(self, arg0: str, arg1: str) -> bool: ...

  def lookupNamespaceURI(self, arg0: str) -> str: ...

  def lookupPrefix(self, arg0: str) -> str: ...

  def normalize(self) -> None: ...

  def removeChild(self, arg0: Node) -> Node: ...

  def replaceChild(self, arg0: Node, arg1: Node) -> Node: ...

  def setNodeValue(self, arg0: str) -> None: ...

  def setPrefix(self, arg0: str) -> None: ...

  def setTextContent(self, arg0: str) -> None: ...

  def setUserData(self, arg0: str, arg1: object, arg2: UserDataHandler) -> object: ...


class DocumentType:

  ATTRIBUTE_NODE: int

  CDATA_SECTION_NODE: int

  COMMENT_NODE: int

  DOCUMENT_FRAGMENT_NODE: int

  DOCUMENT_NODE: int

  DOCUMENT_POSITION_CONTAINED_BY: int

  DOCUMENT_POSITION_CONTAINS: int

  DOCUMENT_POSITION_DISCONNECTED: int

  DOCUMENT_POSITION_FOLLOWING: int

  DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC: int

  DOCUMENT_POSITION_PRECEDING: int

  DOCUMENT_TYPE_NODE: int

  ELEMENT_NODE: int

  ENTITY_NODE: int

  ENTITY_REFERENCE_NODE: int

  NOTATION_NODE: int

  PROCESSING_INSTRUCTION_NODE: int

  TEXT_NODE: int

  def appendChild(self, arg0: Node) -> Node: ...

  def cloneNode(self, arg0: bool) -> Node: ...

  def compareDocumentPosition(self, arg0: Node) -> int: ...

  def getAttributes(self) -> NamedNodeMap: ...

  def getBaseURI(self) -> str: ...

  def getChildNodes(self) -> NodeList: ...

  def getEntities(self) -> NamedNodeMap: ...

  def getFeature(self, arg0: str, arg1: str) -> object: ...

  def getFirstChild(self) -> Node: ...

  def getInternalSubset(self) -> str: ...

  def getLastChild(self) -> Node: ...

  def getLocalName(self) -> str: ...

  def getName(self) -> str: ...

  def getNamespaceURI(self) -> str: ...

  def getNextSibling(self) -> Node: ...

  def getNodeName(self) -> str: ...

  def getNodeType(self) -> int: ...

  def getNodeValue(self) -> str: ...

  def getNotations(self) -> NamedNodeMap: ...

  def getOwnerDocument(self) -> Document: ...

  def getParentNode(self) -> Node: ...

  def getPrefix(self) -> str: ...

  def getPreviousSibling(self) -> Node: ...

  def getPublicId(self) -> str: ...

  def getSystemId(self) -> str: ...

  def getTextContent(self) -> str: ...

  def getUserData(self, arg0: str) -> object: ...

  def hasAttributes(self) -> bool: ...

  def hasChildNodes(self) -> bool: ...

  def insertBefore(self, arg0: Node, arg1: Node) -> Node: ...

  def isDefaultNamespace(self, arg0: str) -> bool: ...

  def isEqualNode(self, arg0: Node) -> bool: ...

  def isSameNode(self, arg0: Node) -> bool: ...

  def isSupported(self, arg0: str, arg1: str) -> bool: ...

  def lookupNamespaceURI(self, arg0: str) -> str: ...

  def lookupPrefix(self, arg0: str) -> str: ...

  def normalize(self) -> None: ...

  def removeChild(self, arg0: Node) -> Node: ...

  def replaceChild(self, arg0: Node, arg1: Node) -> Node: ...

  def setNodeValue(self, arg0: str) -> None: ...

  def setPrefix(self, arg0: str) -> None: ...

  def setTextContent(self, arg0: str) -> None: ...

  def setUserData(self, arg0: str, arg1: object, arg2: UserDataHandler) -> object: ...


class Element:

  ATTRIBUTE_NODE: int

  CDATA_SECTION_NODE: int

  COMMENT_NODE: int

  DOCUMENT_FRAGMENT_NODE: int

  DOCUMENT_NODE: int

  DOCUMENT_POSITION_CONTAINED_BY: int

  DOCUMENT_POSITION_CONTAINS: int

  DOCUMENT_POSITION_DISCONNECTED: int

  DOCUMENT_POSITION_FOLLOWING: int

  DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC: int

  DOCUMENT_POSITION_PRECEDING: int

  DOCUMENT_TYPE_NODE: int

  ELEMENT_NODE: int

  ENTITY_NODE: int

  ENTITY_REFERENCE_NODE: int

  NOTATION_NODE: int

  PROCESSING_INSTRUCTION_NODE: int

  TEXT_NODE: int

  def appendChild(self, arg0: Node) -> Node: ...

  def cloneNode(self, arg0: bool) -> Node: ...

  def compareDocumentPosition(self, arg0: Node) -> int: ...

  def getAttribute(self, arg0: str) -> str: ...

  def getAttributeNS(self, arg0: str, arg1: str) -> str: ...

  def getAttributeNode(self, arg0: str) -> Attr: ...

  def getAttributeNodeNS(self, arg0: str, arg1: str) -> Attr: ...

  def getAttributes(self) -> NamedNodeMap: ...

  def getBaseURI(self) -> str: ...

  def getChildNodes(self) -> NodeList: ...

  def getElementsByTagName(self, arg0: str) -> NodeList: ...

  def getElementsByTagNameNS(self, arg0: str, arg1: str) -> NodeList: ...

  def getFeature(self, arg0: str, arg1: str) -> object: ...

  def getFirstChild(self) -> Node: ...

  def getLastChild(self) -> Node: ...

  def getLocalName(self) -> str: ...

  def getNamespaceURI(self) -> str: ...

  def getNextSibling(self) -> Node: ...

  def getNodeName(self) -> str: ...

  def getNodeType(self) -> int: ...

  def getNodeValue(self) -> str: ...

  def getOwnerDocument(self) -> Document: ...

  def getParentNode(self) -> Node: ...

  def getPrefix(self) -> str: ...

  def getPreviousSibling(self) -> Node: ...

  def getSchemaTypeInfo(self) -> TypeInfo: ...

  def getTagName(self) -> str: ...

  def getTextContent(self) -> str: ...

  def getUserData(self, arg0: str) -> object: ...

  def hasAttribute(self, arg0: str) -> bool: ...

  def hasAttributeNS(self, arg0: str, arg1: str) -> bool: ...

  def hasAttributes(self) -> bool: ...

  def hasChildNodes(self) -> bool: ...

  def insertBefore(self, arg0: Node, arg1: Node) -> Node: ...

  def isDefaultNamespace(self, arg0: str) -> bool: ...

  def isEqualNode(self, arg0: Node) -> bool: ...

  def isSameNode(self, arg0: Node) -> bool: ...

  def isSupported(self, arg0: str, arg1: str) -> bool: ...

  def lookupNamespaceURI(self, arg0: str) -> str: ...

  def lookupPrefix(self, arg0: str) -> str: ...

  def normalize(self) -> None: ...

  def removeAttribute(self, arg0: str) -> None: ...

  def removeAttributeNS(self, arg0: str, arg1: str) -> None: ...

  def removeAttributeNode(self, arg0: Attr) -> Attr: ...

  def removeChild(self, arg0: Node) -> Node: ...

  def replaceChild(self, arg0: Node, arg1: Node) -> Node: ...

  def setAttribute(self, arg0: str, arg1: str) -> None: ...

  def setAttributeNS(self, arg0: str, arg1: str, arg2: str) -> None: ...

  def setAttributeNode(self, arg0: Attr) -> Attr: ...

  def setAttributeNodeNS(self, arg0: Attr) -> Attr: ...

  def setIdAttribute(self, arg0: str, arg1: bool) -> None: ...

  def setIdAttributeNS(self, arg0: str, arg1: str, arg2: bool) -> None: ...

  def setIdAttributeNode(self, arg0: Attr, arg1: bool) -> None: ...

  def setNodeValue(self, arg0: str) -> None: ...

  def setPrefix(self, arg0: str) -> None: ...

  def setTextContent(self, arg0: str) -> None: ...

  def setUserData(self, arg0: str, arg1: object, arg2: UserDataHandler) -> object: ...


class EntityReference:

  ATTRIBUTE_NODE: int

  CDATA_SECTION_NODE: int

  COMMENT_NODE: int

  DOCUMENT_FRAGMENT_NODE: int

  DOCUMENT_NODE: int

  DOCUMENT_POSITION_CONTAINED_BY: int

  DOCUMENT_POSITION_CONTAINS: int

  DOCUMENT_POSITION_DISCONNECTED: int

  DOCUMENT_POSITION_FOLLOWING: int

  DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC: int

  DOCUMENT_POSITION_PRECEDING: int

  DOCUMENT_TYPE_NODE: int

  ELEMENT_NODE: int

  ENTITY_NODE: int

  ENTITY_REFERENCE_NODE: int

  NOTATION_NODE: int

  PROCESSING_INSTRUCTION_NODE: int

  TEXT_NODE: int

  def appendChild(self, arg0: Node) -> Node: ...

  def cloneNode(self, arg0: bool) -> Node: ...

  def compareDocumentPosition(self, arg0: Node) -> int: ...

  def getAttributes(self) -> NamedNodeMap: ...

  def getBaseURI(self) -> str: ...

  def getChildNodes(self) -> NodeList: ...

  def getFeature(self, arg0: str, arg1: str) -> object: ...

  def getFirstChild(self) -> Node: ...

  def getLastChild(self) -> Node: ...

  def getLocalName(self) -> str: ...

  def getNamespaceURI(self) -> str: ...

  def getNextSibling(self) -> Node: ...

  def getNodeName(self) -> str: ...

  def getNodeType(self) -> int: ...

  def getNodeValue(self) -> str: ...

  def getOwnerDocument(self) -> Document: ...

  def getParentNode(self) -> Node: ...

  def getPrefix(self) -> str: ...

  def getPreviousSibling(self) -> Node: ...

  def getTextContent(self) -> str: ...

  def getUserData(self, arg0: str) -> object: ...

  def hasAttributes(self) -> bool: ...

  def hasChildNodes(self) -> bool: ...

  def insertBefore(self, arg0: Node, arg1: Node) -> Node: ...

  def isDefaultNamespace(self, arg0: str) -> bool: ...

  def isEqualNode(self, arg0: Node) -> bool: ...

  def isSameNode(self, arg0: Node) -> bool: ...

  def isSupported(self, arg0: str, arg1: str) -> bool: ...

  def lookupNamespaceURI(self, arg0: str) -> str: ...

  def lookupPrefix(self, arg0: str) -> str: ...

  def normalize(self) -> None: ...

  def removeChild(self, arg0: Node) -> Node: ...

  def replaceChild(self, arg0: Node, arg1: Node) -> Node: ...

  def setNodeValue(self, arg0: str) -> None: ...

  def setPrefix(self, arg0: str) -> None: ...

  def setTextContent(self, arg0: str) -> None: ...

  def setUserData(self, arg0: str, arg1: object, arg2: UserDataHandler) -> object: ...


class NamedNodeMap:

  def getLength(self) -> int: ...

  def getNamedItem(self, arg0: str) -> Node: ...

  def getNamedItemNS(self, arg0: str, arg1: str) -> Node: ...

  def item(self, arg0: int) -> Node: ...

  def removeNamedItem(self, arg0: str) -> Node: ...

  def removeNamedItemNS(self, arg0: str, arg1: str) -> Node: ...

  def setNamedItem(self, arg0: Node) -> Node: ...

  def setNamedItemNS(self, arg0: Node) -> Node: ...


class Node:

  ATTRIBUTE_NODE: int

  CDATA_SECTION_NODE: int

  COMMENT_NODE: int

  DOCUMENT_FRAGMENT_NODE: int

  DOCUMENT_NODE: int

  DOCUMENT_POSITION_CONTAINED_BY: int

  DOCUMENT_POSITION_CONTAINS: int

  DOCUMENT_POSITION_DISCONNECTED: int

  DOCUMENT_POSITION_FOLLOWING: int

  DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC: int

  DOCUMENT_POSITION_PRECEDING: int

  DOCUMENT_TYPE_NODE: int

  ELEMENT_NODE: int

  ENTITY_NODE: int

  ENTITY_REFERENCE_NODE: int

  NOTATION_NODE: int

  PROCESSING_INSTRUCTION_NODE: int

  TEXT_NODE: int

  def appendChild(self, arg0: Node) -> Node: ...

  def cloneNode(self, arg0: bool) -> Node: ...

  def compareDocumentPosition(self, arg0: Node) -> int: ...

  def getAttributes(self) -> NamedNodeMap: ...

  def getBaseURI(self) -> str: ...

  def getChildNodes(self) -> NodeList: ...

  def getFeature(self, arg0: str, arg1: str) -> object: ...

  def getFirstChild(self) -> Node: ...

  def getLastChild(self) -> Node: ...

  def getLocalName(self) -> str: ...

  def getNamespaceURI(self) -> str: ...

  def getNextSibling(self) -> Node: ...

  def getNodeName(self) -> str: ...

  def getNodeType(self) -> int: ...

  def getNodeValue(self) -> str: ...

  def getOwnerDocument(self) -> Document: ...

  def getParentNode(self) -> Node: ...

  def getPrefix(self) -> str: ...

  def getPreviousSibling(self) -> Node: ...

  def getTextContent(self) -> str: ...

  def getUserData(self, arg0: str) -> object: ...

  def hasAttributes(self) -> bool: ...

  def hasChildNodes(self) -> bool: ...

  def insertBefore(self, arg0: Node, arg1: Node) -> Node: ...

  def isDefaultNamespace(self, arg0: str) -> bool: ...

  def isEqualNode(self, arg0: Node) -> bool: ...

  def isSameNode(self, arg0: Node) -> bool: ...

  def isSupported(self, arg0: str, arg1: str) -> bool: ...

  def lookupNamespaceURI(self, arg0: str) -> str: ...

  def lookupPrefix(self, arg0: str) -> str: ...

  def normalize(self) -> None: ...

  def removeChild(self, arg0: Node) -> Node: ...

  def replaceChild(self, arg0: Node, arg1: Node) -> Node: ...

  def setNodeValue(self, arg0: str) -> None: ...

  def setPrefix(self, arg0: str) -> None: ...

  def setTextContent(self, arg0: str) -> None: ...

  def setUserData(self, arg0: str, arg1: object, arg2: UserDataHandler) -> object: ...


class NodeList:

  def getLength(self) -> int: ...

  def item(self, arg0: int) -> Node: ...


class ProcessingInstruction:

  ATTRIBUTE_NODE: int

  CDATA_SECTION_NODE: int

  COMMENT_NODE: int

  DOCUMENT_FRAGMENT_NODE: int

  DOCUMENT_NODE: int

  DOCUMENT_POSITION_CONTAINED_BY: int

  DOCUMENT_POSITION_CONTAINS: int

  DOCUMENT_POSITION_DISCONNECTED: int

  DOCUMENT_POSITION_FOLLOWING: int

  DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC: int

  DOCUMENT_POSITION_PRECEDING: int

  DOCUMENT_TYPE_NODE: int

  ELEMENT_NODE: int

  ENTITY_NODE: int

  ENTITY_REFERENCE_NODE: int

  NOTATION_NODE: int

  PROCESSING_INSTRUCTION_NODE: int

  TEXT_NODE: int

  def appendChild(self, arg0: Node) -> Node: ...

  def cloneNode(self, arg0: bool) -> Node: ...

  def compareDocumentPosition(self, arg0: Node) -> int: ...

  def getAttributes(self) -> NamedNodeMap: ...

  def getBaseURI(self) -> str: ...

  def getChildNodes(self) -> NodeList: ...

  def getData(self) -> str: ...

  def getFeature(self, arg0: str, arg1: str) -> object: ...

  def getFirstChild(self) -> Node: ...

  def getLastChild(self) -> Node: ...

  def getLocalName(self) -> str: ...

  def getNamespaceURI(self) -> str: ...

  def getNextSibling(self) -> Node: ...

  def getNodeName(self) -> str: ...

  def getNodeType(self) -> int: ...

  def getNodeValue(self) -> str: ...

  def getOwnerDocument(self) -> Document: ...

  def getParentNode(self) -> Node: ...

  def getPrefix(self) -> str: ...

  def getPreviousSibling(self) -> Node: ...

  def getTarget(self) -> str: ...

  def getTextContent(self) -> str: ...

  def getUserData(self, arg0: str) -> object: ...

  def hasAttributes(self) -> bool: ...

  def hasChildNodes(self) -> bool: ...

  def insertBefore(self, arg0: Node, arg1: Node) -> Node: ...

  def isDefaultNamespace(self, arg0: str) -> bool: ...

  def isEqualNode(self, arg0: Node) -> bool: ...

  def isSameNode(self, arg0: Node) -> bool: ...

  def isSupported(self, arg0: str, arg1: str) -> bool: ...

  def lookupNamespaceURI(self, arg0: str) -> str: ...

  def lookupPrefix(self, arg0: str) -> str: ...

  def normalize(self) -> None: ...

  def removeChild(self, arg0: Node) -> Node: ...

  def replaceChild(self, arg0: Node, arg1: Node) -> Node: ...

  def setData(self, arg0: str) -> None: ...

  def setNodeValue(self, arg0: str) -> None: ...

  def setPrefix(self, arg0: str) -> None: ...

  def setTextContent(self, arg0: str) -> None: ...

  def setUserData(self, arg0: str, arg1: object, arg2: UserDataHandler) -> object: ...


class Text:

  def appendData(self, arg0: str) -> None: ...

  def deleteData(self, arg0: int, arg1: int) -> None: ...

  def getData(self) -> str: ...

  def getLength(self) -> int: ...

  def getWholeText(self) -> str: ...

  def insertData(self, arg0: int, arg1: str) -> None: ...

  def isElementContentWhitespace(self) -> bool: ...

  def replaceData(self, arg0: int, arg1: int, arg2: str) -> None: ...

  def replaceWholeText(self, arg0: str) -> Text: ...

  def setData(self, arg0: str) -> None: ...

  def splitText(self, arg0: int) -> Text: ...

  def substringData(self, arg0: int, arg1: int) -> str: ...


class TypeInfo:

  DERIVATION_EXTENSION: int

  DERIVATION_LIST: int

  DERIVATION_RESTRICTION: int

  DERIVATION_UNION: int

  def getTypeName(self) -> str: ...

  def getTypeNamespace(self) -> str: ...

  def isDerivedFrom(self, arg0: str, arg1: str, arg2: int) -> bool: ...


class UserDataHandler:

  NODE_ADOPTED: int

  NODE_CLONED: int

  NODE_DELETED: int

  NODE_IMPORTED: int

  NODE_RENAMED: int

  def handle(self, arg0: int, arg1: str, arg2: object, arg3: Node, arg4: Node) -> None: ...

