from typing import Any, overload, TypeVar
from java.lang.annotation import Annotation
from java.io import InputStream, OutputStream, Reader, Writer
from java.lang import CharSequence, Enum
from java.net import URI
from javax.lang.model.element import Modifier, NestingKind

class FileObject:

  def delete(self) -> bool: ...

  def getCharContent(self, arg0: bool) -> CharSequence: ...

  def getLastModified(self) -> int: ...

  def getName(self) -> str: ...

  def openInputStream(self) -> InputStream: ...

  def openOutputStream(self) -> OutputStream: ...

  def openReader(self, arg0: bool) -> Reader: ...

  def openWriter(self) -> Writer: ...

  def toUri(self) -> URI: ...


class JavaFileObject:

  def delete(self) -> bool: ...

  def getAccessLevel(self) -> Modifier: ...

  def getCharContent(self, arg0: bool) -> CharSequence: ...

  def getKind(self) -> JavaFileObject.Kind: ...

  def getLastModified(self) -> int: ...

  def getName(self) -> str: ...

  def getNestingKind(self) -> NestingKind: ...

  def isNameCompatible(self, arg0: str, arg1: JavaFileObject.Kind) -> bool: ...

  def openInputStream(self) -> InputStream: ...

  def openOutputStream(self) -> OutputStream: ...

  def openReader(self, arg0: bool) -> Reader: ...

  def openWriter(self) -> Writer: ...

  def toUri(self) -> URI: ...

  class Kind(Enum):

    HTML: JavaFileObject.Kind

    OTHER: JavaFileObject.Kind

    SOURCE: JavaFileObject.Kind

    @staticmethod
    def valueOf(arg0: str) -> JavaFileObject.Kind: ...

    @staticmethod
    def values() -> list[JavaFileObject.Kind]: ...

