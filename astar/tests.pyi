from typing import Any, overload, TypeVar
from java.lang.annotation import Annotation
from astar import ISearchNode, ASearchNode
from java.lang import Integer
from java.util import ArrayList

class AStarTest:

  def SearchNodeCityTest(self) -> None: ...

  def SearchNodeTest2D(self) -> None: ...

  def __init__(self): ...


class DatastructuresTest:

  def hashPriorityQueueTest(self) -> None: ...

  def __init__(self): ...


class GoalNode2D:

  def getX(self) -> int: ...

  def getY(self) -> int: ...

  @overload
  def inGoal(self, arg0: ISearchNode) -> bool: ...

  @overload
  def inGoal(self, arg0: ISearchNode) -> bool: ...

  def __init__(self, arg0: int, arg1: int): ...


class GoalNodeCity:

  @overload
  def inGoal(self, arg0: ISearchNode) -> bool: ...

  @overload
  def inGoal(self, arg0: ISearchNode) -> bool: ...

  def __init__(self, arg0: str): ...


class SearchNode2D(ASearchNode):

  def c(self, arg0: ISearchNode) -> float: ...

  def dist(self, arg0: int, arg1: int) -> float: ...

  def equals(self, arg0: object) -> bool: ...

  @overload
  def getParent(self) -> SearchNode2D: ...

  @overload
  def getParent(self) -> ISearchNode: ...

  @overload
  def getSuccessors(self) -> ArrayList[ISearchNode]: ...

  @overload
  def getSuccessors(self, arg0: ArrayList[ISearchNode]) -> None: ...

  def getX(self) -> int: ...

  def getY(self) -> int: ...

  def h(self) -> float: ...

  def hashCode(self) -> int: ...

  def keyCode(self) -> Integer: ...

  def setParent(self, arg0: ISearchNode) -> None: ...

  def toString(self) -> str: ...

  def __init__(self, arg0: int, arg1: int, arg2: SearchNode2D, arg3: GoalNode2D): ...


class SearchNodeCity(ASearchNode):

  def c(self, arg0: ISearchNode) -> float: ...

  def equals(self, arg0: object) -> bool: ...

  def getName(self) -> str: ...

  @overload
  def getParent(self) -> ISearchNode: ...

  @overload
  def getParent(self) -> SearchNodeCity: ...

  @overload
  def getSuccessors(self) -> ArrayList[ISearchNode]: ...

  @overload
  def getSuccessors(self, arg0: ArrayList[ISearchNode]) -> None: ...

  def h(self) -> float: ...

  def hashCode(self) -> int: ...

  def keyCode(self) -> Integer: ...

  def setParent(self, arg0: ISearchNode) -> None: ...

  def toString(self) -> str: ...

  def __init__(self, arg0: str): ...

