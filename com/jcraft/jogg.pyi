from typing import Any, overload, TypeVar
from java.lang.annotation import Annotation

class Buffer:

  version: str

  def adv(self, arg0: int) -> None: ...

  def adv1(self) -> None: ...

  def bits(self) -> int: ...

  def buffer(self) -> list[int]: ...

  def bytes(self) -> int: ...

  def look(self, arg0: int) -> int: ...

  def look1(self) -> int: ...

  @overload
  def read(self, arg0: int) -> int: ...

  @overload
  def read(self, arg0: list[int], arg1: int) -> None: ...

  def read1(self) -> int: ...

  def readB(self, arg0: int) -> int: ...

  @overload
  def readinit(self, arg0: list[int], arg1: int) -> None: ...

  @overload
  def readinit(self, arg0: list[int], arg1: int, arg2: int) -> None: ...

  @overload
  def write(self, arg0: list[int]) -> None: ...

  @overload
  def write(self, arg0: int, arg1: int) -> None: ...

  def writeclear(self) -> None: ...

  def writeinit(self) -> None: ...

  @staticmethod
  def ilog(arg0: int) -> int: ...

  @staticmethod
  def report(arg0: str) -> None: ...

  def __init__(self): ...


class Packet:

  def __init__(self):
    self.b_o_s: int
    self.bytes: int
    self.e_o_s: int
    self.granulepos: int
    self.packet: int
    self.packet_base: list[int]
    self.packetno: int


class Page:

  def bos(self) -> int: ...

  @overload
  def copy(self) -> Page: ...

  @overload
  def copy(self, arg0: Page) -> Page: ...

  def eos(self) -> int: ...

  def granulepos(self) -> int: ...

  def serialno(self) -> int: ...

  def __init__(self):
    self.body: int
    self.body_base: list[int]
    self.body_len: int
    self.header: int
    self.header_base: list[int]
    self.header_len: int


class StreamState:

  def clear(self) -> None: ...

  def eof(self) -> int: ...

  def flush(self, arg0: Page) -> int: ...

  def init(self, arg0: int) -> None: ...

  def packetin(self, arg0: Packet) -> int: ...

  def packetout(self, arg0: Packet) -> int: ...

  def pagein(self, arg0: Page) -> int: ...

  def pageout(self, arg0: Page) -> int: ...

  def reset(self) -> int: ...

  def __init__(self):
    self.e_o_s: int


class SyncState:

  def buffer(self, arg0: int) -> int: ...

  def clear(self) -> int: ...

  def getBufferOffset(self) -> int: ...

  def getDataOffset(self) -> int: ...

  def init(self) -> None: ...

  def pageout(self, arg0: Page) -> int: ...

  def pageseek(self, arg0: Page) -> int: ...

  def reset(self) -> int: ...

  def wrote(self, arg0: int) -> int: ...

  def __init__(self):
    self.data: list[int]

