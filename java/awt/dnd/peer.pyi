from typing import Any, overload, TypeVar
from java.lang.annotation import Annotation
from java.awt import Cursor, Image, Point
from java.awt.datatransfer import DataFlavor, Transferable
from java.awt.dnd import DragSourceContext, DropTarget

class DragSourceContextPeer:

  def getCursor(self) -> Cursor: ...

  def setCursor(self, arg0: Cursor) -> None: ...

  def startDrag(self, arg0: DragSourceContext, arg1: Cursor, arg2: Image, arg3: Point) -> None: ...

  def transferablesFlavorsChanged(self) -> None: ...


class DropTargetContextPeer:

  def acceptDrag(self, arg0: int) -> None: ...

  def acceptDrop(self, arg0: int) -> None: ...

  def dropComplete(self, arg0: bool) -> None: ...

  def getDropTarget(self) -> DropTarget: ...

  def getTargetActions(self) -> int: ...

  def getTransferDataFlavors(self) -> list[DataFlavor]: ...

  def getTransferable(self) -> Transferable: ...

  def isTransferableJVMLocal(self) -> bool: ...

  def rejectDrag(self) -> None: ...

  def rejectDrop(self) -> None: ...

  def setTargetActions(self, arg0: int) -> None: ...


class DropTargetPeer:

  def addDropTarget(self, arg0: DropTarget) -> None: ...

  def removeDropTarget(self, arg0: DropTarget) -> None: ...

